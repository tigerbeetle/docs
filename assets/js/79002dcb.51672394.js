"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2032],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(r),m=o,y=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(y,i(i({ref:t},p),{},{components:r})):n.createElement(y,i({ref:t},p))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8887:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:2},i="Hardware",l={unversionedId:"operating/hardware",id:"operating/hardware",title:"Hardware",description:"TigerBeetle is designed to operate and provide more than adequate performance even on commodity",source:"@site/pages/operating/hardware.md",sourceDirName:"operating",slug:"/operating/hardware",permalink:"/operating/hardware",draft:!1,editUrl:"https://github.com/tigerbeetle/tigerbeetle/blob/main/docs/operating/hardware.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Deploying for Production",permalink:"/operating/deploy"},next:{title:"Deploying on Linux",permalink:"/operating/linux"}},c={},s=[{value:"Storage",id:"storage",level:2},{value:"Memory",id:"memory",level:2},{value:"CPU",id:"cpu",level:2},{value:"Network",id:"network",level:2},{value:"Multitenancy",id:"multitenancy",level:2}],p={toc:s},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"hardware"},"Hardware"),(0,o.kt)("p",null,"TigerBeetle is designed to operate and provide more than adequate performance even on commodity\nhardware."),(0,o.kt)("h2",{id:"storage"},"Storage"),(0,o.kt)("p",null,"Local NVMe drives are highly recommended for production deployments, and there's no requirement for\nRAID."),(0,o.kt)("p",null,"In cloud or more complex deployments, remote block storage (eg, EBS, NVMe-oF) may be used but will\nbe slower and care must be taken to ensure\n",(0,o.kt)("a",{parentName:"p",href:"/operating/deploy#hardware-fault-tolerance"},"independent fault domains")," across replicas."),(0,o.kt)("p",null,"Currently, TigerBeetle uses around 16TiB for 40 billion transfers. If you wish to use more capacity\nthan a single disk, RAID 10 / RAID 0 is recommended over parity RAID levels."),(0,o.kt)("p",null,"The data file is created before the server is initially run and grows automatically. TigerBeetle has\nbeen more extensively tested on ext4, but ext4 only supports data files up to 16TiB. XFS is\nsupported, but has seen less testing. TigerBeetle can also be run against the raw block device."),(0,o.kt)("h2",{id:"memory"},"Memory"),(0,o.kt)("p",null,"ECC memory is required for production deployments."),(0,o.kt)("p",null,"A replica requires at least 6 GiB RAM per machine. Between 16 GiB and 32 GiB or more (depending on\nbudget) is recommended to be allocated to each replica for caching. TigerBeetle uses static\nallocation and will use exactly how much memory is explicitly allocated to it for caching via\ncommand line argument."),(0,o.kt)("h2",{id:"cpu"},"CPU"),(0,o.kt)("p",null,"TigerBeetle requires only a single core per replica machine. TigerBeetle at present ",(0,o.kt)("a",{parentName:"p",href:"/about/performance#single-core-by-design"},"does not\nutilize more cores"),", but may in future."),(0,o.kt)("p",null,"It's recommended to have at least one additional core free for the operating system."),(0,o.kt)("h2",{id:"network"},"Network"),(0,o.kt)("p",null,"A minimum of a 1Gbps network connection is recommended."),(0,o.kt)("h2",{id:"multitenancy"},"Multitenancy"),(0,o.kt)("p",null,"There are no restrictions on sharing a server with other tenant processes."))}d.isMDXComponent=!0}}]);