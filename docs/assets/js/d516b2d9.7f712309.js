"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[761],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(r),f=o,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||i;return r?n.createElement(m,a(a({ref:t},u),{},{components:r})):n.createElement(m,a({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8873:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const i={sidebar_position:3},a="Single-node cluster from source",l={unversionedId:"setup/from-source",id:"setup/from-source",title:"Single-node cluster from source",description:"To build from source, clone the repo and run the install script.",source:"@site/pages/setup/from-source.md",sourceDirName:"setup",slug:"/setup/from-source",permalink:"/setup/from-source",draft:!1,editUrl:"https://github.com/tigerbeetledb/tigerbeetle/blob/main/docs/setup/from-source.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Single-node cluster with Docker",permalink:"/setup/with-docker"},next:{title:"3-node cluster with Docker Compose",permalink:"/setup/with-docker-compose"}},c={},s=[],u={toc:s};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"single-node-cluster-from-source"},"Single-node cluster from source"),(0,o.kt)("p",null,"To build from source, clone the repo and run the install script."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/tigerbeetledb/tigerbeetle.git\n$ cd tigerbeetle\n$ scripts/install.sh\n")),(0,o.kt)("p",null,"Don't worry, this will only make changes within the ",(0,o.kt)("inlineCode",{parentName:"p"},"tigerbeetle"),"\ndirectory. No global changes. The result will place the compiled\n",(0,o.kt)("inlineCode",{parentName:"p"},"tigerbeetle")," binary into the current directory."),(0,o.kt)("p",null,"Now create the TigerBeetle data file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ ./tigerbeetle format --cluster=0 --replica=0 0_0.tigerbeetle\ninfo(io): creating "0_0.tigerbeetle"...\ninfo(io): allocating 660.140625MiB...\n')),(0,o.kt)("p",null,"And start the server."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ ./tigerbeetle start --addresses=3000 0_0.tigerbeetle\ninfo(io): opening "0_0.tigerbeetle"...\ninfo(main): 0: cluster=0: listening on 127.0.0.1:3000\n')),(0,o.kt)("p",null,"Now you can connect to the running server with any client. For a quick\nstart, try ",(0,o.kt)("a",{parentName:"p",href:"../usage/node-cli"},"creating accounts and transfers in the Node\nCLI"),"."))}p.isMDXComponent=!0}}]);