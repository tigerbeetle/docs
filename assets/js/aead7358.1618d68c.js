"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2618],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>b});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(r),d=a,b=u["".concat(s,".").concat(d)]||u[d]||g[d]||i;return r?n.createElement(b,l(l({ref:t},p),{},{components:r})):n.createElement(b,l({ref:t},p))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2742:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_position:3},l="Three-Node Cluster",o={unversionedId:"getting-started/single-binary-three",id:"getting-started/single-binary-three",title:"Three-Node Cluster",description:"First, download a prebuilt copy of TigerBeetle.",source:"@site/pages/getting-started/single-binary-three.md",sourceDirName:"getting-started",slug:"/getting-started/single-binary-three",permalink:"/getting-started/single-binary-three",draft:!1,editUrl:"https://github.com/tigerbeetle/tigerbeetle/blob/main/docs/getting-started/single-binary-three.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Single-Node Cluster",permalink:"/getting-started/single-binary"},next:{title:"Single-Node Cluster with Docker",permalink:"/getting-started/with-docker"}},s={},c=[{value:"Running TigerBeetle",id:"running-tigerbeetle",level:2},{value:"Connect with the CLI",id:"connect-with-the-cli",level:3}],p={toc:c},u="wrapper";function g(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"three-node-cluster"},"Three-Node Cluster"),(0,a.kt)("p",null,"First, download a prebuilt copy of TigerBeetle."),(0,a.kt)("p",null,"On macOS/Linux:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"git clone https://github.com/tigerbeetle/tigerbeetle; ./tigerbeetle/bootstrap.sh\n")),(0,a.kt)("p",null,"On Windows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"git clone https://github.com/tigerbeetle/tigerbeetle; .\\tigerbeetle\\bootstrap.ps1\n")),(0,a.kt)("p",null,"Want to build from source locally? Add ",(0,a.kt)("inlineCode",{parentName:"p"},"-build")," as an argument to the bootstrap script."),(0,a.kt)("h2",{id:"running-tigerbeetle"},"Running TigerBeetle"),(0,a.kt)("p",null,"Now create the TigerBeetle ",(0,a.kt)("a",{parentName:"p",href:"/about/internals/data_file"},"data file")," for each replica:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"./tigerbeetle format --cluster=0 --replica=0 --replica-count=3 0_0.tigerbeetle\n./tigerbeetle format --cluster=0 --replica=1 --replica-count=3 0_1.tigerbeetle\n./tigerbeetle format --cluster=0 --replica=2 --replica-count=3 0_2.tigerbeetle\n")),(0,a.kt)("p",null,"And start each server in a new terminal window:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"./tigerbeetle start --addresses=3000,3001,3002 0_0.tigerbeetle\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"./tigerbeetle start --addresses=3000,3001,3002 0_1.tigerbeetle\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"./tigerbeetle start --addresses=3000,3001,3002 0_2.tigerbeetle\n")),(0,a.kt)("p",null,"TigerBeetle uses the ",(0,a.kt)("inlineCode",{parentName:"p"},"--replica")," that's stored in the data file as an index into the ",(0,a.kt)("inlineCode",{parentName:"p"},"--addresses"),"\nprovided."),(0,a.kt)("h3",{id:"connect-with-the-cli"},"Connect with the CLI"),(0,a.kt)("p",null,"Now you can connect to the running server with any client. For a quick start, try creating accounts\nand transfers ",(0,a.kt)("a",{parentName:"p",href:"/getting-started/cli-repl"},"using the TigerBeetle CLI client"),"."))}g.isMDXComponent=!0}}]);