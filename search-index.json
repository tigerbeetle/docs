[{"path":".","html":"<h1 id=\"tigerbeetle-docs\"><a href=\"#tigerbeetle-docs\"\nclass=\"anchor\">TigerBeetle Docs</a></h1>\n<p>TigerBeetle is a distributed financial accounting database designed\nfor mission critical safety and performance.</p>\n<h2 id=\"quick-start\"><a href=\"#quick-start\" class=\"anchor\">Quick\nStart</a></h2>\n<p><a href=\"./quick-start\">./quick-start</a></p>\n<h2 id=\"coding\"><a href=\"#coding\" class=\"anchor\">Coding</a></h2>\n<p>Read more about <a href=\"./coding/\">Coding with TigerBeetle</a> to\nunderstand the data model, learn how to integrate TigerBeetle into your\nsystem, and see some advanced design patterns.</p>\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>We officially support the following libraries for communicating with\na TigerBeetle cluster:</p>\n<ul>\n<li><a href=\"/clients/dotnet/\">.NET</a></li>\n<li><a href=\"/clients/go/\">Go</a></li>\n<li><a href=\"/clients/java/\">Java</a></li>\n<li><a href=\"/clients/node/\">Node.js</a></li>\n<li><a href=\"/clients/python/\">Python</a></li>\n</ul>\n<p>Within each client library README you will find links to sample\ncode.</p>\n<h2 id=\"reference\"><a href=\"#reference\"\nclass=\"anchor\">Reference</a></h2>\n<p>To understand TigerBeetle‚Äôs data model, see:</p>\n<ul>\n<li><a href=\"./reference/account\">Account</a></li>\n<li><a href=\"./reference/transfer\">Transfer</a></li>\n<li>And <a href=\"./reference/requests/\">Requests</a>\n<ul>\n<li><a\nhref=\"./reference/requests/create_accounts\"><code>create_accounts</code></a></li>\n<li><a\nhref=\"./reference/requests/create_transfers\"><code>create_transfers</code></a></li>\n<li><a\nhref=\"./reference/requests/lookup_accounts\"><code>lookup_accounts</code></a></li>\n<li><a\nhref=\"./reference/requests/lookup_transfers\"><code>lookup_transfers</code></a></li>\n<li><a\nhref=\"./reference/requests/get_account_balances\"><code>get_account_balances</code></a></li>\n<li><a\nhref=\"./reference/requests/get_account_transfers\"><code>get_account_transfers</code></a></li>\n</ul></li>\n</ul>\n<h2 id=\"dive-deeper\"><a href=\"#dive-deeper\" class=\"anchor\">Dive\nDeeper</a></h2>\n<p>Learn more about TigerBeetle‚Äôs <a href=\"./about/\">mission,\nhistory</a>, <a href=\"./about/architecture\">architecture</a>, approach\nto <a href=\"./about/safety\">safety</a> and <a\nhref=\"./about/performance\">performance</a> in the <a\nhref=\"./about/\">About section</a>.</p>\n<h2 id=\"contributing\"><a href=\"#contributing\"\nclass=\"anchor\">Contributing</a></h2>\n<ul>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/docs/TALKS.md\">Watch\nour talks, listen to our podcasts</a></li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/docs/HACKING.md\">Read\nHACKING.md</a></li>\n<li>And explore internal READMEs within the <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/tree/main/src\">TigerBeetle\nsrc directory</a></li>\n</ul>\n<h2 id=\"community\"><a href=\"#community\"\nclass=\"anchor\">Community</a></h2>\n<ul>\n<li><a href=\"https://twitter.com/tigerbeetledb\">ùïè</a></li>\n<li><a href=\"https://github.com/tigerbeetle/tigerbeetle\">GitHub</a></li>\n<li><a href=\"https://slack.tigerbeetle.com/invite\">Slack</a></li>\n<li><a\nhref=\"https://mailchi.mp/8e9fa0f36056/subscribe-to-tigerbeetle\">Monthly\nNewsletter</a></li>\n<li><a href=\"https://www.youtube.com/@tigerbeetledb\">YouTube</a></li>\n</ul>\n"},{"path":"quick-start","html":"<h1 id=\"quick-start\"><a href=\"#quick-start\" class=\"anchor\">Quick\nStart</a></h1>\n<p>This page will guide you through downloading TigerBeetle, setting up\na single- or multi-node cluster, and creating some accounts and\ntransfers using the REPL.</p>\n<h2 id=\"1-download-tigerbeetle\"><a href=\"#1-download-tigerbeetle\"\nclass=\"anchor\">1. Download TigerBeetle</a></h2>\n<p>TigerBeetle is a single, small, statically-linked binary.</p>\n<h3 id=\"latest-release\"><a href=\"#latest-release\" class=\"anchor\">Latest\nRelease</a></h3>\n<pre class=\"console\"><code># macOS\ncurl -Lo tigerbeetle.zip https://mac.tigerbeetle.com &amp;&amp; unzip tigerbeetle.zip &amp;&amp; ./tigerbeetle version</code></pre>\n<pre class=\"console\"><code># Linux\ncurl -Lo tigerbeetle.zip https://linux.tigerbeetle.com &amp;&amp; unzip tigerbeetle.zip &amp;&amp; ./tigerbeetle version</code></pre>\n<pre class=\"console\"><code># Windows\npowershell -command &quot;curl.exe -Lo tigerbeetle.zip https://windows.tigerbeetle.com; Expand-Archive tigerbeetle.zip .; .\\tigerbeetle version&quot;</code></pre>\n<h4 id=\"build-from-source\"><a href=\"#build-from-source\"\nclass=\"anchor\">Build from Source</a></h4>\n<p>To build TigerBeetle from source, clone the repo, install Zig and run\n<code>zig build</code>:</p>\n<pre class=\"console\"><code>git clone https://github.com/tigerbeetle/tigerbeetle &amp;&amp; cd tigerbeetle\n./zig/download.sh # .bat if you&#39;re on Windows.\n./zig/zig build\n./tigerbeetle version</code></pre>\n<p>Notes:</p>\n<ul>\n<li>Building from source is not recommended for production\ndeployments.</li>\n<li>If you build TigerBeetle from source, it is only compatible with\nclients that were also built from source.</li>\n</ul>\n<h4 id=\"direct-download\"><a href=\"#direct-download\"\nclass=\"anchor\">Direct Download</a></h4>\n<p>You can download prebuilt binaries here:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left;\"></th>\n<th style=\"text-align: left;\">Linux</th>\n<th style=\"text-align: left;\">Windows</th>\n<th style=\"text-align: left;\">MacOS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left;\">x86_64</td>\n<td style=\"text-align: left;\"><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/releases/latest/download/tigerbeetle-x86_64-linux.zip\">tigerbeetle-x86_64-linux.zip</a></td>\n<td style=\"text-align: left;\"><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/releases/latest/download/tigerbeetle-x86_64-windows.zip\">tigerbeetle-x86_64-windows.zip</a></td>\n<td style=\"text-align: left;\"><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/releases/latest/download/tigerbeetle-universal-macos.zip\">tigerbeetle-universal-macos.zip</a></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">aarch64</td>\n<td style=\"text-align: left;\"><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/releases/latest/download/tigerbeetle-aarch64-linux.zip\">tigerbeetle-aarch64-linux.zip</a></td>\n<td style=\"text-align: left;\">N/A</td>\n<td style=\"text-align: left;\"><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/releases/latest/download/tigerbeetle-universal-macos.zip\">tigerbeetle-universal-macos.zip</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"docker\"><a href=\"#docker\" class=\"anchor\">Docker</a></h4>\n<p>You can find instructions on using TigerBeetle with Docker <a\nhref=\"../operating/docker\">here</a>.</p>\n<h2 id=\"2-create-the-data-file\"><a href=\"#2-create-the-data-file\"\nclass=\"anchor\">2. Create the Data File</a></h2>\n<p>Each TigerBeetle node uses a single data file to store its state.\nCreate the data file using the <code>format</code> command:</p>\n<pre class=\"console\"><code>./tigerbeetle format --cluster=0 --replica=0 --replica-count=1 --development 0_0.tigerbeetle</code></pre>\n<pre class=\"console\"><code>info(io): creating &quot;0_0.tigerbeetle&quot;...\ninfo(io): allocating 660.140625MiB...</code></pre>\n<h2 id=\"3-start-your-cluster\"><a href=\"#3-start-your-cluster\"\nclass=\"anchor\">3. Start Your Cluster</a></h2>\n<p>Now we‚Äôll run the TigerBeetle server.</p>\n<pre class=\"console\"><code>./tigerbeetle start --addresses=3000 --development 0_0.tigerbeetle</code></pre>\n<pre class=\"console\"><code>info(io): opening &quot;0_0.tigerbeetle&quot;...\ninfo(main): 0: cluster=0: listening on 127.0.0.1:3000</code></pre>\n<h2 id=\"4-connect-to-the-repl\"><a href=\"#4-connect-to-the-repl\"\nclass=\"anchor\">4. Connect to the REPL</a></h2>\n<p>Now that we have TigerBeetle running, we can connect to it via the\nREPL to create some accounts and transfers!</p>\n<pre class=\"console\"><code>./tigerbeetle repl --cluster=0 --addresses=3000</code></pre>\n<pre class=\"console\"><code>TigerBeetle Client\n  Hit enter after a semicolon to run a command.\n\nExamples:\n  create_accounts id=1 code=10 ledger=700 flags=linked | history,\n                  id=2 code=10 ledger=700;\n  create_transfers id=1 debit_account_id=1 credit_account_id=2 amount=10 ledger=700 code=10;\n  lookup_accounts id=1;\n  lookup_accounts id=1, id=2;</code></pre>\n<h2 id=\"5-create-accounts\"><a href=\"#5-create-accounts\"\nclass=\"anchor\">5. Create Accounts</a></h2>\n<p>In the REPL, create two accounts on the same ledger using the\ncommand:</p>\n<pre class=\"console\"><code>create_accounts id=1 code=10 ledger=700,\n                id=2 code=10 ledger=700;</code></pre>\n<pre class=\"console\"><code>info(message_bus): connected to replica 0</code></pre>\n<h2 id=\"6-create-a-transfer\"><a href=\"#6-create-a-transfer\"\nclass=\"anchor\">6. Create a Transfer</a></h2>\n<p>Now create a transfer of <code>10</code> (of some amount/currency)\nbetween the two accounts.</p>\n<pre class=\"console\"><code>create_transfers id=1 debit_account_id=1 credit_account_id=2 amount=10 ledger=700 code=10;</code></pre>\n<p>Now, the amount of <code>10</code> has been credited to account\n<code>2</code> and debited from account <code>1</code>.</p>\n<h2 id=\"7-look-up-accounts\"><a href=\"#7-look-up-accounts\"\nclass=\"anchor\">7. Look Up Accounts</a></h2>\n<p>Let‚Äôs query TigerBeetle for these two accounts to verify the transfer\nwe made!</p>\n<pre class=\"console\"><code>lookup_accounts id=1, id=2;</code></pre>\n<div class=\"sourceCode\" id=\"cb15\"><pre\nclass=\"sourceCode json\"><code class=\"sourceCode json\"><span id=\"cb15-1\"><a href=\"#cb15-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">{</span></span>\n<span id=\"cb15-2\"><a href=\"#cb15-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;id&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;1&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb15-3\"><a href=\"#cb15-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;user_data&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb15-4\"><a href=\"#cb15-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;ledger&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;700&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb15-5\"><a href=\"#cb15-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;code&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;10&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb15-6\"><a href=\"#cb15-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;flags&quot;</span><span class=\"fu\">:</span> <span class=\"ot\">[]</span><span class=\"fu\">,</span></span>\n<span id=\"cb15-7\"><a href=\"#cb15-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;debits_pending&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb15-8\"><a href=\"#cb15-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;debits_posted&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;10&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb15-9\"><a href=\"#cb15-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;credits_pending&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb15-10\"><a href=\"#cb15-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;credits_posted&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span></span>\n<span id=\"cb15-11\"><a href=\"#cb15-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">}</span></span>\n<span id=\"cb15-12\"><a href=\"#cb15-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">{</span></span>\n<span id=\"cb15-13\"><a href=\"#cb15-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;id&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;2&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb15-14\"><a href=\"#cb15-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;user_data&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb15-15\"><a href=\"#cb15-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;ledger&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;700&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb15-16\"><a href=\"#cb15-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;code&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;10&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb15-17\"><a href=\"#cb15-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;flags&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb15-18\"><a href=\"#cb15-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;debits_pending&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb15-19\"><a href=\"#cb15-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;debits_posted&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb15-20\"><a href=\"#cb15-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;credits_pending&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb15-21\"><a href=\"#cb15-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;credits_posted&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;10&quot;</span></span>\n<span id=\"cb15-22\"><a href=\"#cb15-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">}</span></span></code></pre></div>\n<p>And indeed you can see that account <code>1</code> has\n<code>debits_posted</code> as <code>10</code> and account <code>2</code>\nhas <code>credits_posted</code> as <code>10</code>. The <code>10</code>\namount is fully accounted for!</p>\n<p>You can take a look at the <a\nhref=\"../reference/account\"><code>Accounts</code> reference</a> to\nunderstand all of the fields on the accounts.</p>\n<p>You can also take a look at the <a\nhref=\"../reference/requests/\">Request Types</a> to see what else you can\ndo with the REPL.</p>\n<h2 id=\"optional-run-a-multi-node-cluster\"><a\nhref=\"#optional-run-a-multi-node-cluster\" class=\"anchor\">Optional: Run a\nMulti-Node Cluster</a></h2>\n<p>Up to this point, we have only shown you how to run a single-node\nTigerBeetle cluster. In production, TigerBeetle is intended to be run\nwith <a href=\"../operating/deploy\">6 nodes</a>.</p>\n<p>Here, we will show you how to run a 3-node cluster (the idea is the\nsame for 6 nodes):</p>\n<p>First, create the data files for each node:</p>\n<pre class=\"console\"><code>./tigerbeetle format --cluster=0 --replica=0 --replica-count=3 --development 0_0.tigerbeetle\n./tigerbeetle format --cluster=0 --replica=1 --replica-count=3 --development 0_1.tigerbeetle\n./tigerbeetle format --cluster=0 --replica=2 --replica-count=3 --development 0_2.tigerbeetle</code></pre>\n<p>Note that the data file stores which replica in the cluster the file\nbelongs to.</p>\n<p>Start each server in a new terminal window:</p>\n<pre class=\"console\"><code>./tigerbeetle start --addresses=127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002 --development 0_0.tigerbeetle</code></pre>\n<pre class=\"console\"><code>./tigerbeetle start --addresses=127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002 --development 0_1.tigerbeetle</code></pre>\n<pre class=\"console\"><code>./tigerbeetle start --addresses=127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002 --development 0_2.tigerbeetle</code></pre>\n<p>TigerBeetle uses the <code>--replica</code> that‚Äôs stored in the data\nfile as an index into the <code>--addresses</code> provided.</p>\n<p>You can connect to the REPL as described above try creating accounts\nand transfers in this cluster.</p>\n<p>You can also read more about <a href=\"../operating/deploy\">deploying\nTigerBeetle in production</a>.</p>\n<h2 id=\"next-designing-for-tigerbeetle\"><a\nhref=\"#next-designing-for-tigerbeetle\" class=\"anchor\">Next: Designing\nfor TigerBeetle</a></h2>\n<p>Now that you‚Äôve created some accounts and transfers, you may want to\nread about <a href=\"../coding/system-architecture\">how TigerBeetle fits\ninto your system architecture</a> and dig into the <a\nhref=\"../coding/data-modeling\">data model</a>.</p>\n"},{"path":"coding","html":"<h1 id=\"developing-applications-on-tigerbeetle\"><a\nhref=\"#developing-applications-on-tigerbeetle\" class=\"anchor\">Developing\nApplications on TigerBeetle</a></h1>\n<p>TigerBeetle is a domain-specific, <a href=\"../about/oltp\">Online\nTransaction Processing (OLTP)</a> database. It has a fixed schema\nconsisting of <a href=\"../reference/account\"><code>Account</code>s</a>\nand <a href=\"../reference/transfer\"><code>Transfer</code>s</a>. In\nreturn for this prescriptive design, it provides excellent performance,\nintegrated business logic, and powerful invariants.</p>\n<p>Subscribe to <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/issues/2231\">this\ntracking issue</a> to be notified when there are breaking API/behavior\nchanges that are visible to the client.</p>\n<p>To help you get started building on TigerBeetle, here is a quick\noverview of the most important concepts:</p>\n<h2 id=\"data-model-overview\"><a href=\"#data-model-overview\"\nclass=\"anchor\">Data Model Overview</a></h2>\n<ul>\n<li><a href=\"../reference/account\"><code>Account</code>s</a> track\nbalances for users or other entities.</li>\n<li><a href=\"../reference/transfer\"><code>Transfer</code>s</a> move\nfunds between <code>Account</code>s.</li>\n<li>Account balances and transfer amounts are represented as debits and\ncredits. Double-entry bookkeeping ensures your accounting maintains\nconsistency.</li>\n<li>Accounts are partitioned into <a\nhref=\"./data-modeling#ledgers\">Ledgers</a>, which may represent\ndifferent currencies, assets, liabilities, etc. or they may be used to\nsupport multitenancy. Only accounts on the same ledger can transact\ndirectly, but you can use atomically <a\nhref=\"../reference/requests/#linked-events\">linked transfers</a> to\nimplement <a href=\"./recipes/currency-exchange\">cross-currency\ntransactions</a>.</li>\n<li>TigerBeetle has first-class support for <a\nhref=\"./two-phase-transfers\">two-phase transfers</a>, which can hold\nfunds in a pending state and can be used to synchronize transfers with\nexternal systems.</li>\n</ul>\n<h2 id=\"tigerbeetle-in-your-system-architecture\"><a\nhref=\"#tigerbeetle-in-your-system-architecture\"\nclass=\"anchor\">TigerBeetle in Your System Architecture</a></h2>\n<p>TigerBeetle is an Online Transaction Processing (OLTP) database built\nfor safety and performance.</p>\n<p>It is not a general purpose database like PostgreSQL or MySQL.\nInstead, TigerBeetle works alongside your general purpose database and\nshould be used to handle the hot path of transaction processing.</p>\n<p>For more information relevant to integrating TigerBeetle into your\nsystem, take a look at the following pages:</p>\n<ul>\n<li><a href=\"./system-architecture\">TigerBeetle in Your System\nArchitecture</a></li>\n<li><a href=\"./time\">Time</a></li>\n</ul>\n<h2 id=\"advanced-recipes\"><a href=\"#advanced-recipes\"\nclass=\"anchor\">Advanced Recipes</a></h2>\n<p>Depending on your use case, you may find these additional design\npatterns helpful:</p>\n<ul>\n<li><a href=\"./recipes/currency-exchange\">Currency Exchange</a></li>\n<li><a href=\"./recipes/multi-debit-credit-transfers\">Multi-Debit,\nMulti-Credit Transfers</a></li>\n<li><a href=\"./recipes/close-account\">Closing Accounts</a></li>\n<li><a\nhref=\"./recipes/balance-conditional-transfers\">Balance-Conditional\nTransfers</a></li>\n<li><a href=\"./recipes/balance-bounds\">Balance Bounds</a></li>\n<li><a href=\"./recipes/correcting-transfers\">Correcting\nTransfers</a></li>\n<li><a href=\"./recipes/rate-limiting\">Rate Limiting</a></li>\n</ul>\n<h2 id=\"want-help-developing-on-tigerbeetle\"><a\nhref=\"#want-help-developing-on-tigerbeetle\" class=\"anchor\">Want Help\nDeveloping on TigerBeetle?</a></h2>\n<h3 id=\"ask-the-community\"><a href=\"#ask-the-community\"\nclass=\"anchor\">Ask the Community</a></h3>\n<p>Have questions about TigerBeetle‚Äôs data model, how to design your\napplication on top of it, or anything else?</p>\n<p>Come join our <a\nhref=\"https://slack.tigerbeetle.com/invite\">Community Slack</a> and ask\nany and all questions you might have!</p>\n<h3 id=\"dedicated-consultation\"><a href=\"#dedicated-consultation\"\nclass=\"anchor\">Dedicated Consultation</a></h3>\n<p>Would you like the TigerBeetle team to help you design your chart of\naccounts and leverage the power of TigerBeetle in your architecture?</p>\n<p>Let us help you get it right. Contact our CEO, Joran Dirk Greef, at\n<a href=\"mailto:joran@tigerbeetle.com\">joran@tigerbeetle.com</a> to set\nup a call.</p>\n"},{"path":"coding/system-architecture","html":"<h1 id=\"tigerbeetle-in-your-system-architecture\"><a\nhref=\"#tigerbeetle-in-your-system-architecture\"\nclass=\"anchor\">TigerBeetle in Your System Architecture</a></h1>\n<p>TigerBeetle is an Online Transaction Processing (OLTP) database built\nfor safety and performance. It is not a general purpose database like\nPostgreSQL or MySQL. Instead, TigerBeetle works alongside your general\npurpose database, which we refer to as an Online General Purpose (OLGP)\ndatabase.</p>\n<p>TigerBeetle should be used in the data plane, or hot path of\ntransaction processing, while your general purpose database is used in\nthe control plane and may be used for storing information or metadata\nthat is updated less frequently.</p>\n<p><img\nsrc=\"https://github.com/tigerbeetle/tigerbeetle/assets/3262610/c145acd5-ec6e-49f4-9bd0-77cd242d2b8f\"\nalt=\"TigerBeetle in Your System Architecture\" /></p>\n<h2 id=\"division-of-responsibilities\"><a\nhref=\"#division-of-responsibilities\" class=\"anchor\">Division of\nResponsibilities</a></h2>\n<p><strong>App or Website</strong></p>\n<ul>\n<li>Initiate transactions</li>\n<li><a\nhref=\"../reliable-transaction-submission#the-app-or-browser-should-generate-the-id\">Generate\nTransfer and Account IDs</a></li>\n</ul>\n<p><strong>Stateless API Service</strong></p>\n<ul>\n<li>Handle authentication and authorization</li>\n<li>Create account records in both the general purpose database and\nTigerBeetle when users sign up</li>\n<li><a href=\"#ledger-account-and-transfer-types\">Cache ledger\nmetadata</a></li>\n<li><a href=\"../../reference/requests/#batching-events\">Batch\ntransfers</a></li>\n<li>Apply exchange rates for <a\nhref=\"../recipes/currency-exchange\">currency exchange</a>\ntransactions</li>\n</ul>\n<p><strong>General Purpose (OLGP) Database</strong></p>\n<ul>\n<li>Store metadata about ledgers and accounts (such as string names or\ndescriptions)</li>\n<li>Store mappings between <a\nhref=\"#ledger-account-and-transfer-types\">integer type identifiers</a>\nused in TigerBeetle and string representations used by the app and\nAPI</li>\n</ul>\n<p><strong>TigerBeetle (OLTP) Database</strong></p>\n<ul>\n<li>Record transfers between accounts</li>\n<li>Track balances for accounts</li>\n<li>Enforce balance limits</li>\n<li>Enforce financial consistency through double-entry bookkeeping</li>\n<li>Enforce strict serializability of events</li>\n<li>Optionally store pointers to records or entities in the general\npurpose database in the <a\nhref=\"../data-modeling#user_data\"><code>user_data</code></a> fields</li>\n</ul>\n<h2 id=\"ledger-account-and-transfer-types\"><a\nhref=\"#ledger-account-and-transfer-types\" class=\"anchor\">Ledger,\nAccount, and Transfer Types</a></h2>\n<p>For performance reasons, TigerBeetle stores the ledger, account, and\ntransfer types as simple integers. Most likely, you will want these\nintegers to map to enums of type names or strings, along with other\nassociated metadata.</p>\n<p>The mapping from the string representation of these types to the\nintegers used within TigerBeetle may be hard-coded into your application\nlogic or stored in a general purpose (OLGP) database and cached by your\napplication. (These mappings should be immutable and append-only, so\nthere is no concern about cache invalidation.)</p>\n<p>‚ö†Ô∏è Importantly, <strong>initiating a transfer should not require\nfetching metadata from the general purpose database</strong>. If it\ndoes, that database will become the bottleneck and will negate the\nperformance gains from using TigerBeetle.</p>\n<p>Specifically, the types of information that fit into this category\ninclude:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Hard-coded in app or cached</th>\n<th>In TigerBeetle</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Currency or asset code‚Äôs string representation (for example,\n‚ÄúUSD‚Äù)</td>\n<td><a href=\"../data-modeling#asset-scale\"><code>ledger</code></a> and\n<a href=\"../data-modeling#asset-scale\">asset scale</a></td>\n</tr>\n<tr>\n<td>Account type‚Äôs string representation (for example, ‚Äúcash‚Äù)</td>\n<td><a href=\"../data-modeling#code\"><code>code</code></a></td>\n</tr>\n<tr>\n<td>Transfer type‚Äôs string representation (for example, ‚Äúrefund‚Äù)</td>\n<td><a href=\"../data-modeling#code\"><code>code</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"authentication\"><a href=\"#authentication\"\nclass=\"anchor\">Authentication</a></h2>\n<p>TigerBeetle does not support authentication. You should never allow\nuntrusted users or services to interact with it directly.</p>\n<p>Also, untrusted processes must not be able to access or modify\nTigerBeetle‚Äôs on-disk data file.</p>\n"},{"path":"coding/data-modeling","html":"<h1 id=\"data-modeling\"><a href=\"#data-modeling\" class=\"anchor\">Data\nModeling</a></h1>\n<p>This section describes various aspects of the TigerBeetle data model\nand provides some suggestions for how you can map your application‚Äôs\nrequirements onto the data model.</p>\n<h2 id=\"accounts-transfers-and-ledgers\"><a\nhref=\"#accounts-transfers-and-ledgers\" class=\"anchor\">Accounts,\nTransfers, and Ledgers</a></h2>\n<p>The TigerBeetle data model consists of <a\nhref=\"../../reference/account\"><code>Account</code>s</a>, <a\nhref=\"../../reference/transfer\"><code>Transfer</code>s</a>, and\nledgers.</p>\n<h3 id=\"ledgers\"><a href=\"#ledgers\" class=\"anchor\">Ledgers</a></h3>\n<p>Ledgers partition accounts into groups that may represent a currency\nor asset type or any other logical grouping. Only accounts on the same\nledger can transact directly, but you can use atomically linked\ntransfers to implement <a href=\"../recipes/currency-exchange\">currency\nexchange</a>.</p>\n<p>Ledgers are only stored in TigerBeetle as a numeric identifier on the\n<a href=\"../../reference/account#ledger\">account</a> and <a\nhref=\"../../reference/transfer\">transfer</a> data structures. You may\nwant to store additional metadata about each ledger in a control plane\n<a href=\"../system-architecture\">database</a>.</p>\n<p>You can also use different ledgers to further partition accounts,\nbeyond asset type. For example, if you have a multi-tenant setup where\nyou are tracking balances for your customers‚Äô end-users, you might have\na ledger for each of your customers. If customers have end-user accounts\nin multiple currencies, each of your customers would have multiple\nledgers.</p>\n<h2 id=\"debits-vs-credits\"><a href=\"#debits-vs-credits\"\nclass=\"anchor\">Debits vs Credits</a></h2>\n<p>TigerBeetle tracks each account‚Äôs cumulative posted debits and\ncumulative posted credits. In double-entry accounting, an account\nbalance is the difference between the two ‚Äî computed as either\n<code>debits - credits</code> or <code>credits - debits</code>,\ndepending on the type of account. It is up to the application to compute\nthe balance from the cumulative debits/credits.</p>\n<p>From the database‚Äôs perspective the distinction is arbitrary, but\naccounting conventions recommend using a certain balance type for\ncertain types of accounts.</p>\n<p>If you are new to thinking in terms of debits and credits, read the\n<a href=\"../financial-accounting\">deep dive on financial accounting</a>\nto get a better understanding of double-entry bookkeeping and the\ndifferent types of accounts.</p>\n<h3 id=\"debit-balances\"><a href=\"#debit-balances\" class=\"anchor\">Debit\nBalances</a></h3>\n<p><code>balance = debits - credits</code></p>\n<p>By convention, debit balances are used to represent:</p>\n<ul>\n<li>Operator‚Äôs Assets</li>\n<li>Operator‚Äôs Expenses</li>\n</ul>\n<p>To enforce a positive (non-negative) debit balance, use <a\nhref=\"../../reference/account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>.</p>\n<p>To keep an account‚Äôs balance between an upper and lower bound, see\nthe <a href=\"../recipes/balance-bounds\">Balance Bounds recipe</a>.</p>\n<h3 id=\"credit-balances\"><a href=\"#credit-balances\"\nclass=\"anchor\">Credit Balances</a></h3>\n<p><code>balance = credits - debits</code></p>\n<p>By convention, credit balances are used to represent:</p>\n<ul>\n<li>Operators‚Äôs Liabilities</li>\n<li>Equity in the Operator‚Äôs Business</li>\n<li>Operator‚Äôs Income</li>\n</ul>\n<p>To enforce a positive (non-negative) credit balance, use <a\nhref=\"../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>.\nFor example, a customer account that is represented as an Operator‚Äôs\nLiability would use this flag to ensure that the balance cannot go\nnegative.</p>\n<p>To keep an account‚Äôs balance between an upper and lower bound, see\nthe <a href=\"../recipes/balance-bounds\">Balance Bounds recipe</a>.</p>\n<h3 id=\"compound-transfers\"><a href=\"#compound-transfers\"\nclass=\"anchor\">Compound Transfers</a></h3>\n<p><code>Transfer</code>s in TigerBeetle debit a single account and\ncredit a single account. You can read more about implementing compound\ntransfers in <a\nhref=\"../recipes/multi-debit-credit-transfers\">Multi-Debit, Multi-Credit\nTransfers</a>.</p>\n<h2 id=\"fractional-amounts-and-asset-scale\"><a\nhref=\"#fractional-amounts-and-asset-scale\" class=\"anchor\">Fractional\nAmounts and Asset Scale</a></h2>\n<p>To maximize precision and efficiency, <a\nhref=\"../../reference/account\"><code>Account</code></a> debits/credits\nand <a href=\"../../reference/transfer\"><code>Transfer</code></a> amounts\nare unsigned 128-bit integers. However, currencies are often denominated\nin fractional amounts.</p>\n<p>To represent a fractional amount in TigerBeetle, <strong>map the\nsmallest useful unit of the fractional currency to 1</strong>. Consider\nall amounts in TigerBeetle as a multiple of that unit.</p>\n<p>Applications may rescale the integer amounts as necessary when\nrendering or interfacing with other systems. But when working with\nfractional amounts, calculations should be performed on the integers to\navoid loss of precision due to floating-point approximations.</p>\n<h3 id=\"asset-scale\"><a href=\"#asset-scale\" class=\"anchor\">Asset\nScale</a></h3>\n<p>When the multiplier is a power of 10 (e.g. <code>10 ^ n</code>), then\nthe exponent <code>n</code> is referred to as an <em>asset scale</em>.\nFor example, representing USD in cents uses an asset scale of\n<code>2</code>.</p>\n<h4 id=\"examples\"><a href=\"#examples\" class=\"anchor\">Examples</a></h4>\n<ul>\n<li>In USD, <code>$1</code> = <code>100</code> cents. So for example,\n<ul>\n<li>The fractional amount <code>$0.45</code> is represented as the\ninteger <code>45</code>.</li>\n<li>The fractional amount <code>$123.00</code> is represented as the\ninteger <code>12300</code>.</li>\n<li>The fractional amount <code>$123.45</code> is represented as the\ninteger <code>12345</code>.</li>\n</ul></li>\n</ul>\n<h3 id=\"oversized-amounts\"><a href=\"#oversized-amounts\"\nclass=\"anchor\">Oversized Amounts</a></h3>\n<p>The other direction works as well. If the smallest useful unit of a\ncurrency is <code>10,000,000</code> units, then it can be scaled down to\nthe integer <code>1</code>.</p>\n<p>The 128-bit representation defines the precision, but not the\nscale.</p>\n<h3 id=\"warning-asset-scales-cannot-be-easily-changed\"><a\nhref=\"#warning-asset-scales-cannot-be-easily-changed\" class=\"anchor\">‚ö†Ô∏è\nAsset Scales Cannot Be Easily Changed</a></h3>\n<p>When setting your asset scales, we recommend thinking about whether\nyour application may <em>ever</em> require a larger asset scale. If so,\nwe would recommend using that larger scale from the start.</p>\n<p>For example, it might seem natural to use an asset scale of 2 for\nmany currencies. However, it may be wise to use a higher scale in case\nyou ever need to represent smaller fractions of that asset.</p>\n<p>Accounts and transfers are immutable once created. In order to change\nthe asset scale of a ledger, you would need to use a different\n<code>ledger</code> number and duplicate all the accounts on that ledger\nover to the new one.</p>\n<h2 id=\"user_data\"><a href=\"#user_data\"\nclass=\"anchor\"><code>user_data</code></a></h2>\n<p><code>user_data_128</code>, <code>user_data_64</code> and\n<code>user_data_32</code> are the most flexible fields in the schema\n(for both <a href=\"../../reference/account\">accounts</a> and <a\nhref=\"../../reference/transfer\">transfers</a>). Each\n<code>user_data</code> field‚Äôs contents are arbitrary, interpreted only\nby the application.</p>\n<p>Each <code>user_data</code> field is indexed for efficient point and\nrange queries.</p>\n<p>While the usage of each field is entirely up to you, one way of\nthinking about each of the fields is:</p>\n<ul>\n<li><code>user_data_128</code> - this might store the ‚Äúwho‚Äù and/or\n‚Äúwhat‚Äù of a transfer. For example, it could be a pointer to a business\nentity stored within the <a\nhref=\"https://en.wikipedia.org/wiki/Control_plane\">control plane</a>\ndatabase.</li>\n<li><code>user_data_64</code> - this might store a second timestamp for\n‚Äúwhen‚Äù the transaction originated in the real world, rather than when\nthe transfer was <a\nhref=\"../time#why-tigerbeetle-manages-timestamps\">timestamped by\nTigerBeetle</a>. This can be used if you need to model <a\nhref=\"https://en.wikipedia.org/wiki/Bitemporal_modeling\">bitemporality</a>.\nAlternatively, if you do not need this to be used for a timestamp, you\ncould use this field in place of the <code>user_data_128</code> to store\nthe ‚Äúwho‚Äù/‚Äúwhat‚Äù.</li>\n<li><code>user_data_32</code> - this might store the ‚Äúwhere‚Äù of a\ntransfer. For example, it could store the jurisdiction where the\ntransaction originated in the real world. In certain cases, such as for\ncross-border remittances, it might not be enough to have the UTC\ntimestamp and you may want to know the transfer‚Äôs locale.</li>\n</ul>\n<p>(Note that the <a href=\"#code\"><code>code</code></a> can be used to\nencode the ‚Äúwhy‚Äù of a transfer.)</p>\n<p>Any of the <code>user_data</code> fields can be used as a group\nidentifier for objects that will be queried together. For example, for\nmultiple transfers used for <a\nhref=\"../recipes/currency-exchange\">currency exchange</a>.</p>\n<h2 id=\"id\"><a href=\"#id\" class=\"anchor\"><code>id</code></a></h2>\n<p>The <code>id</code> field uniquely identifies each <a\nhref=\"../../reference/account#id\"><code>Account</code></a> and <a\nhref=\"../../reference/transfer#id\"><code>Transfer</code></a> within the\ncluster.</p>\n<p>The primary purpose of an <code>id</code> is to serve as an\n‚Äúidempotency key‚Äù ‚Äî to avoid executing an event twice. For example, if a\nclient creates a transfer but the server‚Äôs reply is lost, the client (or\napplication) will retry ‚Äî the database must not transfer the money\ntwice.</p>\n<p>Note that <code>id</code>s are unique per cluster ‚Äì not per ledger.\nYou should attach a separate identifier in the <a\nhref=\"#user_data\"><code>user_data</code></a> field if you want to store\na connection between multiple <code>Account</code>s or multiple\n<code>Transfer</code>s that are related to one another. For example,\ndifferent currency <code>Account</code>s belonging to the same user or\nmultiple <code>Transfer</code>s that are part of a <a\nhref=\"../recipes/currency-exchange\">currency exchange</a>.</p>\n<p><a href=\"#tigerbeetle-time-based-identifiers-recommended\">TigerBeetle\nTime-Based Identifiers</a> are recommended for most applications.</p>\n<p>When selecting an <code>id</code> scheme:</p>\n<ul>\n<li>Idempotency is particularly important (and difficult) in the context\nof <a href=\"../reliable-transaction-submission\">application crash\nrecovery</a>.</li>\n<li>Be careful to <a\nhref=\"https://en.wikipedia.org/wiki/Birthday_problem\">avoid\n<code>id</code> collisions</a>.</li>\n<li>An account and a transfer may share the same <code>id</code> (they\nbelong to different ‚Äúnamespaces‚Äù), but this is not recommended because\nother systems (that you may later connect to TigerBeetle) may use a\nsingle ‚Äúnamespace‚Äù for all objects.</li>\n<li>Avoid requiring a central oracle to generate each unique\n<code>id</code> (e.g. an auto-increment field in SQL). A central oracle\nmay become a performance bottleneck when creating\naccounts/transfers.</li>\n<li>Sequences of identifiers with long runs of strictly increasing (or\nstrictly decreasing) values are amenable to optimization, leading to\nhigher database throughput.</li>\n<li>Random identifiers are not recommended ‚Äì they can‚Äôt take advantage\nof all of the LSM optimizations. (Random identifiers have ~10% lower\nthroughput than strictly-increasing ULIDs).</li>\n</ul>\n<h3 id=\"tigerbeetle-time-based-identifiers-recommended\"><a\nhref=\"#tigerbeetle-time-based-identifiers-recommended\"\nclass=\"anchor\">TigerBeetle Time-Based Identifiers (Recommended)</a></h3>\n<p>TigerBeetle recommends using a specific ID scheme for most\napplications. It is time-based and lexicographically sortable. The\nscheme is inspired by ULIDs and UUIDv7s but is better able to take\nadvantage of LSM optimizations, which leads to higher database\nthroughput.</p>\n<p>TigerBeetle clients include an <code>id()</code> function to generate\nIDs using the recommended scheme.</p>\n<p>TigerBeetle IDs consist of:</p>\n<ul>\n<li>48 bits of (millisecond) timestamp (high-order bits)</li>\n<li>80 bits of randomness (low-order bits)</li>\n</ul>\n<p>When creating multiple objects during the same millisecond, we\nincrement the random bytes rather than generating new random bytes.\nFurthermore, it is important that IDs are stored in little-endian with\nthe random bytes as the lower-order bits and the timestamp as the\nhigher-order bits. These details ensure that a sequence of objects have\nstrictly increasing IDs according to the server, which improves database\noptimization.</p>\n<p>Similar to ULIDs and UUIDv7s, these IDs have the following\nbenefits:</p>\n<ul>\n<li>they have an insignificant risk of collision.</li>\n<li>they do not require a central oracle to generate.</li>\n</ul>\n<h3 id=\"reuse-foreign-identifier\"><a href=\"#reuse-foreign-identifier\"\nclass=\"anchor\">Reuse Foreign Identifier</a></h3>\n<p>This technique is most appropriate when integrating TigerBeetle with\nan existing application where TigerBeetle accounts or transfers map\none-to-one with an entity in the foreign database.</p>\n<p>Set <code>id</code> to a ‚Äúforeign key‚Äù ‚Äî that is, reuse an identifier\nof a corresponding object from another database. For example, if every\nuser (within the application‚Äôs database) has a single account, then the\nidentifier within the foreign database can be used as the\n<code>Account.id</code> within TigerBeetle.</p>\n<p>To reuse the foreign identifier, it must conform to TigerBeetle‚Äôs\n<code>id</code> <a\nhref=\"../../reference/account#id\">constraints</a>.</p>\n<h2 id=\"code\"><a href=\"#code\" class=\"anchor\"><code>code</code></a></h2>\n<p>The <code>code</code> identifier represents the ‚Äúwhy‚Äù for an Account\nor Transfer.</p>\n<p>On an <a\nhref=\"../../reference/account#code\"><code>Account</code></a>, the\n<code>code</code> indicates the account type, such as assets,\nliabilities, equity, income, or expenses, and subcategories within those\nclassification.</p>\n<p>On a <a\nhref=\"../../reference/transfer#code\"><code>Transfer</code></a>, the\n<code>code</code> indicates why a given transfer is happening, such as a\npurchase, refund, currency exchange, etc.</p>\n<p>When you start building out your application on top of TigerBeetle,\nyou may find it helpful to list out all of the known types of accounts\nand movements of funds and mapping each of these to <code>code</code>\nnumbers or ranges.</p>\n"},{"path":"coding/financial-accounting","html":"<h1 id=\"financial-accounting\"><a href=\"#financial-accounting\"\nclass=\"anchor\">Financial Accounting</a></h1>\n<p>For developers with non-financial backgrounds, TigerBeetle‚Äôs use of\naccounting concepts like debits and credits may be one of the trickier\nparts to understand. However, these concepts have been the language of\nbusiness for hundreds of years, so we promise it‚Äôs worth it!</p>\n<p>This page goes a bit deeper into debits and credits, double-entry\nbookkeeping, and how to think about your accounts as part of a type\nsystem.</p>\n<h2 id=\"building-intuition-with-two-simple-examples\"><a\nhref=\"#building-intuition-with-two-simple-examples\"\nclass=\"anchor\">Building Intuition with Two Simple Examples</a></h2>\n<p>If you have an outstanding loan and owe a bank $100, is your balance\n<span class=\"math inline\">100<em>o</em><em>r</em>‚àí</span>100?\nConversely, if you have $200 in your bank account, is the balance <span\nclass=\"math inline\">200<em>o</em><em>r</em>‚àí</span>200?</p>\n<p>Thinking about these two examples, we can start to build an intuition\nthat the <strong>positive or negative sign of the balance depends on\nwhose perspective we‚Äôre looking from</strong>. That $100 you owe the\nbank represents a ‚Äúbad‚Äù thing for you, but a ‚Äúgood‚Äù thing for the bank.\nWe might think about that same debt differently if we‚Äôre doing your\naccounting or the bank‚Äôs.</p>\n<p>These examples also hint at the <strong>different types of\naccounts</strong>. We probably want to think about a debt as having the\nopposite ‚Äúsign‚Äù as the funds in your your bank account. At the same\ntime, the types of these accounts look different depending on whether\nyou are considering them from the perspective of you or the bank.</p>\n<p>Now, back to our original questions: is the loan balance <span\nclass=\"math inline\">100<em>o</em><em>r</em>‚àí</span>100 and is the bank\naccount balance <span\nclass=\"math inline\">200<em>o</em><em>r</em>‚àí</span>200? On some level,\nthis feels a bit arbitrary.</p>\n<p>Wouldn‚Äôt it be nice if there were some <strong>commonly agreed-upon\nstandards</strong> so we wouldn‚Äôt have to make such an arbitrary\ndecision? Yes! This is exactly what debits and credits and the financial\naccounting type system provide.</p>\n<h2 id=\"types-of-accounts\"><a href=\"#types-of-accounts\"\nclass=\"anchor\">Types of Accounts</a></h2>\n<p>In financial accounting, there are 5 main types of accounts:</p>\n<ul>\n<li><strong>Asset</strong> - what you own, which could produce income or\nwhich you could sell.</li>\n<li><strong>Liability</strong> - what you owe to other people.</li>\n<li><strong>Equity</strong> - value of the business owned by the owners\nor shareholders, or ‚Äúthe residual interest in the assets of the entity\nafter deducting all its liabilities.‚Äù<a href=\"#fn1\" class=\"footnote-ref\"\nid=\"fnref1\" role=\"doc-noteref\"><sup>1</sup></a></li>\n<li><strong>Income</strong> - money or things of value you receive for\nselling products or services, or ‚Äúincreases in assets, or decreases in\nliabilities, that result in increases in equity, other than those\nrelating to contributions from holders of equity claims.‚Äù<a href=\"#fn2\"\nclass=\"footnote-ref\" id=\"fnref2\"\nrole=\"doc-noteref\"><sup>2</sup></a></li>\n<li><strong>Expense</strong> - money you spend to pay for products or\nservices, or ‚Äúdecreases in assets, or increases in liabilities, that\nresult in decreases in equity, other than those relating to\ndistributions to holders of equity claims.‚Äù<a href=\"#fn3\"\nclass=\"footnote-ref\" id=\"fnref3\"\nrole=\"doc-noteref\"><sup>3</sup></a></li>\n</ul>\n<p>As mentioned above, the type of account depends on whose perspective\nyou are doing the accounting from. In those examples, the loan you have\nfrom the bank is liability for you, because you owe the amount to the\nbank. However, that same loan is an asset from the bank‚Äôs perspective.\nIn contrast, the money in your bank account is an asset for you but it\nis a liability for the bank.</p>\n<p>Each of these major categories are further subdivided into more\nspecific types of accounts. For example, in your personal accounting you\nwould separately track the cash in your physical wallet from the funds\nin your checking account, even though both of those are assets. The bank\nwould split out mortgages from car loans, even though both of those are\nalso assets for the bank.</p>\n<h2 id=\"double-entry-bookkeeping\"><a href=\"#double-entry-bookkeeping\"\nclass=\"anchor\">Double-Entry Bookkeeping</a></h2>\n<p>Categorizing accounts into different types is useful for\norganizational purposes, but it also provides a key error-correcting\nmechanism.</p>\n<p>Every record in our accounting is not only recorded in one place, but\nin two. This is double-entry bookkeeping. Why would we do that?</p>\n<p>Let‚Äôs think about the bank loan in our example above. When you took\nout the loan, two things actually happened at the same time. On the one\nhand, you now owe the bank $100. At the same time, the bank gave you\n$100. These are the two entries that comprise the loan transaction.</p>\n<p>From your perspective, your liability to the bank increased by $100\nwhile your assets also increased by $100. From the bank‚Äôs perspective,\ntheir assets (the loan to you) increased by $100 while their liabilities\n(the money in your bank account) also increased by $100.</p>\n<p>Double-entry bookkeeping ensures that funds are always accounted for.\nMoney never just appears. <strong>Funds always go from somewhere to\nsomewhere.</strong></p>\n<h2 id=\"keeping-accounts-in-balance\"><a\nhref=\"#keeping-accounts-in-balance\" class=\"anchor\">Keeping Accounts in\nBalance</a></h2>\n<p>Now we understand that there are different types of accounts and\nevery transaction will be recorded in two (or more) accounts ‚Äì but which\naccounts?</p>\n<p>The <a\nhref=\"https://en.wikipedia.org/wiki/Accounting_equation\">Fundamental\nAccounting Equation</a> stipulates that:</p>\n<p><strong>Assets - Liabilities = Equity</strong></p>\n<p>Using our loan example, it‚Äôs no accident that the loan increases\nassets and liabilities at the same time. Assets and liabilities are on\nthe opposite sides of the equation, and both sides must be exactly\nequal. Loans increase assets and liabilities equally.</p>\n<p>Here are some other types of transactions that would affect assets,\nliabilities, and equity, while maintaining this balance:</p>\n<ul>\n<li>If you withdraw $100 in cash from your bank account, your total\nassets stay the same. Your bank account balance (an asset) would\ndecrease while your physical cash (another asset) would increase.</li>\n<li>From the perspective of the bank, you withdrawing $100 in cash\ndecreases their assets in the form of the cash they give you, while also\ndecreasing their liabilities because your bank balance decreases as\nwell.</li>\n<li>If a shareholder invests $1000 in the bank, that increases both the\nbank‚Äôs assets and equity.</li>\n</ul>\n<p>Assets, liabilities, and equity represent a point in time. The other\ntwo main categories, income and expenses, represent flows of money in\nand out.</p>\n<p>Income and expenses impact the position of the business over time.\nThe expanded accounting equation can be written as:</p>\n<p><strong>Assets - Liabilities = Equity + Income ‚àí\nExpenses</strong></p>\n<p>You don‚Äôt need to memorize these equations (unless you‚Äôre training as\nan accountant!). However, it is useful to understand that those main\naccount types lie on different sides of this equation.</p>\n<h2 id=\"debits-and-credits-vs-signed-integers\"><a\nhref=\"#debits-and-credits-vs-signed-integers\" class=\"anchor\">Debits and\nCredits vs Signed Integers</a></h2>\n<p>Instead of using a positive or negative integer to track a balance,\nTigerBeetle and double-entry bookkeeping systems use <strong>debits and\ncredits</strong>.</p>\n<p>The two entries that give ‚Äúdouble-entry bookkeeping‚Äù its name are the\ndebit and the credit: every transaction has at least one debit and at\nleast one credit. (Note that for efficiency‚Äôs sake, TigerBeetle\n<code>Transfer</code>s consist of exactly one debit and one credit.\nThese can be composed into more complex <a\nhref=\"../recipes/multi-debit-credit-transfers\">multi-debit, multi-credit\ntransfers</a>.) Which entry is the debit and which is the credit? The\nanswer is easy once you understand that <strong>accounting is a type\nsystem</strong>. An account increases with a debit or credit according\nto its type.</p>\n<p>When our example loan increases the assets and liabilities, we need\nto assign each of these entries to either be a debit or a credit. At\nsome level, this is completely arbitrary. For clarity, accountants have\nused the same standards for hundreds of years:</p>\n<h3 id=\"how-debits-and-credits-increase-or-decrease-account-balances\"><a\nhref=\"#how-debits-and-credits-increase-or-decrease-account-balances\"\nclass=\"anchor\">How Debits and Credits Increase or Decrease Account\nBalances</a></h3>\n<ul>\n<li><strong>Assets and expenses are increased with debits, decreased\nwith credits</strong></li>\n<li><strong>Liabilities, equity, and income are increased with credits,\ndecreased with debits</strong></li>\n</ul>\n<p>Or, in a table form:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Debit</th>\n<th>Credit</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Asset</td>\n<td>+</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Liability</td>\n<td>-</td>\n<td>+</td>\n</tr>\n<tr>\n<td>Equity</td>\n<td>-</td>\n<td>+</td>\n</tr>\n<tr>\n<td>Income</td>\n<td>-</td>\n<td>+</td>\n</tr>\n<tr>\n<td>Expense</td>\n<td>+</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>From the perspective of our example bank:</p>\n<ul>\n<li>You taking out a loan debits (increases) their loan assets and\ncredits (increases) their bank account balance liabilities.</li>\n<li>You paying off the loan debits (decreases) their bank account\nbalance liabilities and credits (decreases) their loan assets.</li>\n<li>You depositing cash debits (increases) their cash assets and credits\n(increases) their bank account balance liabilities.</li>\n<li>You withdrawing cash debits (decreases) their bank account balance\nliabilities and credits (decreases) their cash assets.</li>\n</ul>\n<p>Note that accounting conventions also always write the debits first,\nto represent the funds flowing <em>from</em> the debited account\n<em>to</em> the credited account.</p>\n<p>If this seems arbitrary and confusing, we understand! It‚Äôs a\nconvention, just like how most programmers need to learn zero-based\narray indexing and then at some point it becomes second nature.</p>\n<h3 id=\"account-types-and-the-normal-balance\"><a\nhref=\"#account-types-and-the-normal-balance\" class=\"anchor\">Account\nTypes and the ‚ÄúNormal Balance‚Äù</a></h3>\n<p>Some other accounting systems have the concept of a ‚Äúnormal balance‚Äù,\nwhich would indicate whether a given account‚Äôs balance is increased by\ndebits or credits.</p>\n<p>When designing for TigerBeetle, we recommend thinking about account\ntypes instead of ‚Äúnormal balances‚Äù. This is because the type of balance\nfollows from the type of account, but the type of balance doesn‚Äôt tell\nyou the type of account. For example, an account might have a normal\nbalance on the debit side but that doesn‚Äôt tell you whether it is an\nasset or expense.</p>\n<h2 id=\"takeaways\"><a href=\"#takeaways\"\nclass=\"anchor\">Takeaways</a></h2>\n<ul>\n<li>Accounts are categorized into types. The 5 main types are asset,\nliability, equity, income, and expense.</li>\n<li>Depending on the type of account, an increase is recorded as either\na debit or a credit.</li>\n<li>All transfers consist of two entries, a debit and a credit.\nDouble-entry bookkeeping ensures that all funds come from somewhere and\ngo somewhere.</li>\n</ul>\n<p>When you get started using TigerBeetle, we would recommend writing a\nlist of all the types of accounts in your system that you can think of.\nThen, think about whether, from the perspective of your business, each\naccount represents an asset, liability, equity, income, or expense. That\ndetermines whether the given type of account is increased with a debit\nor a credit.</p>\n<h2 id=\"want-more-help-understanding-debits-and-credits\"><a\nhref=\"#want-more-help-understanding-debits-and-credits\"\nclass=\"anchor\">Want More Help Understanding Debits and Credits?</a></h2>\n<h3 id=\"ask-the-community\"><a href=\"#ask-the-community\"\nclass=\"anchor\">Ask the Community</a></h3>\n<p>Have questions about debits and credits, TigerBeetle‚Äôs data model,\nhow to design your application on top of it, or anything else?</p>\n<p>Come join our <a\nhref=\"https://slack.tigerbeetle.com/invite\">Community Slack</a> and ask\nany and all questions you might have!</p>\n<h3 id=\"dedicated-consultation\"><a href=\"#dedicated-consultation\"\nclass=\"anchor\">Dedicated Consultation</a></h3>\n<p>Would you like the TigerBeetle team to help you design your chart of\naccounts and leverage the power of TigerBeetle in your architecture?</p>\n<p>Let us help you get it right. Contact our CEO, Joran Dirk Greef, at\n<a href=\"mailto:joran@tigerbeetle.com\">joran@tigerbeetle.com</a> to set\nup a call.</p>\n<section id=\"footnotes\" class=\"footnotes footnotes-end-of-document\"\nrole=\"doc-endnotes\">\n<hr />\n<ol>\n<li id=\"fn1\"><p>IFRS. <em>Conceptual Framework for Financial\nReporting</em>. IFRS Foundation, 2018. <a\nhref=\"https://www.ifrs.org/content/dam/ifrs/publications/pdf-standards/english/2021/issued/part-a/conceptual-framework-for-financial-reporting.pdf\">https://www.ifrs.org/content/dam/ifrs/publications/pdf-standards/english/2021/issued/part-a/conceptual-framework-for-financial-reporting.pdf</a><a\nhref=\"#fnref1\" class=\"footnote-back\" role=\"doc-backlink\">‚Ü©Ô∏é</a></p></li>\n<li id=\"fn2\"><p>IFRS. <em>Conceptual Framework for Financial\nReporting</em>. IFRS Foundation, 2018. <a\nhref=\"https://www.ifrs.org/content/dam/ifrs/publications/pdf-standards/english/2021/issued/part-a/conceptual-framework-for-financial-reporting.pdf\">https://www.ifrs.org/content/dam/ifrs/publications/pdf-standards/english/2021/issued/part-a/conceptual-framework-for-financial-reporting.pdf</a><a\nhref=\"#fnref2\" class=\"footnote-back\" role=\"doc-backlink\">‚Ü©Ô∏é</a></p></li>\n<li id=\"fn3\"><p>IFRS. <em>Conceptual Framework for Financial\nReporting</em>. IFRS Foundation, 2018. <a\nhref=\"https://www.ifrs.org/content/dam/ifrs/publications/pdf-standards/english/2021/issued/part-a/conceptual-framework-for-financial-reporting.pdf\">https://www.ifrs.org/content/dam/ifrs/publications/pdf-standards/english/2021/issued/part-a/conceptual-framework-for-financial-reporting.pdf</a><a\nhref=\"#fnref3\" class=\"footnote-back\" role=\"doc-backlink\">‚Ü©Ô∏é</a></p></li>\n</ol>\n</section>\n"},{"path":"coding/two-phase-transfers","html":"<h1 id=\"two-phase-transfers\"><a href=\"#two-phase-transfers\"\nclass=\"anchor\">Two-Phase Transfers</a></h1>\n<p>A two-phase transfer moves funds in stages:</p>\n<ol type=\"1\">\n<li>Reserve funds (<a\nhref=\"#reserve-funds-pending-transfer\">pending</a>)</li>\n<li>Resolve funds (<a href=\"#post-pending-transfer\">post</a>, <a\nhref=\"#void-pending-transfer\">void</a>, or <a\nhref=\"#expire-pending-transfer\">expire</a>)</li>\n</ol>\n<p>The name ‚Äútwo-phase transfer‚Äù is a reference to the <a\nhref=\"https://en.wikipedia.org/wiki/Two-phase_commit_protocol\">two-phase\ncommit protocol for distributed transactions</a>.</p>\n<h2 id=\"reserve-funds-pending-transfer\"><a\nhref=\"#reserve-funds-pending-transfer\" class=\"anchor\">Reserve Funds\n(Pending Transfer)</a></h2>\n<p>A pending transfer, denoted by <a\nhref=\"../../reference/transfer#flagspending\"><code>flags.pending</code></a>,\nreserves its <code>amount</code> in the debit/credit accounts‚Äô <a\nhref=\"../../reference/account#debits_pending\"><code>debits_pending</code></a>/<a\nhref=\"../../reference/account#credits_pending\"><code>credits_pending</code></a>\nfields, respectively. Pending transfers leave the\n<code>debits_posted</code>/<code>credits_posted</code> unmodified.</p>\n<h2 id=\"resolve-funds\"><a href=\"#resolve-funds\" class=\"anchor\">Resolve\nFunds</a></h2>\n<p>Pending transfers can be posted, voided, or they may time out.</p>\n<h3 id=\"post-pending-transfer\"><a href=\"#post-pending-transfer\"\nclass=\"anchor\">Post-Pending Transfer</a></h3>\n<p>A post-pending transfer, denoted by <a\nhref=\"../../reference/transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a>,\ncauses a pending transfer to ‚Äúpost‚Äù, transferring some or all of the\npending transfer‚Äôs reserved amount to its destination.</p>\n<ul>\n<li>If the posted <a\nhref=\"../../reference/transfer#amount\"><code>amount</code></a> is less\nthan the pending transfer‚Äôs amount, then only this amount is posted, and\nthe remainder is restored to its original accounts.</li>\n<li>If the posted <a\nhref=\"../../reference/transfer#amount\"><code>amount</code></a> is equal\nto the pending transfer‚Äôs amount or equal to <code>AMOUNT_MAX</code>\n(<code>2^128 - 1</code>), the full pending transfer‚Äôs amount is\nposted.</li>\n<li>If the posted <a\nhref=\"../../reference/transfer#amount\"><code>amount</code></a> is\ngreater than the pending transfer‚Äôs amount (but less than\n<code>AMOUNT_MAX</code>), <a\nhref=\"../../reference/requests/create_transfers#exceeds_pending_transfer_amount\"><code>exceeds_pending_transfer_amount</code></a>\nis returned.</li>\n</ul>\n<details>\n<summary>Client &lt; 0.16.0</summary>\n\n<ul>\n<li>If the posted <a\nhref=\"../../reference/transfer#amount\"><code>amount</code></a> is 0, the\nfull pending transfer‚Äôs amount is posted.</li>\n<li>If the posted <a\nhref=\"../../reference/transfer#amount\"><code>amount</code></a> is\nnonzero, then only this amount is posted, and the remainder is restored\nto its original accounts. It must be less than or equal to the pending\ntransfer‚Äôs amount.</li>\n</ul>\n</details>\n\n<p>Additionally, when <code>flags.post_pending_transfer</code> is\nset:</p>\n<ul>\n<li><a\nhref=\"../../reference/transfer#pending_id\"><code>pending_id</code></a>\nmust reference a <a href=\"#reserve-funds-pending-transfer\">pending\ntransfer</a>.</li>\n<li><a\nhref=\"../../reference/transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a>\nmust not be set.</li>\n</ul>\n<p>The following fields may either be zero or they must match the value\nof the pending transfer‚Äôs field:</p>\n<ul>\n<li><a\nhref=\"../../reference/transfer#debit_account_id\"><code>debit_account_id</code></a></li>\n<li><a\nhref=\"../../reference/transfer#credit_account_id\"><code>credit_account_id</code></a></li>\n<li><a\nhref=\"../../reference/transfer#ledger\"><code>ledger</code></a></li>\n<li><a href=\"../../reference/transfer#code\"><code>code</code></a></li>\n</ul>\n<h3 id=\"void-pending-transfer\"><a href=\"#void-pending-transfer\"\nclass=\"anchor\">Void-Pending Transfer</a></h3>\n<p>A void-pending transfer, denoted by <a\nhref=\"../../reference/transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a>,\nrestores the pending amount its original accounts. Additionally, when\nthis field is set:</p>\n<ul>\n<li><a\nhref=\"../../reference/transfer#pending_id\"><code>pending_id</code></a>\nmust reference a <a href=\"#reserve-funds-pending-transfer\">pending\ntransfer</a>.</li>\n<li><a\nhref=\"../../reference/transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a>\nmust not be set.</li>\n</ul>\n<p>The following fields may either be zero or they must match the value\nof the pending transfer‚Äôs field:</p>\n<ul>\n<li><a\nhref=\"../../reference/transfer#debit_account_id\"><code>debit_account_id</code></a></li>\n<li><a\nhref=\"../../reference/transfer#credit_account_id\"><code>credit_account_id</code></a></li>\n<li><a\nhref=\"../../reference/transfer#ledger\"><code>ledger</code></a></li>\n<li><a href=\"../../reference/transfer#code\"><code>code</code></a></li>\n</ul>\n<h3 id=\"expire-pending-transfer\"><a href=\"#expire-pending-transfer\"\nclass=\"anchor\">Expire Pending Transfer</a></h3>\n<p>A pending transfer may optionally be created with a <a\nhref=\"../../reference/transfer#timeout\">timeout</a>. If the timeout\ninterval passes before the transfer is either posted or voided, the\ntransfer expires and the full amount is returned to the original\naccount.</p>\n<p>Note that <code>timeout</code>s are given as intervals, specified in\nseconds, rather than as absolute timestamps. For more details on why,\nread the page about <a href=\"../time\">Time in TigerBeetle</a>.</p>\n<h3 id=\"errors\"><a href=\"#errors\" class=\"anchor\">Errors</a></h3>\n<p>A pending transfer can only be posted or voided once. It cannot be\nposted twice or voided then posted, etc.</p>\n<p>Attempting to resolve a pending transfer more than once will return\nthe applicable error result:</p>\n<ul>\n<li><a\nhref=\"../../reference/requests/create_transfers#pending_transfer_already_posted\"><code>pending_transfer_already_posted</code></a></li>\n<li><a\nhref=\"../../reference/requests/create_transfers#pending_transfer_already_voided\"><code>pending_transfer_already_voided</code></a></li>\n<li><a\nhref=\"../../reference/requests/create_transfers#pending_transfer_expired\"><code>pending_transfer_expired</code></a></li>\n</ul>\n<h2 id=\"interaction-with-account-invariants\"><a\nhref=\"#interaction-with-account-invariants\" class=\"anchor\">Interaction\nwith Account Invariants</a></h2>\n<p>The pending transfer‚Äôs amount is reserved in a way that the second\nstep in a two-phase transfer will never cause the accounts‚Äô configured\nbalance invariants (<a\nhref=\"../../reference/account#flagscredits_must_not_exceed_debits\"><code>credits_must_not_exceed_debits</code></a>\nor <a\nhref=\"../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a>)\nto be broken, whether the second step is a post or void.</p>\n<h3 id=\"pessimistic-pending-transfers\"><a\nhref=\"#pessimistic-pending-transfers\" class=\"anchor\">Pessimistic Pending\nTransfers</a></h3>\n<p>If an account with <a\nhref=\"../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a>\nhas <code>credits_posted = 100</code> and\n<code>debits_posted = 70</code> and a pending transfer is started\ncausing the account to have <code>debits_pending = 50</code>, the\n<em>pending</em> transfer will fail. It will not wait to get to\n<em>posted</em> status to fail.</p>\n<h2 id=\"all-transfers-are-immutable\"><a\nhref=\"#all-transfers-are-immutable\" class=\"anchor\">All Transfers Are\nImmutable</a></h2>\n<p>To reiterate, completing a two-phase transfer (by either marking it\nvoid or posted) does not involve modifying the pending transfer. Instead\nyou create a new transfer.</p>\n<p>The first transfer that is marked pending will always have its\npending flag set.</p>\n<p>The second transfer will have a <a\nhref=\"../../reference/transfer#flagspost_pending_transfer\"><code>post_pending_transfer</code></a>\nor <a\nhref=\"../../reference/transfer#flagsvoid_pending_transfer\"><code>void_pending_transfer</code></a>\nflag set and a <a\nhref=\"../../reference/transfer#pending_id\"><code>pending_id</code></a>\nfield set to the <a\nhref=\"../../reference/transfer#id\"><code>id</code></a> of the first\ntransfer. The <a href=\"../../reference/transfer#id\"><code>id</code></a>\nof the second transfer will be unique, not the same <a\nhref=\"../../reference/transfer#id\"><code>id</code></a> as the initial\npending transfer.</p>\n<h2 id=\"examples\"><a href=\"#examples\" class=\"anchor\">Examples</a></h2>\n<p>The following examples show the state of two accounts in three\nsteps:</p>\n<ol type=\"1\">\n<li>Initially, before any transfers</li>\n<li>After a pending transfer</li>\n<li>And after the pending transfer is posted or voided</li>\n</ol>\n<h3 id=\"post-full-pending-amount\"><a href=\"#post-full-pending-amount\"\nclass=\"anchor\">Post Full Pending Amount</a></h3>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Account <code>A</code></th>\n<th style=\"text-align: right;\"></th>\n<th style=\"text-align: right;\">Account <code>B</code></th>\n<th style=\"text-align: right;\"></th>\n<th style=\"text-align: left;\">Transfers</th>\n<th style=\"text-align: left;\"></th>\n<th style=\"text-align: right;\"></th>\n<th style=\"text-align: left;\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\"><strong>debits</strong></td>\n<td style=\"text-align: right;\"></td>\n<td style=\"text-align: right;\"><strong>credits</strong></td>\n<td style=\"text-align: right;\"></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: right;\"></td>\n<td style=\"text-align: left;\"></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><strong>pending</strong></td>\n<td style=\"text-align: right;\"><strong>posted</strong></td>\n<td style=\"text-align: right;\"><strong>pending</strong></td>\n<td style=\"text-align: right;\"><strong>posted</strong></td>\n<td style=\"text-align: left;\"><strong>debit_account_id</strong></td>\n<td style=\"text-align: left;\"><strong>credit_account_id</strong></td>\n<td style=\"text-align: right;\"><strong>amount</strong></td>\n<td style=\"text-align: left;\"><strong>flags</strong></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>w</code></td>\n<td style=\"text-align: right;\"><code>x</code></td>\n<td style=\"text-align: right;\"><code>y</code></td>\n<td style=\"text-align: right;\"><code>z</code></td>\n<td style=\"text-align: left;\">-</td>\n<td style=\"text-align: left;\">-</td>\n<td style=\"text-align: right;\">-</td>\n<td style=\"text-align: left;\">-</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">123 + <code>w</code></td>\n<td style=\"text-align: right;\"><code>x</code></td>\n<td style=\"text-align: right;\">123 + <code>y</code></td>\n<td style=\"text-align: right;\"><code>z</code></td>\n<td style=\"text-align: left;\"><code>A</code></td>\n<td style=\"text-align: left;\"><code>B</code></td>\n<td style=\"text-align: right;\">123</td>\n<td style=\"text-align: left;\"><code>pending</code></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>w</code></td>\n<td style=\"text-align: right;\">123 + <code>x</code></td>\n<td style=\"text-align: right;\"><code>y</code></td>\n<td style=\"text-align: right;\">123 + <code>z</code></td>\n<td style=\"text-align: left;\"><code>A</code></td>\n<td style=\"text-align: left;\"><code>B</code></td>\n<td style=\"text-align: right;\">123</td>\n<td style=\"text-align: left;\"><code>post_pending_transfer</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"post-partial-pending-amount\"><a\nhref=\"#post-partial-pending-amount\" class=\"anchor\">Post Partial Pending\nAmount</a></h3>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Account <code>A</code></th>\n<th style=\"text-align: right;\"></th>\n<th style=\"text-align: right;\">Account <code>B</code></th>\n<th style=\"text-align: right;\"></th>\n<th style=\"text-align: left;\">Transfers</th>\n<th style=\"text-align: left;\"></th>\n<th style=\"text-align: right;\"></th>\n<th style=\"text-align: left;\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\"><strong>debits</strong></td>\n<td style=\"text-align: right;\"></td>\n<td style=\"text-align: right;\"><strong>credits</strong></td>\n<td style=\"text-align: right;\"></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: right;\"></td>\n<td style=\"text-align: left;\"></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><strong>pending</strong></td>\n<td style=\"text-align: right;\"><strong>posted</strong></td>\n<td style=\"text-align: right;\"><strong>pending</strong></td>\n<td style=\"text-align: right;\"><strong>posted</strong></td>\n<td style=\"text-align: left;\"><strong>debit_account_id</strong></td>\n<td style=\"text-align: left;\"><strong>credit_account_id</strong></td>\n<td style=\"text-align: right;\"><strong>amount</strong></td>\n<td style=\"text-align: left;\"><strong>flags</strong></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>w</code></td>\n<td style=\"text-align: right;\"><code>x</code></td>\n<td style=\"text-align: right;\"><code>y</code></td>\n<td style=\"text-align: right;\"><code>z</code></td>\n<td style=\"text-align: left;\">-</td>\n<td style=\"text-align: left;\">-</td>\n<td style=\"text-align: right;\">-</td>\n<td style=\"text-align: left;\">-</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">123 + <code>w</code></td>\n<td style=\"text-align: right;\"><code>x</code></td>\n<td style=\"text-align: right;\">123 + <code>y</code></td>\n<td style=\"text-align: right;\"><code>z</code></td>\n<td style=\"text-align: left;\"><code>A</code></td>\n<td style=\"text-align: left;\"><code>B</code></td>\n<td style=\"text-align: right;\">123</td>\n<td style=\"text-align: left;\"><code>pending</code></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>w</code></td>\n<td style=\"text-align: right;\">100 + <code>x</code></td>\n<td style=\"text-align: right;\"><code>y</code></td>\n<td style=\"text-align: right;\">100 + <code>z</code></td>\n<td style=\"text-align: left;\"><code>A</code></td>\n<td style=\"text-align: left;\"><code>B</code></td>\n<td style=\"text-align: right;\">100</td>\n<td style=\"text-align: left;\"><code>post_pending_transfer</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"void-pending-transfer-1\"><a href=\"#void-pending-transfer-1\"\nclass=\"anchor\">Void Pending Transfer</a></h3>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Account <code>A</code></th>\n<th style=\"text-align: right;\"></th>\n<th style=\"text-align: right;\">Account <code>B</code></th>\n<th style=\"text-align: right;\"></th>\n<th style=\"text-align: left;\">Transfers</th>\n<th style=\"text-align: left;\"></th>\n<th style=\"text-align: right;\"></th>\n<th style=\"text-align: left;\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\"><strong>debits</strong></td>\n<td style=\"text-align: right;\"></td>\n<td style=\"text-align: right;\"><strong>credits</strong></td>\n<td style=\"text-align: right;\"></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: right;\"></td>\n<td style=\"text-align: left;\"></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><strong>pending</strong></td>\n<td style=\"text-align: right;\"><strong>posted</strong></td>\n<td style=\"text-align: right;\"><strong>pending</strong></td>\n<td style=\"text-align: right;\"><strong>posted</strong></td>\n<td style=\"text-align: left;\"><strong>debit_account_id</strong></td>\n<td style=\"text-align: left;\"><strong>credit_account_id</strong></td>\n<td style=\"text-align: right;\"><strong>amount</strong></td>\n<td style=\"text-align: left;\"><strong>flags</strong></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>w</code></td>\n<td style=\"text-align: right;\"><code>x</code></td>\n<td style=\"text-align: right;\"><code>y</code></td>\n<td style=\"text-align: right;\"><code>z</code></td>\n<td style=\"text-align: left;\">-</td>\n<td style=\"text-align: left;\">-</td>\n<td style=\"text-align: right;\">-</td>\n<td style=\"text-align: left;\">-</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">123 + <code>w</code></td>\n<td style=\"text-align: right;\"><code>x</code></td>\n<td style=\"text-align: right;\">123 + <code>y</code></td>\n<td style=\"text-align: right;\"><code>z</code></td>\n<td style=\"text-align: left;\"><code>A</code></td>\n<td style=\"text-align: left;\"><code>B</code></td>\n<td style=\"text-align: right;\">123</td>\n<td style=\"text-align: left;\"><code>pending</code></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>w</code></td>\n<td style=\"text-align: right;\"><code>x</code></td>\n<td style=\"text-align: right;\"><code>y</code></td>\n<td style=\"text-align: right;\"><code>z</code></td>\n<td style=\"text-align: left;\"><code>A</code></td>\n<td style=\"text-align: left;\"><code>B</code></td>\n<td style=\"text-align: right;\">123</td>\n<td style=\"text-align: left;\"><code>void_pending_transfer</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"client-documentation\"><a href=\"#client-documentation\"\nclass=\"anchor\">Client Documentation</a></h2>\n<p>Read more about how two-phase transfers work with each client.</p>\n<ul>\n<li><a href=\"/clients/dotnet/#two-phase-transfers\">.NET</a></li>\n<li><a href=\"/clients/go/#two-phase-transfers\">Go</a></li>\n<li><a href=\"/clients/java/#two-phase-transfers\">Java</a></li>\n<li><a href=\"/clients/node/#two-phase-transfers\">Node</a></li>\n</ul>\n<h2 id=\"client-samples\"><a href=\"#client-samples\" class=\"anchor\">Client\nSamples</a></h2>\n<p>Or take a look at how it works with real code.</p>\n<ul>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/dotnet/samples/two-phase/\">.NET</a></li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/go/samples/two-phase/\">Go</a></li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/java/samples/two-phase/\">Java</a></li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/node/samples/two-phase/\">Node</a></li>\n</ul>\n"},{"path":"coding/reliable-transaction-submission","html":"<h1 id=\"reliable-transaction-submission\"><a\nhref=\"#reliable-transaction-submission\" class=\"anchor\">Reliable\nTransaction Submission</a></h1>\n<p>When making payments or recording transfers, it is important to\nensure that they are recorded once and only once ‚Äì even if some parts of\nthe system fail during the transaction.</p>\n<p>There are some subtle gotchas to avoid, so this page describes how to\nsubmit events ‚Äì and especially transfers ‚Äì reliably.</p>\n<h2 id=\"the-app-or-browser-should-generate-the-id\"><a\nhref=\"#the-app-or-browser-should-generate-the-id\" class=\"anchor\">The App\nor Browser Should Generate the ID</a></h2>\n<p><a href=\"../../reference/transfer#id\"><code>Transfer</code>s</a> and\n<a href=\"../../reference/account#id\"><code>Account</code>s</a> carry an\n<code>id</code> field that is used as an idempotency key to ensure the\nsame object is not created twice.</p>\n<p><strong>The client software, such as your app or web page, that the\nuser interacts with should generate the <code>id</code> (not your API).\nThis <code>id</code> should be persisted locally before submission, and\nthe same <code>id</code> should be used for subsequent\nretries.</strong></p>\n<ol type=\"1\">\n<li>User initiates a transfer.</li>\n<li>Client software (app, web page, etc) <a\nhref=\"../data-modeling#id\">generates the transfer\n<code>id</code></a>.</li>\n<li>Client software <strong>persists the <code>id</code> in the app or\nbrowser local storage.</strong></li>\n<li>Client software submits the transfer to your <a\nhref=\"../system-architecture\">API service</a>.</li>\n<li>API service includes the transfer in a <a\nhref=\"../../reference/requests/\">request</a>.</li>\n<li>TigerBeetle creates the transfer with the given <code>id</code> once\nand only once.</li>\n<li>TigerBeetle responds to the API service.</li>\n<li>The API service responds to the client software.</li>\n</ol>\n<h3 id=\"handling-network-failures\"><a href=\"#handling-network-failures\"\nclass=\"anchor\">Handling Network Failures</a></h3>\n<p>The method described above handles various potential network\nfailures. The request may be lost before it reaches the API service or\nbefore it reaches TigerBeetle. Or, the response may be lost on the way\nback from TigerBeetle.</p>\n<p>Generating the <code>id</code> on the client side ensures that\ntransfers can be safely retried. The app must use the same\n<code>id</code> each time the transfer is resent.</p>\n<p>If the transfer was already created before and then retried,\nTigerBeetle will return the <a\nhref=\"../../reference/requests/create_transfers#exists\"><code>exists</code></a>\nresponse code. If the transfer had not already been created, it will be\ncreated and return the <a\nhref=\"../../reference/requests/create_transfers#ok\"><code>ok</code></a>.</p>\n<h3 id=\"handling-client-software-restarts\"><a\nhref=\"#handling-client-software-restarts\" class=\"anchor\">Handling Client\nSoftware Restarts</a></h3>\n<p>The method described above also handles potential restarts of the app\nor browser while the request is in flight.</p>\n<p>It is important to <strong>persist the <code>id</code> to local\nstorage on the client‚Äôs device before submitting the transfer</strong>.\nWhen the app or web page reloads, it should resubmit the transfer using\nthe same <code>id</code>.</p>\n<p>This ensures that the operation can be safely retried even if the\nclient app or browser restarts before receiving the response to the\noperation. Similar to the case of a network failure, TigerBeetle will\nrespond with the <a\nhref=\"../../reference/requests/create_transfers#ok\"><code>ok</code></a>\nif a transfer is newly created and <a\nhref=\"../../reference/requests/create_transfers#exists\"><code>exists</code></a>\nif an object with the same <code>id</code> was already created.</p>\n"},{"path":"coding/time","html":"<h1 id=\"time\"><a href=\"#time\" class=\"anchor\">Time</a></h1>\n<p>Time is a critical component of all distributed systems and\ndatabases. Within TigerBeetle, we keep track of two types of time:\nlogical time and physical time.</p>\n<h2 id=\"logical-time\"><a href=\"#logical-time\" class=\"anchor\">Logical\nTime</a></h2>\n<p>TigerBeetle uses <a\nhref=\"https://pmg.csail.mit.edu/papers/vr-revisited.pdf\">Viewstamped\nreplication</a> for its consensus protocol. This ensures <a\nhref=\"http://www.bailis.org/blog/linearizability-versus-serializability/\">strict\nserializability</a> for all operations.</p>\n<h2 id=\"physical-time\"><a href=\"#physical-time\" class=\"anchor\">Physical\nTime</a></h2>\n<p>TigerBeetle uses physical time in addition to the logical time\nprovided by the consensus algorithm. Financial transactions require\nphysical time for multiple reasons, including:</p>\n<ul>\n<li><strong>Liquidity</strong> - TigerBeetle supports <a\nhref=\"../two-phase-transfers\">Two-Phase Transfers</a> that reserve funds\nand hold them in a pending state until they are posted, voided, or the\ntransfer times out. A timeout is useful to ensure that the reserved\nfunds are not held in limbo indefinitely.</li>\n<li><strong>Compliance and Auditing</strong> - For regulatory and\nsecurity purposes, it is useful to have a specific idea of when (in\nterms of wall clock time) transfers took place.</li>\n</ul>\n<h3 id=\"physical-time-is-propagated-through-consensus\"><a\nhref=\"#physical-time-is-propagated-through-consensus\"\nclass=\"anchor\">Physical Time is Propagated Through Consensus</a></h3>\n<p>TigerBeetle clusters are distributed systems, so we cannot rely on\nall replicas in a cluster keeping their system clocks perfectly in sync.\nBecause of this, we ‚Äútrust but verify‚Äù.</p>\n<p>In the TigerBeetle consensus protocol messages, replicas exchange\ntimestamp information and monitor the skew of their clock with respect\nto the other replicas. The system ensures that the clock skew is within\nan acceptable window and may choose to stop processing transactions if\nthe clocks are far out of sync.</p>\n<p>Importantly, the goal is not to reimplement or replace clock\nsynchronization protocols, but to verify that the cluster is operating\nwithin acceptable error bounds.</p>\n<h2 id=\"why-tigerbeetle-manages-timestamps\"><a\nhref=\"#why-tigerbeetle-manages-timestamps\" class=\"anchor\">Why\nTigerBeetle Manages Timestamps</a></h2>\n<p>Timestamps on <a\nhref=\"../../reference/transfer#timestamp\"><code>Transfer</code>s</a> and\n<a href=\"../../reference/account#timestamp\"><code>Account</code>s</a>\nare <strong>set by the primary node</strong> in the TigerBeetle cluster\nwhen it receives the operation.</p>\n<p>The primary then propagates the operations to all replicas, including\nthe timestamps it determined. All replicas process the state machine\ntransitions deterministically, based on the primary‚Äôs timestamp ‚Äì\n<em>not</em> based on their own system time.</p>\n<p>Primary nodes monitor their clock skew with respect to the other\nreplicas and may abdicate their role as primary if they appear to be far\noff the rest of the cluster.</p>\n<p>This is why the <code>timestamp</code> field must be set to\n<code>0</code> when operations are submitted, and it is then set by the\nprimary.</p>\n<p>Similarly, the <a\nhref=\"../../reference/transfer#timeout\"><code>Transfer.timeout</code></a>\nis given as an interval in seconds, rather than as an absolute\ntimestamp, because it is also managed by the primary. The\n<code>timeout</code> is calculated relative to the\n<code>timestamp</code> when the operation arrives at the primary.</p>\n<h3 id=\"timestamps-are-totally-ordered\"><a\nhref=\"#timestamps-are-totally-ordered\" class=\"anchor\">Timestamps are\nTotally Ordered</a></h3>\n<p>All <code>timestamp</code>s within TigerBeetle are unique, immutable\nand <a href=\"https://book.mixu.net/distsys/time.html\">totally\nordered</a>. A transfer that is created before another transfer is\nguaranteed to have an earlier <code>timestamp</code> (even if they were\ncreated in the same request).</p>\n<p>In other systems this is also called a ‚Äúphysical‚Äù timestamp,\n‚Äúingestion‚Äù timestamp, ‚Äúrecord‚Äù timestamp, or ‚Äúsystem‚Äù timestamp.</p>\n<h2 id=\"further-reading\"><a href=\"#further-reading\"\nclass=\"anchor\">Further Reading</a></h2>\n<p>Watch this talk on <a\nhref=\"https://youtu.be/7R-Iz6sJG6Q?si=9sD2TpfD29AxUjOY\">Detecting Clock\nSync Failure in Highly Available Systems</a> on YouTube for more\ndetails.</p>\n<p>You can also read the blog post <a\nhref=\"https://tigerbeetle.com/blog/2021-08-30-three-clocks-are-better-than-one\">Three\nClocks are Better than One</a> for more on how nodes determine their own\ntime and clock skew.</p>\n"},{"path":"coding/recipes/currency-exchange","html":"<h1 id=\"currency-exchange\"><a href=\"#currency-exchange\"\nclass=\"anchor\">Currency Exchange</a></h1>\n<p>Some applications require multiple currencies. For example, a bank\nmay hold balances in many different currencies. If a single logical\nentity holds multiple currencies, each currency must be held in a\nseparate TigerBeetle <code>Account</code>. (Normalizing to a single\ncurrency at the application level should be avoided because exchange\nrates fluctuate).</p>\n<p>Currency exchange is a trade of one type of currency (denoted by the\n<code>ledger</code>) for another, facilitated by an entity called the\n<em>liquidity provider</em>.</p>\n<h2 id=\"data-modeling\"><a href=\"#data-modeling\" class=\"anchor\">Data\nModeling</a></h2>\n<p>Distinct <a\nhref=\"../../../reference/account#ledger\"><code>ledger</code></a> values\ndenote different currencies (or other asset types). Transfers between\npairs of accounts with different <code>ledger</code>s are <a\nhref=\"../../../reference/requests/create_transfers#accounts_must_have_the_same_ledger\">not\npermitted</a>.</p>\n<p>Instead, currency exchange is implemented by creating two <a\nhref=\"../../../reference/transfer#flagslinked\">atomically linked</a>\ndifferent-ledger transfers between two pairs of same-ledger\naccounts.</p>\n<p>A simple currency exchange involves four accounts:</p>\n<ul>\n<li>A <em>source account</em> <code>A‚ÇÅ</code>, on ledger\n<code>1</code>.</li>\n<li>A <em>destination account</em> <code>A‚ÇÇ</code>, on ledger\n<code>2</code>.</li>\n<li>A <em>source liquidity account</em> <code>L‚ÇÅ</code>, on ledger\n<code>1</code>.</li>\n<li>A <em>destination liquidity account</em> <code>L‚ÇÇ</code>, on ledger\n<code>2</code>.</li>\n</ul>\n<p>and two linked transfers:</p>\n<ul>\n<li>A transfer <code>T‚ÇÅ</code> from the <em>source account</em> to the\n<em>source liquidity account</em>.</li>\n<li>A transfer <code>T‚ÇÇ</code> from the <em>destination liquidity\naccount</em> to the <em>destination account</em>.</li>\n</ul>\n<p>The transfer amounts vary according to the exchange rate.</p>\n<ul>\n<li>Both liquidity accounts belong to the liquidity provider (e.g. a\nbank or exchange).</li>\n<li>The source and destination accounts may belong to the same entity as\none another, or different entities, depending on the use case.</li>\n</ul>\n<h3 id=\"example\"><a href=\"#example\" class=\"anchor\">Example</a></h3>\n<p>Consider sending <code>$100.00</code> from account <code>A‚ÇÅ</code>\n(denominated in USD) to account <code>A‚ÇÇ</code> (denominated in INR).\nAssuming an exchange rate of <code>$1.00 = ‚Çπ82.42135</code>,\n<code>$100.00 = ‚Çπ8242.135</code>:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\"><code>flags.linked</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A‚ÇÅ</code></td>\n<td style=\"text-align: right;\"><code>L‚ÇÅ</code></td>\n<td style=\"text-align: right;\">10000</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">INR</td>\n<td style=\"text-align: right;\"><code>L‚ÇÇ</code></td>\n<td style=\"text-align: right;\"><code>A‚ÇÇ</code></td>\n<td style=\"text-align: right;\">8242135</td>\n<td style=\"text-align: right;\">false</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li>Amounts are <a\nhref=\"../../data-modeling#fractional-amounts-and-asset-scale\">represented\nas integers</a>.</li>\n<li>Because both liquidity accounts belong to the same entity, the\nentity does not lose money on the transaction.\n<ul>\n<li>If the exchange rate is precise, the entity breaks even.</li>\n<li>If the exchange rate is not precise, the application should round in\nfavor of the liquidity account to deter arbitrage.</li>\n</ul></li>\n<li>Because the two transfers are linked together, they will either both\nsucceed or both fail.</li>\n</ul>\n<h2 id=\"spread\"><a href=\"#spread\" class=\"anchor\">Spread</a></h2>\n<p>In the prior example, the liquidity provider breaks even. A fee (i.e.\nspread) can be included in the <code>linked</code> chain as a separate\ntransfer from the source account to the source liquidity account\n(<code>A‚ÇÅ</code> to <code>L‚ÇÅ</code>).</p>\n<p>This is preferable to simply modifying the exchange rate in the\nliquidity provider‚Äôs favor because it implicitly records the exchange\nrate and spread at the time of the exchange ‚Äî information that cannot be\nderived if the two are combined.</p>\n<h3 id=\"example-1\"><a href=\"#example-1\" class=\"anchor\">Example</a></h3>\n<p>This depicts the same scenario as the prior example, except the\nliquidity provider charges a <code>$0.10</code> fee for the\ntransaction.</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\"><code>flags.linked</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A‚ÇÅ</code></td>\n<td style=\"text-align: right;\"><code>L‚ÇÅ</code></td>\n<td style=\"text-align: right;\">10000</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A‚ÇÅ</code></td>\n<td style=\"text-align: right;\"><code>L‚ÇÅ</code></td>\n<td style=\"text-align: right;\">10</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">INR</td>\n<td style=\"text-align: right;\"><code>L‚ÇÇ</code></td>\n<td style=\"text-align: right;\"><code>A‚ÇÇ</code></td>\n<td style=\"text-align: right;\">8242135</td>\n<td style=\"text-align: right;\">false</td>\n</tr>\n</tbody>\n</table>\n</div>\n"},{"path":"coding/recipes/multi-debit-credit-transfers","html":"<h1 id=\"multi-debit-multi-credit-transfers\"><a\nhref=\"#multi-debit-multi-credit-transfers\" class=\"anchor\">Multi-Debit,\nMulti-Credit Transfers</a></h1>\n<p>TigerBeetle is designed for maximum performance. In order to keep it\nlean, the database only supports simple transfers with a single debit\nand a single credit.</p>\n<p>However, you‚Äôll probably run into cases where you want transactions\nwith multiple debits and/or credits. For example, you might have a\ntransfer where you want to extract fees and/or taxes.</p>\n<p>Read on to see how to implement one-to-many and many-to-many\ntransfers!</p>\n<blockquote>\n<p>Note that all of these examples use the <a\nhref=\"../../../reference/transfer#flagslinked\">Linked Transfers flag\n(<code>flags.linked</code>)</a> to ensure that all of the transfers\nsucceed or fail together.</p>\n</blockquote>\n<h2 id=\"one-to-many-transfers\"><a href=\"#one-to-many-transfers\"\nclass=\"anchor\">One-to-Many Transfers</a></h2>\n<p>Transactions that involve multiple debits and a single credit OR a\nsingle debit and multiple credits are relatively straightforward.</p>\n<p>You can use multiple linked transfers as depicted below.</p>\n<h3 id=\"single-debit-multiple-credits\"><a\nhref=\"#single-debit-multiple-credits\" class=\"anchor\">Single Debit,\nMultiple Credits</a></h3>\n<p>This example debits a single account and credits multiple accounts.\nIt uses the following accounts:</p>\n<ul>\n<li>A <em>source account</em> <code>A</code>, on the <code>USD</code>\nledger.</li>\n<li>Three <em>destination accounts</em> <code>X</code>, <code>Y</code>,\nand <code>Z</code>, on the <code>USD</code> ledger.</li>\n</ul>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\"><code>flags.linked</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>X</code></td>\n<td style=\"text-align: right;\">10000</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>Y</code></td>\n<td style=\"text-align: right;\">50</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>Z</code></td>\n<td style=\"text-align: right;\">10</td>\n<td style=\"text-align: right;\">false</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"multiple-debits-single-credit\"><a\nhref=\"#multiple-debits-single-credit\" class=\"anchor\">Multiple Debits,\nSingle Credit</a></h3>\n<p>This example debits multiple accounts and credits a single account.\nIt uses the following accounts:</p>\n<ul>\n<li>Three <em>source accounts</em> <code>A</code>, <code>B</code>, and\n<code>C</code> on the <code>USD</code> ledger.</li>\n<li>A <em>destination account</em> <code>X</code> on the\n<code>USD</code> ledger.</li>\n</ul>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\"><code>flags.linked</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>X</code></td>\n<td style=\"text-align: right;\">10000</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\"><code>X</code></td>\n<td style=\"text-align: right;\">50</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\"><code>X</code></td>\n<td style=\"text-align: right;\">10</td>\n<td style=\"text-align: right;\">false</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"multiple-debits-single-credit-balancing-debits\"><a\nhref=\"#multiple-debits-single-credit-balancing-debits\"\nclass=\"anchor\">Multiple Debits, Single Credit, Balancing debits</a></h3>\n<p>This example debits multiple accounts and credits a single account.\nThe total amount to transfer to the credit account is known (in this\ncase, <code>100</code>), but the balances of the individual debit\naccounts are not known. That is, each debit account should contribute as\nmuch as possible (in order of precedence) up to the target, cumulative\ntransfer amount.</p>\n<p>It uses the following accounts:</p>\n<ul>\n<li>Three <em>source accounts</em> <code>A</code>, <code>B</code>, and\n<code>C</code>, with <a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>.</li>\n<li>A <em>destination account</em> <code>X</code>.</li>\n<li>A control account <code>LIMIT</code>, with <a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>.</li>\n<li>A control account <code>SETUP</code>, for setting up the\n<code>LIMIT</code> account.</li>\n</ul>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Id</th>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: left;\">Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">1</td>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>SETUP</code></td>\n<td style=\"text-align: right;\"><code>LIMIT</code></td>\n<td style=\"text-align: right;\">100</td>\n<td style=\"text-align: left;\"><a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">2</td>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>SETUP</code></td>\n<td style=\"text-align: right;\">100</td>\n<td style=\"text-align: left;\"><a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsbalancing_debit\"><code>balancing_debit</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsbalancing_credit\"><code>balancing_credit</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">3</td>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\"><code>SETUP</code></td>\n<td style=\"text-align: right;\">100</td>\n<td style=\"text-align: left;\"><a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsbalancing_debit\"><code>balancing_debit</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsbalancing_credit\"><code>balancing_credit</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">4</td>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\"><code>SETUP</code></td>\n<td style=\"text-align: right;\">100</td>\n<td style=\"text-align: left;\"><a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsbalancing_debit\"><code>balancing_debit</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsbalancing_credit\"><code>balancing_credit</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">5</td>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>SETUP</code></td>\n<td style=\"text-align: right;\"><code>X</code></td>\n<td style=\"text-align: right;\">100</td>\n<td style=\"text-align: left;\"><a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">6</td>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>LIMIT</code></td>\n<td style=\"text-align: right;\"><code>SETUP</code></td>\n<td style=\"text-align: right;\">-0</td>\n<td style=\"text-align: left;\"><a\nhref=\"../../../reference/transfer#flagsbalancing_credit\"><code>balancing_credit</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>If the cumulative <a\nhref=\"../../data-modeling#credit-balances\">credit balance</a> of\n<code>A + B + C</code> is less than <code>100</code>, the chain will\nfail (transfer <code>6</code> will return\n<code>exceeds_credits</code>).</p>\n<h2 id=\"many-to-many-transfers\"><a href=\"#many-to-many-transfers\"\nclass=\"anchor\">Many-to-Many Transfers</a></h2>\n<p>Transactions with multiple debits and multiple credits are a bit more\ninvolved (but you got this!).</p>\n<p>This is where the accounting concept of a Control Account comes in\nhandy. We can use this as an intermediary account, as illustrated\nbelow.</p>\n<p>In this example, we‚Äôll use the following accounts:</p>\n<ul>\n<li>Two <em>source accounts</em> <code>A</code> and <code>B</code> on\nthe <code>USD</code> ledger.</li>\n<li>Three <em>destination accounts</em> <code>X</code>, <code>Y</code>,\nand <code>Z</code>, on the <code>USD</code> ledger.</li>\n<li>A <em>compound entry control account</em> <code>Control</code> on\nthe <code>USD</code> ledger.</li>\n</ul>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\"><code>flags.linked</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>Control</code></td>\n<td style=\"text-align: right;\">10000</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\"><code>Control</code></td>\n<td style=\"text-align: right;\">50</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>Control</code></td>\n<td style=\"text-align: right;\"><code>X</code></td>\n<td style=\"text-align: right;\">9000</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>Control</code></td>\n<td style=\"text-align: right;\"><code>Y</code></td>\n<td style=\"text-align: right;\">1000</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>Control</code></td>\n<td style=\"text-align: right;\"><code>Z</code></td>\n<td style=\"text-align: right;\">50</td>\n<td style=\"text-align: right;\">false</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Here, we use two transfers to debit accounts <code>A</code> and\n<code>B</code> and credit the <code>Control</code> account, and another\nthree transfers to credit accounts <code>X</code>, <code>Y</code>, and\n<code>Z</code>.</p>\n<p>If you looked closely at this example, you may have noticed that we\ncould have debited <code>B</code> and credited <code>Z</code> directly\nbecause the amounts happened to line up. That is true!</p>\n<p>For a little more extreme performance, you <em>might</em> consider\nimplementing logic to circumvent the control account where possible, to\nreduce the number of transfers to implement a compound journal\nentry.</p>\n<p>However, if you‚Äôre just getting started, you can avoid premature\noptimizations (we‚Äôve all been there!). You may find it easier to program\nthese compound journal entries <em>always</em> using a control account ‚Äì\nand you can then come back to squeeze this performance out later!</p>\n"},{"path":"coding/recipes/close-account","html":"<h1 id=\"close-account\"><a href=\"#close-account\" class=\"anchor\">Close\nAccount</a></h1>\n<p>In accounting, a <em>closing entry</em> calculates the net debit or\ncredit balance for an account and then credits or debits this balance\nrespectively, to zero the account‚Äôs balance and move the balance to\nanother account.</p>\n<p>Additionally, it may be desirable to forbid further transfers on this\naccount (i.e. at the end of an accounting period, upon account\ntermination, or even temporarily freezing the account for audit\npurposes.</p>\n<h3 id=\"example\"><a href=\"#example\" class=\"anchor\">Example</a></h3>\n<p>Given a set of accounts:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Account</th>\n<th style=\"text-align: right;\">Debits Pending</th>\n<th style=\"text-align: right;\">Debits Posted</th>\n<th style=\"text-align: right;\">Credits Pending</th>\n<th style=\"text-align: right;\">Credits Posted</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">10</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">20</td>\n<td><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">30</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">5</td>\n<td><a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>credits_must_not_exceed_debits</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">0</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>The ‚Äúclosing entries‚Äù for accounts <code>A</code> and <code>B</code>\nare expressed as <em>linked chains</em>, so they either succeed or fail\natomically.</p>\n<ul>\n<li><p>Account <code>A</code>: the linked transfers are <code>T1</code>\nand <code>T2</code>.</p></li>\n<li><p>Account <code>B</code>: the linked transfers are <code>T3</code>\nand <code>T4</code>.</p></li>\n<li><p>Account <code>C</code>: is the <em>control account</em> and will\nnot be closed.</p></li>\n</ul>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Transfer</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\">Amount (recorded)</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\"><code>T1</code></td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\"><code>AMOUNT_MAX</code></td>\n<td style=\"text-align: right;\">10</td>\n<td><a\nhref=\"../../../reference/transfer#flagsbalancing_debit\"><code>balancing_debit</code></a>,<a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>T2</code></td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">0</td>\n<td><a\nhref=\"../../../reference/transfer#flagsclosing_debit\"><code>closing_debit</code></a>,\n<a\nhref=\"../../../reference/transfer#flagspending\"><code>pending</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>T3</code></td>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\"><code>AMOUNT_MAX</code></td>\n<td style=\"text-align: right;\">25</td>\n<td><a\nhref=\"../../../reference/transfer#flagsbalancing_credit\"><code>balancing_credit</code></a>,<a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>T4</code></td>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">0</td>\n<td><a\nhref=\"../../../reference/transfer#flagsclosing_credit\"><code>closing_credit</code></a>,\n<a\nhref=\"../../../reference/transfer#flagspending\"><code>pending</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li><p><code>T1</code> and <code>T3</code> are <em>balancing\ntransfers</em> with <code>AMOUNT_MAX</code> as the\n<code>Transfer.amount</code> so that the application does not need to\nknow (or query) the balance prior to closing the account.</p>\n<p>The stored transfer‚Äôs <code>amount</code> will be set to the actual\namount transferred.</p></li>\n<li><p><code>T2</code> and <code>T4</code> are <em>closing\ntransfers</em> that will cause the respective account to be closed.</p>\n<p>The closing transfer must be also a <em>pending transfer</em> so the\naction can be reversible.</p></li>\n</ul>\n<p>After committing these transfers, <code>A</code> and <code>B</code>\nare closed with net balance zero, and will reject any further\ntransfers.</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Account</th>\n<th style=\"text-align: right;\">Debits Pending</th>\n<th style=\"text-align: right;\">Debits Posted</th>\n<th style=\"text-align: right;\">Credits Pending</th>\n<th style=\"text-align: right;\">Credits Posted</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">20</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">20</td>\n<td><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a>,\n<a\nhref=\"../../../reference/account#flagsclosed\"><code>closed</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">30</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">30</td>\n<td><a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>credits_must_not_exceed_debits</code></a>,\n<a\nhref=\"../../../reference/account#flagsclosed\"><code>closed</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">25</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">10</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>To re-open the closed account, the <em>pending closing transfer</em>\ncan be <em>voided</em>, reverting the closing action (but not reverting\nthe net balance):</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Transfer</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\">Pending Transfer</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\"><code>T5</code></td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\"><code>T2</code></td>\n<td><a\nhref=\"../../../reference/transfer#flagsvoid_pending_transfer\"><code>void_pending_transfer</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>T6</code></td>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\"><code>T4</code></td>\n<td><a\nhref=\"../../../reference/transfer#flagsvoid_pending_transfer\"><code>void_pending_transfer</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>After committing these transfers, <code>A</code> and <code>B</code>\nare re-opened and can accept transfers again:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Account</th>\n<th style=\"text-align: right;\">Debits Pending</th>\n<th style=\"text-align: right;\">Debits Posted</th>\n<th style=\"text-align: right;\">Credits Pending</th>\n<th style=\"text-align: right;\">Credits Posted</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">20</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">20</td>\n<td><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">30</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">30</td>\n<td><a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>credits_must_not_exceed_debits</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">25</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">10</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div>\n"},{"path":"coding/recipes/balance-conditional-transfers","html":"<h1 id=\"balance-conditional-transfers\"><a\nhref=\"#balance-conditional-transfers\" class=\"anchor\">Balance-Conditional\nTransfers</a></h1>\n<p>In some use cases, you may want to execute a transfer if and only if\nan account has at least a certain balance.</p>\n<p>It would be unsafe to check an account‚Äôs balance using the <a\nhref=\"../../../reference/requests/lookup_accounts\"><code>lookup_accounts</code></a>\nand then perform the transfer, because these requests are not be atomic\nand the account‚Äôs balance may change between the lookup and the\ntransfer.</p>\n<p>You can atomically run a check against an account‚Äôs balance before\nexecuting a transfer by using a control or temporary account and linked\ntransfers.</p>\n<h2 id=\"preconditions\"><a href=\"#preconditions\"\nclass=\"anchor\">Preconditions</a></h2>\n<h3 id=\"1-target-account-must-have-a-limited-balance\"><a\nhref=\"#1-target-account-must-have-a-limited-balance\" class=\"anchor\">1.\nTarget Account Must Have a Limited Balance</a></h3>\n<p>The account for whom you want to do the balance check must have one\nof these flags set:</p>\n<ul>\n<li><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>\nfor accounts with <a href=\"../../data-modeling#credit-balances\">credit\nbalances</a></li>\n<li><a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>\nfor accounts with <a href=\"../../data-modeling#debit-balances\">debit\nbalances</a></li>\n</ul>\n<h3 id=\"2-create-a-control-account\"><a\nhref=\"#2-create-a-control-account\" class=\"anchor\">2. Create a Control\nAccount</a></h3>\n<p>There must also be a designated control account. As you can see\nbelow, this account will never actually take control of the target\naccount‚Äôs funds, but we will set up simultaneous transfers in and out of\nthe control account.</p>\n<h2 id=\"executing-a-balance-conditional-transfer\"><a\nhref=\"#executing-a-balance-conditional-transfer\"\nclass=\"anchor\">Executing a Balance-Conditional Transfer</a></h2>\n<p>The balance-conditional transfer consists of 3 <a\nhref=\"../../../reference/requests/#linked-events\">linked\ntransfers</a>.</p>\n<p>We will refer to two amounts:</p>\n<ul>\n<li>The <strong>threshold amount</strong> is the minimum amount the\ntarget account should have in order to execute the transfer.</li>\n<li>The <strong>transfer amount</strong> is the amount we want to\ntransfer if and only if the target account‚Äôs balance meets the\nthreshold.</li>\n</ul>\n<h3 id=\"if-the-source-account-has-a-credit-balance\"><a\nhref=\"#if-the-source-account-has-a-credit-balance\" class=\"anchor\">If the\nSource Account Has a Credit Balance</a></h3>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th>Debit Account</th>\n<th>Credit Account</th>\n<th>Amount</th>\n<th>Pending Id</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Source</td>\n<td>Control</td>\n<td>Threshold</td>\n<td>-</td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a>,\n<a\nhref=\"../../../reference/transfer#flagspending\"><code>pending</code></a></td>\n</tr>\n<tr>\n<td>2</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>1</td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsvoid_pending_transfer\"><code>void_pending_transfer</code></a></td>\n</tr>\n<tr>\n<td>3</td>\n<td>Source</td>\n<td>Destination</td>\n<td>Transfer</td>\n<td>-</td>\n<td>N/A</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"if-the-source-account-has-a-debit-balance\"><a\nhref=\"#if-the-source-account-has-a-debit-balance\" class=\"anchor\">If the\nSource Account Has a Debit Balance</a></h3>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th>Debit Account</th>\n<th>Credit Account</th>\n<th>Amount</th>\n<th>Pending Id</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Control</td>\n<td>Source</td>\n<td>Threshold</td>\n<td>-</td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a>,\n<a\nhref=\"../../../reference/transfer#flagspending\"><code>pending</code></a></td>\n</tr>\n<tr>\n<td>2</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>1</td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsvoid_pending_transfer\"><code>void_pending_transfer</code></a></td>\n</tr>\n<tr>\n<td>3</td>\n<td>Destination</td>\n<td>Source</td>\n<td>Transfer</td>\n<td>-</td>\n<td>N/A</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"understanding-the-mechanism\"><a\nhref=\"#understanding-the-mechanism\" class=\"anchor\">Understanding the\nMechanism</a></h3>\n<p>Each of the 3 transfers is linked, meaning they will all succeed or\nfail together.</p>\n<p>The first transfer attempts to transfer the threshold amount to the\ncontrol account. If this transfer would cause the source account‚Äôs net\nbalance to go below zero, the account‚Äôs balance limit flag would ensure\nthat the first transfer fails. If the first transfer fails, the other\ntwo linked transfers would also fail.</p>\n<p>If the first transfer succeeds, it means that the source account did\nhave the threshold balance. In this case, the second transfer cancels\nthe first transfer (returning the threshold amount to the source\naccount). Then, the third transfer would execute the desired transfer to\nthe ultimate destination account.</p>\n<p>Note that in the tables above, we do the balance check on the source\naccount. The balance check could also be applied to the destination\naccount instead.</p>\n"},{"path":"coding/recipes/balance-bounds","html":"<h1 id=\"balance-bounds\"><a href=\"#balance-bounds\" class=\"anchor\">Balance\nBounds</a></h1>\n<p>It is easy to limit an account‚Äôs balance using either <a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>\nor <a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>.</p>\n<p>What if you want an account‚Äôs balance to stay between an upper and a\nlower bound?</p>\n<p>This is possible to check atomically using a set of linked transfers.\n(Note: with the <code>must_not_exceed</code> flag invariants, an account\nis guaranteed to never violate those invariants. This maximum balance\napproach must be enforced per-transfer ‚Äì it is possible to exceed the\nlimit simply by not enforcing it for a particular transfer.)</p>\n<h2 id=\"preconditions\"><a href=\"#preconditions\"\nclass=\"anchor\">Preconditions</a></h2>\n<ol type=\"1\">\n<li>Target Account Should Have a Limited Balance</li>\n</ol>\n<p>The account whose balance you want to bound should have one of these\nflags set:</p>\n<ul>\n<li><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>\nfor accounts with <a href=\"../../data-modeling#credit-balances\">credit\nbalances</a></li>\n<li><a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>\nfor accounts with <a href=\"../../data-modeling#debit-balances\">debit\nbalances</a></li>\n</ul>\n<ol start=\"2\" type=\"1\">\n<li>Create a Control Account with the Opposite Limit</li>\n</ol>\n<p>There must also be a designated control account.</p>\n<p>As you can see below, this account will never actually take control\nof the target account‚Äôs funds, but we will set up simultaneous transfers\nin and out of the control account to apply the limit.</p>\n<p>This account must have the opposite limit applied as the target\naccount:</p>\n<ul>\n<li><a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>\nif the target account has a <a\nhref=\"../../data-modeling#credit-balances\">credit balance</a></li>\n<li><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>\nif the target account has a <a\nhref=\"../../data-modeling#debit-balances\">debit balance</a></li>\n</ul>\n<ol start=\"3\" type=\"1\">\n<li>Create an Operator Account</li>\n</ol>\n<p>The operator account will be used to fund the Control Account.</p>\n<h2 id=\"executing-a-transfer-with-a-balance-bounds-check\"><a\nhref=\"#executing-a-transfer-with-a-balance-bounds-check\"\nclass=\"anchor\">Executing a Transfer with a Balance Bounds Check</a></h2>\n<p>This consists of 5 <a\nhref=\"../../../reference/requests/#linked-events\">linked\ntransfers</a>.</p>\n<p>We will refer to two amounts:</p>\n<ul>\n<li>The <strong>limit amount</strong> is upper bound we want to maintain\non the target account‚Äôs balance.</li>\n<li>The <strong>transfer amount</strong> is the amount we want to\ntransfer if and only if the target account‚Äôs balance after a successful\ntransfer would be within the bounds.</li>\n</ul>\n<h3 id=\"if-the-target-account-has-a-credit-balance\"><a\nhref=\"#if-the-target-account-has-a-credit-balance\" class=\"anchor\">If the\nTarget Account Has a Credit Balance</a></h3>\n<p>In this case, we are keeping the Destination Account‚Äôs balance\nbetween the bounds.</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th>Debit Account</th>\n<th>Credit Account</th>\n<th>Amount</th>\n<th>Pending ID</th>\n<th>Flags (Note: <code>|</code> sets multiple flags)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Source</td>\n<td>Destination</td>\n<td>Transfer</td>\n<td><code>0</code></td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a></td>\n</tr>\n<tr>\n<td>2</td>\n<td>Control</td>\n<td>Operator</td>\n<td>Limit</td>\n<td><code>0</code></td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a></td>\n</tr>\n<tr>\n<td>3</td>\n<td>Destination</td>\n<td>Control</td>\n<td><code>AMOUNT_MAX</code></td>\n<td><code>0</code></td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a>\n| <a\nhref=\"../../../reference/transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a>\n| <a\nhref=\"../../../reference/transfer#flagspending\"><code>flags.pending</code></a></td>\n</tr>\n<tr>\n<td>4</td>\n<td><code>0</code></td>\n<td><code>0</code></td>\n<td><code>0</code></td>\n<td><code>3</code>*</td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a>\n| <a\nhref=\"../../../reference/transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a></td>\n</tr>\n<tr>\n<td>5</td>\n<td>Operator</td>\n<td>Control</td>\n<td>Limit</td>\n<td><code>0</code></td>\n<td><code>0</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>*This must be set to the transfer ID of the pending transfer (in this\nexample, it is transfer 3).</p>\n<h3 id=\"if-the-target-account-has-a-debit-balance\"><a\nhref=\"#if-the-target-account-has-a-debit-balance\" class=\"anchor\">If the\nTarget Account Has a Debit Balance</a></h3>\n<p>In this case, we are keeping the Destination Account‚Äôs balance\nbetween the bounds.</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th>Debit Account</th>\n<th>Credit Account</th>\n<th>Amount</th>\n<th>Pending ID</th>\n<th>Flags (Note <code>|</code> sets multiple flags)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Destination</td>\n<td>Source</td>\n<td>Transfer</td>\n<td><code>0</code></td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a></td>\n</tr>\n<tr>\n<td>2</td>\n<td>Operator</td>\n<td>Control</td>\n<td>Limit</td>\n<td><code>0</code></td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a></td>\n</tr>\n<tr>\n<td>3</td>\n<td>Control</td>\n<td>Destination</td>\n<td><code>AMOUNT_MAX</code></td>\n<td><code>0</code></td>\n<td><a\nhref=\"../../../reference/transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a>\n| <a\nhref=\"../../../reference/transfer#flagspending\"><code>flags.pending</code></a>\n| <a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a></td>\n</tr>\n<tr>\n<td>4</td>\n<td><code>0</code></td>\n<td><code>0</code></td>\n<td><code>0</code></td>\n<td><code>3</code>*</td>\n<td><a\nhref=\"../../../reference/transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a>\n| <a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a></td>\n</tr>\n<tr>\n<td>5</td>\n<td>Control</td>\n<td>Operator</td>\n<td>Limit</td>\n<td><code>0</code></td>\n<td><code>0</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>*This must be set to the transfer ID of the pending transfer (in this\nexample, it is transfer 3).</p>\n<h3 id=\"understanding-the-mechanism\"><a\nhref=\"#understanding-the-mechanism\" class=\"anchor\">Understanding the\nMechanism</a></h3>\n<p>Each of the 5 transfers is <a\nhref=\"../../../reference/requests/#linked-events\">linked</a> so that all\nof them will succeed or all of them will fail.</p>\n<p>The first transfer is the one we actually want to send.</p>\n<p>The second transfer sets the Control Account‚Äôs balance to the upper\nbound we want to impose.</p>\n<p>The third transfer uses a <a\nhref=\"../../../reference/transfer#flagsbalancing_debit\"><code>balancing_debit</code></a>\nor <a\nhref=\"../../../reference/transfer#flagsbalancing_credit\"><code>balancing_credit</code></a>\nto transfer the Destination Account‚Äôs net credit balance or net debit\nbalance, respectively, to the Control Account. This transfer will fail\nif the first transfer would put the Destination Account‚Äôs balance above\nthe upper bound.</p>\n<p>The third transfer is also a pending transfer, so it won‚Äôt actually\ntransfer the Destination Account‚Äôs funds, even if it succeeds.</p>\n<p>If everything to this point succeeds, the fourth and fifth transfers\nsimply undo the effects of the second and third transfers. The fourth\ntransfer voids the pending transfer. And the fifth transfer resets the\nControl Account‚Äôs net balance to zero.</p>\n"},{"path":"coding/recipes/correcting-transfers","html":"<h1 id=\"correcting-transfers\"><a href=\"#correcting-transfers\"\nclass=\"anchor\">Correcting Transfers</a></h1>\n<p><a href=\"../../../reference/transfer\"><code>Transfer</code>s</a> in\nTigerBeetle are immutable, so once they are created they cannot be\nmodified or deleted.</p>\n<p>Immutability is useful for creating an auditable log of all of the\nbusiness events, but it does raise the question of what to do when a\ntransfer was made in error or some detail such as the amount was\nincorrect.</p>\n<h2 id=\"always-add-more-transfers\"><a href=\"#always-add-more-transfers\"\nclass=\"anchor\">Always Add More Transfers</a></h2>\n<p>Correcting transfers or entries in TigerBeetle are handled with more\ntransfers to reverse or adjust the effects of the previous\ntransfer(s).</p>\n<p>This is important because adding transfers as opposed to deleting or\nmodifying incorrect ones adds more information to the history. The log\nof events includes the original error, when it took place, as well as\nany attempts to correct the record and when they took place. A\ncorrecting entry might even be wrong, in which case it itself can be\ncorrected with yet another transfer. All of these events form a timeline\nof the particular business event, which is stored permanently.</p>\n<p>Another way to put this is that TigerBeetle is the lowest layer of\nthe accounting stack and represents the finest-resolution data that is\nstored. At a higher-level reporting layer, you can ‚Äúdownsample‚Äù the data\nto show only the corrected transfer event. However, it would not be\npossible to go back if the original record were modified or deleted.</p>\n<p>Two specific recommendations for correcting transfers are:</p>\n<ol type=\"1\">\n<li>You may want to have a <a\nhref=\"../../../reference/transfer#code\"><code>Transfer.code</code></a>\nthat indicates a given transfer is a correction, or you may want\nmultiple codes where each one represents a different reason why the\ncorrection has taken place.</li>\n<li>If you use the <a\nhref=\"../../../reference/transfer#user_data_128\"><code>Transfer.user_data_128</code></a>\nto store an ID that links multiple transfers within TigerBeetle or\npoints to a <a href=\"../../system-architecture\">record in an external\ndatabase</a>, you may want to use the same <code>user_data_128</code>\nfield on the correction transfer(s), even if they happen at a later\npoint.</li>\n</ol>\n<h3 id=\"example\"><a href=\"#example\" class=\"anchor\">Example</a></h3>\n<p>Let‚Äôs say you had a couple of transfers, from account <code>A</code>\nto accounts <code>Y</code> and <code>Z</code>:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\"><code>code</code></th>\n<th style=\"text-align: right;\"><code>user_data_128</code></th>\n<th style=\"text-align: right;\"><code>flags.linked</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>X</code></td>\n<td style=\"text-align: right;\">10000</td>\n<td style=\"text-align: right;\">600</td>\n<td style=\"text-align: right;\">123456</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>Y</code></td>\n<td style=\"text-align: right;\">50</td>\n<td style=\"text-align: right;\">9000</td>\n<td style=\"text-align: right;\">123456</td>\n<td style=\"text-align: right;\">false</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Now, let‚Äôs say we realized the amount was wrong and we need to adjust\nboth of the amounts by 10%. We would submit two\n<strong>additional</strong> transfers going in the opposite\ndirection:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\"><code>code</code></th>\n<th style=\"text-align: right;\"><code>user_data_128</code></th>\n<th style=\"text-align: right;\"><code>flags.linked</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>X</code></td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\">1000</td>\n<td style=\"text-align: right;\">10000</td>\n<td style=\"text-align: right;\">123456</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>Y</code></td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\">5</td>\n<td style=\"text-align: right;\">10000</td>\n<td style=\"text-align: right;\">123456</td>\n<td style=\"text-align: right;\">false</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Note that the codes used here don‚Äôt have any actual meaning, but you\nwould want to <a href=\"../../data-modeling#code\">enumerate your business\nevents</a> and map each to a numeric code value, including the initial\nreasons for transfers and the reasons they might be corrected.</p>\n"},{"path":"coding/recipes/rate-limiting","html":"<h1 id=\"rate-limiting\"><a href=\"#rate-limiting\" class=\"anchor\">Rate\nLimiting</a></h1>\n<p>TigerBeetle can be used to account for non-financial resources.</p>\n<p>In this recipe, we will show you how to use it to implement rate\nlimiting using the <a\nhref=\"https://en.wikipedia.org/wiki/Leaky_bucket\">leaky bucket\nalgorithm</a> based on the user request rate, bandwidth, and money.</p>\n<h2 id=\"mechanism\"><a href=\"#mechanism\"\nclass=\"anchor\">Mechanism</a></h2>\n<p>For each type of resource we want to limit, we will have a ledger\nspecifically for that resource. On that ledger, we have an operator\naccount and an account for each user. Each user‚Äôs account will have a\nbalance limit applied.</p>\n<p>To set up the rate limiting system, we will first transfer the\nresource limit amount to each of the users. For each user request, we\nwill then create a <a\nhref=\"../../two-phase-transfers#reserve-funds-pending-transfer\">pending\ntransfer</a> with a <a\nhref=\"../../two-phase-transfers#expire-pending-transfer\">timeout</a>. We\nwill never post or void these transfers, but will instead let them\nexpire.</p>\n<p>Since each account‚Äôs ‚Äúbalance‚Äù is limited, we cannot create pending\ntransfers that would exceed the rate limit. However, when each pending\ntransfer expires, it automatically replenishes the user‚Äôs balance.</p>\n<h2 id=\"request-rate-limiting\"><a href=\"#request-rate-limiting\"\nclass=\"anchor\">Request Rate Limiting</a></h2>\n<p>Let‚Äôs say we want to limit each user to 10 requests per minute.</p>\n<p>We need our user account to have a limited balance.</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Ledger</th>\n<th>Account</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Request Rate</td>\n<td>Operator</td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td>Request Rate</td>\n<td>User</td>\n<td><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>We‚Äôll first transfer 10 units from the operator to the user.</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td style=\"text-align: right;\">Request Rate</td>\n<td style=\"text-align: right;\">Operator</td>\n<td style=\"text-align: right;\">User</td>\n<td style=\"text-align: right;\">10</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Then, for each incoming request, we will create a pending transfer\nfor 1 unit back to the operator from the user:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th>Timeout</th>\n<th style=\"text-align: right;\">Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2-N</td>\n<td style=\"text-align: right;\">Request Rate</td>\n<td style=\"text-align: right;\">User</td>\n<td style=\"text-align: right;\">Operator</td>\n<td style=\"text-align: right;\">1</td>\n<td>60</td>\n<td style=\"text-align: right;\"><a\nhref=\"../../../reference/transfer#flagspending\"><code>pending</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Note that we use a timeout of 60 (seconds), because we wanted to\nlimit each user to 10 requests <em>per minute</em>.</p>\n<p>That‚Äôs it! Each of these transfers will ‚Äúreserve‚Äù some of the user‚Äôs\nbalance and then replenish the balance after they expire.</p>\n<h2 id=\"bandwidth-limiting\"><a href=\"#bandwidth-limiting\"\nclass=\"anchor\">Bandwidth Limiting</a></h2>\n<p>To limit user requests based on bandwidth as opposed to request rate,\nwe can apply the same technique but use amounts that represent the\nrequest size.</p>\n<p>Let‚Äôs say we wanted to limit each user to 10 MB (10,000,000 bytes)\nper minute.</p>\n<p>Our account setup is the same as before:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Ledger</th>\n<th>Account</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Bandwidth</td>\n<td>Operator</td>\n<td>0</td>\n</tr>\n<tr>\n<td>Bandwidth</td>\n<td>User</td>\n<td><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Now, we‚Äôll transfer 10,000,000 units (bytes in this case) from the\noperator to the user:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td style=\"text-align: right;\">Bandwidth</td>\n<td style=\"text-align: right;\">Operator</td>\n<td style=\"text-align: right;\">User</td>\n<td style=\"text-align: right;\">10000000</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>For each incoming request, we‚Äôll create a pending transfer where the\namount is equal to the request size:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th>Timeout</th>\n<th style=\"text-align: right;\">Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2-N</td>\n<td style=\"text-align: right;\">Bandwidth</td>\n<td style=\"text-align: right;\">User</td>\n<td style=\"text-align: right;\">Operator</td>\n<td style=\"text-align: right;\">Request Size</td>\n<td>60</td>\n<td style=\"text-align: right;\"><a\nhref=\"../../../reference/transfer#flagspending\"><code>pending</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>We‚Äôre again using a timeout of 60 seconds, but you could adjust this\nto be whatever time window you want to use to limit requests.</p>\n<h2 id=\"transfer-amount-limiting\"><a href=\"#transfer-amount-limiting\"\nclass=\"anchor\">Transfer Amount Limiting</a></h2>\n<p>Now, let‚Äôs say you wanted to limit each account to transferring no\nmore than a certain amount of money per time window. We can do that\nusing 2 ledgers and linked transfers.</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Ledger</th>\n<th>Account</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Rate Limiting</td>\n<td>Operator</td>\n<td>0</td>\n</tr>\n<tr>\n<td>Rate Limiting</td>\n<td>User</td>\n<td><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a></td>\n</tr>\n<tr>\n<td>USD</td>\n<td>Operator</td>\n<td>0</td>\n</tr>\n<tr>\n<td>USD</td>\n<td>User</td>\n<td><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Let‚Äôs say we wanted to limit each account to sending no more than\n1000 USD per day.</p>\n<p>To set up, we transfer 1000 from the Operator to the User on the Rate\nLimiting ledger:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td style=\"text-align: right;\">Rate Limiting</td>\n<td style=\"text-align: right;\">Operator</td>\n<td style=\"text-align: right;\">User</td>\n<td style=\"text-align: right;\">1000</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>For each transfer the user wants to do, we will create 2 transfers\nthat are <a\nhref=\"../../../reference/requests/#linked-events\">linked</a>:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th>Timeout</th>\n<th style=\"text-align: right;\">Flags (Note <code>|</code> sets multiple\nflags)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2N</td>\n<td style=\"text-align: right;\">Rate Limiting</td>\n<td style=\"text-align: right;\">User</td>\n<td style=\"text-align: right;\">Operator</td>\n<td style=\"text-align: right;\">Transfer Amount</td>\n<td>86400</td>\n<td style=\"text-align: right;\"><a\nhref=\"../../../reference/transfer#flagspending\"><code>pending</code></a>\n| <a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a></td>\n</tr>\n<tr>\n<td>2N + 1</td>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\">User</td>\n<td style=\"text-align: right;\">Destination</td>\n<td style=\"text-align: right;\">Transfer Amount</td>\n<td>0</td>\n<td style=\"text-align: right;\">0</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Note that we are using a timeout of 86400 seconds, because this is\nthe number of seconds in a day.</p>\n<p>These are linked such that if the first transfer fails, because the\nuser has already transferred too much money in the past day, the second\ntransfer will also fail.</p>\n"},{"path":"coding/recipes/balance-invariant-transfers","html":"<h1 id=\"balance-invariant-transfers\"><a\nhref=\"#balance-invariant-transfers\" class=\"anchor\">Balance-invariant\nTransfers</a></h1>\n<p>For some accounts, it may be useful to enforce <a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>\nor <a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>\nbalance invariants for only a subset of all transfers, rather than all\ntransfers.</p>\n<h2 id=\"per-transfer-credits_must_not_exceed_debits\"><a\nhref=\"#per-transfer-credits_must_not_exceed_debits\"\nclass=\"anchor\">Per-transfer\n<code>credits_must_not_exceed_debits</code></a></h2>\n<p>This recipe requires three accounts:</p>\n<ol type=\"1\">\n<li>The <strong>source</strong> account, to debit.</li>\n<li>The <strong>destination</strong> account, to credit. (With\n<em>neither</em> <a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>\nnor <a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>\nset, since in this recipe we are only enforcing the invariant on a\nper-transfer basis.</li>\n<li>The <strong>control</strong> account, to test the balance invariant.\nThe control account should have <a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>\nset.</li>\n</ol>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Id</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\">Pending Id</th>\n<th style=\"text-align: right;\">Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">1</td>\n<td style=\"text-align: right;\">Source</td>\n<td style=\"text-align: right;\">Destination</td>\n<td style=\"text-align: right;\">123</td>\n<td style=\"text-align: right;\">-</td>\n<td style=\"text-align: right;\"><a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">2</td>\n<td style=\"text-align: right;\">Destination</td>\n<td style=\"text-align: right;\">Control</td>\n<td style=\"text-align: right;\">1</td>\n<td style=\"text-align: right;\">-</td>\n<td style=\"text-align: right;\"><a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a>,\n<a\nhref=\"../../../reference/transfer#flagspending\"><code>pending</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsbalancing_debit\"><code>balancing_debit</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">3</td>\n<td style=\"text-align: right;\">-</td>\n<td style=\"text-align: right;\">-</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">2</td>\n<td style=\"text-align: right;\"><a\nhref=\"../../../reference/transfer#flagsvoid_pending_transfer\"><code>void_pending_transfer</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>When the destination account‚Äôs final credits do not exceed its\ndebits, the chain will succeed. When the destination account‚Äôs final\ncredits exceeds its debits, transfer <code>2</code> will fail with\n<code>exceeds_debits</code>.</p>\n"},{"path":"operating/deploy","html":"<h1 id=\"deploying-for-production\"><a href=\"#deploying-for-production\"\nclass=\"anchor\">Deploying for Production</a></h1>\n<p>A TigerBeetle <strong>cluster</strong> is a set of machines each\nrunning the TigerBeetle server for strict serializability, high\navailability and durability. The TigerBeetle server is a single\nbinary.</p>\n<p>Each server operates on a single local data file.</p>\n<p>The TigerBeetle server binary plus its single data file is called a\n<strong>replica</strong>.</p>\n<p>A cluster guarantees strict serializability, the highest level of\nconsistency, by automatically electing a primary replica to order and\nbackup transactions across replicas in the cluster.</p>\n<h2 id=\"fault-tolerance\"><a href=\"#fault-tolerance\" class=\"anchor\">Fault\nTolerance</a></h2>\n<p><strong>The optimal, recommended size for any production cluster is 6\nreplicas.</strong></p>\n<p>Given a cluster of 6 replicas:</p>\n<ul>\n<li>4/6 replicas are required to elect a new primary if the old primary\nfails.</li>\n<li>A cluster remains highly available (able to process transactions),\npreserving strict serializability, provided that at least 3/6 machines\nhave not failed (provided that the primary has not also failed) or\nprovided that at least 4/6 machines have not failed (if the primary also\nfailed and a new primary needs to be elected).</li>\n<li>A cluster preserves durability (surviving, detecting, and repairing\ncorruption of any data file) provided that the cluster remains\navailable. If machines go offline temporarily and the cluster becomes\navailable again later, the cluster will be able to repair data file\ncorruption once availability is restored.</li>\n<li>A cluster will correctly remain unavailable if too many machine\nfailures have occurred to preserve data. In other words, TigerBeetle is\ndesigned to operate correctly or else to shut down safely if safe\noperation with respect to strict serializability is no longer possible\ndue to permanent data loss.</li>\n</ul>\n<h3 id=\"geographic-fault-tolerance\"><a\nhref=\"#geographic-fault-tolerance\" class=\"anchor\">Geographic Fault\nTolerance</a></h3>\n<p>All 6 replicas may be within the same data center (zero geographic\nfault tolerance), or spread across 2 or more data centers, availability\nzones or regions (‚Äúsites‚Äù) for geographic fault tolerance.</p>\n<p><strong>For mission critical availability, the optimal number of\nsites is 3</strong>, since each site would then contain 2 replicas so\nthat the loss of an entire site would not impair the availability of the\ncluster.</p>\n<p>Sites should preferably be within a few milliseconds of each other,\nsince each transaction must be replicated across sites before being\ncommitted.</p>\n<h3 id=\"hardware-fault-tolerance\"><a href=\"#hardware-fault-tolerance\"\nclass=\"anchor\">Hardware Fault Tolerance</a></h3>\n<p>It is important to ensure independent fault domains for each\nreplica‚Äôs data file, that each replica‚Äôs data file is stored on a\nseparate disk (required), machine (required), rack (recommended), data\ncenter (recommended) etc.</p>\n"},{"path":"operating/hardware","html":"<h1 id=\"hardware\"><a href=\"#hardware\" class=\"anchor\">Hardware</a></h1>\n<p>TigerBeetle is designed to operate and provide more than adequate\nperformance even on commodity hardware.</p>\n<h2 id=\"storage\"><a href=\"#storage\" class=\"anchor\">Storage</a></h2>\n<p>Local NVMe drives are highly recommended for production deployments,\nand there‚Äôs no requirement for RAID.</p>\n<p>In cloud or more complex deployments, remote block storage (eg, EBS,\nNVMe-oF) may be used but will be slower and care must be taken to ensure\n<a href=\"../deploy#hardware-fault-tolerance\">independent fault\ndomains</a> across replicas.</p>\n<p>Currently, TigerBeetle uses around 16TiB for 40 billion transfers. If\nyou wish to use more capacity than a single disk, RAID 10 / RAID 0 is\nrecommended over parity RAID levels.</p>\n<p>The data file is created before the server is initially run and grows\nautomatically. TigerBeetle has been more extensively tested on ext4, but\next4 only supports data files up to 16TiB. XFS is supported, but has\nseen less testing. TigerBeetle can also be run against the raw block\ndevice.</p>\n<h2 id=\"memory\"><a href=\"#memory\" class=\"anchor\">Memory</a></h2>\n<p>ECC memory is required for production deployments.</p>\n<p>A replica requires at least 6 GiB RAM per machine. Between 16 GiB and\n32 GiB or more (depending on budget) is recommended to be allocated to\neach replica for caching. TigerBeetle uses static allocation and will\nuse exactly how much memory is explicitly allocated to it for caching\nvia command line argument.</p>\n<h2 id=\"cpu\"><a href=\"#cpu\" class=\"anchor\">CPU</a></h2>\n<p>TigerBeetle requires only a single core per replica machine.\nTigerBeetle at present <a\nhref=\"../../about/performance#single-core-by-design\">does not utilize\nmore cores</a>, but may in future.</p>\n<p>It‚Äôs recommended to have at least one additional core free for the\noperating system.</p>\n<h2 id=\"network\"><a href=\"#network\" class=\"anchor\">Network</a></h2>\n<p>A minimum of a 1Gbps network connection is recommended.</p>\n<h2 id=\"multitenancy\"><a href=\"#multitenancy\"\nclass=\"anchor\">Multitenancy</a></h2>\n<p>There are no restrictions on sharing a server with other tenant\nprocesses.</p>\n"},{"path":"operating/linux","html":"<h1 id=\"deploying-on-linux\"><a href=\"#deploying-on-linux\"\nclass=\"anchor\">Deploying on Linux</a></h1>\n<h2 id=\"systemd\"><a href=\"#systemd\" class=\"anchor\">systemd</a></h2>\n<p>The following includes an example systemd unit for running\nTigerBeetle with Linux systems that use systemd. The unit is configured\nto start a single-node cluster, so you may need to adjust it for other\ncluster configurations.</p>\n<p>See the <a href=\"../../quick-start\">Quick Start</a> for an example of\nhow to run a single- vs multi-node cluster.</p>\n<h4 id=\"tigerbeetleservice\"><a href=\"#tigerbeetleservice\"\nclass=\"anchor\"><strong>tigerbeetle.service</strong></a></h4>\n<pre><code>[Unit]\nDescription=TigerBeetle Replica\nDocumentation=https://docs.tigerbeetle.com/\nAfter=network-online.target\nWants=network-online.target systemd-networkd-wait-online.service\n\n[Service]\nAmbientCapabilities=CAP_IPC_LOCK\n\nEnvironment=TIGERBEETLE_CACHE_GRID_SIZE=1GiB\nEnvironment=TIGERBEETLE_ADDRESSES=3001\nEnvironment=TIGERBEETLE_REPLICA_COUNT=1\nEnvironment=TIGERBEETLE_REPLICA_INDEX=0\nEnvironment=TIGERBEETLE_CLUSTER_ID=0\nEnvironment=TIGERBEETLE_DATA_FILE=%S/tigerbeetle/0_0.tigerbeetle\n\nDevicePolicy=closed\nDynamicUser=true\nLockPersonality=true\nProtectClock=true\nProtectControlGroups=true\nProtectHome=true\nProtectHostname=true\nProtectKernelLogs=true\nProtectKernelModules=true\nProtectKernelTunables=true\nProtectProc=noaccess\nProtectSystem=strict\nRestrictAddressFamilies=AF_INET AF_INET6\nRestrictNamespaces=true\nRestrictRealtime=true\nRestrictSUIDSGID=true\n\nStateDirectory=tigerbeetle\nStateDirectoryMode=700\n\nType=exec\nExecStart=/usr/local/bin/tigerbeetle start --cache-grid=${TIGERBEETLE_CACHE_GRID_SIZE} --addresses=${TIGERBEETLE_ADDRESSES} ${TIGERBEETLE_DATA_FILE}\n\n[Install]\nWantedBy=multi-user.target</code></pre>\n<h2 id=\"adjusting\"><a href=\"#adjusting\"\nclass=\"anchor\">Adjusting</a></h2>\n<p>You can adjust multiple aspects of this systemd service. Each\nspecific adjustment is listed below with instructions.</p>\n<p>It is not recommended to adjust some values directly in the service\nfile. When this is the case, the instructions will ask you to instead\nuse systemd‚Äôs drop-in file support. Here‚Äôs how to do that:</p>\n<ol type=\"1\">\n<li>Install the service unit in systemd (usually by adding it to\n<code>/etc/systemd/system</code>).</li>\n<li>Create a drop-in file to override the environment variables. Run\n<code>systemctl edit tigerbeetle.service</code>. This will bring you to\nan editor with instructions.</li>\n<li>Add your overrides. Example:\n<pre><code>[Service]\nEnvironment=TIGERBEETLE_CACHE_GRID_SIZE=4GiB\nEnvironment=TIGERBEETLE_ADDRESSES=0.0.0.0:3001</code></pre></li>\n</ol>\n<h3 id=\"pre-start-script\"><a href=\"#pre-start-script\"\nclass=\"anchor\">Pre-start script</a></h3>\n<p>You can place the following script in <code>/usr/local/bin</code>.\nThis script is responsible for ensuring that a replica data file exists.\nIt will create a data file if it doesn‚Äôt exist.</p>\n<h4 id=\"tigerbeetle-pre-startsh\"><a href=\"#tigerbeetle-pre-startsh\"\nclass=\"anchor\"><strong>tigerbeetle-pre-start.sh</strong></a></h4>\n<div class=\"sourceCode\" id=\"cb3\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#!/bin/sh</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">set</span> <span class=\"at\">-eu</span></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> <span class=\"ot\">! </span><span class=\"bu\">test</span> <span class=\"at\">-e</span> <span class=\"st\">&quot;</span><span class=\"va\">${TIGERBEETLE_DATA_FILE}</span><span class=\"st\">&quot;</span><span class=\"kw\">;</span> <span class=\"cf\">then</span></span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"ex\">/usr/local/bin/tigerbeetle</span> format <span class=\"at\">--cluster</span><span class=\"op\">=</span><span class=\"st\">&quot;</span><span class=\"va\">${TIGERBEETLE_CLUSTER_ID}</span><span class=\"st\">&quot;</span> <span class=\"at\">--replica</span><span class=\"op\">=</span><span class=\"st\">&quot;</span><span class=\"va\">${TIGERBEETLE_REPLICA_INDEX}</span><span class=\"st\">&quot;</span> <span class=\"at\">--replica-count</span><span class=\"op\">=</span><span class=\"st\">&quot;</span><span class=\"va\">${TIGERBEETLE_REPLICA_COUNT}</span><span class=\"st\">&quot;</span> <span class=\"st\">&quot;</span><span class=\"va\">${TIGERBEETLE_DATA_FILE}</span><span class=\"st\">&quot;</span></span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">fi</span></span></code></pre></div>\n<p>The script assumes that <code>/bin/sh</code> exists and points to a\nPOSIX-compliant shell, and the <code>test</code> utility is either\nbuilt-in or in the script‚Äôs search path. If this is not the case, adjust\nthe script‚Äôs shebang.</p>\n<p>Add the following line to <code>tigerbeetle.service</code> before\n<code>ExecStart</code>.</p>\n<pre><code>ExecStartPre=/usr/local/bin/tigerbeetle-pre-start.sh</code></pre>\n<p>The service then executes the <code>tigerbeetle-pre-start.sh</code>\nscript before starting TigerBeetle.</p>\n<h3 id=\"tigerbeetle-executable\"><a href=\"#tigerbeetle-executable\"\nclass=\"anchor\">TigerBeetle executable</a></h3>\n<p>The <code>tigerbeetle</code> executable is assumed to be installed in\n<code>/usr/local/bin</code>. If this is not the case, adjust both\n<code>tigerbeetle.service</code> and\n<code>tigerbeetle-pre-start.sh</code> to use the correct location.</p>\n<h3 id=\"environment-variables\"><a href=\"#environment-variables\"\nclass=\"anchor\">Environment variables</a></h3>\n<p>This service uses environment variables to provide default values for\na simple single-node cluster. To configure a different cluster\nstructure, or a cluster with different values, adjust the values in the\nenvironment variables. It is <strong>not recommended</strong> to change\nthese default values directly in the service file, because it may be\nimportant to revert to the default behavior later. Instead, use\nsystemd‚Äôs drop-in file support.</p>\n<h3 id=\"state-directory-and-replica-data-file-path\"><a\nhref=\"#state-directory-and-replica-data-file-path\" class=\"anchor\">State\ndirectory and replica data file path</a></h3>\n<p>This service configures a state directory, which means that systemd\nwill make sure the directory is created before the service starts, and\nthe directory will have the correct permissions. This is especially\nimportant because the service uses systemd‚Äôs dynamic user capabilities.\nsystemd forces the state directory to be in <code>/var/lib</code>, which\nmeans that this service will have its replica data file at\n<code>/var/lib/tigerbeetle/</code>. It is <strong>not\nrecommended</strong> to adjust the state directory directly in the\nservice file, because it may be important to revert to the default\nbehavior later. Instead, use systemd‚Äôs drop-in file support. If you do\nso, remember to also adjust the <code>TIGERBEETLE_DATA_FILE</code>\nenvironment variable, because it also hardcodes the\n<code>tigerbeetle</code> state directory value.</p>\n<p>Due to systemd‚Äôs dynamic user capabilities, the replica data file\npath will not be owned by any existing user of the system.</p>\n<h3 id=\"hardening-configurations\"><a href=\"#hardening-configurations\"\nclass=\"anchor\">Hardening configurations</a></h3>\n<p>Some hardening configurations are enabled for added security when\nrunning the service. It is <strong>not recommended</strong> to change\nthese, since they have additional implications on all other\nconfigurations and values defined in this service file. If you wish to\nchange those, you are expected to understand those implications and make\nany other adjustments accordingly.</p>\n<h3 id=\"development-mode\"><a href=\"#development-mode\"\nclass=\"anchor\">Development mode</a></h3>\n<p>The service was created assuming it‚Äôll be used in a production\nscenario.</p>\n<p>In case you want to use this service for development as well, you may\nneed to adjust the <code>ExecStart</code> line to include the\n<code>--development</code> flag if your development environment doesn‚Äôt\nsupport Direct IO, or if you require smaller cache sizes and/or batch\nsizes due to memory constraints.</p>\n<h3 id=\"memory-locking\"><a href=\"#memory-locking\" class=\"anchor\">Memory\nLocking</a></h3>\n<p>TigerBeetle requires <code>RLIMIT_MEMLOCK</code> to be set high\nenough to:</p>\n<ol type=\"1\">\n<li>initialize io_uring, which requires memory shared with the kernel to\nbe locked, as well as</li>\n<li>lock all allocated memory, and so prevent the kernel from swapping\nany pages to disk, which would not only affect performance but also\nbypass TigerBeetle‚Äôs storage fault-tolerance.</li>\n</ol>\n<p>If the required memory cannot be locked, then the environment should\nbe modified either by (in order of preference):</p>\n<ol type=\"1\">\n<li>giving the local <code>tigerbeetle</code> binary the\n<code>CAP_IPC_LOCK</code> capability\n(<code>sudo setcap \"cap_ipc_lock=+ep\" ./tigerbeetle</code>), or</li>\n<li>raising the global <code>memlock</code> value under\n<code>/etc/security/limits.conf</code>, or else</li>\n<li>disabling swap (io_uring may still require an RLIMIT increase).</li>\n</ol>\n<p>Memory locking is disabled for development environments when using\nthe <code>--development</code> flag.</p>\n<p>For Linux running under Docker, refer to <a\nhref=\"../docker#allowing-memlock\">Allowing MEMLOCK</a>.</p>\n"},{"path":"operating/docker","html":"<h1 id=\"docker\"><a href=\"#docker\" class=\"anchor\">Docker</a></h1>\n<p>TigerBeetle can be run using Docker. However, it is not\nrecommended.</p>\n<p>TigerBeetle is distributed as a single, small, statically-linked\nbinary. It should be easy to run directly on the target machine. Using\nDocker as an abstraction adds complexity while providing relatively\nlittle in this case.</p>\n<h2 id=\"image\"><a href=\"#image\" class=\"anchor\">Image</a></h2>\n<p>The Docker image is available from the Github Container Registry:</p>\n<p><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/pkgs/container/tigerbeetle\">https://github.com/tigerbeetle/tigerbeetle/pkgs/container/tigerbeetle</a></p>\n<h2 id=\"format-the-data-file\"><a href=\"#format-the-data-file\"\nclass=\"anchor\">Format the Data File</a></h2>\n<p>When using Docker, the data file must be mounted as a volume:</p>\n<pre class=\"shell\"><code>docker run --security-opt seccomp=unconfined \\\n     -v $(pwd)/data:/data ghcr.io/tigerbeetle/tigerbeetle \\\n    format --cluster=0 --replica=0 --replica-count=1 /data/0_0.tigerbeetle</code></pre>\n<pre class=\"console\"><code>info(io): creating &quot;0_0.tigerbeetle&quot;...\ninfo(io): allocating 660.140625MiB...</code></pre>\n<h2 id=\"run-the-server\"><a href=\"#run-the-server\" class=\"anchor\">Run the\nServer</a></h2>\n<pre class=\"console\"><code>docker run -it --security-opt seccomp=unconfined \\\n    -p 3000:3000 -v $(pwd)/data:/data ghcr.io/tigerbeetle/tigerbeetle \\\n    start --addresses=0.0.0.0:3000 /data/0_0.tigerbeetle</code></pre>\n<pre class=\"console\"><code>info(io): opening &quot;0_0.tigerbeetle&quot;...\ninfo(main): 0: cluster=0: listening on 0.0.0.0:3000</code></pre>\n<h2 id=\"run-a-multi-node-cluster-using-docker-compose\"><a\nhref=\"#run-a-multi-node-cluster-using-docker-compose\" class=\"anchor\">Run\na Multi-Node Cluster Using Docker Compose</a></h2>\n<p>Format the data file for each replica:</p>\n<pre class=\"console\"><code>docker run --security-opt seccomp=unconfined -v $(pwd)/data:/data ghcr.io/tigerbeetle/tigerbeetle format --cluster=0 --replica=0 --replica-count=3 /data/0_0.tigerbeetle\ndocker run --security-opt seccomp=unconfined -v $(pwd)/data:/data ghcr.io/tigerbeetle/tigerbeetle format --cluster=0 --replica=1 --replica-count=3 /data/0_1.tigerbeetle\ndocker run --security-opt seccomp=unconfined -v $(pwd)/data:/data ghcr.io/tigerbeetle/tigerbeetle format --cluster=0 --replica=2 --replica-count=3 /data/0_2.tigerbeetle</code></pre>\n<p>Note that the data file stores which replica in the cluster the file\nbelongs to.</p>\n<p>Then, create a docker-compose.yml file:</p>\n<pre class=\"docker-compose\"><code>version: &quot;3.7&quot;\n\n##\n# Note: this example might only work with linux + using `network_mode:host` because of 2 reasons:\n#\n# 1. When specifying an internal docker network, other containers are only available using dns based routing:\n#    e.g. from tigerbeetle_0, the other replicas are available at `tigerbeetle_1:3002` and\n#    `tigerbeetle_2:3003` respectively.\n#\n# 2. Tigerbeetle performs some validation of the ip address provided in the `--addresses` parameter\n#    and won&#39;t let us specify a custom domain name.\n#\n# The workaround for now is to use `network_mode:host` in the containers instead of specifying our\n# own internal docker network\n##\n\nservices:\n  tigerbeetle_0:\n    image: ghcr.io/tigerbeetle/tigerbeetle\n    command: &quot;start --addresses=0.0.0.0:3001,0.0.0.0:3002,0.0.0.0:3003 /data/0_0.tigerbeetle&quot;\n    network_mode: host\n    volumes:\n      - ./data:/data\n    security_opt:\n      - &quot;seccomp=unconfined&quot;\n\n  tigerbeetle_1:\n    image: ghcr.io/tigerbeetle/tigerbeetle\n    command: &quot;start --addresses=0.0.0.0:3001,0.0.0.0:3002,0.0.0.0:3003 /data/0_1.tigerbeetle&quot;\n    network_mode: host\n    volumes:\n      - ./data:/data\n    security_opt:\n      - &quot;seccomp=unconfined&quot;\n\n  tigerbeetle_2:\n    image: ghcr.io/tigerbeetle/tigerbeetle\n    command: &quot;start --addresses=0.0.0.0:3001,0.0.0.0:3002,0.0.0.0:3003 /data/0_2.tigerbeetle&quot;\n    network_mode: host\n    volumes:\n      - ./data:/data\n    security_opt:\n      - &quot;seccomp=unconfined&quot;</code></pre>\n<p>And run it:</p>\n<pre class=\"console\"><code>docker-compose up</code></pre>\n<pre class=\"console\"><code>docker-compose up\nStarting tigerbeetle_0   ... done\nStarting tigerbeetle_2   ... done\nRecreating tigerbeetle_1 ... done\nAttaching to tigerbeetle_0, tigerbeetle_2, tigerbeetle_1\ntigerbeetle_1    | info(io): opening &quot;0_1.tigerbeetle&quot;...\ntigerbeetle_2    | info(io): opening &quot;0_2.tigerbeetle&quot;...\ntigerbeetle_0    | info(io): opening &quot;0_0.tigerbeetle&quot;...\ntigerbeetle_0    | info(main): 0: cluster=0: listening on 0.0.0.0:3001\ntigerbeetle_2    | info(main): 2: cluster=0: listening on 0.0.0.0:3003\ntigerbeetle_1    | info(main): 1: cluster=0: listening on 0.0.0.0:3002\ntigerbeetle_0    | info(message_bus): connected to replica 1\ntigerbeetle_0    | info(message_bus): connected to replica 2\ntigerbeetle_1    | info(message_bus): connected to replica 2\ntigerbeetle_1    | info(message_bus): connection from replica 0\ntigerbeetle_2    | info(message_bus): connection from replica 0\ntigerbeetle_2    | info(message_bus): connection from replica 1\ntigerbeetle_0    | info(clock): 0: system time is 83ns ahead\ntigerbeetle_2    | info(clock): 2: system time is 83ns ahead\ntigerbeetle_1    | info(clock): 1: system time is 78ns ahead\n\n... and so on ...</code></pre>\n<h2 id=\"troubleshooting\"><a href=\"#troubleshooting\"\nclass=\"anchor\">Troubleshooting</a></h2>\n<h3 id=\"error-permissiondenied\"><a href=\"#error-permissiondenied\"\nclass=\"anchor\"><code>error: PermissionDenied</code></a></h3>\n<p>If you see this error at startup, it is likely because you are\nrunning Docker 25.0.0 or newer, which blocks io_uring by default. Set\n<code>--security-opt seccomp=unconfined</code> to fix it.</p>\n<h3 id=\"exited-with-code-137\"><a href=\"#exited-with-code-137\"\nclass=\"anchor\"><code>exited with code 137</code></a></h3>\n<p>If you see this error without any logs from TigerBeetle, it is likely\nthat the Linux OOMKiller is killing the process. If you are running\nDocker inside a virtual machine (such as is required on Docker or Podman\nfor macOS), try increasing the virtual machine memory limit.</p>\n<p>Alternatively, in a development environment, you can lower the size\nof the cache so TigerBeetle uses less memory. For example, set\n<code>--cache-grid=256MiB</code> when running\n<code>tigerbeetle start</code>.</p>\n<h3 id=\"debugging-panics\"><a href=\"#debugging-panics\"\nclass=\"anchor\">Debugging panics</a></h3>\n<p>If TigerBeetle panics and you can reproduce the panic, you can get a\nbetter stack trace by switching to a debug image (by using the\n<code>:debug</code> Docker image tag).</p>\n<pre class=\"console\"><code>docker run -p 3000:3000 -v $(pwd)/data:/data ghcr.io/tigerbeetle/tigerbeetle:debug \\\n    start --addresses=0.0.0.0:3000 /data/0_0.tigerbeetle</code></pre>\n<h3 id=\"on-macos\"><a href=\"#on-macos\" class=\"anchor\">On MacOS</a></h3>\n<h4 id=\"error-systemresources\"><a href=\"#error-systemresources\"\nclass=\"anchor\"><code>error: SystemResources</code></a></h4>\n<p>If you get <code>error: SystemResources</code> when running\nTigerBeetle in Docker on macOS, the container may be blocking\nTigerBeetle from locking memory, which is necessary both for io_uring\nand to prevent the kernel‚Äôs use of swap from bypassing TigerBeetle‚Äôs\nstorage fault tolerance.</p>\n<h4 id=\"allowing-memlock\"><a href=\"#allowing-memlock\"\nclass=\"anchor\">Allowing MEMLOCK</a></h4>\n<p>To raise the memory lock limits under Docker, execute one of the\nfollowing:</p>\n<ol type=\"1\">\n<li>Run <code>docker run</code> with\n<code>--cap-add IPC_LOCK</code></li>\n<li>Run <code>docker run</code> with\n<code>--ulimit memlock=-1:-1</code></li>\n<li>Or modify the defaults in <code>$HOME/.docker/daemon.json</code> and\nrestart the Docker for Mac application:</li>\n</ol>\n<div class=\"sourceCode\" id=\"cb10\"><pre\nclass=\"sourceCode json\"><code class=\"sourceCode json\"><span id=\"cb10-1\"><a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">{</span></span>\n<span id=\"cb10-2\"><a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"er\">...</span> <span class=\"er\">other</span> <span class=\"er\">settings</span> <span class=\"er\">...</span></span>\n<span id=\"cb10-3\"><a href=\"#cb10-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;default-ulimits&quot;</span><span class=\"fu\">:</span> <span class=\"fu\">{</span></span>\n<span id=\"cb10-4\"><a href=\"#cb10-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;memlock&quot;</span><span class=\"fu\">:</span> <span class=\"fu\">{</span></span>\n<span id=\"cb10-5\"><a href=\"#cb10-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"dt\">&quot;Hard&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">-1</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-6\"><a href=\"#cb10-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"dt\">&quot;Name&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;memlock&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-7\"><a href=\"#cb10-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"dt\">&quot;Soft&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">-1</span></span>\n<span id=\"cb10-8\"><a href=\"#cb10-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"fu\">}</span></span>\n<span id=\"cb10-9\"><a href=\"#cb10-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"fu\">},</span></span>\n<span id=\"cb10-10\"><a href=\"#cb10-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"er\">...</span> <span class=\"er\">other</span> <span class=\"er\">settings</span> <span class=\"er\">...</span></span>\n<span id=\"cb10-11\"><a href=\"#cb10-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">}</span></span></code></pre></div>\n<p>If you are running TigerBeetle with Docker Compose, you will need to\nadd the <code>IPC_LOCK</code> capability like this:</p>\n<div class=\"sourceCode\" id=\"cb11\"><pre\nclass=\"sourceCode yaml\"><code class=\"sourceCode yaml\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">... rest of docker-compose.yml ...</span></span>\n<span id=\"cb11-2\"><a href=\"#cb11-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb11-3\"><a href=\"#cb11-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">services</span><span class=\"kw\">:</span></span>\n<span id=\"cb11-4\"><a href=\"#cb11-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">  </span><span class=\"fu\">tigerbeetle_0</span><span class=\"kw\">:</span></span>\n<span id=\"cb11-5\"><a href=\"#cb11-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">image</span><span class=\"kw\">:</span><span class=\"at\"> ghcr.io/tigerbeetle/tigerbeetle</span></span>\n<span id=\"cb11-6\"><a href=\"#cb11-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">command</span><span class=\"kw\">:</span><span class=\"at\"> </span><span class=\"st\">&quot;start --addresses=0.0.0.0:3001,0.0.0.0:3002,0.0.0.0:3003 /data/0_0.tigerbeetle&quot;</span></span>\n<span id=\"cb11-7\"><a href=\"#cb11-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">network_mode</span><span class=\"kw\">:</span><span class=\"at\"> host</span></span>\n<span id=\"cb11-8\"><a href=\"#cb11-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">cap_add</span><span class=\"kw\">:</span><span class=\"co\">       # HERE</span></span>\n<span id=\"cb11-9\"><a href=\"#cb11-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">      </span><span class=\"kw\">-</span><span class=\"at\"> IPC_LOCK</span><span class=\"co\">   # HERE</span></span>\n<span id=\"cb11-10\"><a href=\"#cb11-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">volumes</span><span class=\"kw\">:</span></span>\n<span id=\"cb11-11\"><a href=\"#cb11-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">      </span><span class=\"kw\">-</span><span class=\"at\"> ./data:/data</span></span>\n<span id=\"cb11-12\"><a href=\"#cb11-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb11-13\"><a href=\"#cb11-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">... rest of docker-compose.yml ...</span></span></code></pre></div>\n<p>See <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/issues/92\">https://github.com/tigerbeetle/tigerbeetle/issues/92</a>\nfor discussion.</p>\n"},{"path":"operating/managed-service","html":"<h1 id=\"managed-service\"><a href=\"#managed-service\"\nclass=\"anchor\">Managed Service</a></h1>\n<p>Want to use TigerBeetle in production, along with automated disaster\nrecovery, monitoring, and dedicated support from the TigerBeetle\nteam?</p>\n<p>Let us help you get up and running faster! Contact our CEO, Joran\nDirk Greef, at <a\nhref=\"mailto:joran@tigerbeetle.com\">joran@tigerbeetle.com</a> to set up\na call.</p>\n"},{"path":"operating/upgrading","html":"<h1 id=\"upgrading\"><a href=\"#upgrading\"\nclass=\"anchor\">Upgrading</a></h1>\n<p>TigerBeetle guarantees storage stability and provides forward\nupgradeability. In other words, data files created by a particular past\nversion of TigerBeetle can be migrated to any future version of\nTigerBeetle.</p>\n<p>Migration is automatic and the upgrade process is usually as simple\nas:</p>\n<ul>\n<li>Upgrade the replicas, by replacing the <code>./tigerbeetle</code>\nbinary with a newer version on each replica (they will restart\nautomatically when needed).</li>\n<li>Upgrade the clients, by updating the corresponding client libraries,\nrecompiling and redeploying as usual.</li>\n</ul>\n<p>There‚Äôs no need to stop the cluster for upgrades, and the client\nupgrades can be rolled out gradually as any change to the client code\nmight.</p>\n<p>NOTE: if you are upgrading from 0.15.3 (the first stable version),\nthe upgrade procedure is more involved, see the <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/releases/tag/0.15.4\">release\nnotes for 0.15.4</a>.</p>\n<h2 id=\"planning-for-upgrades\"><a href=\"#planning-for-upgrades\"\nclass=\"anchor\">Planning for upgrades</a></h2>\n<p>When upgrading TigerBeetle, each release specifies two important\nversions:</p>\n<ul>\n<li>the oldest release that can be upgraded from and,</li>\n<li>the oldest supported client version.</li>\n</ul>\n<p>It‚Äôs critical to make sure that the release you intend to upgrade\nfrom is supported by the release you‚Äôre upgrading to. This is a hard\nrequirement, but also a hard guarantee: if you wish to upgrade to\n<code>0.15.20</code> which says it supports down to <code>0.15.5</code>,\n<code>0.15.5</code> <em>will</em> work and <code>0.15.4</code> <em>will\nnot</em>. You will have to perform multiple upgrades in this case.</p>\n<p>The upgrade process involves first upgrading the replicas, followed\nby upgrading the clients. The client version <em>cannot</em> be newer\nthan the replica version, and will fail with an error message if so.\nProvided the supported version ranges overlap, coordinating the upgrade\nbetween clients and replicas is not required.</p>\n<p>Upgrading causes a short period of unavailability as the replicas\nrestart. This is on the order of 5 seconds, and will show up as a\nlatency spike on requests. The TigerBeetle clients will internally retry\nany requests during the period.</p>\n<p>Even though this period is short, scheduling a maintenance windows\nfor upgrades is still recommended, for an extra layer of safety.</p>\n<p>Any special instructions, like that when upgrading from 0.15.3 to\n0.15.4, will be explicitly mentioned in the <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/CHANGELOG.md\">changelog</a>\nand <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/releases\">release\nnotes</a>.</p>\n<p>Additionally, subscribe to <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/issues/2231\">this\ntracking issue</a> to be notified when there are breaking API/behavior\nchanges that are visible to the client.</p>\n<h2 id=\"upgrading-binary-based-installations\"><a\nhref=\"#upgrading-binary-based-installations\" class=\"anchor\">Upgrading\nbinary-based installations</a></h2>\n<p>If TigerBeetle is installed under <code>/usr/bin/tigerbeetle</code>,\nand you wish to upgrade to <code>0.15.4</code>:</p>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># SSH to each replica, in no particular order:</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">cd</span> /tmp</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">wget</span> https://github.com/tigerbeetle/tigerbeetle/releases/download/0.15.4/tigerbeetle-x86_64-linux.zip</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">unzip</span> tigerbeetle-x86_64-linux.zip</span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Put the binary on the same file system as the target, so mv is atomic.</span></span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">mv</span> tigerbeetle /usr/bin/tigerbeetle-new</span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">mv</span> /usr/bin/tigerbeetle /usr/bin/tigerbeetle-old</span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">mv</span> /usr/bin/tigerbeetle-new /usr/bin/tigerbeetle</span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Restart TigerBeetle. Only required when upgrading from 0.15.3.</span></span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Otherwise, it will detect new versions are available and coordinate the upgrade itself.</span></span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">systemctl</span> restart tigerbeetle <span class=\"co\"># or, however you are managing TigerBeetle.</span></span></code></pre></div>\n<h2 id=\"upgrading-docker-based-installations\"><a\nhref=\"#upgrading-docker-based-installations\" class=\"anchor\">Upgrading\nDocker-based installations</a></h2>\n<p>If you‚Äôre running TigerBeetle inside Kubernetes or Docker, update the\ntag that is pointed to to the release you wish to upgrade to. Before\nbeginning, it‚Äôs strongly recommend to have a rolling deploy strategy set\nup.</p>\n<p>For example:</p>\n<pre><code>image: ghcr.io/tigerbeetle/tigerbeetle:0.15.3</code></pre>\n<p>becomes</p>\n<pre><code>image: ghcr.io/tigerbeetle/tigerbeetle:0.15.4</code></pre>\n<p>Due to the way upgrades work internally, this will restart with the\nnew binary available, but still running the older version. TigerBeetle\nwill then coordinate the actual upgrade when all replicas are ready and\nhave the latest version available.</p>\n<h2 id=\"upgrading-clients\"><a href=\"#upgrading-clients\"\nclass=\"anchor\">Upgrading clients</a></h2>\n<p>Update your language‚Äôs specific package management, to reference the\nsame version of the TigerBeetle client:</p>\n<h3 id=\"net\"><a href=\"#net\" class=\"anchor\">.NET</a></h3>\n<pre><code>dotnet add package tigerbeetle --version 0.15.4</code></pre>\n<h3 id=\"go\"><a href=\"#go\" class=\"anchor\">Go</a></h3>\n<pre><code>go mod edit -require github.com/tigerbeetle/tigerbeetle-go@v0.15.4</code></pre>\n<h3 id=\"java\"><a href=\"#java\" class=\"anchor\">Java</a></h3>\n<p>Edit your <code>pom.xml</code>:</p>\n<pre><code>    &lt;dependency&gt;\n        &lt;groupId&gt;com.tigerbeetle&lt;/groupId&gt;\n        &lt;artifactId&gt;tigerbeetle-java&lt;/artifactId&gt;\n        &lt;version&gt;0.15.4&lt;/version&gt;\n    &lt;/dependency&gt;</code></pre>\n<h3 id=\"nodejs\"><a href=\"#nodejs\" class=\"anchor\">Node.js</a></h3>\n<pre><code>npm install --save-exact tigerbeetle-node@0.15.4</code></pre>\n<h3 id=\"python\"><a href=\"#python\" class=\"anchor\">Python</a></h3>\n<pre><code>pip install tigerbeetle==0.15.4</code></pre>\n<h2 id=\"troubleshooting\"><a href=\"#troubleshooting\"\nclass=\"anchor\">Troubleshooting</a></h2>\n<h3 id=\"upgrading-to-a-newer-version-with-incompatible-clients\"><a\nhref=\"#upgrading-to-a-newer-version-with-incompatible-clients\"\nclass=\"anchor\">Upgrading to a newer version with incompatible\nclients</a></h3>\n<p>If a release of TigerBeetle no longer supports the client version\nyou‚Äôre using, it‚Äôs still possible to upgrade, with two options:</p>\n<ul>\n<li>Upgrade the replicas to the latest version. In this case, the\nclients will stop working for the duration of the upgrade and\nunavailability will be extended.</li>\n<li>Upgrade the replicas to the latest release that supports the client\nversion in use, then upgrade the clients to that version. Repeat this\nuntil you‚Äôre on the latest release.</li>\n</ul>\n"},{"path":"clients/go","html":"<!-- This file is generated by [/src/scripts/client_readmes.zig](/src/scripts/client_readmes.zig). -->\n\n<h1 id=\"tigerbeetle-go\"><a href=\"#tigerbeetle-go\"\nclass=\"anchor\">tigerbeetle-go</a></h1>\n<p>The TigerBeetle client for Go.</p>\n<p><a\nhref=\"https://pkg.go.dev/github.com/tigerbeetle/tigerbeetle-go\"><img\nsrc=\"https://pkg.go.dev/badge/github.com/tigerbeetle/tigerbeetle-go.svg\"\nalt=\"Go Reference\" /></a></p>\n<p>Make sure to import\n<code>github.com/tigerbeetle/tigerbeetle-go</code>, not this repo and\nsubdirectory.</p>\n<h2 id=\"prerequisites\"><a href=\"#prerequisites\"\nclass=\"anchor\">Prerequisites</a></h2>\n<p>Linux &gt;= 5.6 is the only production environment we support. But\nfor ease of development we also support macOS and Windows.</p>\n<ul>\n<li>Go &gt;= 1.21</li>\n</ul>\n<p><strong>Additionally on Windows</strong>: you must install <a\nhref=\"https://ziglang.org/download/#release-0.13.0\">Zig 0.13.0</a> and\nset the <code>CC</code> environment variable to <code>zig.exe cc</code>.\nUse the full path for <code>zig.exe</code>.</p>\n<h2 id=\"setup\"><a href=\"#setup\" class=\"anchor\">Setup</a></h2>\n<p>First, create a directory for your project and <code>cd</code> into\nthe directory.</p>\n<p>Then, install the TigerBeetle client:</p>\n<pre class=\"console\"><code>go mod init tbtest\ngo get github.com/tigerbeetle/tigerbeetle-go</code></pre>\n<p>Now, create <code>main.go</code> and copy this into it:</p>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">package</span> main</span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">import</span> <span class=\"op\">(</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"st\">&quot;fmt&quot;</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"st\">&quot;log&quot;</span></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"st\">&quot;os&quot;</span></span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">.</span> <span class=\"st\">&quot;github.com/tigerbeetle/tigerbeetle-go&quot;</span></span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">.</span> <span class=\"st\">&quot;github.com/tigerbeetle/tigerbeetle-go/pkg/types&quot;</span></span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">)</span></span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">func</span> main<span class=\"op\">()</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-13\"><a href=\"#cb2-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    fmt<span class=\"op\">.</span>Println<span class=\"op\">(</span><span class=\"st\">&quot;Import ok!&quot;</span><span class=\"op\">)</span></span>\n<span id=\"cb2-14\"><a href=\"#cb2-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<p>Finally, build and run:</p>\n<pre class=\"console\"><code>go run main.go</code></pre>\n<p>Now that all prerequisites and dependencies are correctly set up,\nlet‚Äôs dig into using TigerBeetle.</p>\n<h2 id=\"sample-projects\"><a href=\"#sample-projects\"\nclass=\"anchor\">Sample projects</a></h2>\n<p>This document is primarily a reference guide to the client. Below are\nvarious sample projects demonstrating features of TigerBeetle.</p>\n<ul>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/go/samples/basic/\">Basic</a>:\nCreate two accounts and transfer an amount between them.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/go/samples/two-phase/\">Two-Phase\nTransfer</a>: Create two accounts and start a pending transfer between\nthem, then post the transfer.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/go/samples/two-phase-many/\">Many\nTwo-Phase Transfers</a>: Create two accounts and start a number of\npending transfer between them, posting and voiding alternating\ntransfers.</li>\n</ul>\n<h2 id=\"creating-a-client\"><a href=\"#creating-a-client\"\nclass=\"anchor\">Creating a Client</a></h2>\n<p>A client is created with a cluster ID and replica addresses for all\nreplicas in the cluster. The cluster ID and replica addresses are both\nchosen by the system that starts the TigerBeetle cluster.</p>\n<p>Clients are thread-safe and a single instance should be shared\nbetween multiple concurrent tasks.</p>\n<p>Multiple clients are useful when connecting to more than one\nTigerBeetle cluster.</p>\n<p>In this example the cluster ID is <code>0</code> and there is one\nreplica. The address is read from the <code>TB_ADDRESS</code>\nenvironment variable and defaults to port <code>3000</code>.</p>\n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>tbAddress <span class=\"op\">:=</span> os<span class=\"op\">.</span>Getenv<span class=\"op\">(</span><span class=\"st\">&quot;TB_ADDRESS&quot;</span><span class=\"op\">)</span></span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> <span class=\"bu\">len</span><span class=\"op\">(</span>tbAddress<span class=\"op\">)</span> <span class=\"op\">==</span> <span class=\"dv\">0</span> <span class=\"op\">{</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    tbAddress <span class=\"op\">=</span> <span class=\"st\">&quot;3000&quot;</span></span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb4-5\"><a href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>client<span class=\"op\">,</span> err <span class=\"op\">:=</span> NewClient<span class=\"op\">(</span>ToUint128<span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">),</span> <span class=\"op\">[]</span><span class=\"dt\">string</span><span class=\"op\">{</span>tbAddress<span class=\"op\">})</span></span>\n<span id=\"cb4-6\"><a href=\"#cb4-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> err <span class=\"op\">!=</span> <span class=\"ot\">nil</span> <span class=\"op\">{</span></span>\n<span id=\"cb4-7\"><a href=\"#cb4-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    log<span class=\"op\">.</span>Printf<span class=\"op\">(</span><span class=\"st\">&quot;Error creating client: %s&quot;</span><span class=\"op\">,</span> err<span class=\"op\">)</span></span>\n<span id=\"cb4-8\"><a href=\"#cb4-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span></span>\n<span id=\"cb4-9\"><a href=\"#cb4-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb4-10\"><a href=\"#cb4-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">defer</span> client<span class=\"op\">.</span>Close<span class=\"op\">()</span></span></code></pre></div>\n<p>The following are valid addresses:</p>\n<ul>\n<li><code>3000</code> (interpreted as <code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1:3000</code> (interpreted as\n<code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1</code> (interpreted as <code>127.0.0.1:3001</code>,\n<code>3001</code> is the default port)</li>\n</ul>\n<h2 id=\"creating-accounts\"><a href=\"#creating-accounts\"\nclass=\"anchor\">Creating Accounts</a></h2>\n<p>See details for account fields in the <a\nhref=\"https://docs.tigerbeetle.com/reference/account\">Accounts\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb5\"><pre class=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>accountErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateAccounts<span class=\"op\">([]</span>Account<span class=\"op\">{</span></span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>        ID<span class=\"op\">:</span>          ID<span class=\"op\">(),</span> <span class=\"co\">// TigerBeetle time-based ID.</span></span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData128<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">),</span></span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData64<span class=\"op\">:</span>  <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData32<span class=\"op\">:</span>  <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb5-7\"><a href=\"#cb5-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Ledger<span class=\"op\">:</span>      <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb5-8\"><a href=\"#cb5-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Code<span class=\"op\">:</span>        <span class=\"dv\">718</span><span class=\"op\">,</span></span>\n<span id=\"cb5-9\"><a href=\"#cb5-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Flags<span class=\"op\">:</span>       <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb5-10\"><a href=\"#cb5-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Timestamp<span class=\"op\">:</span>   <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb5-11\"><a href=\"#cb5-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">},</span></span>\n<span id=\"cb5-12\"><a href=\"#cb5-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">})</span></span>\n<span id=\"cb5-13\"><a href=\"#cb5-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<p>See details for the recommended ID scheme in <a\nhref=\"https://docs.tigerbeetle.com/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<p>The <code>Uint128</code> fields like <code>ID</code>,\n<code>UserData128</code>, <code>Amount</code> and account balances have\na few helper functions to make it easier to convert 128-bit\nlittle-endian unsigned integers between <code>string</code>,\n<code>math/big.Int</code>, and <code>[]byte</code>.</p>\n<p>See the type <a\nhref=\"https://pkg.go.dev/github.com/tigerbeetle/tigerbeetle-go/pkg/types#Uint128\">Uint128</a>\nfor more details.</p>\n<h3 id=\"account-flags\"><a href=\"#account-flags\" class=\"anchor\">Account\nFlags</a></h3>\n<p>The account flags value is a bitfield. See details for these flags in\nthe <a\nhref=\"https://docs.tigerbeetle.com/reference/account#flags\">Accounts\nreference</a>.</p>\n<p>To toggle behavior for an account, use the\n<code>types.AccountFlags</code> struct to combine enum values and\ngenerate a <code>uint16</code>. Here are a few examples:</p>\n<ul>\n<li><code>AccountFlags{Linked: true}.ToUint16()</code></li>\n<li><code>AccountFlags{DebitsMustNotExceedCredits: true}.ToUint16()</code></li>\n<li><code>AccountFlags{CreditsMustNotExceedDebits: true}.ToUint16()</code></li>\n<li><code>AccountFlags{History: true}.ToUint16()</code></li>\n</ul>\n<p>For example, to link two accounts where the first account\nadditionally has the <code>debits_must_not_exceed_credits</code>\nconstraint:</p>\n<div class=\"sourceCode\" id=\"cb6\"><pre class=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>account0 <span class=\"op\">:=</span> Account<span class=\"op\">{</span></span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>     ToUint128<span class=\"op\">(</span><span class=\"dv\">100</span><span class=\"op\">),</span></span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>   <span class=\"dv\">718</span><span class=\"op\">,</span></span>\n<span id=\"cb6-5\"><a href=\"#cb6-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span> AccountFlags<span class=\"op\">{</span></span>\n<span id=\"cb6-6\"><a href=\"#cb6-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        DebitsMustNotExceedCredits<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">,</span></span>\n<span id=\"cb6-7\"><a href=\"#cb6-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Linked<span class=\"op\">:</span>                     <span class=\"ot\">true</span><span class=\"op\">,</span></span>\n<span id=\"cb6-8\"><a href=\"#cb6-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}.</span>ToUint16<span class=\"op\">(),</span></span>\n<span id=\"cb6-9\"><a href=\"#cb6-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb6-10\"><a href=\"#cb6-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>account1 <span class=\"op\">:=</span> Account<span class=\"op\">{</span></span>\n<span id=\"cb6-11\"><a href=\"#cb6-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>     ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb6-12\"><a href=\"#cb6-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb6-13\"><a href=\"#cb6-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>   <span class=\"dv\">718</span><span class=\"op\">,</span></span>\n<span id=\"cb6-14\"><a href=\"#cb6-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span> AccountFlags<span class=\"op\">{</span></span>\n<span id=\"cb6-15\"><a href=\"#cb6-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>        History<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">,</span></span>\n<span id=\"cb6-16\"><a href=\"#cb6-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}.</span>ToUint16<span class=\"op\">(),</span></span>\n<span id=\"cb6-17\"><a href=\"#cb6-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb6-18\"><a href=\"#cb6-18\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-19\"><a href=\"#cb6-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>accountErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateAccounts<span class=\"op\">([]</span>Account<span class=\"op\">{</span>account0<span class=\"op\">,</span> account1<span class=\"op\">})</span></span>\n<span id=\"cb6-20\"><a href=\"#cb6-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h3 id=\"response-and-errors\"><a href=\"#response-and-errors\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all accounts were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for an account that failed. The error\nobject contains an error code and the index of the account in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"https://docs.tigerbeetle.com/reference/requests/create_accounts\">create_accounts\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb7\"><pre class=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>account0 <span class=\"op\">:=</span> Account<span class=\"op\">{</span></span>\n<span id=\"cb7-2\"><a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>     ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb7-3\"><a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-4\"><a href=\"#cb7-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>   <span class=\"dv\">718</span><span class=\"op\">,</span></span>\n<span id=\"cb7-5\"><a href=\"#cb7-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>  <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-6\"><a href=\"#cb7-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb7-7\"><a href=\"#cb7-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>account1 <span class=\"op\">:=</span> Account<span class=\"op\">{</span></span>\n<span id=\"cb7-8\"><a href=\"#cb7-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>     ToUint128<span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">),</span></span>\n<span id=\"cb7-9\"><a href=\"#cb7-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-10\"><a href=\"#cb7-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>   <span class=\"dv\">718</span><span class=\"op\">,</span></span>\n<span id=\"cb7-11\"><a href=\"#cb7-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>  <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-12\"><a href=\"#cb7-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb7-13\"><a href=\"#cb7-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>account2 <span class=\"op\">:=</span> Account<span class=\"op\">{</span></span>\n<span id=\"cb7-14\"><a href=\"#cb7-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>     ToUint128<span class=\"op\">(</span><span class=\"dv\">104</span><span class=\"op\">),</span></span>\n<span id=\"cb7-15\"><a href=\"#cb7-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-16\"><a href=\"#cb7-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>   <span class=\"dv\">718</span><span class=\"op\">,</span></span>\n<span id=\"cb7-17\"><a href=\"#cb7-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>  <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-18\"><a href=\"#cb7-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb7-19\"><a href=\"#cb7-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-20\"><a href=\"#cb7-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>accountErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateAccounts<span class=\"op\">([]</span>Account<span class=\"op\">{</span>account0<span class=\"op\">,</span> account1<span class=\"op\">,</span> account2<span class=\"op\">})</span></span>\n<span id=\"cb7-21\"><a href=\"#cb7-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> err <span class=\"op\">!=</span> <span class=\"ot\">nil</span> <span class=\"op\">{</span></span>\n<span id=\"cb7-22\"><a href=\"#cb7-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    log<span class=\"op\">.</span>Printf<span class=\"op\">(</span><span class=\"st\">&quot;Error creating accounts: %s&quot;</span><span class=\"op\">,</span> err<span class=\"op\">)</span></span>\n<span id=\"cb7-23\"><a href=\"#cb7-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span></span>\n<span id=\"cb7-24\"><a href=\"#cb7-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb7-25\"><a href=\"#cb7-25\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-26\"><a href=\"#cb7-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> _<span class=\"op\">,</span> err <span class=\"op\">:=</span> <span class=\"kw\">range</span> accountErrors <span class=\"op\">{</span></span>\n<span id=\"cb7-27\"><a href=\"#cb7-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">switch</span> err<span class=\"op\">.</span>Index <span class=\"op\">{</span></span>\n<span id=\"cb7-28\"><a href=\"#cb7-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">case</span> <span class=\"dt\">uint32</span><span class=\"op\">(</span>AccountExists<span class=\"op\">):</span></span>\n<span id=\"cb7-29\"><a href=\"#cb7-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>        log<span class=\"op\">.</span>Printf<span class=\"op\">(</span><span class=\"st\">&quot;Batch account at %d already exists.&quot;</span><span class=\"op\">,</span> err<span class=\"op\">.</span>Index<span class=\"op\">)</span></span>\n<span id=\"cb7-30\"><a href=\"#cb7-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">default</span><span class=\"op\">:</span></span>\n<span id=\"cb7-31\"><a href=\"#cb7-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>        log<span class=\"op\">.</span>Printf<span class=\"op\">(</span><span class=\"st\">&quot;Batch account at %d failed to create: %s&quot;</span><span class=\"op\">,</span> err<span class=\"op\">.</span>Index<span class=\"op\">,</span> err<span class=\"op\">.</span>Result<span class=\"op\">)</span></span>\n<span id=\"cb7-32\"><a href=\"#cb7-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb7-33\"><a href=\"#cb7-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<p>To handle errors you can either 1) exactly match error codes returned\nfrom <code>client.createAccounts</code> with enum values in the\n<code>CreateAccountError</code> object, or you can 2) look up the error\ncode in the <code>CreateAccountError</code> object for a human-readable\nstring.</p>\n<h2 id=\"account-lookup\"><a href=\"#account-lookup\" class=\"anchor\">Account\nLookup</a></h2>\n<p>Account lookup is batched, like account creation. Pass in all IDs to\nfetch. The account for each matched ID is returned.</p>\n<p>If no account matches an ID, no object is returned for that account.\nSo the order of accounts in the response is not necessarily the same as\nthe order of IDs in the request. You can refer to the ID field in the\nresponse to distinguish accounts.</p>\n<div class=\"sourceCode\" id=\"cb8\"><pre class=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb8-1\"><a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>LookupAccounts<span class=\"op\">([]</span>Uint128<span class=\"op\">{</span>ToUint128<span class=\"op\">(</span><span class=\"dv\">100</span><span class=\"op\">),</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">)})</span></span></code></pre></div>\n<h2 id=\"create-transfers\"><a href=\"#create-transfers\"\nclass=\"anchor\">Create Transfers</a></h2>\n<p>This creates a journal entry between two accounts.</p>\n<p>See details for transfer fields in the <a\nhref=\"https://docs.tigerbeetle.com/reference/transfer\">Transfers\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb9\"><pre class=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers <span class=\"op\">:=</span> <span class=\"op\">[]</span>Transfer<span class=\"op\">{{</span></span>\n<span id=\"cb9-2\"><a href=\"#cb9-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>              ID<span class=\"op\">(),</span> <span class=\"co\">// TigerBeetle time-based ID.</span></span>\n<span id=\"cb9-3\"><a href=\"#cb9-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountID<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb9-4\"><a href=\"#cb9-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb9-5\"><a href=\"#cb9-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>          ToUint128<span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">),</span></span>\n<span id=\"cb9-6\"><a href=\"#cb9-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>          <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb9-7\"><a href=\"#cb9-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>            <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb9-8\"><a href=\"#cb9-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>           <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb9-9\"><a href=\"#cb9-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Timestamp<span class=\"op\">:</span>       <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb9-10\"><a href=\"#cb9-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}}</span></span>\n<span id=\"cb9-11\"><a href=\"#cb9-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb9-12\"><a href=\"#cb9-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">(</span>transfers<span class=\"op\">)</span></span>\n<span id=\"cb9-13\"><a href=\"#cb9-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<p>See details for the recommended ID scheme in <a\nhref=\"https://docs.tigerbeetle.com/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<h3 id=\"response-and-errors-1\"><a href=\"#response-and-errors-1\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all transfers were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for a transfer that failed. The error\nobject contains an error code and the index of the transfer in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"https://docs.tigerbeetle.com/reference/requests/create_transfers\">create_transfers\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb10\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb10-1\"><a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers <span class=\"op\">:=</span> <span class=\"op\">[]</span>Transfer<span class=\"op\">{{</span></span>\n<span id=\"cb10-2\"><a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>              ToUint128<span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">),</span></span>\n<span id=\"cb10-3\"><a href=\"#cb10-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountID<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb10-4\"><a href=\"#cb10-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb10-5\"><a href=\"#cb10-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>          ToUint128<span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">),</span></span>\n<span id=\"cb10-6\"><a href=\"#cb10-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>          <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-7\"><a href=\"#cb10-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>            <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-8\"><a href=\"#cb10-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>           <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-9\"><a href=\"#cb10-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">},</span> <span class=\"op\">{</span></span>\n<span id=\"cb10-10\"><a href=\"#cb10-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>              ToUint128<span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">),</span></span>\n<span id=\"cb10-11\"><a href=\"#cb10-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountID<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb10-12\"><a href=\"#cb10-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb10-13\"><a href=\"#cb10-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>          ToUint128<span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">),</span></span>\n<span id=\"cb10-14\"><a href=\"#cb10-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>          <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-15\"><a href=\"#cb10-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>            <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-16\"><a href=\"#cb10-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>           <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-17\"><a href=\"#cb10-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">},</span> <span class=\"op\">{</span></span>\n<span id=\"cb10-18\"><a href=\"#cb10-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>              ToUint128<span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">),</span></span>\n<span id=\"cb10-19\"><a href=\"#cb10-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountID<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb10-20\"><a href=\"#cb10-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb10-21\"><a href=\"#cb10-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>          ToUint128<span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">),</span></span>\n<span id=\"cb10-22\"><a href=\"#cb10-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>          <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-23\"><a href=\"#cb10-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>            <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-24\"><a href=\"#cb10-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>           <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-25\"><a href=\"#cb10-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}}</span></span>\n<span id=\"cb10-26\"><a href=\"#cb10-26\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb10-27\"><a href=\"#cb10-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">(</span>transfers<span class=\"op\">)</span></span>\n<span id=\"cb10-28\"><a href=\"#cb10-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> err <span class=\"op\">!=</span> <span class=\"ot\">nil</span> <span class=\"op\">{</span></span>\n<span id=\"cb10-29\"><a href=\"#cb10-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>    log<span class=\"op\">.</span>Printf<span class=\"op\">(</span><span class=\"st\">&quot;Error creating transfers: %s&quot;</span><span class=\"op\">,</span> err<span class=\"op\">)</span></span>\n<span id=\"cb10-30\"><a href=\"#cb10-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span></span>\n<span id=\"cb10-31\"><a href=\"#cb10-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb10-32\"><a href=\"#cb10-32\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb10-33\"><a href=\"#cb10-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> _<span class=\"op\">,</span> err <span class=\"op\">:=</span> <span class=\"kw\">range</span> transferErrors <span class=\"op\">{</span></span>\n<span id=\"cb10-34\"><a href=\"#cb10-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">switch</span> err<span class=\"op\">.</span>Index <span class=\"op\">{</span></span>\n<span id=\"cb10-35\"><a href=\"#cb10-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">case</span> <span class=\"dt\">uint32</span><span class=\"op\">(</span>TransferExists<span class=\"op\">):</span></span>\n<span id=\"cb10-36\"><a href=\"#cb10-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>        log<span class=\"op\">.</span>Printf<span class=\"op\">(</span><span class=\"st\">&quot;Batch transfer at %d already exists.&quot;</span><span class=\"op\">,</span> err<span class=\"op\">.</span>Index<span class=\"op\">)</span></span>\n<span id=\"cb10-37\"><a href=\"#cb10-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">default</span><span class=\"op\">:</span></span>\n<span id=\"cb10-38\"><a href=\"#cb10-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>        log<span class=\"op\">.</span>Printf<span class=\"op\">(</span><span class=\"st\">&quot;Batch transfer at %d failed to create: %s&quot;</span><span class=\"op\">,</span> err<span class=\"op\">.</span>Index<span class=\"op\">,</span> err<span class=\"op\">.</span>Result<span class=\"op\">)</span></span>\n<span id=\"cb10-39\"><a href=\"#cb10-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb10-40\"><a href=\"#cb10-40\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<h2 id=\"batching\"><a href=\"#batching\" class=\"anchor\">Batching</a></h2>\n<p>TigerBeetle performance is maximized when you batch API requests. The\nclient does not do this automatically for you. So, for example, you\n<em>can</em> insert 1 million transfers one at a time like so:</p>\n<div class=\"sourceCode\" id=\"cb11\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">:=</span> <span class=\"op\">[]</span>Transfer<span class=\"op\">{}</span></span>\n<span id=\"cb11-2\"><a href=\"#cb11-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> i <span class=\"op\">:=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> i <span class=\"op\">&lt;</span> <span class=\"bu\">len</span><span class=\"op\">(</span>batch<span class=\"op\">);</span> i<span class=\"op\">++</span> <span class=\"op\">{</span></span>\n<span id=\"cb11-3\"><a href=\"#cb11-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">([]</span>Transfer<span class=\"op\">{</span>batch<span class=\"op\">[</span>i<span class=\"op\">]})</span></span>\n<span id=\"cb11-4\"><a href=\"#cb11-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    _<span class=\"op\">,</span> _ <span class=\"op\">=</span> transferErrors<span class=\"op\">,</span> err <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb11-5\"><a href=\"#cb11-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<p>But the insert rate will be a <em>fraction</em> of potential.\nInstead, <strong>always batch what you can</strong>.</p>\n<p>The maximum batch size is set in the TigerBeetle server. The default\nis 8190.</p>\n<div class=\"sourceCode\" id=\"cb12\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb12-1\"><a href=\"#cb12-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">:=</span> <span class=\"op\">[]</span>Transfer<span class=\"op\">{}</span></span>\n<span id=\"cb12-2\"><a href=\"#cb12-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>BATCH_SIZE <span class=\"op\">:=</span> <span class=\"dv\">8190</span></span>\n<span id=\"cb12-3\"><a href=\"#cb12-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> i <span class=\"op\">:=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> i <span class=\"op\">&lt;</span> <span class=\"bu\">len</span><span class=\"op\">(</span>batch<span class=\"op\">);</span> i <span class=\"op\">+=</span> BATCH_SIZE <span class=\"op\">{</span></span>\n<span id=\"cb12-4\"><a href=\"#cb12-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    size <span class=\"op\">:=</span> BATCH_SIZE</span>\n<span id=\"cb12-5\"><a href=\"#cb12-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> i<span class=\"op\">+</span>BATCH_SIZE <span class=\"op\">&gt;</span> <span class=\"bu\">len</span><span class=\"op\">(</span>batch<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb12-6\"><a href=\"#cb12-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        size <span class=\"op\">=</span> <span class=\"bu\">len</span><span class=\"op\">(</span>batch<span class=\"op\">)</span> <span class=\"op\">-</span> i</span>\n<span id=\"cb12-7\"><a href=\"#cb12-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb12-8\"><a href=\"#cb12-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">(</span>batch<span class=\"op\">[</span>i <span class=\"op\">:</span> i<span class=\"op\">+</span>size<span class=\"op\">])</span></span>\n<span id=\"cb12-9\"><a href=\"#cb12-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    _<span class=\"op\">,</span> _ <span class=\"op\">=</span> transferErrors<span class=\"op\">,</span> err <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb12-10\"><a href=\"#cb12-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<h3 id=\"queues-and-workers\"><a href=\"#queues-and-workers\"\nclass=\"anchor\">Queues and Workers</a></h3>\n<p>If you are making requests to TigerBeetle from workers pulling jobs\nfrom a queue, you can batch requests to TigerBeetle by having the worker\nact on multiple jobs from the queue at once rather than one at a time.\ni.e. pulling multiple jobs from the queue rather than just one.</p>\n<h2 id=\"transfer-flags\"><a href=\"#transfer-flags\"\nclass=\"anchor\">Transfer Flags</a></h2>\n<p>The transfer <code>flags</code> value is a bitfield. See details for\nthese flags in the <a\nhref=\"https://docs.tigerbeetle.com/reference/transfer#flags\">Transfers\nreference</a>.</p>\n<p>To toggle behavior for an account, use the\n<code>types.TransferFlags</code> struct to combine enum values and\ngenerate a <code>uint16</code>. Here are a few examples:</p>\n<ul>\n<li><code>TransferFlags{Linked: true}.ToUint16()</code></li>\n<li><code>TransferFlags{Pending: true}.ToUint16()</code></li>\n<li><code>TransferFlags{PostPendingTransfer: true}.ToUint16()</code></li>\n<li><code>TransferFlags{VoidPendingTransfer: true}.ToUint16()</code></li>\n</ul>\n<p>For example, to link <code>transfer0</code> and\n<code>transfer1</code>:</p>\n<div class=\"sourceCode\" id=\"cb13\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb13-1\"><a href=\"#cb13-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer0 <span class=\"op\">:=</span> Transfer<span class=\"op\">{</span></span>\n<span id=\"cb13-2\"><a href=\"#cb13-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>              ToUint128<span class=\"op\">(</span><span class=\"dv\">4</span><span class=\"op\">),</span></span>\n<span id=\"cb13-3\"><a href=\"#cb13-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountID<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb13-4\"><a href=\"#cb13-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb13-5\"><a href=\"#cb13-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>          ToUint128<span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">),</span></span>\n<span id=\"cb13-6\"><a href=\"#cb13-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>          <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb13-7\"><a href=\"#cb13-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>            <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb13-8\"><a href=\"#cb13-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>           TransferFlags<span class=\"op\">{</span>Linked<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">}.</span>ToUint16<span class=\"op\">(),</span></span>\n<span id=\"cb13-9\"><a href=\"#cb13-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb13-10\"><a href=\"#cb13-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer1 <span class=\"op\">:=</span> Transfer<span class=\"op\">{</span></span>\n<span id=\"cb13-11\"><a href=\"#cb13-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>              ToUint128<span class=\"op\">(</span><span class=\"dv\">5</span><span class=\"op\">),</span></span>\n<span id=\"cb13-12\"><a href=\"#cb13-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountID<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb13-13\"><a href=\"#cb13-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb13-14\"><a href=\"#cb13-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>          ToUint128<span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">),</span></span>\n<span id=\"cb13-15\"><a href=\"#cb13-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>          <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb13-16\"><a href=\"#cb13-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>            <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb13-17\"><a href=\"#cb13-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>           <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb13-18\"><a href=\"#cb13-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb13-19\"><a href=\"#cb13-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb13-20\"><a href=\"#cb13-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">([]</span>Transfer<span class=\"op\">{</span>transfer0<span class=\"op\">,</span> transfer1<span class=\"op\">})</span></span>\n<span id=\"cb13-21\"><a href=\"#cb13-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h3 id=\"two-phase-transfers\"><a href=\"#two-phase-transfers\"\nclass=\"anchor\">Two-Phase Transfers</a></h3>\n<p>Two-phase transfers are supported natively by toggling the\nappropriate flag. TigerBeetle will then adjust the\n<code>credits_pending</code> and <code>debits_pending</code> fields of\nthe appropriate accounts. A corresponding post pending transfer then\nneeds to be sent to post or void the transfer.</p>\n<h4 id=\"post-a-pending-transfer\"><a href=\"#post-a-pending-transfer\"\nclass=\"anchor\">Post a Pending Transfer</a></h4>\n<p>With <code>flags</code> set to <code>post_pending_transfer</code>,\nTigerBeetle will post the transfer. TigerBeetle will atomically roll\nback the changes to <code>debits_pending</code> and\n<code>credits_pending</code> of the appropriate accounts and apply them\nto the <code>debits_posted</code> and <code>credits_posted</code>\nbalances.</p>\n<div class=\"sourceCode\" id=\"cb14\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb14-1\"><a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer0 <span class=\"op\">:=</span> Transfer<span class=\"op\">{</span></span>\n<span id=\"cb14-2\"><a href=\"#cb14-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>              ToUint128<span class=\"op\">(</span><span class=\"dv\">6</span><span class=\"op\">),</span></span>\n<span id=\"cb14-3\"><a href=\"#cb14-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountID<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb14-4\"><a href=\"#cb14-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb14-5\"><a href=\"#cb14-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>          ToUint128<span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">),</span></span>\n<span id=\"cb14-6\"><a href=\"#cb14-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>          <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb14-7\"><a href=\"#cb14-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>            <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb14-8\"><a href=\"#cb14-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>           <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb14-9\"><a href=\"#cb14-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb14-10\"><a href=\"#cb14-10\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-11\"><a href=\"#cb14-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">([]</span>Transfer<span class=\"op\">{</span>transfer0<span class=\"op\">})</span></span>\n<span id=\"cb14-12\"><a href=\"#cb14-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb14-13\"><a href=\"#cb14-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-14\"><a href=\"#cb14-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer1 <span class=\"op\">:=</span> Transfer<span class=\"op\">{</span></span>\n<span id=\"cb14-15\"><a href=\"#cb14-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">7</span><span class=\"op\">),</span></span>\n<span id=\"cb14-16\"><a href=\"#cb14-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Post the entire pending amount.</span></span>\n<span id=\"cb14-17\"><a href=\"#cb14-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>    AmountMax<span class=\"op\">,</span></span>\n<span id=\"cb14-18\"><a href=\"#cb14-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    PendingID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">6</span><span class=\"op\">),</span></span>\n<span id=\"cb14-19\"><a href=\"#cb14-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>     TransferFlags<span class=\"op\">{</span>PostPendingTransfer<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">}.</span>ToUint16<span class=\"op\">(),</span></span>\n<span id=\"cb14-20\"><a href=\"#cb14-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb14-21\"><a href=\"#cb14-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-22\"><a href=\"#cb14-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">([]</span>Transfer<span class=\"op\">{</span>transfer1<span class=\"op\">})</span></span>\n<span id=\"cb14-23\"><a href=\"#cb14-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h4 id=\"void-a-pending-transfer\"><a href=\"#void-a-pending-transfer\"\nclass=\"anchor\">Void a Pending Transfer</a></h4>\n<p>In contrast, with <code>flags</code> set to\n<code>void_pending_transfer</code>, TigerBeetle will void the transfer.\nTigerBeetle will roll back the changes to <code>debits_pending</code>\nand <code>credits_pending</code> of the appropriate accounts and\n<strong>not</strong> apply them to the <code>debits_posted</code> and\n<code>credits_posted</code> balances.</p>\n<div class=\"sourceCode\" id=\"cb15\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb15-1\"><a href=\"#cb15-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer0 <span class=\"op\">:=</span> Transfer<span class=\"op\">{</span></span>\n<span id=\"cb15-2\"><a href=\"#cb15-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>              ToUint128<span class=\"op\">(</span><span class=\"dv\">8</span><span class=\"op\">),</span></span>\n<span id=\"cb15-3\"><a href=\"#cb15-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountID<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb15-4\"><a href=\"#cb15-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb15-5\"><a href=\"#cb15-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>          ToUint128<span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">),</span></span>\n<span id=\"cb15-6\"><a href=\"#cb15-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Timeout<span class=\"op\">:</span>         <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb15-7\"><a href=\"#cb15-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>          <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb15-8\"><a href=\"#cb15-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>            <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb15-9\"><a href=\"#cb15-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>           <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb15-10\"><a href=\"#cb15-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb15-11\"><a href=\"#cb15-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-12\"><a href=\"#cb15-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">([]</span>Transfer<span class=\"op\">{</span>transfer0<span class=\"op\">})</span></span>\n<span id=\"cb15-13\"><a href=\"#cb15-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb15-14\"><a href=\"#cb15-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-15\"><a href=\"#cb15-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer1 <span class=\"op\">:=</span> Transfer<span class=\"op\">{</span></span>\n<span id=\"cb15-16\"><a href=\"#cb15-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">9</span><span class=\"op\">),</span></span>\n<span id=\"cb15-17\"><a href=\"#cb15-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Post the entire pending amount.</span></span>\n<span id=\"cb15-18\"><a href=\"#cb15-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>    ToUint128<span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">),</span></span>\n<span id=\"cb15-19\"><a href=\"#cb15-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    PendingID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">8</span><span class=\"op\">),</span></span>\n<span id=\"cb15-20\"><a href=\"#cb15-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>     TransferFlags<span class=\"op\">{</span>VoidPendingTransfer<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">}.</span>ToUint16<span class=\"op\">(),</span></span>\n<span id=\"cb15-21\"><a href=\"#cb15-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb15-22\"><a href=\"#cb15-22\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-23\"><a href=\"#cb15-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">([]</span>Transfer<span class=\"op\">{</span>transfer1<span class=\"op\">})</span></span>\n<span id=\"cb15-24\"><a href=\"#cb15-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h2 id=\"transfer-lookup\"><a href=\"#transfer-lookup\"\nclass=\"anchor\">Transfer Lookup</a></h2>\n<p>NOTE: While transfer lookup exists, it is not a flexible query API.\nWe are developing query APIs and there will be new methods for querying\ntransfers in the future.</p>\n<p>Transfer lookup is batched, like transfer creation. Pass in all\n<code>id</code>s to fetch, and matched transfers are returned.</p>\n<p>If no transfer matches an <code>id</code>, no object is returned for\nthat transfer. So the order of transfers in the response is not\nnecessarily the same as the order of <code>id</code>s in the request.\nYou can refer to the <code>id</code> field in the response to\ndistinguish transfers.</p>\n<div class=\"sourceCode\" id=\"cb16\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb16-1\"><a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>LookupTransfers<span class=\"op\">([]</span>Uint128<span class=\"op\">{</span>ToUint128<span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">),</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">)})</span></span></code></pre></div>\n<h2 id=\"get-account-transfers\"><a href=\"#get-account-transfers\"\nclass=\"anchor\">Get Account Transfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the transfers involving a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb17\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb17-1\"><a href=\"#cb17-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter <span class=\"op\">:=</span> AccountFilter<span class=\"op\">{</span></span>\n<span id=\"cb17-2\"><a href=\"#cb17-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    AccountID<span class=\"op\">:</span>    ToUint128<span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">),</span></span>\n<span id=\"cb17-3\"><a href=\"#cb17-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData128<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">),</span> <span class=\"co\">// No filter by UserData.</span></span>\n<span id=\"cb17-4\"><a href=\"#cb17-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData64<span class=\"op\">:</span>   <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb17-5\"><a href=\"#cb17-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData32<span class=\"op\">:</span>   <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb17-6\"><a href=\"#cb17-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>         <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Code.</span></span>\n<span id=\"cb17-7\"><a href=\"#cb17-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMin<span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb17-8\"><a href=\"#cb17-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMax<span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb17-9\"><a href=\"#cb17-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Limit<span class=\"op\">:</span>        <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten transfers at most.</span></span>\n<span id=\"cb17-10\"><a href=\"#cb17-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span> AccountFilterFlags<span class=\"op\">{</span></span>\n<span id=\"cb17-11\"><a href=\"#cb17-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Debits<span class=\"op\">:</span>   <span class=\"ot\">true</span><span class=\"op\">,</span> <span class=\"co\">// Include transfer from the debit side.</span></span>\n<span id=\"cb17-12\"><a href=\"#cb17-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Credits<span class=\"op\">:</span>  <span class=\"ot\">true</span><span class=\"op\">,</span> <span class=\"co\">// Include transfer from the credit side.</span></span>\n<span id=\"cb17-13\"><a href=\"#cb17-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Reversed<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb17-14\"><a href=\"#cb17-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}.</span>ToUint32<span class=\"op\">(),</span></span>\n<span id=\"cb17-15\"><a href=\"#cb17-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb17-16\"><a href=\"#cb17-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb17-17\"><a href=\"#cb17-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>GetAccountTransfers<span class=\"op\">(</span>filter<span class=\"op\">)</span></span></code></pre></div>\n<h2 id=\"get-account-balances\"><a href=\"#get-account-balances\"\nclass=\"anchor\">Get Account Balances</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the point-in-time balances of a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>Only accounts created with the flag <a\nhref=\"https://docs.tigerbeetle.com/reference/account#flagshistory\"><code>history</code></a>\nset retain <a\nhref=\"https://docs.tigerbeetle.com/reference/requests/get_account_balances\">historical\nbalances</a>.</p>\n<p>The balances in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb18\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb18-1\"><a href=\"#cb18-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter <span class=\"op\">:=</span> AccountFilter<span class=\"op\">{</span></span>\n<span id=\"cb18-2\"><a href=\"#cb18-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    AccountID<span class=\"op\">:</span>    ToUint128<span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">),</span></span>\n<span id=\"cb18-3\"><a href=\"#cb18-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData128<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">),</span> <span class=\"co\">// No filter by UserData.</span></span>\n<span id=\"cb18-4\"><a href=\"#cb18-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData64<span class=\"op\">:</span>   <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb18-5\"><a href=\"#cb18-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData32<span class=\"op\">:</span>   <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb18-6\"><a href=\"#cb18-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>         <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Code.</span></span>\n<span id=\"cb18-7\"><a href=\"#cb18-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMin<span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb18-8\"><a href=\"#cb18-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMax<span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb18-9\"><a href=\"#cb18-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Limit<span class=\"op\">:</span>        <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb18-10\"><a href=\"#cb18-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span> AccountFilterFlags<span class=\"op\">{</span></span>\n<span id=\"cb18-11\"><a href=\"#cb18-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Debits<span class=\"op\">:</span>   <span class=\"ot\">true</span><span class=\"op\">,</span> <span class=\"co\">// Include transfer from the debit side.</span></span>\n<span id=\"cb18-12\"><a href=\"#cb18-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Credits<span class=\"op\">:</span>  <span class=\"ot\">true</span><span class=\"op\">,</span> <span class=\"co\">// Include transfer from the credit side.</span></span>\n<span id=\"cb18-13\"><a href=\"#cb18-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Reversed<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb18-14\"><a href=\"#cb18-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}.</span>ToUint32<span class=\"op\">(),</span></span>\n<span id=\"cb18-15\"><a href=\"#cb18-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb18-16\"><a href=\"#cb18-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb18-17\"><a href=\"#cb18-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>account_balances<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>GetAccountBalances<span class=\"op\">(</span>filter<span class=\"op\">)</span></span></code></pre></div>\n<h2 id=\"query-accounts\"><a href=\"#query-accounts\" class=\"anchor\">Query\nAccounts</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query accounts by the intersection of some fields and by timestamp\nrange.</p>\n<p>The accounts in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb19\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb19-1\"><a href=\"#cb19-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter <span class=\"op\">:=</span> QueryFilter<span class=\"op\">{</span></span>\n<span id=\"cb19-2\"><a href=\"#cb19-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData128<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">1000</span><span class=\"op\">),</span> <span class=\"co\">// Filter by UserData</span></span>\n<span id=\"cb19-3\"><a href=\"#cb19-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData64<span class=\"op\">:</span>   <span class=\"dv\">100</span><span class=\"op\">,</span></span>\n<span id=\"cb19-4\"><a href=\"#cb19-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData32<span class=\"op\">:</span>   <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb19-5\"><a href=\"#cb19-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>         <span class=\"dv\">1</span><span class=\"op\">,</span>  <span class=\"co\">// Filter by Code</span></span>\n<span id=\"cb19-6\"><a href=\"#cb19-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>       <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Ledger</span></span>\n<span id=\"cb19-7\"><a href=\"#cb19-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMin<span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb19-8\"><a href=\"#cb19-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMax<span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb19-9\"><a href=\"#cb19-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Limit<span class=\"op\">:</span>        <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb19-10\"><a href=\"#cb19-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span> QueryFilterFlags<span class=\"op\">{</span></span>\n<span id=\"cb19-11\"><a href=\"#cb19-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Reversed<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb19-12\"><a href=\"#cb19-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}.</span>ToUint32<span class=\"op\">(),</span></span>\n<span id=\"cb19-13\"><a href=\"#cb19-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb19-14\"><a href=\"#cb19-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb19-15\"><a href=\"#cb19-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>QueryAccounts<span class=\"op\">(</span>filter<span class=\"op\">)</span></span></code></pre></div>\n<h2 id=\"query-transfers\"><a href=\"#query-transfers\" class=\"anchor\">Query\nTransfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query transfers by the intersection of some fields and by timestamp\nrange.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb20\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb20-1\"><a href=\"#cb20-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter <span class=\"op\">:=</span> QueryFilter<span class=\"op\">{</span></span>\n<span id=\"cb20-2\"><a href=\"#cb20-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData128<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">1000</span><span class=\"op\">),</span> <span class=\"co\">// Filter by UserData.</span></span>\n<span id=\"cb20-3\"><a href=\"#cb20-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData64<span class=\"op\">:</span>   <span class=\"dv\">100</span><span class=\"op\">,</span></span>\n<span id=\"cb20-4\"><a href=\"#cb20-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData32<span class=\"op\">:</span>   <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb20-5\"><a href=\"#cb20-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>         <span class=\"dv\">1</span><span class=\"op\">,</span>  <span class=\"co\">// Filter by Code.</span></span>\n<span id=\"cb20-6\"><a href=\"#cb20-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>       <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Ledger.</span></span>\n<span id=\"cb20-7\"><a href=\"#cb20-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMin<span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb20-8\"><a href=\"#cb20-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMax<span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb20-9\"><a href=\"#cb20-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Limit<span class=\"op\">:</span>        <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb20-10\"><a href=\"#cb20-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span> QueryFilterFlags<span class=\"op\">{</span></span>\n<span id=\"cb20-11\"><a href=\"#cb20-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Reversed<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb20-12\"><a href=\"#cb20-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}.</span>ToUint32<span class=\"op\">(),</span></span>\n<span id=\"cb20-13\"><a href=\"#cb20-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb20-14\"><a href=\"#cb20-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb20-15\"><a href=\"#cb20-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>QueryTransfers<span class=\"op\">(</span>filter<span class=\"op\">)</span></span></code></pre></div>\n<h2 id=\"linked-events\"><a href=\"#linked-events\" class=\"anchor\">Linked\nEvents</a></h2>\n<p>When the <code>linked</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it links that\nevent with the next event in the batch, to create a chain of events, of\narbitrary length, which all succeed or fail together. The tail of a\nchain is denoted by the first event without this flag. The last event in\na batch may therefore never have the <code>linked</code> flag set as\nthis would leave a chain open-ended. Multiple chains or individual\nevents may coexist within a batch to succeed or fail independently.</p>\n<p>Events within a chain are executed within order, or are rolled back\non error, so that the effect of each event in the chain is visible to\nthe next, and so that the chain is either visible or invisible as a unit\nto subsequent events after the chain. The event that was the first to\nbreak the chain will have a unique error result. Other events in the\nchain will have their error result set to\n<code>linked_event_failed</code>.</p>\n<div class=\"sourceCode\" id=\"cb21\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb21-1\"><a href=\"#cb21-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">:=</span> <span class=\"op\">[]</span>Transfer<span class=\"op\">{}</span></span>\n<span id=\"cb21-2\"><a href=\"#cb21-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>linkedFlag <span class=\"op\">:=</span> TransferFlags<span class=\"op\">{</span>Linked<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">}.</span>ToUint16<span class=\"op\">()</span></span>\n<span id=\"cb21-3\"><a href=\"#cb21-3\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-4\"><a href=\"#cb21-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// An individual transfer (successful):</span></span>\n<span id=\"cb21-5\"><a href=\"#cb21-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">)</span> <span class=\"co\">/* ... rest of transfer ... */</span><span class=\"op\">})</span></span>\n<span id=\"cb21-6\"><a href=\"#cb21-6\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-7\"><a href=\"#cb21-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 4 transfers (the last transfer in the chain closes the chain with linked=false):</span></span>\n<span id=\"cb21-8\"><a href=\"#cb21-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">)</span> <span class=\"co\">/* ... , */</span><span class=\"op\">,</span> Flags<span class=\"op\">:</span> linkedFlag<span class=\"op\">})</span> <span class=\"co\">// Commit/rollback.</span></span>\n<span id=\"cb21-9\"><a href=\"#cb21-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">)</span> <span class=\"co\">/* ... , */</span><span class=\"op\">,</span> Flags<span class=\"op\">:</span> linkedFlag<span class=\"op\">})</span> <span class=\"co\">// Commit/rollback.</span></span>\n<span id=\"cb21-10\"><a href=\"#cb21-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">)</span> <span class=\"co\">/* ... , */</span><span class=\"op\">,</span> Flags<span class=\"op\">:</span> linkedFlag<span class=\"op\">})</span> <span class=\"co\">// Fail with exists</span></span>\n<span id=\"cb21-11\"><a href=\"#cb21-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">4</span><span class=\"op\">)</span> <span class=\"co\">/* ... , */</span><span class=\"op\">})</span>                    <span class=\"co\">// Fail without committing</span></span>\n<span id=\"cb21-12\"><a href=\"#cb21-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-13\"><a href=\"#cb21-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// An individual transfer (successful):</span></span>\n<span id=\"cb21-14\"><a href=\"#cb21-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// This should not see any effect from the failed chain above.</span></span>\n<span id=\"cb21-15\"><a href=\"#cb21-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">)</span> <span class=\"co\">/* ... rest of transfer ... */</span><span class=\"op\">})</span></span>\n<span id=\"cb21-16\"><a href=\"#cb21-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-17\"><a href=\"#cb21-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 2 transfers (the first transfer fails the chain):</span></span>\n<span id=\"cb21-18\"><a href=\"#cb21-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">)</span> <span class=\"co\">/* ... rest of transfer ... */</span><span class=\"op\">,</span> Flags<span class=\"op\">:</span> linkedFlag<span class=\"op\">})</span></span>\n<span id=\"cb21-19\"><a href=\"#cb21-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">)</span> <span class=\"co\">/* ... rest of transfer ... */</span><span class=\"op\">})</span></span>\n<span id=\"cb21-20\"><a href=\"#cb21-20\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-21\"><a href=\"#cb21-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 2 transfers (successful):</span></span>\n<span id=\"cb21-22\"><a href=\"#cb21-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">)</span> <span class=\"co\">/* ... rest of transfer ... */</span><span class=\"op\">,</span> Flags<span class=\"op\">:</span> linkedFlag<span class=\"op\">})</span></span>\n<span id=\"cb21-23\"><a href=\"#cb21-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">4</span><span class=\"op\">)</span> <span class=\"co\">/* ... rest of transfer ... */</span><span class=\"op\">})</span></span>\n<span id=\"cb21-24\"><a href=\"#cb21-24\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-25\"><a href=\"#cb21-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">(</span>batch<span class=\"op\">)</span></span>\n<span id=\"cb21-26\"><a href=\"#cb21-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h2 id=\"imported-events\"><a href=\"#imported-events\"\nclass=\"anchor\">Imported Events</a></h2>\n<p>When the <code>imported</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it allows\nimporting historical events with a user-defined timestamp.</p>\n<p>The entire batch of events must be set with the flag\n<code>imported</code>.</p>\n<p>It‚Äôs recommended to submit the whole batch as a <code>linked</code>\nchain of events, ensuring that if any event fails, none of them are\ncommitted, preserving the last timestamp unchanged. This approach gives\nthe application a chance to correct failed imported events,\nre-submitting the batch again with the same user-defined timestamps.</p>\n<div class=\"sourceCode\" id=\"cb22\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb22-1\"><a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// External source of time.</span></span>\n<span id=\"cb22-2\"><a href=\"#cb22-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">var</span> historicalTimestamp <span class=\"dt\">uint64</span> <span class=\"op\">=</span> <span class=\"dv\">0</span></span>\n<span id=\"cb22-3\"><a href=\"#cb22-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>historicalAccounts <span class=\"op\">:=</span> <span class=\"op\">[]</span>Account<span class=\"op\">{</span> <span class=\"co\">/* Loaded from an external source. */</span> <span class=\"op\">}</span></span>\n<span id=\"cb22-4\"><a href=\"#cb22-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>historicalTransfers <span class=\"op\">:=</span> <span class=\"op\">[]</span>Transfer<span class=\"op\">{</span> <span class=\"co\">/* Loaded from an external source. */</span> <span class=\"op\">}</span></span>\n<span id=\"cb22-5\"><a href=\"#cb22-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-6\"><a href=\"#cb22-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// First, load and import all accounts with their timestamps from the historical source.</span></span>\n<span id=\"cb22-7\"><a href=\"#cb22-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>accountsBatch <span class=\"op\">:=</span> <span class=\"op\">[]</span>Account<span class=\"op\">{}</span></span>\n<span id=\"cb22-8\"><a href=\"#cb22-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> index<span class=\"op\">,</span> account <span class=\"op\">:=</span> <span class=\"kw\">range</span> historicalAccounts <span class=\"op\">{</span></span>\n<span id=\"cb22-9\"><a href=\"#cb22-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb22-10\"><a href=\"#cb22-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    historicalTimestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span></span>\n<span id=\"cb22-11\"><a href=\"#cb22-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account<span class=\"op\">.</span>Timestamp <span class=\"op\">=</span> historicalTimestamp</span>\n<span id=\"cb22-12\"><a href=\"#cb22-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-13\"><a href=\"#cb22-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account<span class=\"op\">.</span>Flags <span class=\"op\">=</span> AccountFlags<span class=\"op\">{</span></span>\n<span id=\"cb22-14\"><a href=\"#cb22-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// Set the account as `imported`.</span></span>\n<span id=\"cb22-15\"><a href=\"#cb22-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Imported<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">,</span></span>\n<span id=\"cb22-16\"><a href=\"#cb22-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb22-17\"><a href=\"#cb22-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// must be `linked`.</span></span>\n<span id=\"cb22-18\"><a href=\"#cb22-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Linked<span class=\"op\">:</span> index <span class=\"op\">&lt;</span> <span class=\"bu\">len</span><span class=\"op\">(</span>historicalAccounts<span class=\"op\">)-</span><span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb22-19\"><a href=\"#cb22-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}.</span>ToUint16<span class=\"op\">()</span></span>\n<span id=\"cb22-20\"><a href=\"#cb22-20\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-21\"><a href=\"#cb22-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    accountsBatch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>accountsBatch<span class=\"op\">,</span> account<span class=\"op\">)</span></span>\n<span id=\"cb22-22\"><a href=\"#cb22-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb22-23\"><a href=\"#cb22-23\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-24\"><a href=\"#cb22-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>accountErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateAccounts<span class=\"op\">(</span>accountsBatch<span class=\"op\">)</span></span>\n<span id=\"cb22-25\"><a href=\"#cb22-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb22-26\"><a href=\"#cb22-26\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-27\"><a href=\"#cb22-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Then, load and import all transfers with their timestamps from the historical source.</span></span>\n<span id=\"cb22-28\"><a href=\"#cb22-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfersBatch <span class=\"op\">:=</span> <span class=\"op\">[]</span>Transfer<span class=\"op\">{}</span></span>\n<span id=\"cb22-29\"><a href=\"#cb22-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> index<span class=\"op\">,</span> transfer <span class=\"op\">:=</span> <span class=\"kw\">range</span> historicalTransfers <span class=\"op\">{</span></span>\n<span id=\"cb22-30\"><a href=\"#cb22-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb22-31\"><a href=\"#cb22-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>    historicalTimestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span></span>\n<span id=\"cb22-32\"><a href=\"#cb22-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer<span class=\"op\">.</span>Timestamp <span class=\"op\">=</span> historicalTimestamp</span>\n<span id=\"cb22-33\"><a href=\"#cb22-33\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-34\"><a href=\"#cb22-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer<span class=\"op\">.</span>Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">{</span></span>\n<span id=\"cb22-35\"><a href=\"#cb22-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// Set the transfer as `imported`.</span></span>\n<span id=\"cb22-36\"><a href=\"#cb22-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Imported<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">,</span></span>\n<span id=\"cb22-37\"><a href=\"#cb22-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb22-38\"><a href=\"#cb22-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// must be `linked`.</span></span>\n<span id=\"cb22-39\"><a href=\"#cb22-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Linked<span class=\"op\">:</span> index <span class=\"op\">&lt;</span> <span class=\"bu\">len</span><span class=\"op\">(</span>historicalAccounts<span class=\"op\">)-</span><span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb22-40\"><a href=\"#cb22-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}.</span>ToUint16<span class=\"op\">()</span></span>\n<span id=\"cb22-41\"><a href=\"#cb22-41\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-42\"><a href=\"#cb22-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfersBatch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>transfersBatch<span class=\"op\">,</span> transfer<span class=\"op\">)</span></span>\n<span id=\"cb22-43\"><a href=\"#cb22-43\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb22-44\"><a href=\"#cb22-44\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-45\"><a href=\"#cb22-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">(</span>transfersBatch<span class=\"op\">)</span></span>\n<span id=\"cb22-46\"><a href=\"#cb22-46\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted..</span></span>\n<span id=\"cb22-47\"><a href=\"#cb22-47\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Since it is a linked chain, in case of any error the entire batch is rolled back and can be retried</span></span>\n<span id=\"cb22-48\"><a href=\"#cb22-48\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// with the same historical timestamps without regressing the cluster timestamp.</span></span></code></pre></div>\n"},{"path":"clients/java","html":"<!-- This file is generated by [/src/scripts/client_readmes.zig](/src/scripts/client_readmes.zig). -->\n\n<h1 id=\"tigerbeetle-java\"><a href=\"#tigerbeetle-java\"\nclass=\"anchor\">tigerbeetle-java</a></h1>\n<p>The TigerBeetle client for Java.</p>\n<p><a\nhref=\"https://javadoc.io/doc/com.tigerbeetle/tigerbeetle-java\"><img\nsrc=\"https://javadoc.io/badge2/com.tigerbeetle/tigerbeetle-java/javadoc.svg\"\nalt=\"javadoc\" /></a></p>\n<p><a href=\"https://central.sonatype.com/namespace/com.tigerbeetle\"><img\nsrc=\"https://img.shields.io/maven-central/v/com.tigerbeetle/tigerbeetle-java\"\nalt=\"maven-central\" /></a></p>\n<h2 id=\"prerequisites\"><a href=\"#prerequisites\"\nclass=\"anchor\">Prerequisites</a></h2>\n<p>Linux &gt;= 5.6 is the only production environment we support. But\nfor ease of development we also support macOS and Windows.</p>\n<ul>\n<li>Java &gt;= 11</li>\n<li>Maven &gt;= 3.6 (not strictly necessary but it‚Äôs what our guides\nassume)</li>\n</ul>\n<h2 id=\"setup\"><a href=\"#setup\" class=\"anchor\">Setup</a></h2>\n<p>First, create a directory for your project and <code>cd</code> into\nthe directory.</p>\n<p>Then create <code>pom.xml</code> and copy this into it:</p>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode xml\"><code class=\"sourceCode xml\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;<span class=\"kw\">project</span><span class=\"ot\"> xmlns=</span><span class=\"st\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">         xmlns:xsi=</span><span class=\"st\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">         xsi:schemaLocation=</span><span class=\"st\">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;<span class=\"kw\">modelVersion</span>&gt;4.0.0&lt;/<span class=\"kw\">modelVersion</span>&gt;</span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;<span class=\"kw\">groupId</span>&gt;com.tigerbeetle&lt;/<span class=\"kw\">groupId</span>&gt;</span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;<span class=\"kw\">artifactId</span>&gt;samples&lt;/<span class=\"kw\">artifactId</span>&gt;</span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;<span class=\"kw\">version</span>&gt;1.0-SNAPSHOT&lt;/<span class=\"kw\">version</span>&gt;</span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;<span class=\"kw\">properties</span>&gt;</span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    &lt;<span class=\"kw\">maven.compiler.source</span>&gt;11&lt;/<span class=\"kw\">maven.compiler.source</span>&gt;</span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    &lt;<span class=\"kw\">maven.compiler.target</span>&gt;11&lt;/<span class=\"kw\">maven.compiler.target</span>&gt;</span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;/<span class=\"kw\">properties</span>&gt;</span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-15\"><a href=\"#cb1-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;<span class=\"kw\">build</span>&gt;</span>\n<span id=\"cb1-16\"><a href=\"#cb1-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    &lt;<span class=\"kw\">plugins</span>&gt;</span>\n<span id=\"cb1-17\"><a href=\"#cb1-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>      &lt;<span class=\"kw\">plugin</span>&gt;</span>\n<span id=\"cb1-18\"><a href=\"#cb1-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;<span class=\"kw\">groupId</span>&gt;org.apache.maven.plugins&lt;/<span class=\"kw\">groupId</span>&gt;</span>\n<span id=\"cb1-19\"><a href=\"#cb1-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;<span class=\"kw\">artifactId</span>&gt;maven-compiler-plugin&lt;/<span class=\"kw\">artifactId</span>&gt;</span>\n<span id=\"cb1-20\"><a href=\"#cb1-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;<span class=\"kw\">version</span>&gt;3.8.1&lt;/<span class=\"kw\">version</span>&gt;</span>\n<span id=\"cb1-21\"><a href=\"#cb1-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;<span class=\"kw\">configuration</span>&gt;</span>\n<span id=\"cb1-22\"><a href=\"#cb1-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>          &lt;<span class=\"kw\">compilerArgs</span>&gt;</span>\n<span id=\"cb1-23\"><a href=\"#cb1-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>            &lt;<span class=\"kw\">arg</span>&gt;-Xlint:all,-options,-path&lt;/<span class=\"kw\">arg</span>&gt;</span>\n<span id=\"cb1-24\"><a href=\"#cb1-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>          &lt;/<span class=\"kw\">compilerArgs</span>&gt;</span>\n<span id=\"cb1-25\"><a href=\"#cb1-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;/<span class=\"kw\">configuration</span>&gt;</span>\n<span id=\"cb1-26\"><a href=\"#cb1-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>      &lt;/<span class=\"kw\">plugin</span>&gt;</span>\n<span id=\"cb1-27\"><a href=\"#cb1-27\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-28\"><a href=\"#cb1-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>      &lt;<span class=\"kw\">plugin</span>&gt;</span>\n<span id=\"cb1-29\"><a href=\"#cb1-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;<span class=\"kw\">groupId</span>&gt;org.codehaus.mojo&lt;/<span class=\"kw\">groupId</span>&gt;</span>\n<span id=\"cb1-30\"><a href=\"#cb1-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;<span class=\"kw\">artifactId</span>&gt;exec-maven-plugin&lt;/<span class=\"kw\">artifactId</span>&gt;</span>\n<span id=\"cb1-31\"><a href=\"#cb1-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;<span class=\"kw\">version</span>&gt;1.6.0&lt;/<span class=\"kw\">version</span>&gt;</span>\n<span id=\"cb1-32\"><a href=\"#cb1-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;<span class=\"kw\">configuration</span>&gt;</span>\n<span id=\"cb1-33\"><a href=\"#cb1-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>          &lt;<span class=\"kw\">mainClass</span>&gt;com.tigerbeetle.samples.Main&lt;/<span class=\"kw\">mainClass</span>&gt;</span>\n<span id=\"cb1-34\"><a href=\"#cb1-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;/<span class=\"kw\">configuration</span>&gt;</span>\n<span id=\"cb1-35\"><a href=\"#cb1-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>      &lt;/<span class=\"kw\">plugin</span>&gt;</span>\n<span id=\"cb1-36\"><a href=\"#cb1-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>    &lt;/<span class=\"kw\">plugins</span>&gt;</span>\n<span id=\"cb1-37\"><a href=\"#cb1-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;/<span class=\"kw\">build</span>&gt;</span>\n<span id=\"cb1-38\"><a href=\"#cb1-38\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-39\"><a href=\"#cb1-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;<span class=\"kw\">dependencies</span>&gt;</span>\n<span id=\"cb1-40\"><a href=\"#cb1-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>    &lt;<span class=\"kw\">dependency</span>&gt;</span>\n<span id=\"cb1-41\"><a href=\"#cb1-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>      &lt;<span class=\"kw\">groupId</span>&gt;com.tigerbeetle&lt;/<span class=\"kw\">groupId</span>&gt;</span>\n<span id=\"cb1-42\"><a href=\"#cb1-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>      &lt;<span class=\"kw\">artifactId</span>&gt;tigerbeetle-java&lt;/<span class=\"kw\">artifactId</span>&gt;</span>\n<span id=\"cb1-43\"><a href=\"#cb1-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"co\">&lt;!-- Grab the latest commit from: https://repo1.maven.org/maven2/com/tigerbeetle/tigerbeetle-java/maven-metadata.xml --&gt;</span></span>\n<span id=\"cb1-44\"><a href=\"#cb1-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>      &lt;<span class=\"kw\">version</span>&gt;0.0.1-3431&lt;/<span class=\"kw\">version</span>&gt;</span>\n<span id=\"cb1-45\"><a href=\"#cb1-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>    &lt;/<span class=\"kw\">dependency</span>&gt;</span>\n<span id=\"cb1-46\"><a href=\"#cb1-46\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;/<span class=\"kw\">dependencies</span>&gt;</span>\n<span id=\"cb1-47\"><a href=\"#cb1-47\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;/<span class=\"kw\">project</span>&gt;</span></code></pre></div>\n<p>Then, install the TigerBeetle client:</p>\n<pre class=\"console\"><code>mvn install</code></pre>\n<p>Now, create <code>src/main/java/Main.java</code> and copy this into\nit:</p>\n<div class=\"sourceCode\" id=\"cb3\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">import</span> <span class=\"im\">com</span><span class=\"op\">.</span><span class=\"im\">tigerbeetle</span><span class=\"op\">.*;</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">public</span> <span class=\"dt\">final</span> <span class=\"kw\">class</span> Main <span class=\"op\">{</span></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">public</span> <span class=\"dt\">static</span> <span class=\"dt\">void</span> <span class=\"fu\">main</span><span class=\"op\">(</span><span class=\"bu\">String</span><span class=\"op\">[]</span> args<span class=\"op\">)</span> <span class=\"kw\">throws</span> <span class=\"bu\">Exception</span> <span class=\"op\">{</span></span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">System</span><span class=\"op\">.</span><span class=\"fu\">out</span><span class=\"op\">.</span><span class=\"fu\">println</span><span class=\"op\">(</span><span class=\"st\">&quot;Import ok!&quot;</span><span class=\"op\">);</span></span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb3-7\"><a href=\"#cb3-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<p>Finally, build and run:</p>\n<pre class=\"console\"><code>mvn exec:java</code></pre>\n<p>Now that all prerequisites and dependencies are correctly set up,\nlet‚Äôs dig into using TigerBeetle.</p>\n<h2 id=\"sample-projects\"><a href=\"#sample-projects\"\nclass=\"anchor\">Sample projects</a></h2>\n<p>This document is primarily a reference guide to the client. Below are\nvarious sample projects demonstrating features of TigerBeetle.</p>\n<ul>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/java/samples/basic/\">Basic</a>:\nCreate two accounts and transfer an amount between them.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/java/samples/two-phase/\">Two-Phase\nTransfer</a>: Create two accounts and start a pending transfer between\nthem, then post the transfer.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/java/samples/two-phase-many/\">Many\nTwo-Phase Transfers</a>: Create two accounts and start a number of\npending transfer between them, posting and voiding alternating\ntransfers.</li>\n</ul>\n<h2 id=\"creating-a-client\"><a href=\"#creating-a-client\"\nclass=\"anchor\">Creating a Client</a></h2>\n<p>A client is created with a cluster ID and replica addresses for all\nreplicas in the cluster. The cluster ID and replica addresses are both\nchosen by the system that starts the TigerBeetle cluster.</p>\n<p>Clients are thread-safe and a single instance should be shared\nbetween multiple concurrent tasks.</p>\n<p>Multiple clients are useful when connecting to more than one\nTigerBeetle cluster.</p>\n<p>In this example the cluster ID is <code>0</code> and there is one\nreplica. The address is read from the <code>TB_ADDRESS</code>\nenvironment variable and defaults to port <code>3000</code>.</p>\n<div class=\"sourceCode\" id=\"cb5\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">String</span> replicaAddress <span class=\"op\">=</span> <span class=\"bu\">System</span><span class=\"op\">.</span><span class=\"fu\">getenv</span><span class=\"op\">(</span><span class=\"st\">&quot;TB_ADDRESS&quot;</span><span class=\"op\">);</span></span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">byte</span><span class=\"op\">[]</span> clusterID <span class=\"op\">=</span> UInt128<span class=\"op\">.</span><span class=\"fu\">asBytes</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">String</span><span class=\"op\">[]</span> replicaAddresses <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"bu\">String</span><span class=\"op\">[]</span> <span class=\"op\">{</span>replicaAddress <span class=\"op\">==</span> <span class=\"kw\">null</span> <span class=\"op\">?</span> <span class=\"st\">&quot;3000&quot;</span> <span class=\"op\">:</span> replicaAddress<span class=\"op\">};</span></span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">try</span> <span class=\"op\">(</span><span class=\"dt\">var</span> client <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">Client</span><span class=\"op\">(</span>clusterID<span class=\"op\">,</span> replicaAddresses<span class=\"op\">))</span> <span class=\"op\">{</span></span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Use client</span></span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<p>The following are valid addresses:</p>\n<ul>\n<li><code>3000</code> (interpreted as <code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1:3000</code> (interpreted as\n<code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1</code> (interpreted as <code>127.0.0.1:3001</code>,\n<code>3001</code> is the default port)</li>\n</ul>\n<h2 id=\"creating-accounts\"><a href=\"#creating-accounts\"\nclass=\"anchor\">Creating Accounts</a></h2>\n<p>See details for account fields in the <a\nhref=\"https://docs.tigerbeetle.com/reference/account\">Accounts\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb6\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountBatch accounts <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">AccountBatch</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span>UInt128<span class=\"op\">.</span><span class=\"fu\">id</span><span class=\"op\">());</span> <span class=\"co\">// TigerBeetle time-based ID.</span></span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setUserData128</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb6-5\"><a href=\"#cb6-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setUserData64</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb6-6\"><a href=\"#cb6-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setUserData32</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb6-7\"><a href=\"#cb6-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb6-8\"><a href=\"#cb6-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">718</span><span class=\"op\">);</span></span>\n<span id=\"cb6-9\"><a href=\"#cb6-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>AccountFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb6-10\"><a href=\"#cb6-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setTimestamp</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb6-11\"><a href=\"#cb6-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-12\"><a href=\"#cb6-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateAccountResultBatch accountErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span><span class=\"op\">(</span>accounts<span class=\"op\">);</span></span>\n<span id=\"cb6-13\"><a href=\"#cb6-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<p>See details for the recommended ID scheme in <a\nhref=\"https://docs.tigerbeetle.com/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<p>The 128-bit fields like <code>id</code> and\n<code>user_data_128</code> have a few overrides to make it easier to\nintegrate. You can either pass in a long, a pair of longs (least and\nmost significant bits), or a <code>byte[]</code>.</p>\n<p>There is also a <code>com.tigerbeetle.UInt128</code> helper with\nstatic methods for converting 128-bit little-endian unsigned integers\nbetween instances of <code>long</code>, <code>java.util.UUID</code>,\n<code>java.math.BigInteger</code> and <code>byte[]</code>.</p>\n<p>The fields for transfer amounts and account balances are also\n128-bit, but they are always represented as a\n<code>java.math.BigInteger</code>.</p>\n<h3 id=\"account-flags\"><a href=\"#account-flags\" class=\"anchor\">Account\nFlags</a></h3>\n<p>The account flags value is a bitfield. See details for these flags in\nthe <a\nhref=\"https://docs.tigerbeetle.com/reference/account#flags\">Accounts\nreference</a>.</p>\n<p>To toggle behavior for an account, combine enum values stored in the\n<code>AccountFlags</code> object with bitwise-or:</p>\n<ul>\n<li><code>AccountFlags.LINKED</code></li>\n<li><code>AccountFlags.DEBITS_MUST_NOT_EXCEED_CREDITS</code></li>\n<li><code>AccountFlags.CREDITS_MUST_NOT_EXCEED_CREDITS</code></li>\n<li><code>AccountFlags.HISTORY</code></li>\n</ul>\n<p>For example, to link two accounts where the first account\nadditionally has the <code>debits_must_not_exceed_credits</code>\nconstraint:</p>\n<div class=\"sourceCode\" id=\"cb7\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountBatch accounts <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">AccountBatch</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb7-2\"><a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-3\"><a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb7-4\"><a href=\"#cb7-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">100</span><span class=\"op\">);</span></span>\n<span id=\"cb7-5\"><a href=\"#cb7-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb7-6\"><a href=\"#cb7-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">718</span><span class=\"op\">);</span></span>\n<span id=\"cb7-7\"><a href=\"#cb7-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>AccountFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span> <span class=\"op\">|</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">DEBITS_MUST_NOT_EXCEED_CREDITS</span><span class=\"op\">);</span></span>\n<span id=\"cb7-8\"><a href=\"#cb7-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-9\"><a href=\"#cb7-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb7-10\"><a href=\"#cb7-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">);</span></span>\n<span id=\"cb7-11\"><a href=\"#cb7-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb7-12\"><a href=\"#cb7-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">718</span><span class=\"op\">);</span></span>\n<span id=\"cb7-13\"><a href=\"#cb7-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>AccountFlags<span class=\"op\">.</span><span class=\"fu\">HISTORY</span><span class=\"op\">);</span></span>\n<span id=\"cb7-14\"><a href=\"#cb7-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-15\"><a href=\"#cb7-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateAccountResultBatch accountErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span><span class=\"op\">(</span>accounts<span class=\"op\">);</span></span>\n<span id=\"cb7-16\"><a href=\"#cb7-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h3 id=\"response-and-errors\"><a href=\"#response-and-errors\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all accounts were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for an account that failed. The error\nobject contains an error code and the index of the account in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"https://docs.tigerbeetle.com/reference/requests/create_accounts\">create_accounts\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb8\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb8-1\"><a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountBatch accounts <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">AccountBatch</span><span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">);</span></span>\n<span id=\"cb8-2\"><a href=\"#cb8-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb8-3\"><a href=\"#cb8-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb8-4\"><a href=\"#cb8-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb8-5\"><a href=\"#cb8-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb8-6\"><a href=\"#cb8-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">718</span><span class=\"op\">);</span></span>\n<span id=\"cb8-7\"><a href=\"#cb8-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>AccountFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb8-8\"><a href=\"#cb8-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb8-9\"><a href=\"#cb8-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb8-10\"><a href=\"#cb8-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb8-11\"><a href=\"#cb8-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb8-12\"><a href=\"#cb8-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">718</span><span class=\"op\">);</span></span>\n<span id=\"cb8-13\"><a href=\"#cb8-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>AccountFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb8-14\"><a href=\"#cb8-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb8-15\"><a href=\"#cb8-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb8-16\"><a href=\"#cb8-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">104</span><span class=\"op\">);</span></span>\n<span id=\"cb8-17\"><a href=\"#cb8-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb8-18\"><a href=\"#cb8-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">718</span><span class=\"op\">);</span></span>\n<span id=\"cb8-19\"><a href=\"#cb8-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>AccountFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb8-20\"><a href=\"#cb8-20\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb8-21\"><a href=\"#cb8-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateAccountResultBatch accountErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span><span class=\"op\">(</span>accounts<span class=\"op\">);</span></span>\n<span id=\"cb8-22\"><a href=\"#cb8-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">while</span> <span class=\"op\">(</span>accountErrors<span class=\"op\">.</span><span class=\"fu\">next</span><span class=\"op\">())</span> <span class=\"op\">{</span></span>\n<span id=\"cb8-23\"><a href=\"#cb8-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">switch</span> <span class=\"op\">(</span>accountErrors<span class=\"op\">.</span><span class=\"fu\">getResult</span><span class=\"op\">())</span> <span class=\"op\">{</span></span>\n<span id=\"cb8-24\"><a href=\"#cb8-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">case</span> Exists<span class=\"op\">:</span></span>\n<span id=\"cb8-25\"><a href=\"#cb8-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"bu\">System</span><span class=\"op\">.</span><span class=\"fu\">err</span><span class=\"op\">.</span><span class=\"fu\">printf</span><span class=\"op\">(</span><span class=\"st\">&quot;Batch account at </span><span class=\"sc\">%d</span><span class=\"st\"> already exists.</span><span class=\"sc\">\\n</span><span class=\"st\">&quot;</span><span class=\"op\">,</span></span>\n<span id=\"cb8-26\"><a href=\"#cb8-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>                    accountErrors<span class=\"op\">.</span><span class=\"fu\">getIndex</span><span class=\"op\">());</span></span>\n<span id=\"cb8-27\"><a href=\"#cb8-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb8-28\"><a href=\"#cb8-28\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb8-29\"><a href=\"#cb8-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"kw\">default</span><span class=\"op\">:</span></span>\n<span id=\"cb8-30\"><a href=\"#cb8-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"bu\">System</span><span class=\"op\">.</span><span class=\"fu\">err</span><span class=\"op\">.</span><span class=\"fu\">printf</span><span class=\"op\">(</span><span class=\"st\">&quot;Batch account at </span><span class=\"sc\">%d</span><span class=\"st\"> failed to create </span><span class=\"sc\">%s</span><span class=\"st\">.</span><span class=\"sc\">\\n</span><span class=\"st\">&quot;</span><span class=\"op\">,</span></span>\n<span id=\"cb8-31\"><a href=\"#cb8-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>                    accountErrors<span class=\"op\">.</span><span class=\"fu\">getIndex</span><span class=\"op\">(),</span> accountErrors<span class=\"op\">.</span><span class=\"fu\">getResult</span><span class=\"op\">());</span></span>\n<span id=\"cb8-32\"><a href=\"#cb8-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb8-33\"><a href=\"#cb8-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb8-34\"><a href=\"#cb8-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<h2 id=\"account-lookup\"><a href=\"#account-lookup\" class=\"anchor\">Account\nLookup</a></h2>\n<p>Account lookup is batched, like account creation. Pass in all IDs to\nfetch. The account for each matched ID is returned.</p>\n<p>If no account matches an ID, no object is returned for that account.\nSo the order of accounts in the response is not necessarily the same as\nthe order of IDs in the request. You can refer to the ID field in the\nresponse to distinguish accounts.</p>\n<div class=\"sourceCode\" id=\"cb9\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>IdBatch ids <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">IdBatch</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb9-2\"><a href=\"#cb9-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ids<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">(</span><span class=\"dv\">100</span><span class=\"op\">);</span></span>\n<span id=\"cb9-3\"><a href=\"#cb9-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>ids<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">);</span></span>\n<span id=\"cb9-4\"><a href=\"#cb9-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb9-5\"><a href=\"#cb9-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountBatch accounts <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">lookupAccounts</span><span class=\"op\">(</span>ids<span class=\"op\">);</span></span></code></pre></div>\n<h2 id=\"create-transfers\"><a href=\"#create-transfers\"\nclass=\"anchor\">Create Transfers</a></h2>\n<p>This creates a journal entry between two accounts.</p>\n<p>See details for transfer fields in the <a\nhref=\"https://docs.tigerbeetle.com/reference/transfer\">Transfers\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb10\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb10-1\"><a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb10-2\"><a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb10-3\"><a href=\"#cb10-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb10-4\"><a href=\"#cb10-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span>UInt128<span class=\"op\">.</span><span class=\"fu\">id</span><span class=\"op\">());</span></span>\n<span id=\"cb10-5\"><a href=\"#cb10-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb10-6\"><a href=\"#cb10-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb10-7\"><a href=\"#cb10-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb10-8\"><a href=\"#cb10-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setUserData128</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb10-9\"><a href=\"#cb10-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setUserData64</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb10-10\"><a href=\"#cb10-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setUserData32</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb10-11\"><a href=\"#cb10-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setTimeout</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb10-12\"><a href=\"#cb10-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb10-13\"><a href=\"#cb10-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb10-14\"><a href=\"#cb10-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb10-15\"><a href=\"#cb10-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setTimeout</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb10-16\"><a href=\"#cb10-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb10-17\"><a href=\"#cb10-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb10-18\"><a href=\"#cb10-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<p>See details for the recommended ID scheme in <a\nhref=\"https://docs.tigerbeetle.com/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<h3 id=\"response-and-errors-1\"><a href=\"#response-and-errors-1\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all transfers were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for a transfer that failed. The error\nobject contains an error code and the index of the transfer in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"https://docs.tigerbeetle.com/reference/requests/create_transfers\">create_transfers\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb11\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">);</span></span>\n<span id=\"cb11-2\"><a href=\"#cb11-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb11-3\"><a href=\"#cb11-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb11-4\"><a href=\"#cb11-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb11-5\"><a href=\"#cb11-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb11-6\"><a href=\"#cb11-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb11-7\"><a href=\"#cb11-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb11-8\"><a href=\"#cb11-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb11-9\"><a href=\"#cb11-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb11-10\"><a href=\"#cb11-10\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb11-11\"><a href=\"#cb11-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb11-12\"><a href=\"#cb11-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb11-13\"><a href=\"#cb11-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb11-14\"><a href=\"#cb11-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb11-15\"><a href=\"#cb11-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb11-16\"><a href=\"#cb11-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb11-17\"><a href=\"#cb11-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb11-18\"><a href=\"#cb11-18\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb11-19\"><a href=\"#cb11-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb11-20\"><a href=\"#cb11-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">);</span></span>\n<span id=\"cb11-21\"><a href=\"#cb11-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb11-22\"><a href=\"#cb11-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb11-23\"><a href=\"#cb11-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb11-24\"><a href=\"#cb11-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb11-25\"><a href=\"#cb11-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb11-26\"><a href=\"#cb11-26\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb11-27\"><a href=\"#cb11-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb11-28\"><a href=\"#cb11-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">while</span> <span class=\"op\">(</span>transferErrors<span class=\"op\">.</span><span class=\"fu\">next</span><span class=\"op\">())</span> <span class=\"op\">{</span></span>\n<span id=\"cb11-29\"><a href=\"#cb11-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">switch</span> <span class=\"op\">(</span>transferErrors<span class=\"op\">.</span><span class=\"fu\">getResult</span><span class=\"op\">())</span> <span class=\"op\">{</span></span>\n<span id=\"cb11-30\"><a href=\"#cb11-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">case</span> ExceedsCredits<span class=\"op\">:</span></span>\n<span id=\"cb11-31\"><a href=\"#cb11-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"bu\">System</span><span class=\"op\">.</span><span class=\"fu\">err</span><span class=\"op\">.</span><span class=\"fu\">printf</span><span class=\"op\">(</span><span class=\"st\">&quot;Batch transfer at </span><span class=\"sc\">%d</span><span class=\"st\"> already exists.</span><span class=\"sc\">\\n</span><span class=\"st\">&quot;</span><span class=\"op\">,</span></span>\n<span id=\"cb11-32\"><a href=\"#cb11-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>                    transferErrors<span class=\"op\">.</span><span class=\"fu\">getIndex</span><span class=\"op\">());</span></span>\n<span id=\"cb11-33\"><a href=\"#cb11-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb11-34\"><a href=\"#cb11-34\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb11-35\"><a href=\"#cb11-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"kw\">default</span><span class=\"op\">:</span></span>\n<span id=\"cb11-36\"><a href=\"#cb11-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"bu\">System</span><span class=\"op\">.</span><span class=\"fu\">err</span><span class=\"op\">.</span><span class=\"fu\">printf</span><span class=\"op\">(</span><span class=\"st\">&quot;Batch transfer at </span><span class=\"sc\">%d</span><span class=\"st\"> failed to create: </span><span class=\"sc\">%s\\n</span><span class=\"st\">&quot;</span><span class=\"op\">,</span></span>\n<span id=\"cb11-37\"><a href=\"#cb11-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>                    transferErrors<span class=\"op\">.</span><span class=\"fu\">getIndex</span><span class=\"op\">(),</span> transferErrors<span class=\"op\">.</span><span class=\"fu\">getResult</span><span class=\"op\">());</span></span>\n<span id=\"cb11-38\"><a href=\"#cb11-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb11-39\"><a href=\"#cb11-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb11-40\"><a href=\"#cb11-40\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<h2 id=\"batching\"><a href=\"#batching\" class=\"anchor\">Batching</a></h2>\n<p>TigerBeetle performance is maximized when you batch API requests. The\nclient does not do this automatically for you. So, for example, you\n<em>can</em> insert 1 million transfers one at a time like so:</p>\n<div class=\"sourceCode\" id=\"cb12\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb12-1\"><a href=\"#cb12-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">ResultSet</span> dataSource <span class=\"op\">=</span> <span class=\"kw\">null</span><span class=\"op\">;</span> <span class=\"co\">/* Loaded from an external source. */</span><span class=\"op\">;</span></span>\n<span id=\"cb12-2\"><a href=\"#cb12-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">while</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">next</span><span class=\"op\">())</span> <span class=\"op\">{</span></span>\n<span id=\"cb12-3\"><a href=\"#cb12-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TransferBatch batch <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb12-4\"><a href=\"#cb12-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb12-5\"><a href=\"#cb12-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb12-6\"><a href=\"#cb12-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb12-7\"><a href=\"#cb12-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;debit_account_id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb12-8\"><a href=\"#cb12-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;credit_account_id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb12-9\"><a href=\"#cb12-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getBigDecimal</span><span class=\"op\">(</span><span class=\"st\">&quot;amount&quot;</span><span class=\"op\">).</span><span class=\"fu\">toBigInteger</span><span class=\"op\">());</span></span>\n<span id=\"cb12-10\"><a href=\"#cb12-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getInt</span><span class=\"op\">(</span><span class=\"st\">&quot;ledger&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb12-11\"><a href=\"#cb12-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getInt</span><span class=\"op\">(</span><span class=\"st\">&quot;code&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb12-12\"><a href=\"#cb12-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb12-13\"><a href=\"#cb12-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>batch<span class=\"op\">);</span></span>\n<span id=\"cb12-14\"><a href=\"#cb12-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb12-15\"><a href=\"#cb12-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<p>But the insert rate will be a <em>fraction</em> of potential.\nInstead, <strong>always batch what you can</strong>.</p>\n<p>The maximum batch size is set in the TigerBeetle server. The default\nis 8190.</p>\n<div class=\"sourceCode\" id=\"cb13\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb13-1\"><a href=\"#cb13-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">ResultSet</span> dataSource <span class=\"op\">=</span> <span class=\"kw\">null</span><span class=\"op\">;</span> <span class=\"co\">/* Loaded from an external source. */</span><span class=\"op\">;</span></span>\n<span id=\"cb13-2\"><a href=\"#cb13-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb13-3\"><a href=\"#cb13-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> BATCH_SIZE <span class=\"op\">=</span> <span class=\"dv\">8190</span><span class=\"op\">;</span></span>\n<span id=\"cb13-4\"><a href=\"#cb13-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch batch <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span>BATCH_SIZE<span class=\"op\">);</span></span>\n<span id=\"cb13-5\"><a href=\"#cb13-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">while</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">next</span><span class=\"op\">())</span> <span class=\"op\">{</span></span>\n<span id=\"cb13-6\"><a href=\"#cb13-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb13-7\"><a href=\"#cb13-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb13-8\"><a href=\"#cb13-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;debit_account_id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb13-9\"><a href=\"#cb13-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;credit_account_id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb13-10\"><a href=\"#cb13-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getBigDecimal</span><span class=\"op\">(</span><span class=\"st\">&quot;amount&quot;</span><span class=\"op\">).</span><span class=\"fu\">toBigInteger</span><span class=\"op\">());</span></span>\n<span id=\"cb13-11\"><a href=\"#cb13-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getInt</span><span class=\"op\">(</span><span class=\"st\">&quot;ledger&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb13-12\"><a href=\"#cb13-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getInt</span><span class=\"op\">(</span><span class=\"st\">&quot;code&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb13-13\"><a href=\"#cb13-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb13-14\"><a href=\"#cb13-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> <span class=\"op\">(</span>batch<span class=\"op\">.</span><span class=\"fu\">getLength</span><span class=\"op\">()</span> <span class=\"op\">==</span> BATCH_SIZE<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb13-15\"><a href=\"#cb13-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>        CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>batch<span class=\"op\">);</span></span>\n<span id=\"cb13-16\"><a href=\"#cb13-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb13-17\"><a href=\"#cb13-17\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb13-18\"><a href=\"#cb13-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// Reset the batch for the next iteration.</span></span>\n<span id=\"cb13-19\"><a href=\"#cb13-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>        batch<span class=\"op\">.</span><span class=\"fu\">beforeFirst</span><span class=\"op\">();</span></span>\n<span id=\"cb13-20\"><a href=\"#cb13-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb13-21\"><a href=\"#cb13-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb13-22\"><a href=\"#cb13-22\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb13-23\"><a href=\"#cb13-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> <span class=\"op\">(</span>batch<span class=\"op\">.</span><span class=\"fu\">getLength</span><span class=\"op\">()</span> <span class=\"op\">&gt;</span> <span class=\"dv\">0</span><span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb13-24\"><a href=\"#cb13-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Send the remaining items.</span></span>\n<span id=\"cb13-25\"><a href=\"#cb13-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>batch<span class=\"op\">);</span></span>\n<span id=\"cb13-26\"><a href=\"#cb13-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb13-27\"><a href=\"#cb13-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<h3 id=\"queues-and-workers\"><a href=\"#queues-and-workers\"\nclass=\"anchor\">Queues and Workers</a></h3>\n<p>If you are making requests to TigerBeetle from workers pulling jobs\nfrom a queue, you can batch requests to TigerBeetle by having the worker\nact on multiple jobs from the queue at once rather than one at a time.\ni.e. pulling multiple jobs from the queue rather than just one.</p>\n<h2 id=\"transfer-flags\"><a href=\"#transfer-flags\"\nclass=\"anchor\">Transfer Flags</a></h2>\n<p>The transfer <code>flags</code> value is a bitfield. See details for\nthese flags in the <a\nhref=\"https://docs.tigerbeetle.com/reference/transfer#flags\">Transfers\nreference</a>.</p>\n<p>To toggle behavior for an account, combine enum values stored in the\n<code>TransferFlags</code> object with bitwise-or:</p>\n<ul>\n<li><code>TransferFlags.NONE</code></li>\n<li><code>TransferFlags.LINKED</code></li>\n<li><code>TransferFlags.PENDING</code></li>\n<li><code>TransferFlags.POST_PENDING_TRANSFER</code></li>\n<li><code>TransferFlags.VOID_PENDING_TRANSFER</code></li>\n</ul>\n<p>For example, to link <code>transfer0</code> and\n<code>transfer1</code>:</p>\n<div class=\"sourceCode\" id=\"cb14\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb14-1\"><a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb14-2\"><a href=\"#cb14-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-3\"><a href=\"#cb14-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// First transfer</span></span>\n<span id=\"cb14-4\"><a href=\"#cb14-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb14-5\"><a href=\"#cb14-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">4</span><span class=\"op\">);</span></span>\n<span id=\"cb14-6\"><a href=\"#cb14-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb14-7\"><a href=\"#cb14-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb14-8\"><a href=\"#cb14-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb14-9\"><a href=\"#cb14-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb14-10\"><a href=\"#cb14-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb14-11\"><a href=\"#cb14-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span><span class=\"op\">);</span></span>\n<span id=\"cb14-12\"><a href=\"#cb14-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-13\"><a href=\"#cb14-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb14-14\"><a href=\"#cb14-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">5</span><span class=\"op\">);</span></span>\n<span id=\"cb14-15\"><a href=\"#cb14-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb14-16\"><a href=\"#cb14-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb14-17\"><a href=\"#cb14-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb14-18\"><a href=\"#cb14-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb14-19\"><a href=\"#cb14-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb14-20\"><a href=\"#cb14-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb14-21\"><a href=\"#cb14-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-22\"><a href=\"#cb14-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb14-23\"><a href=\"#cb14-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h3 id=\"two-phase-transfers\"><a href=\"#two-phase-transfers\"\nclass=\"anchor\">Two-Phase Transfers</a></h3>\n<p>Two-phase transfers are supported natively by toggling the\nappropriate flag. TigerBeetle will then adjust the\n<code>credits_pending</code> and <code>debits_pending</code> fields of\nthe appropriate accounts. A corresponding post pending transfer then\nneeds to be sent to post or void the transfer.</p>\n<h4 id=\"post-a-pending-transfer\"><a href=\"#post-a-pending-transfer\"\nclass=\"anchor\">Post a Pending Transfer</a></h4>\n<p>With <code>flags</code> set to <code>post_pending_transfer</code>,\nTigerBeetle will post the transfer. TigerBeetle will atomically roll\nback the changes to <code>debits_pending</code> and\n<code>credits_pending</code> of the appropriate accounts and apply them\nto the <code>debits_posted</code> and <code>credits_posted</code>\nbalances.</p>\n<div class=\"sourceCode\" id=\"cb15\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb15-1\"><a href=\"#cb15-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb15-2\"><a href=\"#cb15-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-3\"><a href=\"#cb15-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb15-4\"><a href=\"#cb15-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">6</span><span class=\"op\">);</span></span>\n<span id=\"cb15-5\"><a href=\"#cb15-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb15-6\"><a href=\"#cb15-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb15-7\"><a href=\"#cb15-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb15-8\"><a href=\"#cb15-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb15-9\"><a href=\"#cb15-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb15-10\"><a href=\"#cb15-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">PENDING</span><span class=\"op\">);</span></span>\n<span id=\"cb15-11\"><a href=\"#cb15-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-12\"><a href=\"#cb15-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb15-13\"><a href=\"#cb15-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb15-14\"><a href=\"#cb15-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-15\"><a href=\"#cb15-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb15-16\"><a href=\"#cb15-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-17\"><a href=\"#cb15-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb15-18\"><a href=\"#cb15-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">7</span><span class=\"op\">);</span></span>\n<span id=\"cb15-19\"><a href=\"#cb15-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span>TransferBatch<span class=\"op\">.</span><span class=\"fu\">AMOUNT_MAX</span><span class=\"op\">);</span></span>\n<span id=\"cb15-20\"><a href=\"#cb15-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setPendingId</span><span class=\"op\">(</span><span class=\"dv\">6</span><span class=\"op\">);</span></span>\n<span id=\"cb15-21\"><a href=\"#cb15-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">POST_PENDING_TRANSFER</span><span class=\"op\">);</span></span>\n<span id=\"cb15-22\"><a href=\"#cb15-22\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-23\"><a href=\"#cb15-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb15-24\"><a href=\"#cb15-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h4 id=\"void-a-pending-transfer\"><a href=\"#void-a-pending-transfer\"\nclass=\"anchor\">Void a Pending Transfer</a></h4>\n<p>In contrast, with <code>flags</code> set to\n<code>void_pending_transfer</code>, TigerBeetle will void the transfer.\nTigerBeetle will roll back the changes to <code>debits_pending</code>\nand <code>credits_pending</code> of the appropriate accounts and\n<strong>not</strong> apply them to the <code>debits_posted</code> and\n<code>credits_posted</code> balances.</p>\n<div class=\"sourceCode\" id=\"cb16\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb16-1\"><a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb16-2\"><a href=\"#cb16-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb16-3\"><a href=\"#cb16-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb16-4\"><a href=\"#cb16-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">8</span><span class=\"op\">);</span></span>\n<span id=\"cb16-5\"><a href=\"#cb16-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb16-6\"><a href=\"#cb16-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb16-7\"><a href=\"#cb16-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb16-8\"><a href=\"#cb16-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb16-9\"><a href=\"#cb16-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb16-10\"><a href=\"#cb16-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">PENDING</span><span class=\"op\">);</span></span>\n<span id=\"cb16-11\"><a href=\"#cb16-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb16-12\"><a href=\"#cb16-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb16-13\"><a href=\"#cb16-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb16-14\"><a href=\"#cb16-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb16-15\"><a href=\"#cb16-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb16-16\"><a href=\"#cb16-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb16-17\"><a href=\"#cb16-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb16-18\"><a href=\"#cb16-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">9</span><span class=\"op\">);</span></span>\n<span id=\"cb16-19\"><a href=\"#cb16-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb16-20\"><a href=\"#cb16-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setPendingId</span><span class=\"op\">(</span><span class=\"dv\">8</span><span class=\"op\">);</span></span>\n<span id=\"cb16-21\"><a href=\"#cb16-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">VOID_PENDING_TRANSFER</span><span class=\"op\">);</span></span>\n<span id=\"cb16-22\"><a href=\"#cb16-22\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb16-23\"><a href=\"#cb16-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb16-24\"><a href=\"#cb16-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h2 id=\"transfer-lookup\"><a href=\"#transfer-lookup\"\nclass=\"anchor\">Transfer Lookup</a></h2>\n<p>NOTE: While transfer lookup exists, it is not a flexible query API.\nWe are developing query APIs and there will be new methods for querying\ntransfers in the future.</p>\n<p>Transfer lookup is batched, like transfer creation. Pass in all\n<code>id</code>s to fetch, and matched transfers are returned.</p>\n<p>If no transfer matches an <code>id</code>, no object is returned for\nthat transfer. So the order of transfers in the response is not\nnecessarily the same as the order of <code>id</code>s in the request.\nYou can refer to the <code>id</code> field in the response to\ndistinguish transfers.</p>\n<div class=\"sourceCode\" id=\"cb17\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb17-1\"><a href=\"#cb17-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>IdBatch ids <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">IdBatch</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb17-2\"><a href=\"#cb17-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ids<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb17-3\"><a href=\"#cb17-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>ids<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb17-4\"><a href=\"#cb17-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb17-5\"><a href=\"#cb17-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">lookupTransfers</span><span class=\"op\">(</span>ids<span class=\"op\">);</span></span></code></pre></div>\n<h2 id=\"get-account-transfers\"><a href=\"#get-account-transfers\"\nclass=\"anchor\">Get Account Transfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the transfers involving a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb18\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb18-1\"><a href=\"#cb18-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountFilter filter <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">AccountFilter</span><span class=\"op\">();</span></span>\n<span id=\"cb18-2\"><a href=\"#cb18-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setAccountId</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb18-3\"><a href=\"#cb18-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData128</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by UserData.</span></span>\n<span id=\"cb18-4\"><a href=\"#cb18-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData64</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb18-5\"><a href=\"#cb18-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData32</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb18-6\"><a href=\"#cb18-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Code.</span></span>\n<span id=\"cb18-7\"><a href=\"#cb18-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setTimestampMin</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb18-8\"><a href=\"#cb18-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setTimestampMax</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb18-9\"><a href=\"#cb18-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setLimit</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span> <span class=\"co\">// Limit to ten transfers at most.</span></span>\n<span id=\"cb18-10\"><a href=\"#cb18-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setDebits</span><span class=\"op\">(</span><span class=\"kw\">true</span><span class=\"op\">);</span> <span class=\"co\">// Include transfer from the debit side.</span></span>\n<span id=\"cb18-11\"><a href=\"#cb18-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setCredits</span><span class=\"op\">(</span><span class=\"kw\">true</span><span class=\"op\">);</span> <span class=\"co\">// Include transfer from the credit side.</span></span>\n<span id=\"cb18-12\"><a href=\"#cb18-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setReversed</span><span class=\"op\">(</span><span class=\"kw\">true</span><span class=\"op\">);</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb18-13\"><a href=\"#cb18-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb18-14\"><a href=\"#cb18-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">getAccountTransfers</span><span class=\"op\">(</span>filter<span class=\"op\">);</span></span></code></pre></div>\n<h2 id=\"get-account-balances\"><a href=\"#get-account-balances\"\nclass=\"anchor\">Get Account Balances</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the point-in-time balances of a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>Only accounts created with the flag <a\nhref=\"https://docs.tigerbeetle.com/reference/account#flagshistory\"><code>history</code></a>\nset retain <a\nhref=\"https://docs.tigerbeetle.com/reference/requests/get_account_balances\">historical\nbalances</a>.</p>\n<p>The balances in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb19\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb19-1\"><a href=\"#cb19-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountFilter filter <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">AccountFilter</span><span class=\"op\">();</span></span>\n<span id=\"cb19-2\"><a href=\"#cb19-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setAccountId</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb19-3\"><a href=\"#cb19-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData128</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by UserData.</span></span>\n<span id=\"cb19-4\"><a href=\"#cb19-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData64</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb19-5\"><a href=\"#cb19-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData32</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb19-6\"><a href=\"#cb19-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Code.</span></span>\n<span id=\"cb19-7\"><a href=\"#cb19-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setTimestampMin</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb19-8\"><a href=\"#cb19-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setTimestampMax</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb19-9\"><a href=\"#cb19-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setLimit</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb19-10\"><a href=\"#cb19-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setDebits</span><span class=\"op\">(</span><span class=\"kw\">true</span><span class=\"op\">);</span> <span class=\"co\">// Include transfer from the debit side.</span></span>\n<span id=\"cb19-11\"><a href=\"#cb19-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setCredits</span><span class=\"op\">(</span><span class=\"kw\">true</span><span class=\"op\">);</span> <span class=\"co\">// Include transfer from the credit side.</span></span>\n<span id=\"cb19-12\"><a href=\"#cb19-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setReversed</span><span class=\"op\">(</span><span class=\"kw\">true</span><span class=\"op\">);</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb19-13\"><a href=\"#cb19-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb19-14\"><a href=\"#cb19-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountBalanceBatch account_balances <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">getAccountBalances</span><span class=\"op\">(</span>filter<span class=\"op\">);</span></span></code></pre></div>\n<h2 id=\"query-accounts\"><a href=\"#query-accounts\" class=\"anchor\">Query\nAccounts</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query accounts by the intersection of some fields and by timestamp\nrange.</p>\n<p>The accounts in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb20\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb20-1\"><a href=\"#cb20-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>QueryFilter filter <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">QueryFilter</span><span class=\"op\">();</span></span>\n<span id=\"cb20-2\"><a href=\"#cb20-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData128</span><span class=\"op\">(</span><span class=\"dv\">1000</span><span class=\"op\">);</span> <span class=\"co\">// Filter by UserData.</span></span>\n<span id=\"cb20-3\"><a href=\"#cb20-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData64</span><span class=\"op\">(</span><span class=\"dv\">100</span><span class=\"op\">);</span></span>\n<span id=\"cb20-4\"><a href=\"#cb20-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData32</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb20-5\"><a href=\"#cb20-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span> <span class=\"co\">// Filter by Code.</span></span>\n<span id=\"cb20-6\"><a href=\"#cb20-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Ledger.</span></span>\n<span id=\"cb20-7\"><a href=\"#cb20-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setTimestampMin</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb20-8\"><a href=\"#cb20-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setTimestampMax</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb20-9\"><a href=\"#cb20-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setLimit</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb20-10\"><a href=\"#cb20-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setReversed</span><span class=\"op\">(</span><span class=\"kw\">true</span><span class=\"op\">);</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb20-11\"><a href=\"#cb20-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb20-12\"><a href=\"#cb20-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountBatch accounts <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">queryAccounts</span><span class=\"op\">(</span>filter<span class=\"op\">);</span></span></code></pre></div>\n<h2 id=\"query-transfers\"><a href=\"#query-transfers\" class=\"anchor\">Query\nTransfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query transfers by the intersection of some fields and by timestamp\nrange.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb21\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb21-1\"><a href=\"#cb21-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>QueryFilter filter <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">QueryFilter</span><span class=\"op\">();</span></span>\n<span id=\"cb21-2\"><a href=\"#cb21-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData128</span><span class=\"op\">(</span><span class=\"dv\">1000</span><span class=\"op\">);</span> <span class=\"co\">// Filter by UserData.</span></span>\n<span id=\"cb21-3\"><a href=\"#cb21-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData64</span><span class=\"op\">(</span><span class=\"dv\">100</span><span class=\"op\">);</span></span>\n<span id=\"cb21-4\"><a href=\"#cb21-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData32</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb21-5\"><a href=\"#cb21-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span> <span class=\"co\">// Filter by Code.</span></span>\n<span id=\"cb21-6\"><a href=\"#cb21-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Ledger.</span></span>\n<span id=\"cb21-7\"><a href=\"#cb21-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setTimestampMin</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb21-8\"><a href=\"#cb21-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setTimestampMax</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb21-9\"><a href=\"#cb21-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setLimit</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb21-10\"><a href=\"#cb21-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setReversed</span><span class=\"op\">(</span><span class=\"kw\">true</span><span class=\"op\">);</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb21-11\"><a href=\"#cb21-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-12\"><a href=\"#cb21-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">queryTransfers</span><span class=\"op\">(</span>filter<span class=\"op\">);</span></span></code></pre></div>\n<h2 id=\"linked-events\"><a href=\"#linked-events\" class=\"anchor\">Linked\nEvents</a></h2>\n<p>When the <code>linked</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it links that\nevent with the next event in the batch, to create a chain of events, of\narbitrary length, which all succeed or fail together. The tail of a\nchain is denoted by the first event without this flag. The last event in\na batch may therefore never have the <code>linked</code> flag set as\nthis would leave a chain open-ended. Multiple chains or individual\nevents may coexist within a batch to succeed or fail independently.</p>\n<p>Events within a chain are executed within order, or are rolled back\non error, so that the effect of each event in the chain is visible to\nthe next, and so that the chain is either visible or invisible as a unit\nto subsequent events after the chain. The event that was the first to\nbreak the chain will have a unique error result. Other events in the\nchain will have their error result set to\n<code>linked_event_failed</code>.</p>\n<div class=\"sourceCode\" id=\"cb22\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb22-1\"><a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb22-2\"><a href=\"#cb22-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-3\"><a href=\"#cb22-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// An individual transfer (successful):</span></span>\n<span id=\"cb22-4\"><a href=\"#cb22-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-5\"><a href=\"#cb22-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb22-6\"><a href=\"#cb22-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-7\"><a href=\"#cb22-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb22-8\"><a href=\"#cb22-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-9\"><a href=\"#cb22-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 4 transfers (the last transfer in the chain closes the chain with</span></span>\n<span id=\"cb22-10\"><a href=\"#cb22-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// linked=false):</span></span>\n<span id=\"cb22-11\"><a href=\"#cb22-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-12\"><a href=\"#cb22-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span> <span class=\"co\">// Commit/rollback.</span></span>\n<span id=\"cb22-13\"><a href=\"#cb22-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-14\"><a href=\"#cb22-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span><span class=\"op\">);</span></span>\n<span id=\"cb22-15\"><a href=\"#cb22-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-16\"><a href=\"#cb22-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">);</span> <span class=\"co\">// Commit/rollback.</span></span>\n<span id=\"cb22-17\"><a href=\"#cb22-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-18\"><a href=\"#cb22-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span><span class=\"op\">);</span></span>\n<span id=\"cb22-19\"><a href=\"#cb22-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-20\"><a href=\"#cb22-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span> <span class=\"co\">// Fail with exists</span></span>\n<span id=\"cb22-21\"><a href=\"#cb22-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-22\"><a href=\"#cb22-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span><span class=\"op\">);</span></span>\n<span id=\"cb22-23\"><a href=\"#cb22-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-24\"><a href=\"#cb22-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">4</span><span class=\"op\">);</span> <span class=\"co\">// Fail without committing</span></span>\n<span id=\"cb22-25\"><a href=\"#cb22-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-26\"><a href=\"#cb22-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb22-27\"><a href=\"#cb22-27\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-28\"><a href=\"#cb22-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// An individual transfer (successful):</span></span>\n<span id=\"cb22-29\"><a href=\"#cb22-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// This should not see any effect from the failed chain above.</span></span>\n<span id=\"cb22-30\"><a href=\"#cb22-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-31\"><a href=\"#cb22-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb22-32\"><a href=\"#cb22-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-33\"><a href=\"#cb22-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb22-34\"><a href=\"#cb22-34\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-35\"><a href=\"#cb22-35\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 2 transfers (the first transfer fails the chain):</span></span>\n<span id=\"cb22-36\"><a href=\"#cb22-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-37\"><a href=\"#cb22-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb22-38\"><a href=\"#cb22-38\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-39\"><a href=\"#cb22-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span><span class=\"op\">);</span></span>\n<span id=\"cb22-40\"><a href=\"#cb22-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-41\"><a href=\"#cb22-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">);</span></span>\n<span id=\"cb22-42\"><a href=\"#cb22-42\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-43\"><a href=\"#cb22-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb22-44\"><a href=\"#cb22-44\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 2 transfers (successful):</span></span>\n<span id=\"cb22-45\"><a href=\"#cb22-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-46\"><a href=\"#cb22-46\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">);</span></span>\n<span id=\"cb22-47\"><a href=\"#cb22-47\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-48\"><a href=\"#cb22-48\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span><span class=\"op\">);</span></span>\n<span id=\"cb22-49\"><a href=\"#cb22-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-50\"><a href=\"#cb22-50\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">4</span><span class=\"op\">);</span></span>\n<span id=\"cb22-51\"><a href=\"#cb22-51\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-52\"><a href=\"#cb22-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb22-53\"><a href=\"#cb22-53\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-54\"><a href=\"#cb22-54\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb22-55\"><a href=\"#cb22-55\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h2 id=\"imported-events\"><a href=\"#imported-events\"\nclass=\"anchor\">Imported Events</a></h2>\n<p>When the <code>imported</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it allows\nimporting historical events with a user-defined timestamp.</p>\n<p>The entire batch of events must be set with the flag\n<code>imported</code>.</p>\n<p>It‚Äôs recommended to submit the whole batch as a <code>linked</code>\nchain of events, ensuring that if any event fails, none of them are\ncommitted, preserving the last timestamp unchanged. This approach gives\nthe application a chance to correct failed imported events,\nre-submitting the batch again with the same user-defined timestamps.</p>\n<div class=\"sourceCode\" id=\"cb23\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb23-1\"><a href=\"#cb23-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// External source of time</span></span>\n<span id=\"cb23-2\"><a href=\"#cb23-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">long</span> historicalTimestamp <span class=\"op\">=</span> <span class=\"dv\">0L</span><span class=\"op\">;</span></span>\n<span id=\"cb23-3\"><a href=\"#cb23-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">ResultSet</span> historicalAccounts <span class=\"op\">=</span> <span class=\"kw\">null</span><span class=\"op\">;</span> <span class=\"co\">// Loaded from an external source;</span></span>\n<span id=\"cb23-4\"><a href=\"#cb23-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">ResultSet</span> historicalTransfers <span class=\"op\">=</span> <span class=\"kw\">null</span> <span class=\"op\">;</span> <span class=\"co\">// Loaded from an external source.</span></span>\n<span id=\"cb23-5\"><a href=\"#cb23-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-6\"><a href=\"#cb23-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> BATCH_SIZE <span class=\"op\">=</span> <span class=\"dv\">8190</span><span class=\"op\">;</span></span>\n<span id=\"cb23-7\"><a href=\"#cb23-7\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-8\"><a href=\"#cb23-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// First, load and import all accounts with their timestamps from the historical source.</span></span>\n<span id=\"cb23-9\"><a href=\"#cb23-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountBatch accounts <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">AccountBatch</span><span class=\"op\">(</span>BATCH_SIZE<span class=\"op\">);</span></span>\n<span id=\"cb23-10\"><a href=\"#cb23-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">while</span> <span class=\"op\">(</span>historicalAccounts<span class=\"op\">.</span><span class=\"fu\">next</span><span class=\"op\">())</span> <span class=\"op\">{</span></span>\n<span id=\"cb23-11\"><a href=\"#cb23-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb23-12\"><a href=\"#cb23-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    historicalTimestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span><span class=\"op\">;</span></span>\n<span id=\"cb23-13\"><a href=\"#cb23-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-14\"><a href=\"#cb23-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    accounts<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb23-15\"><a href=\"#cb23-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    accounts<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span>historicalAccounts<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb23-16\"><a href=\"#cb23-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    accounts<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span>historicalAccounts<span class=\"op\">.</span><span class=\"fu\">getInt</span><span class=\"op\">(</span><span class=\"st\">&quot;ledger&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb23-17\"><a href=\"#cb23-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    accounts<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span>historicalAccounts<span class=\"op\">.</span><span class=\"fu\">getInt</span><span class=\"op\">(</span><span class=\"st\">&quot;code&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb23-18\"><a href=\"#cb23-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    accounts<span class=\"op\">.</span><span class=\"fu\">setTimestamp</span><span class=\"op\">(</span>historicalTimestamp<span class=\"op\">);</span></span>\n<span id=\"cb23-19\"><a href=\"#cb23-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-20\"><a href=\"#cb23-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set the account as `imported`.</span></span>\n<span id=\"cb23-21\"><a href=\"#cb23-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb23-22\"><a href=\"#cb23-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// must be `linked`.</span></span>\n<span id=\"cb23-23\"><a href=\"#cb23-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> <span class=\"op\">(</span>accounts<span class=\"op\">.</span><span class=\"fu\">getLength</span><span class=\"op\">()</span> <span class=\"op\">&lt;</span> BATCH_SIZE<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb23-24\"><a href=\"#cb23-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>        accounts<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>AccountFlags<span class=\"op\">.</span><span class=\"fu\">IMPORTED</span> <span class=\"op\">|</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span><span class=\"op\">);</span></span>\n<span id=\"cb23-25\"><a href=\"#cb23-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span> <span class=\"cf\">else</span> <span class=\"op\">{</span></span>\n<span id=\"cb23-26\"><a href=\"#cb23-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>        accounts<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>AccountFlags<span class=\"op\">.</span><span class=\"fu\">IMPORTED</span><span class=\"op\">);</span></span>\n<span id=\"cb23-27\"><a href=\"#cb23-27\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-28\"><a href=\"#cb23-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>        CreateAccountResultBatch accountsErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span><span class=\"op\">(</span>accounts<span class=\"op\">);</span></span>\n<span id=\"cb23-29\"><a href=\"#cb23-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb23-30\"><a href=\"#cb23-30\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-31\"><a href=\"#cb23-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// Reset the batch for the next iteration.</span></span>\n<span id=\"cb23-32\"><a href=\"#cb23-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>        accounts<span class=\"op\">.</span><span class=\"fu\">beforeFirst</span><span class=\"op\">();</span></span>\n<span id=\"cb23-33\"><a href=\"#cb23-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb23-34\"><a href=\"#cb23-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb23-35\"><a href=\"#cb23-35\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-36\"><a href=\"#cb23-36\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> <span class=\"op\">(</span>accounts<span class=\"op\">.</span><span class=\"fu\">getLength</span><span class=\"op\">()</span> <span class=\"op\">&gt;</span> <span class=\"dv\">0</span><span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb23-37\"><a href=\"#cb23-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Send the remaining items.</span></span>\n<span id=\"cb23-38\"><a href=\"#cb23-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreateAccountResultBatch accountsErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span><span class=\"op\">(</span>accounts<span class=\"op\">);</span></span>\n<span id=\"cb23-39\"><a href=\"#cb23-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb23-40\"><a href=\"#cb23-40\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb23-41\"><a href=\"#cb23-41\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-42\"><a href=\"#cb23-42\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Then, load and import all transfers with their timestamps from the historical source.</span></span>\n<span id=\"cb23-43\"><a href=\"#cb23-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span>BATCH_SIZE<span class=\"op\">);</span></span>\n<span id=\"cb23-44\"><a href=\"#cb23-44\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">while</span> <span class=\"op\">(</span>historicalTransfers<span class=\"op\">.</span><span class=\"fu\">next</span><span class=\"op\">())</span> <span class=\"op\">{</span></span>\n<span id=\"cb23-45\"><a href=\"#cb23-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb23-46\"><a href=\"#cb23-46\" aria-hidden=\"true\" tabindex=\"-1\"></a>    historicalTimestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span><span class=\"op\">;</span></span>\n<span id=\"cb23-47\"><a href=\"#cb23-47\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-48\"><a href=\"#cb23-48\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb23-49\"><a href=\"#cb23-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span>historicalTransfers<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb23-50\"><a href=\"#cb23-50\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span>historicalTransfers<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;debit_account_id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb23-51\"><a href=\"#cb23-51\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span>historicalTransfers<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;credit_account_id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb23-52\"><a href=\"#cb23-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span>historicalTransfers<span class=\"op\">.</span><span class=\"fu\">getBigDecimal</span><span class=\"op\">(</span><span class=\"st\">&quot;amount&quot;</span><span class=\"op\">).</span><span class=\"fu\">toBigInteger</span><span class=\"op\">());</span></span>\n<span id=\"cb23-53\"><a href=\"#cb23-53\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span>historicalTransfers<span class=\"op\">.</span><span class=\"fu\">getInt</span><span class=\"op\">(</span><span class=\"st\">&quot;ledger&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb23-54\"><a href=\"#cb23-54\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span>historicalTransfers<span class=\"op\">.</span><span class=\"fu\">getInt</span><span class=\"op\">(</span><span class=\"st\">&quot;code&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb23-55\"><a href=\"#cb23-55\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers<span class=\"op\">.</span><span class=\"fu\">setTimestamp</span><span class=\"op\">(</span>historicalTimestamp<span class=\"op\">);</span></span>\n<span id=\"cb23-56\"><a href=\"#cb23-56\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-57\"><a href=\"#cb23-57\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set the transfer as `imported`.</span></span>\n<span id=\"cb23-58\"><a href=\"#cb23-58\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb23-59\"><a href=\"#cb23-59\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// must be `linked`.</span></span>\n<span id=\"cb23-60\"><a href=\"#cb23-60\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> <span class=\"op\">(</span>transfers<span class=\"op\">.</span><span class=\"fu\">getLength</span><span class=\"op\">()</span> <span class=\"op\">&lt;</span> BATCH_SIZE<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb23-61\"><a href=\"#cb23-61\" aria-hidden=\"true\" tabindex=\"-1\"></a>        transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">IMPORTED</span> <span class=\"op\">|</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span><span class=\"op\">);</span></span>\n<span id=\"cb23-62\"><a href=\"#cb23-62\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span> <span class=\"cf\">else</span> <span class=\"op\">{</span></span>\n<span id=\"cb23-63\"><a href=\"#cb23-63\" aria-hidden=\"true\" tabindex=\"-1\"></a>        transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">IMPORTED</span><span class=\"op\">);</span></span>\n<span id=\"cb23-64\"><a href=\"#cb23-64\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-65\"><a href=\"#cb23-65\" aria-hidden=\"true\" tabindex=\"-1\"></a>        CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb23-66\"><a href=\"#cb23-66\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb23-67\"><a href=\"#cb23-67\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-68\"><a href=\"#cb23-68\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// Reset the batch for the next iteration.</span></span>\n<span id=\"cb23-69\"><a href=\"#cb23-69\" aria-hidden=\"true\" tabindex=\"-1\"></a>        transfers<span class=\"op\">.</span><span class=\"fu\">beforeFirst</span><span class=\"op\">();</span></span>\n<span id=\"cb23-70\"><a href=\"#cb23-70\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb23-71\"><a href=\"#cb23-71\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb23-72\"><a href=\"#cb23-72\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-73\"><a href=\"#cb23-73\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> <span class=\"op\">(</span>transfers<span class=\"op\">.</span><span class=\"fu\">getLength</span><span class=\"op\">()</span> <span class=\"op\">&gt;</span> <span class=\"dv\">0</span><span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb23-74\"><a href=\"#cb23-74\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Send the remaining items.</span></span>\n<span id=\"cb23-75\"><a href=\"#cb23-75\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb23-76\"><a href=\"#cb23-76\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb23-77\"><a href=\"#cb23-77\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb23-78\"><a href=\"#cb23-78\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-79\"><a href=\"#cb23-79\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Since it is a linked chain, in case of any error the entire batch is rolled back and can be retried</span></span>\n<span id=\"cb23-80\"><a href=\"#cb23-80\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// with the same historical timestamps without regressing the cluster timestamp.</span></span></code></pre></div>\n"},{"path":"clients/dotnet","html":"<!-- This file is generated by [/src/scripts/client_readmes.zig](/src/scripts/client_readmes.zig). -->\n\n<h1 id=\"tigerbeetle-dotnet\"><a href=\"#tigerbeetle-dotnet\"\nclass=\"anchor\">tigerbeetle-dotnet</a></h1>\n<p>The TigerBeetle client for .NET.</p>\n<h2 id=\"prerequisites\"><a href=\"#prerequisites\"\nclass=\"anchor\">Prerequisites</a></h2>\n<p>Linux &gt;= 5.6 is the only production environment we support. But\nfor ease of development we also support macOS and Windows.</p>\n<ul>\n<li>.NET &gt;= 8.0.</li>\n</ul>\n<p>And if you do not already have NuGet.org as a package source, make\nsure to add it:</p>\n<pre class=\"console\"><code>dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org</code></pre>\n<h2 id=\"setup\"><a href=\"#setup\" class=\"anchor\">Setup</a></h2>\n<p>First, create a directory for your project and <code>cd</code> into\nthe directory.</p>\n<p>Then, install the TigerBeetle client:</p>\n<pre class=\"console\"><code>dotnet new console\ndotnet add package tigerbeetle</code></pre>\n<p>Now, create <code>Program.cs</code> and copy this into it:</p>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">using</span> System<span class=\"op\">;</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">using</span> TigerBeetle<span class=\"op\">;</span></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Validate import works.</span></span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>Console<span class=\"op\">.</span><span class=\"fu\">WriteLine</span><span class=\"op\">(</span><span class=\"st\">&quot;SUCCESS&quot;</span><span class=\"op\">);</span></span></code></pre></div>\n<p>Finally, build and run:</p>\n<pre class=\"console\"><code>dotnet run</code></pre>\n<p>Now that all prerequisites and dependencies are correctly set up,\nlet‚Äôs dig into using TigerBeetle.</p>\n<h2 id=\"sample-projects\"><a href=\"#sample-projects\"\nclass=\"anchor\">Sample projects</a></h2>\n<p>This document is primarily a reference guide to the client. Below are\nvarious sample projects demonstrating features of TigerBeetle.</p>\n<ul>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/dotnet/samples/basic/\">Basic</a>:\nCreate two accounts and transfer an amount between them.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/dotnet/samples/two-phase/\">Two-Phase\nTransfer</a>: Create two accounts and start a pending transfer between\nthem, then post the transfer.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/dotnet/samples/two-phase-many/\">Many\nTwo-Phase Transfers</a>: Create two accounts and start a number of\npending transfer between them, posting and voiding alternating\ntransfers.</li>\n</ul>\n<h2 id=\"creating-a-client\"><a href=\"#creating-a-client\"\nclass=\"anchor\">Creating a Client</a></h2>\n<p>A client is created with a cluster ID and replica addresses for all\nreplicas in the cluster. The cluster ID and replica addresses are both\nchosen by the system that starts the TigerBeetle cluster.</p>\n<p>Clients are thread-safe and a single instance should be shared\nbetween multiple concurrent tasks.</p>\n<p>Multiple clients are useful when connecting to more than one\nTigerBeetle cluster.</p>\n<p>In this example the cluster ID is <code>0</code> and there is one\nreplica. The address is read from the <code>TB_ADDRESS</code>\nenvironment variable and defaults to port <code>3000</code>.</p>\n<div class=\"sourceCode\" id=\"cb5\"><pre class=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> tbAddress <span class=\"op\">=</span> Environment<span class=\"op\">.</span><span class=\"fu\">GetEnvironmentVariable</span><span class=\"op\">(</span><span class=\"st\">&quot;TB_ADDRESS&quot;</span><span class=\"op\">);</span></span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> clusterID <span class=\"op\">=</span> UInt128<span class=\"op\">.</span><span class=\"fu\">Zero</span><span class=\"op\">;</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> addresses <span class=\"op\">=</span> <span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span> tbAddress <span class=\"op\">!=</span> <span class=\"kw\">null</span> <span class=\"op\">?</span> tbAddress <span class=\"op\">:</span> <span class=\"st\">&quot;3000&quot;</span> <span class=\"op\">};</span></span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">using</span> <span class=\"op\">(</span><span class=\"dt\">var</span> client <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">Client</span><span class=\"op\">(</span>clusterID<span class=\"op\">,</span> addresses<span class=\"op\">))</span></span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Use client</span></span>\n<span id=\"cb5-7\"><a href=\"#cb5-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<p>The <code>Client</code> class is thread-safe and for better\nperformance, a single instance should be shared between multiple\nconcurrent tasks. Multiple clients can be instantiated in case of\nconnecting to more than one TigerBeetle cluster.</p>\n<p>The following are valid addresses:</p>\n<ul>\n<li><code>3000</code> (interpreted as <code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1:3000</code> (interpreted as\n<code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1</code> (interpreted as <code>127.0.0.1:3001</code>,\n<code>3001</code> is the default port)</li>\n</ul>\n<h2 id=\"creating-accounts\"><a href=\"#creating-accounts\"\nclass=\"anchor\">Creating Accounts</a></h2>\n<p>See details for account fields in the <a\nhref=\"https://docs.tigerbeetle.com/reference/account\">Accounts\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb6\"><pre class=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> accounts <span class=\"op\">=</span> <span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span></span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">new</span> Account</span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Id <span class=\"op\">=</span> ID<span class=\"op\">.</span><span class=\"fu\">Create</span><span class=\"op\">(),</span> <span class=\"co\">// TigerBeetle time-based ID.</span></span>\n<span id=\"cb6-5\"><a href=\"#cb6-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData128 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb6-6\"><a href=\"#cb6-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData64 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb6-7\"><a href=\"#cb6-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData32 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb6-8\"><a href=\"#cb6-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb6-9\"><a href=\"#cb6-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Code <span class=\"op\">=</span> <span class=\"dv\">718</span><span class=\"op\">,</span></span>\n<span id=\"cb6-10\"><a href=\"#cb6-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Flags <span class=\"op\">=</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb6-11\"><a href=\"#cb6-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Timestamp <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb6-12\"><a href=\"#cb6-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">},</span></span>\n<span id=\"cb6-13\"><a href=\"#cb6-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb6-14\"><a href=\"#cb6-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-15\"><a href=\"#cb6-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> accountErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateAccounts</span><span class=\"op\">(</span>accounts<span class=\"op\">);</span></span>\n<span id=\"cb6-16\"><a href=\"#cb6-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<p>See details for the recommended ID scheme in <a\nhref=\"https://docs.tigerbeetle.com/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<p>The <code>UInt128</code> fields like <code>ID</code>,\n<code>UserData128</code>, <code>Amount</code> and account balances have\na few extension methods to make it easier to convert 128-bit\nlittle-endian unsigned integers between <code>BigInteger</code>,\n<code>byte[]</code>, and <code>Guid</code>.</p>\n<p>See the class <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/dotnet/TigerBeetle/UInt128Extensions.cs\">UInt128Extensions</a>\nfor more details.</p>\n<h3 id=\"account-flags\"><a href=\"#account-flags\" class=\"anchor\">Account\nFlags</a></h3>\n<p>The account flags value is a bitfield. See details for these flags in\nthe <a\nhref=\"https://docs.tigerbeetle.com/reference/account#flags\">Accounts\nreference</a>.</p>\n<p>To toggle behavior for an account, combine enum values stored in the\n<code>AccountFlags</code> object with bitwise-or:</p>\n<ul>\n<li><code>AccountFlags.None</code></li>\n<li><code>AccountFlags.Linked</code></li>\n<li><code>AccountFlags.DebitsMustNotExceedCredits</code></li>\n<li><code>AccountFlags.CreditsMustNotExceedDebits</code></li>\n<li><code>AccountFlags.History</code></li>\n</ul>\n<p>For example, to link two accounts where the first account\nadditionally has the <code>debits_must_not_exceed_credits</code>\nconstraint:</p>\n<div class=\"sourceCode\" id=\"cb7\"><pre class=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> account0 <span class=\"op\">=</span> <span class=\"kw\">new</span> Account</span>\n<span id=\"cb7-2\"><a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb7-3\"><a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">100</span><span class=\"op\">,</span></span>\n<span id=\"cb7-4\"><a href=\"#cb7-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-5\"><a href=\"#cb7-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-6\"><a href=\"#cb7-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span> <span class=\"op\">|</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">DebitsMustNotExceedCredits</span><span class=\"op\">,</span></span>\n<span id=\"cb7-7\"><a href=\"#cb7-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb7-8\"><a href=\"#cb7-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> account1 <span class=\"op\">=</span> <span class=\"kw\">new</span> Account</span>\n<span id=\"cb7-9\"><a href=\"#cb7-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb7-10\"><a href=\"#cb7-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">101</span><span class=\"op\">,</span></span>\n<span id=\"cb7-11\"><a href=\"#cb7-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-12\"><a href=\"#cb7-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-13\"><a href=\"#cb7-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">History</span><span class=\"op\">,</span></span>\n<span id=\"cb7-14\"><a href=\"#cb7-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb7-15\"><a href=\"#cb7-15\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-16\"><a href=\"#cb7-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> accountErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateAccounts</span><span class=\"op\">(</span><span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span> account0<span class=\"op\">,</span> account1 <span class=\"op\">});</span></span>\n<span id=\"cb7-17\"><a href=\"#cb7-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h3 id=\"response-and-errors\"><a href=\"#response-and-errors\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all accounts were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for an account that failed. The error\nobject contains an error code and the index of the account in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"https://docs.tigerbeetle.com/reference/requests/create_accounts\">create_accounts\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb8\"><pre class=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb8-1\"><a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> account0 <span class=\"op\">=</span> <span class=\"kw\">new</span> Account</span>\n<span id=\"cb8-2\"><a href=\"#cb8-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb8-3\"><a href=\"#cb8-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb8-4\"><a href=\"#cb8-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb8-5\"><a href=\"#cb8-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb8-6\"><a href=\"#cb8-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb8-7\"><a href=\"#cb8-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb8-8\"><a href=\"#cb8-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> account1 <span class=\"op\">=</span> <span class=\"kw\">new</span> Account</span>\n<span id=\"cb8-9\"><a href=\"#cb8-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb8-10\"><a href=\"#cb8-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb8-11\"><a href=\"#cb8-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb8-12\"><a href=\"#cb8-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb8-13\"><a href=\"#cb8-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb8-14\"><a href=\"#cb8-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb8-15\"><a href=\"#cb8-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> account2 <span class=\"op\">=</span> <span class=\"kw\">new</span> Account</span>\n<span id=\"cb8-16\"><a href=\"#cb8-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb8-17\"><a href=\"#cb8-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">104</span><span class=\"op\">,</span></span>\n<span id=\"cb8-18\"><a href=\"#cb8-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb8-19\"><a href=\"#cb8-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb8-20\"><a href=\"#cb8-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb8-21\"><a href=\"#cb8-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb8-22\"><a href=\"#cb8-22\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb8-23\"><a href=\"#cb8-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> accountErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateAccounts</span><span class=\"op\">(</span><span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span> account0<span class=\"op\">,</span> account1<span class=\"op\">,</span> account2 <span class=\"op\">});</span></span>\n<span id=\"cb8-24\"><a href=\"#cb8-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">foreach</span> <span class=\"op\">(</span><span class=\"dt\">var</span> error <span class=\"kw\">in</span> accountErrors<span class=\"op\">)</span></span>\n<span id=\"cb8-25\"><a href=\"#cb8-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb8-26\"><a href=\"#cb8-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">switch</span> <span class=\"op\">(</span>error<span class=\"op\">.</span><span class=\"fu\">Result</span><span class=\"op\">)</span></span>\n<span id=\"cb8-27\"><a href=\"#cb8-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb8-28\"><a href=\"#cb8-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"kw\">case</span> CreateAccountResult<span class=\"op\">.</span><span class=\"fu\">Exists</span><span class=\"op\">:</span></span>\n<span id=\"cb8-29\"><a href=\"#cb8-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>            Console<span class=\"op\">.</span><span class=\"fu\">WriteLine</span><span class=\"op\">(</span>$<span class=\"st\">&quot;Batch account at ${error.Index} already exists.&quot;</span><span class=\"op\">);</span></span>\n<span id=\"cb8-30\"><a href=\"#cb8-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"kw\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb8-31\"><a href=\"#cb8-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"kw\">default</span><span class=\"op\">:</span></span>\n<span id=\"cb8-32\"><a href=\"#cb8-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>            Console<span class=\"op\">.</span><span class=\"fu\">WriteLine</span><span class=\"op\">(</span>$<span class=\"st\">&quot;Batch account at ${error.Index} failed to create ${error.Result}&quot;</span><span class=\"op\">);</span></span>\n<span id=\"cb8-33\"><a href=\"#cb8-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"kw\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb8-34\"><a href=\"#cb8-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb8-35\"><a href=\"#cb8-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">return</span><span class=\"op\">;</span></span>\n<span id=\"cb8-36\"><a href=\"#cb8-36\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<h2 id=\"account-lookup\"><a href=\"#account-lookup\" class=\"anchor\">Account\nLookup</a></h2>\n<p>Account lookup is batched, like account creation. Pass in all IDs to\nfetch. The account for each matched ID is returned.</p>\n<p>If no account matches an ID, no object is returned for that account.\nSo the order of accounts in the response is not necessarily the same as\nthe order of IDs in the request. You can refer to the ID field in the\nresponse to distinguish accounts.</p>\n<div class=\"sourceCode\" id=\"cb9\"><pre class=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>Account<span class=\"op\">[]</span> accounts <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">LookupAccounts</span><span class=\"op\">(</span><span class=\"kw\">new</span> UInt128<span class=\"op\">[]</span> <span class=\"op\">{</span> <span class=\"dv\">100</span><span class=\"op\">,</span> <span class=\"dv\">101</span> <span class=\"op\">});</span></span></code></pre></div>\n<h2 id=\"create-transfers\"><a href=\"#create-transfers\"\nclass=\"anchor\">Create Transfers</a></h2>\n<p>This creates a journal entry between two accounts.</p>\n<p>See details for transfer fields in the <a\nhref=\"https://docs.tigerbeetle.com/reference/transfer\">Transfers\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb10\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb10-1\"><a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfers <span class=\"op\">=</span> <span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span></span>\n<span id=\"cb10-2\"><a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb10-3\"><a href=\"#cb10-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb10-4\"><a href=\"#cb10-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Id <span class=\"op\">=</span> ID<span class=\"op\">.</span><span class=\"fu\">Create</span><span class=\"op\">(),</span> <span class=\"co\">// TigerBeetle time-based ID.</span></span>\n<span id=\"cb10-5\"><a href=\"#cb10-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        DebitAccountId <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb10-6\"><a href=\"#cb10-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        CreditAccountId <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb10-7\"><a href=\"#cb10-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Amount <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb10-8\"><a href=\"#cb10-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData128 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-9\"><a href=\"#cb10-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData64 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-10\"><a href=\"#cb10-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData32 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-11\"><a href=\"#cb10-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Timeout <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-12\"><a href=\"#cb10-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-13\"><a href=\"#cb10-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-14\"><a href=\"#cb10-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb10-15\"><a href=\"#cb10-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Timestamp <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-16\"><a href=\"#cb10-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb10-17\"><a href=\"#cb10-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb10-18\"><a href=\"#cb10-18\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb10-19\"><a href=\"#cb10-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb10-20\"><a href=\"#cb10-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<p>See details for the recommended ID scheme in <a\nhref=\"https://docs.tigerbeetle.com/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<h3 id=\"response-and-errors-1\"><a href=\"#response-and-errors-1\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all transfers were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for a transfer that failed. The error\nobject contains an error code and the index of the transfer in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"https://docs.tigerbeetle.com/reference/requests/create_transfers\">create_transfers\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb11\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfers <span class=\"op\">=</span> <span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span></span>\n<span id=\"cb11-2\"><a href=\"#cb11-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb11-3\"><a href=\"#cb11-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb11-4\"><a href=\"#cb11-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Id <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb11-5\"><a href=\"#cb11-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        DebitAccountId <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb11-6\"><a href=\"#cb11-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        CreditAccountId <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb11-7\"><a href=\"#cb11-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Amount <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb11-8\"><a href=\"#cb11-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb11-9\"><a href=\"#cb11-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb11-10\"><a href=\"#cb11-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb11-11\"><a href=\"#cb11-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">},</span></span>\n<span id=\"cb11-12\"><a href=\"#cb11-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb11-13\"><a href=\"#cb11-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb11-14\"><a href=\"#cb11-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Id <span class=\"op\">=</span> <span class=\"dv\">2</span><span class=\"op\">,</span></span>\n<span id=\"cb11-15\"><a href=\"#cb11-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>        DebitAccountId <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb11-16\"><a href=\"#cb11-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>        CreditAccountId <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb11-17\"><a href=\"#cb11-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Amount <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb11-18\"><a href=\"#cb11-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb11-19\"><a href=\"#cb11-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb11-20\"><a href=\"#cb11-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb11-21\"><a href=\"#cb11-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">},</span></span>\n<span id=\"cb11-22\"><a href=\"#cb11-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb11-23\"><a href=\"#cb11-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb11-24\"><a href=\"#cb11-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Id <span class=\"op\">=</span> <span class=\"dv\">3</span><span class=\"op\">,</span></span>\n<span id=\"cb11-25\"><a href=\"#cb11-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>        DebitAccountId <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb11-26\"><a href=\"#cb11-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>        CreditAccountId <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb11-27\"><a href=\"#cb11-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Amount <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb11-28\"><a href=\"#cb11-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb11-29\"><a href=\"#cb11-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb11-30\"><a href=\"#cb11-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb11-31\"><a href=\"#cb11-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">},</span></span>\n<span id=\"cb11-32\"><a href=\"#cb11-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb11-33\"><a href=\"#cb11-33\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb11-34\"><a href=\"#cb11-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb11-35\"><a href=\"#cb11-35\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">foreach</span> <span class=\"op\">(</span><span class=\"dt\">var</span> error <span class=\"kw\">in</span> transferErrors<span class=\"op\">)</span></span>\n<span id=\"cb11-36\"><a href=\"#cb11-36\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb11-37\"><a href=\"#cb11-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">switch</span> <span class=\"op\">(</span>error<span class=\"op\">.</span><span class=\"fu\">Result</span><span class=\"op\">)</span></span>\n<span id=\"cb11-38\"><a href=\"#cb11-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb11-39\"><a href=\"#cb11-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"kw\">case</span> CreateTransferResult<span class=\"op\">.</span><span class=\"fu\">Exists</span><span class=\"op\">:</span></span>\n<span id=\"cb11-40\"><a href=\"#cb11-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>            Console<span class=\"op\">.</span><span class=\"fu\">WriteLine</span><span class=\"op\">(</span>$<span class=\"st\">&quot;Batch transfer at ${error.Index} already exists.&quot;</span><span class=\"op\">);</span></span>\n<span id=\"cb11-41\"><a href=\"#cb11-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"kw\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb11-42\"><a href=\"#cb11-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"kw\">default</span><span class=\"op\">:</span></span>\n<span id=\"cb11-43\"><a href=\"#cb11-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>            Console<span class=\"op\">.</span><span class=\"fu\">WriteLine</span><span class=\"op\">(</span>$<span class=\"st\">&quot;Batch transfer at ${error.Index} failed to create: ${error.Result}&quot;</span><span class=\"op\">);</span></span>\n<span id=\"cb11-44\"><a href=\"#cb11-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"kw\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb11-45\"><a href=\"#cb11-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb11-46\"><a href=\"#cb11-46\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<h2 id=\"batching\"><a href=\"#batching\" class=\"anchor\">Batching</a></h2>\n<p>TigerBeetle performance is maximized when you batch API requests. The\nclient does not do this automatically for you. So, for example, you\n<em>can</em> insert 1 million transfers one at a time like so:</p>\n<div class=\"sourceCode\" id=\"cb12\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb12-1\"><a href=\"#cb12-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> batch <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer<span class=\"op\">[]</span> <span class=\"op\">{</span> <span class=\"op\">};</span> <span class=\"co\">// Array of transfer to create.</span></span>\n<span id=\"cb12-2\"><a href=\"#cb12-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">foreach</span> <span class=\"op\">(</span><span class=\"dt\">var</span> t <span class=\"kw\">in</span> batch<span class=\"op\">)</span></span>\n<span id=\"cb12-3\"><a href=\"#cb12-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb12-4\"><a href=\"#cb12-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfer</span><span class=\"op\">(</span>t<span class=\"op\">);</span></span>\n<span id=\"cb12-5\"><a href=\"#cb12-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb12-6\"><a href=\"#cb12-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<p>But the insert rate will be a <em>fraction</em> of potential.\nInstead, <strong>always batch what you can</strong>.</p>\n<p>The maximum batch size is set in the TigerBeetle server. The default\nis 8190.</p>\n<div class=\"sourceCode\" id=\"cb13\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb13-1\"><a href=\"#cb13-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> batch <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer<span class=\"op\">[]</span> <span class=\"op\">{</span> <span class=\"op\">};</span> <span class=\"co\">// Array of transfer to create.</span></span>\n<span id=\"cb13-2\"><a href=\"#cb13-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> BATCH_SIZE <span class=\"op\">=</span> <span class=\"dv\">8190</span><span class=\"op\">;</span></span>\n<span id=\"cb13-3\"><a href=\"#cb13-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">for</span> <span class=\"op\">(</span><span class=\"dt\">int</span> firstIndex <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> firstIndex <span class=\"op\">&lt;</span> batch<span class=\"op\">.</span><span class=\"fu\">Length</span><span class=\"op\">;</span> firstIndex <span class=\"op\">+=</span> BATCH_SIZE<span class=\"op\">)</span></span>\n<span id=\"cb13-4\"><a href=\"#cb13-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb13-5\"><a href=\"#cb13-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">var</span> lastIndex <span class=\"op\">=</span> firstIndex <span class=\"op\">+</span> BATCH_SIZE<span class=\"op\">;</span></span>\n<span id=\"cb13-6\"><a href=\"#cb13-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">if</span> <span class=\"op\">(</span>lastIndex <span class=\"op\">&gt;</span> batch<span class=\"op\">.</span><span class=\"fu\">Length</span><span class=\"op\">)</span></span>\n<span id=\"cb13-7\"><a href=\"#cb13-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb13-8\"><a href=\"#cb13-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>        lastIndex <span class=\"op\">=</span> batch<span class=\"op\">.</span><span class=\"fu\">Length</span><span class=\"op\">;</span></span>\n<span id=\"cb13-9\"><a href=\"#cb13-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb13-10\"><a href=\"#cb13-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span>batch<span class=\"op\">[</span>firstIndex<span class=\"op\">..</span><span class=\"fu\">lastIndex</span><span class=\"op\">]);</span></span>\n<span id=\"cb13-11\"><a href=\"#cb13-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb13-12\"><a href=\"#cb13-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<h3 id=\"queues-and-workers\"><a href=\"#queues-and-workers\"\nclass=\"anchor\">Queues and Workers</a></h3>\n<p>If you are making requests to TigerBeetle from workers pulling jobs\nfrom a queue, you can batch requests to TigerBeetle by having the worker\nact on multiple jobs from the queue at once rather than one at a time.\ni.e. pulling multiple jobs from the queue rather than just one.</p>\n<h2 id=\"transfer-flags\"><a href=\"#transfer-flags\"\nclass=\"anchor\">Transfer Flags</a></h2>\n<p>The transfer <code>flags</code> value is a bitfield. See details for\nthese flags in the <a\nhref=\"https://docs.tigerbeetle.com/reference/transfer#flags\">Transfers\nreference</a>.</p>\n<p>To toggle behavior for an account, combine enum values stored in the\n<code>TransferFlags</code> object with bitwise-or:</p>\n<ul>\n<li><code>TransferFlags.None</code></li>\n<li><code>TransferFlags.Linked</code></li>\n<li><code>TransferFlags.Pending</code></li>\n<li><code>TransferFlags.PostPendingTransfer</code></li>\n<li><code>TransferFlags.VoidPendingTransfer</code></li>\n</ul>\n<p>For example, to link <code>transfer0</code> and\n<code>transfer1</code>:</p>\n<div class=\"sourceCode\" id=\"cb14\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb14-1\"><a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfer0 <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb14-2\"><a href=\"#cb14-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb14-3\"><a href=\"#cb14-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">4</span><span class=\"op\">,</span></span>\n<span id=\"cb14-4\"><a href=\"#cb14-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountId <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb14-5\"><a href=\"#cb14-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountId <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb14-6\"><a href=\"#cb14-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb14-7\"><a href=\"#cb14-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb14-8\"><a href=\"#cb14-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb14-9\"><a href=\"#cb14-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span><span class=\"op\">,</span></span>\n<span id=\"cb14-10\"><a href=\"#cb14-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb14-11\"><a href=\"#cb14-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfer1 <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb14-12\"><a href=\"#cb14-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb14-13\"><a href=\"#cb14-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">5</span><span class=\"op\">,</span></span>\n<span id=\"cb14-14\"><a href=\"#cb14-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountId <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb14-15\"><a href=\"#cb14-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountId <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb14-16\"><a href=\"#cb14-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb14-17\"><a href=\"#cb14-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb14-18\"><a href=\"#cb14-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb14-19\"><a href=\"#cb14-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb14-20\"><a href=\"#cb14-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb14-21\"><a href=\"#cb14-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-22\"><a href=\"#cb14-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span><span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span> transfer0<span class=\"op\">,</span> transfer1 <span class=\"op\">});</span></span>\n<span id=\"cb14-23\"><a href=\"#cb14-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h3 id=\"two-phase-transfers\"><a href=\"#two-phase-transfers\"\nclass=\"anchor\">Two-Phase Transfers</a></h3>\n<p>Two-phase transfers are supported natively by toggling the\nappropriate flag. TigerBeetle will then adjust the\n<code>credits_pending</code> and <code>debits_pending</code> fields of\nthe appropriate accounts. A corresponding post pending transfer then\nneeds to be sent to post or void the transfer.</p>\n<h4 id=\"post-a-pending-transfer\"><a href=\"#post-a-pending-transfer\"\nclass=\"anchor\">Post a Pending Transfer</a></h4>\n<p>With <code>flags</code> set to <code>post_pending_transfer</code>,\nTigerBeetle will post the transfer. TigerBeetle will atomically roll\nback the changes to <code>debits_pending</code> and\n<code>credits_pending</code> of the appropriate accounts and apply them\nto the <code>debits_posted</code> and <code>credits_posted</code>\nbalances.</p>\n<div class=\"sourceCode\" id=\"cb15\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb15-1\"><a href=\"#cb15-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfer0 <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb15-2\"><a href=\"#cb15-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb15-3\"><a href=\"#cb15-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">6</span><span class=\"op\">,</span></span>\n<span id=\"cb15-4\"><a href=\"#cb15-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountId <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb15-5\"><a href=\"#cb15-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountId <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb15-6\"><a href=\"#cb15-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb15-7\"><a href=\"#cb15-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb15-8\"><a href=\"#cb15-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb15-9\"><a href=\"#cb15-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Pending</span><span class=\"op\">,</span></span>\n<span id=\"cb15-10\"><a href=\"#cb15-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb15-11\"><a href=\"#cb15-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-12\"><a href=\"#cb15-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span><span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span> transfer0 <span class=\"op\">});</span></span>\n<span id=\"cb15-13\"><a href=\"#cb15-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb15-14\"><a href=\"#cb15-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-15\"><a href=\"#cb15-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfer1 <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb15-16\"><a href=\"#cb15-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb15-17\"><a href=\"#cb15-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">7</span><span class=\"op\">,</span></span>\n<span id=\"cb15-18\"><a href=\"#cb15-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Post the entire pending amount.</span></span>\n<span id=\"cb15-19\"><a href=\"#cb15-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount <span class=\"op\">=</span> Transfer<span class=\"op\">.</span><span class=\"fu\">AmountMax</span><span class=\"op\">,</span></span>\n<span id=\"cb15-20\"><a href=\"#cb15-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    PendingId <span class=\"op\">=</span> <span class=\"dv\">6</span><span class=\"op\">,</span></span>\n<span id=\"cb15-21\"><a href=\"#cb15-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">PostPendingTransfer</span><span class=\"op\">,</span></span>\n<span id=\"cb15-22\"><a href=\"#cb15-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb15-23\"><a href=\"#cb15-23\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-24\"><a href=\"#cb15-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span><span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span> transfer1 <span class=\"op\">});</span></span>\n<span id=\"cb15-25\"><a href=\"#cb15-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h4 id=\"void-a-pending-transfer\"><a href=\"#void-a-pending-transfer\"\nclass=\"anchor\">Void a Pending Transfer</a></h4>\n<p>In contrast, with <code>flags</code> set to\n<code>void_pending_transfer</code>, TigerBeetle will void the transfer.\nTigerBeetle will roll back the changes to <code>debits_pending</code>\nand <code>credits_pending</code> of the appropriate accounts and\n<strong>not</strong> apply them to the <code>debits_posted</code> and\n<code>credits_posted</code> balances.</p>\n<div class=\"sourceCode\" id=\"cb16\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb16-1\"><a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfer0 <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb16-2\"><a href=\"#cb16-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb16-3\"><a href=\"#cb16-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">8</span><span class=\"op\">,</span></span>\n<span id=\"cb16-4\"><a href=\"#cb16-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountId <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb16-5\"><a href=\"#cb16-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountId <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb16-6\"><a href=\"#cb16-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb16-7\"><a href=\"#cb16-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb16-8\"><a href=\"#cb16-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb16-9\"><a href=\"#cb16-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Pending</span><span class=\"op\">,</span></span>\n<span id=\"cb16-10\"><a href=\"#cb16-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb16-11\"><a href=\"#cb16-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb16-12\"><a href=\"#cb16-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span><span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span> transfer0 <span class=\"op\">});</span></span>\n<span id=\"cb16-13\"><a href=\"#cb16-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb16-14\"><a href=\"#cb16-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb16-15\"><a href=\"#cb16-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfer1 <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb16-16\"><a href=\"#cb16-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb16-17\"><a href=\"#cb16-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">9</span><span class=\"op\">,</span></span>\n<span id=\"cb16-18\"><a href=\"#cb16-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Post the entire pending amount.</span></span>\n<span id=\"cb16-19\"><a href=\"#cb16-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb16-20\"><a href=\"#cb16-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    PendingId <span class=\"op\">=</span> <span class=\"dv\">8</span><span class=\"op\">,</span></span>\n<span id=\"cb16-21\"><a href=\"#cb16-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">VoidPendingTransfer</span><span class=\"op\">,</span></span>\n<span id=\"cb16-22\"><a href=\"#cb16-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb16-23\"><a href=\"#cb16-23\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb16-24\"><a href=\"#cb16-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span><span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span> transfer1 <span class=\"op\">});</span></span>\n<span id=\"cb16-25\"><a href=\"#cb16-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h2 id=\"transfer-lookup\"><a href=\"#transfer-lookup\"\nclass=\"anchor\">Transfer Lookup</a></h2>\n<p>NOTE: While transfer lookup exists, it is not a flexible query API.\nWe are developing query APIs and there will be new methods for querying\ntransfers in the future.</p>\n<p>Transfer lookup is batched, like transfer creation. Pass in all\n<code>id</code>s to fetch, and matched transfers are returned.</p>\n<p>If no transfer matches an <code>id</code>, no object is returned for\nthat transfer. So the order of transfers in the response is not\nnecessarily the same as the order of <code>id</code>s in the request.\nYou can refer to the <code>id</code> field in the response to\ndistinguish transfers.</p>\n<div class=\"sourceCode\" id=\"cb17\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb17-1\"><a href=\"#cb17-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>Transfer<span class=\"op\">[]</span> transfers <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">LookupTransfers</span><span class=\"op\">(</span><span class=\"kw\">new</span> UInt128<span class=\"op\">[]</span> <span class=\"op\">{</span> <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"dv\">2</span> <span class=\"op\">});</span></span></code></pre></div>\n<h2 id=\"get-account-transfers\"><a href=\"#get-account-transfers\"\nclass=\"anchor\">Get Account Transfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the transfers involving a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb18\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb18-1\"><a href=\"#cb18-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> filter <span class=\"op\">=</span> <span class=\"kw\">new</span> AccountFilter</span>\n<span id=\"cb18-2\"><a href=\"#cb18-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb18-3\"><a href=\"#cb18-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    AccountId <span class=\"op\">=</span> <span class=\"dv\">101</span><span class=\"op\">,</span></span>\n<span id=\"cb18-4\"><a href=\"#cb18-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData128 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by UserData.</span></span>\n<span id=\"cb18-5\"><a href=\"#cb18-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData64 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb18-6\"><a href=\"#cb18-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData32 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb18-7\"><a href=\"#cb18-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Code.</span></span>\n<span id=\"cb18-8\"><a href=\"#cb18-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMin <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb18-9\"><a href=\"#cb18-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMax <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb18-10\"><a href=\"#cb18-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Limit <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten transfers at most.</span></span>\n<span id=\"cb18-11\"><a href=\"#cb18-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> AccountFilterFlags<span class=\"op\">.</span><span class=\"fu\">Debits</span> <span class=\"op\">|</span> <span class=\"co\">// Include transfer from the debit side.</span></span>\n<span id=\"cb18-12\"><a href=\"#cb18-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>        AccountFilterFlags<span class=\"op\">.</span><span class=\"fu\">Credits</span> <span class=\"op\">|</span> <span class=\"co\">// Include transfer from the credit side.</span></span>\n<span id=\"cb18-13\"><a href=\"#cb18-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>        AccountFilterFlags<span class=\"op\">.</span><span class=\"fu\">Reversed</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb18-14\"><a href=\"#cb18-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb18-15\"><a href=\"#cb18-15\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb18-16\"><a href=\"#cb18-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>Transfer<span class=\"op\">[]</span> transfers <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">GetAccountTransfers</span><span class=\"op\">(</span>filter<span class=\"op\">);</span></span></code></pre></div>\n<h2 id=\"get-account-balances\"><a href=\"#get-account-balances\"\nclass=\"anchor\">Get Account Balances</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the point-in-time balances of a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>Only accounts created with the flag <a\nhref=\"https://docs.tigerbeetle.com/reference/account#flagshistory\"><code>history</code></a>\nset retain <a\nhref=\"https://docs.tigerbeetle.com/reference/requests/get_account_balances\">historical\nbalances</a>.</p>\n<p>The balances in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb19\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb19-1\"><a href=\"#cb19-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> filter <span class=\"op\">=</span> <span class=\"kw\">new</span> AccountFilter</span>\n<span id=\"cb19-2\"><a href=\"#cb19-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb19-3\"><a href=\"#cb19-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    AccountId <span class=\"op\">=</span> <span class=\"dv\">101</span><span class=\"op\">,</span></span>\n<span id=\"cb19-4\"><a href=\"#cb19-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData128 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by UserData.</span></span>\n<span id=\"cb19-5\"><a href=\"#cb19-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData64 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb19-6\"><a href=\"#cb19-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData32 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb19-7\"><a href=\"#cb19-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Code.</span></span>\n<span id=\"cb19-8\"><a href=\"#cb19-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMin <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb19-9\"><a href=\"#cb19-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMax <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb19-10\"><a href=\"#cb19-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Limit <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb19-11\"><a href=\"#cb19-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> AccountFilterFlags<span class=\"op\">.</span><span class=\"fu\">Debits</span> <span class=\"op\">|</span> <span class=\"co\">// Include transfer from the debit side.</span></span>\n<span id=\"cb19-12\"><a href=\"#cb19-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>        AccountFilterFlags<span class=\"op\">.</span><span class=\"fu\">Credits</span> <span class=\"op\">|</span> <span class=\"co\">// Include transfer from the credit side.</span></span>\n<span id=\"cb19-13\"><a href=\"#cb19-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>        AccountFilterFlags<span class=\"op\">.</span><span class=\"fu\">Reversed</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb19-14\"><a href=\"#cb19-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb19-15\"><a href=\"#cb19-15\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb19-16\"><a href=\"#cb19-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountBalance<span class=\"op\">[]</span> accountBalances <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">GetAccountBalances</span><span class=\"op\">(</span>filter<span class=\"op\">);</span></span></code></pre></div>\n<h2 id=\"query-accounts\"><a href=\"#query-accounts\" class=\"anchor\">Query\nAccounts</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query accounts by the intersection of some fields and by timestamp\nrange.</p>\n<p>The accounts in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb20\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb20-1\"><a href=\"#cb20-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> filter <span class=\"op\">=</span> <span class=\"kw\">new</span> QueryFilter</span>\n<span id=\"cb20-2\"><a href=\"#cb20-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb20-3\"><a href=\"#cb20-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData128 <span class=\"op\">=</span> <span class=\"dv\">1000</span><span class=\"op\">,</span> <span class=\"co\">// Filter by UserData.</span></span>\n<span id=\"cb20-4\"><a href=\"#cb20-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData64 <span class=\"op\">=</span> <span class=\"dv\">100</span><span class=\"op\">,</span></span>\n<span id=\"cb20-5\"><a href=\"#cb20-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData32 <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb20-6\"><a href=\"#cb20-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"co\">// Filter by Code.</span></span>\n<span id=\"cb20-7\"><a href=\"#cb20-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Ledger.</span></span>\n<span id=\"cb20-8\"><a href=\"#cb20-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMin <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb20-9\"><a href=\"#cb20-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMax <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb20-10\"><a href=\"#cb20-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Limit <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb20-11\"><a href=\"#cb20-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> QueryFilterFlags<span class=\"op\">.</span><span class=\"fu\">Reversed</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb20-12\"><a href=\"#cb20-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb20-13\"><a href=\"#cb20-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb20-14\"><a href=\"#cb20-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>Account<span class=\"op\">[]</span> accounts <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">QueryAccounts</span><span class=\"op\">(</span>filter<span class=\"op\">);</span></span></code></pre></div>\n<h2 id=\"query-transfers\"><a href=\"#query-transfers\" class=\"anchor\">Query\nTransfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query transfers by the intersection of some fields and by timestamp\nrange.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb21\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb21-1\"><a href=\"#cb21-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> filter <span class=\"op\">=</span> <span class=\"kw\">new</span> QueryFilter</span>\n<span id=\"cb21-2\"><a href=\"#cb21-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb21-3\"><a href=\"#cb21-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData128 <span class=\"op\">=</span> <span class=\"dv\">1000</span><span class=\"op\">,</span> <span class=\"co\">// Filter by UserData</span></span>\n<span id=\"cb21-4\"><a href=\"#cb21-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData64 <span class=\"op\">=</span> <span class=\"dv\">100</span><span class=\"op\">,</span></span>\n<span id=\"cb21-5\"><a href=\"#cb21-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData32 <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb21-6\"><a href=\"#cb21-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"co\">// Filter by Code</span></span>\n<span id=\"cb21-7\"><a href=\"#cb21-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Ledger</span></span>\n<span id=\"cb21-8\"><a href=\"#cb21-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMin <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb21-9\"><a href=\"#cb21-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMax <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb21-10\"><a href=\"#cb21-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Limit <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb21-11\"><a href=\"#cb21-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> QueryFilterFlags<span class=\"op\">.</span><span class=\"fu\">Reversed</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb21-12\"><a href=\"#cb21-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb21-13\"><a href=\"#cb21-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-14\"><a href=\"#cb21-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>Transfer<span class=\"op\">[]</span> transfers <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">QueryTransfers</span><span class=\"op\">(</span>filter<span class=\"op\">);</span></span></code></pre></div>\n<h2 id=\"linked-events\"><a href=\"#linked-events\" class=\"anchor\">Linked\nEvents</a></h2>\n<p>When the <code>linked</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it links that\nevent with the next event in the batch, to create a chain of events, of\narbitrary length, which all succeed or fail together. The tail of a\nchain is denoted by the first event without this flag. The last event in\na batch may therefore never have the <code>linked</code> flag set as\nthis would leave a chain open-ended. Multiple chains or individual\nevents may coexist within a batch to succeed or fail independently.</p>\n<p>Events within a chain are executed within order, or are rolled back\non error, so that the effect of each event in the chain is visible to\nthe next, and so that the chain is either visible or invisible as a unit\nto subsequent events after the chain. The event that was the first to\nbreak the chain will have a unique error result. Other events in the\nchain will have their error result set to\n<code>linked_event_failed</code>.</p>\n<div class=\"sourceCode\" id=\"cb22\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb22-1\"><a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> batch <span class=\"op\">=</span> <span class=\"kw\">new</span> System<span class=\"op\">.</span><span class=\"fu\">Collections</span><span class=\"op\">.</span><span class=\"fu\">Generic</span><span class=\"op\">.</span><span class=\"fu\">List</span><span class=\"op\">&lt;</span>Transfer<span class=\"op\">&gt;();</span></span>\n<span id=\"cb22-2\"><a href=\"#cb22-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-3\"><a href=\"#cb22-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// An individual transfer (successful):</span></span>\n<span id=\"cb22-4\"><a href=\"#cb22-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> <span class=\"op\">});</span></span>\n<span id=\"cb22-5\"><a href=\"#cb22-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-6\"><a href=\"#cb22-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 4 transfers (the last transfer in the chain closes the chain with linked=false):</span></span>\n<span id=\"cb22-7\"><a href=\"#cb22-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">2</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span> <span class=\"op\">});</span> <span class=\"co\">// Commit/rollback.</span></span>\n<span id=\"cb22-8\"><a href=\"#cb22-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">3</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span> <span class=\"op\">});</span> <span class=\"co\">// Commit/rollback.</span></span>\n<span id=\"cb22-9\"><a href=\"#cb22-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">2</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span> <span class=\"op\">});</span> <span class=\"co\">// Fail with exists</span></span>\n<span id=\"cb22-10\"><a href=\"#cb22-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">4</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> <span class=\"op\">});</span> <span class=\"co\">// Fail without committing</span></span>\n<span id=\"cb22-11\"><a href=\"#cb22-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-12\"><a href=\"#cb22-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// An individual transfer (successful):</span></span>\n<span id=\"cb22-13\"><a href=\"#cb22-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// This should not see any effect from the failed chain above.</span></span>\n<span id=\"cb22-14\"><a href=\"#cb22-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">2</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> <span class=\"op\">});</span></span>\n<span id=\"cb22-15\"><a href=\"#cb22-15\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-16\"><a href=\"#cb22-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 2 transfers (the first transfer fails the chain):</span></span>\n<span id=\"cb22-17\"><a href=\"#cb22-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">2</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span> <span class=\"op\">});</span></span>\n<span id=\"cb22-18\"><a href=\"#cb22-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">3</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> <span class=\"op\">});</span></span>\n<span id=\"cb22-19\"><a href=\"#cb22-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-20\"><a href=\"#cb22-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 2 transfers (successful):</span></span>\n<span id=\"cb22-21\"><a href=\"#cb22-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">3</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span> <span class=\"op\">});</span></span>\n<span id=\"cb22-22\"><a href=\"#cb22-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">4</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> <span class=\"op\">});</span></span>\n<span id=\"cb22-23\"><a href=\"#cb22-23\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-24\"><a href=\"#cb22-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span>batch<span class=\"op\">.</span><span class=\"fu\">ToArray</span><span class=\"op\">());</span></span>\n<span id=\"cb22-25\"><a href=\"#cb22-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h2 id=\"imported-events\"><a href=\"#imported-events\"\nclass=\"anchor\">Imported Events</a></h2>\n<p>When the <code>imported</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it allows\nimporting historical events with a user-defined timestamp.</p>\n<p>The entire batch of events must be set with the flag\n<code>imported</code>.</p>\n<p>It‚Äôs recommended to submit the whole batch as a <code>linked</code>\nchain of events, ensuring that if any event fails, none of them are\ncommitted, preserving the last timestamp unchanged. This approach gives\nthe application a chance to correct failed imported events,\nre-submitting the batch again with the same user-defined timestamps.</p>\n<div class=\"sourceCode\" id=\"cb23\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb23-1\"><a href=\"#cb23-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// External source of time</span></span>\n<span id=\"cb23-2\"><a href=\"#cb23-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">ulong</span> historicalTimestamp <span class=\"op\">=</span> <span class=\"dv\">0UL</span><span class=\"op\">;</span></span>\n<span id=\"cb23-3\"><a href=\"#cb23-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> historicalAccounts <span class=\"op\">=</span> <span class=\"kw\">new</span> Account<span class=\"op\">[]</span> <span class=\"op\">{</span> <span class=\"co\">/* Loaded from an external source */</span> <span class=\"op\">};</span></span>\n<span id=\"cb23-4\"><a href=\"#cb23-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> historicalTransfers <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer<span class=\"op\">[]</span> <span class=\"op\">{</span> <span class=\"co\">/* Loaded from an external source */</span> <span class=\"op\">};</span></span>\n<span id=\"cb23-5\"><a href=\"#cb23-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-6\"><a href=\"#cb23-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// First, load and import all accounts with their timestamps from the historical source.</span></span>\n<span id=\"cb23-7\"><a href=\"#cb23-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> accountsBatch <span class=\"op\">=</span> <span class=\"kw\">new</span> System<span class=\"op\">.</span><span class=\"fu\">Collections</span><span class=\"op\">.</span><span class=\"fu\">Generic</span><span class=\"op\">.</span><span class=\"fu\">List</span><span class=\"op\">&lt;</span>Account<span class=\"op\">&gt;();</span></span>\n<span id=\"cb23-8\"><a href=\"#cb23-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">for</span> <span class=\"op\">(</span><span class=\"dt\">var</span> index <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> index <span class=\"op\">&lt;</span> historicalAccounts<span class=\"op\">.</span><span class=\"fu\">Length</span><span class=\"op\">;</span> index<span class=\"op\">++)</span></span>\n<span id=\"cb23-9\"><a href=\"#cb23-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb23-10\"><a href=\"#cb23-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">var</span> account <span class=\"op\">=</span> historicalAccounts<span class=\"op\">[</span>index<span class=\"op\">];</span></span>\n<span id=\"cb23-11\"><a href=\"#cb23-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-12\"><a href=\"#cb23-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb23-13\"><a href=\"#cb23-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    historicalTimestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span><span class=\"op\">;</span></span>\n<span id=\"cb23-14\"><a href=\"#cb23-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account<span class=\"op\">.</span><span class=\"fu\">Timestamp</span> <span class=\"op\">=</span> historicalTimestamp<span class=\"op\">;</span></span>\n<span id=\"cb23-15\"><a href=\"#cb23-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set the account as `imported`.</span></span>\n<span id=\"cb23-16\"><a href=\"#cb23-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account<span class=\"op\">.</span><span class=\"fu\">Flags</span> <span class=\"op\">=</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">Imported</span><span class=\"op\">;</span></span>\n<span id=\"cb23-17\"><a href=\"#cb23-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb23-18\"><a href=\"#cb23-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// must be `linked`.</span></span>\n<span id=\"cb23-19\"><a href=\"#cb23-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">if</span> <span class=\"op\">(</span>index <span class=\"op\">&lt;</span> historicalAccounts<span class=\"op\">.</span><span class=\"fu\">Length</span> <span class=\"op\">-</span> <span class=\"dv\">1</span><span class=\"op\">)</span></span>\n<span id=\"cb23-20\"><a href=\"#cb23-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb23-21\"><a href=\"#cb23-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>        account<span class=\"op\">.</span><span class=\"fu\">Flags</span> <span class=\"op\">|=</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span><span class=\"op\">;</span></span>\n<span id=\"cb23-22\"><a href=\"#cb23-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb23-23\"><a href=\"#cb23-23\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-24\"><a href=\"#cb23-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    accountsBatch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span>account<span class=\"op\">);</span></span>\n<span id=\"cb23-25\"><a href=\"#cb23-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb23-26\"><a href=\"#cb23-26\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-27\"><a href=\"#cb23-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> accountErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateAccounts</span><span class=\"op\">(</span>accountsBatch<span class=\"op\">.</span><span class=\"fu\">ToArray</span><span class=\"op\">());</span></span>\n<span id=\"cb23-28\"><a href=\"#cb23-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb23-29\"><a href=\"#cb23-29\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-30\"><a href=\"#cb23-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Then, load and import all transfers with their timestamps from the historical source.</span></span>\n<span id=\"cb23-31\"><a href=\"#cb23-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfersBatch <span class=\"op\">=</span> <span class=\"kw\">new</span> System<span class=\"op\">.</span><span class=\"fu\">Collections</span><span class=\"op\">.</span><span class=\"fu\">Generic</span><span class=\"op\">.</span><span class=\"fu\">List</span><span class=\"op\">&lt;</span>Transfer<span class=\"op\">&gt;();</span></span>\n<span id=\"cb23-32\"><a href=\"#cb23-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">for</span> <span class=\"op\">(</span><span class=\"dt\">var</span> index <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> index <span class=\"op\">&lt;</span> historicalTransfers<span class=\"op\">.</span><span class=\"fu\">Length</span><span class=\"op\">;</span> index<span class=\"op\">++)</span></span>\n<span id=\"cb23-33\"><a href=\"#cb23-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb23-34\"><a href=\"#cb23-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">var</span> transfer <span class=\"op\">=</span> historicalTransfers<span class=\"op\">[</span>index<span class=\"op\">];</span></span>\n<span id=\"cb23-35\"><a href=\"#cb23-35\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-36\"><a href=\"#cb23-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb23-37\"><a href=\"#cb23-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>    historicalTimestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span><span class=\"op\">;</span></span>\n<span id=\"cb23-38\"><a href=\"#cb23-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer<span class=\"op\">.</span><span class=\"fu\">Timestamp</span> <span class=\"op\">=</span> historicalTimestamp<span class=\"op\">;</span></span>\n<span id=\"cb23-39\"><a href=\"#cb23-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set the account as `imported`.</span></span>\n<span id=\"cb23-40\"><a href=\"#cb23-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer<span class=\"op\">.</span><span class=\"fu\">Flags</span> <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Imported</span><span class=\"op\">;</span></span>\n<span id=\"cb23-41\"><a href=\"#cb23-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb23-42\"><a href=\"#cb23-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// must be `linked`.</span></span>\n<span id=\"cb23-43\"><a href=\"#cb23-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">if</span> <span class=\"op\">(</span>index <span class=\"op\">&lt;</span> historicalTransfers<span class=\"op\">.</span><span class=\"fu\">Length</span> <span class=\"op\">-</span> <span class=\"dv\">1</span><span class=\"op\">)</span></span>\n<span id=\"cb23-44\"><a href=\"#cb23-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb23-45\"><a href=\"#cb23-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>        transfer<span class=\"op\">.</span><span class=\"fu\">Flags</span> <span class=\"op\">|=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span><span class=\"op\">;</span></span>\n<span id=\"cb23-46\"><a href=\"#cb23-46\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb23-47\"><a href=\"#cb23-47\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-48\"><a href=\"#cb23-48\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfersBatch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span>transfer<span class=\"op\">);</span></span>\n<span id=\"cb23-49\"><a href=\"#cb23-49\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb23-50\"><a href=\"#cb23-50\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-51\"><a href=\"#cb23-51\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span>transfersBatch<span class=\"op\">.</span><span class=\"fu\">ToArray</span><span class=\"op\">());</span></span>\n<span id=\"cb23-52\"><a href=\"#cb23-52\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb23-53\"><a href=\"#cb23-53\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Since it is a linked chain, in case of any error the entire batch is rolled back and can be retried</span></span>\n<span id=\"cb23-54\"><a href=\"#cb23-54\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// with the same historical timestamps without regressing the cluster timestamp.</span></span></code></pre></div>\n"},{"path":"clients/node","html":"<!-- This file is generated by [/src/scripts/client_readmes.zig](/src/scripts/client_readmes.zig). -->\n\n<h1 id=\"tigerbeetle-node\"><a href=\"#tigerbeetle-node\"\nclass=\"anchor\">tigerbeetle-node</a></h1>\n<p>The TigerBeetle client for Node.js.</p>\n<h2 id=\"prerequisites\"><a href=\"#prerequisites\"\nclass=\"anchor\">Prerequisites</a></h2>\n<p>Linux &gt;= 5.6 is the only production environment we support. But\nfor ease of development we also support macOS and Windows.</p>\n<ul>\n<li>NodeJS &gt;= <code>18</code></li>\n</ul>\n<h2 id=\"setup\"><a href=\"#setup\" class=\"anchor\">Setup</a></h2>\n<p>First, create a directory for your project and <code>cd</code> into\nthe directory.</p>\n<p>Then, install the TigerBeetle client:</p>\n<pre class=\"console\"><code>npm install --save-exact tigerbeetle-node</code></pre>\n<p>Now, create <code>main.js</code> and copy this into it:</p>\n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> { id } <span class=\"op\">=</span> <span class=\"pp\">require</span>(<span class=\"st\">&quot;tigerbeetle-node&quot;</span>)<span class=\"op\">;</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> { createClient } <span class=\"op\">=</span> <span class=\"pp\">require</span>(<span class=\"st\">&quot;tigerbeetle-node&quot;</span>)<span class=\"op\">;</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">console</span><span class=\"op\">.</span><span class=\"fu\">log</span>(<span class=\"st\">&quot;Import ok!&quot;</span>)<span class=\"op\">;</span></span></code></pre></div>\n<p>Finally, build and run:</p>\n<pre class=\"console\"><code>node main.js</code></pre>\n<p>Now that all prerequisites and dependencies are correctly set up,\nlet‚Äôs dig into using TigerBeetle.</p>\n<h2 id=\"sample-projects\"><a href=\"#sample-projects\"\nclass=\"anchor\">Sample projects</a></h2>\n<p>This document is primarily a reference guide to the client. Below are\nvarious sample projects demonstrating features of TigerBeetle.</p>\n<ul>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/node/samples/basic/\">Basic</a>:\nCreate two accounts and transfer an amount between them.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/node/samples/two-phase/\">Two-Phase\nTransfer</a>: Create two accounts and start a pending transfer between\nthem, then post the transfer.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/node/samples/two-phase-many/\">Many\nTwo-Phase Transfers</a>: Create two accounts and start a number of\npending transfer between them, posting and voiding alternating\ntransfers.</li>\n</ul>\n<h3 id=\"sidenote-bigint\"><a href=\"#sidenote-bigint\"\nclass=\"anchor\">Sidenote: <code>BigInt</code></a></h3>\n<p>TigerBeetle uses 64-bit integers for many fields while JavaScript‚Äôs\nbuiltin <code>Number</code> maximum value is <code>2^53-1</code>. The\n<code>n</code> suffix in JavaScript means the value is a\n<code>BigInt</code>. This is useful for literal numbers. If you already\nhave a <code>Number</code> variable though, you can call the\n<code>BigInt</code> constructor to get a <code>BigInt</code> from it.\nFor example, <code>1n</code> is the same as <code>BigInt(1)</code>.</p>\n<h2 id=\"creating-a-client\"><a href=\"#creating-a-client\"\nclass=\"anchor\">Creating a Client</a></h2>\n<p>A client is created with a cluster ID and replica addresses for all\nreplicas in the cluster. The cluster ID and replica addresses are both\nchosen by the system that starts the TigerBeetle cluster.</p>\n<p>Clients are thread-safe and a single instance should be shared\nbetween multiple concurrent tasks.</p>\n<p>Multiple clients are useful when connecting to more than one\nTigerBeetle cluster.</p>\n<p>In this example the cluster ID is <code>0</code> and there is one\nreplica. The address is read from the <code>TB_ADDRESS</code>\nenvironment variable and defaults to port <code>3000</code>.</p>\n<div class=\"sourceCode\" id=\"cb4\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> client <span class=\"op\">=</span> <span class=\"fu\">createClient</span>({</span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">cluster_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">replica_addresses</span><span class=\"op\">:</span> [<span class=\"bu\">process</span><span class=\"op\">.</span><span class=\"at\">env</span><span class=\"op\">.</span><span class=\"at\">TB_ADDRESS</span> <span class=\"op\">||</span> <span class=\"st\">&quot;3000&quot;</span>]<span class=\"op\">,</span></span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>})<span class=\"op\">;</span></span></code></pre></div>\n<p>The following are valid addresses:</p>\n<ul>\n<li><code>3000</code> (interpreted as <code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1:3000</code> (interpreted as\n<code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1</code> (interpreted as <code>127.0.0.1:3001</code>,\n<code>3001</code> is the default port)</li>\n</ul>\n<h2 id=\"creating-accounts\"><a href=\"#creating-accounts\"\nclass=\"anchor\">Creating Accounts</a></h2>\n<p>See details for account fields in the <a\nhref=\"https://docs.tigerbeetle.com/reference/account\">Accounts\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb5\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account <span class=\"op\">=</span> {</span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"fu\">id</span>()<span class=\"op\">,</span> <span class=\"co\">// TigerBeetle time-based ID.</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb5-7\"><a href=\"#cb5-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb5-8\"><a href=\"#cb5-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb5-9\"><a href=\"#cb5-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb5-10\"><a href=\"#cb5-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">reserved</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb5-11\"><a href=\"#cb5-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb5-12\"><a href=\"#cb5-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">718</span><span class=\"op\">,</span></span>\n<span id=\"cb5-13\"><a href=\"#cb5-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb5-14\"><a href=\"#cb5-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb5-15\"><a href=\"#cb5-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb5-16\"><a href=\"#cb5-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-17\"><a href=\"#cb5-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span>([account])<span class=\"op\">;</span></span>\n<span id=\"cb5-18\"><a href=\"#cb5-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<p>See details for the recommended ID scheme in <a\nhref=\"https://docs.tigerbeetle.com/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<h3 id=\"account-flags\"><a href=\"#account-flags\" class=\"anchor\">Account\nFlags</a></h3>\n<p>The account flags value is a bitfield. See details for these flags in\nthe <a\nhref=\"https://docs.tigerbeetle.com/reference/account#flags\">Accounts\nreference</a>.</p>\n<p>To toggle behavior for an account, combine enum values stored in the\n<code>AccountFlags</code> object (in TypeScript it is an actual enum)\nwith bitwise-or:</p>\n<ul>\n<li><code>AccountFlags.linked</code></li>\n<li><code>AccountFlags.debits_must_not_exceed_credits</code></li>\n<li><code>AccountFlags.credits_must_not_exceed_credits</code></li>\n<li><code>AccountFlags.history</code></li>\n</ul>\n<p>For example, to link two accounts where the first account\nadditionally has the <code>debits_must_not_exceed_credits</code>\nconstraint:</p>\n<div class=\"sourceCode\" id=\"cb6\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account0 <span class=\"op\">=</span> {</span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">100</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-5\"><a href=\"#cb6-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-6\"><a href=\"#cb6-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-7\"><a href=\"#cb6-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-8\"><a href=\"#cb6-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-9\"><a href=\"#cb6-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb6-10\"><a href=\"#cb6-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">reserved</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb6-11\"><a href=\"#cb6-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb6-12\"><a href=\"#cb6-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb6-13\"><a href=\"#cb6-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-14\"><a href=\"#cb6-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> AccountFlags<span class=\"op\">.</span><span class=\"at\">linked</span> <span class=\"op\">|</span> AccountFlags<span class=\"op\">.</span><span class=\"at\">debits_must_not_exceed_credits</span><span class=\"op\">,</span></span>\n<span id=\"cb6-15\"><a href=\"#cb6-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb6-16\"><a href=\"#cb6-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account1 <span class=\"op\">=</span> {</span>\n<span id=\"cb6-17\"><a href=\"#cb6-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">101</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-18\"><a href=\"#cb6-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-19\"><a href=\"#cb6-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-20\"><a href=\"#cb6-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-21\"><a href=\"#cb6-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-22\"><a href=\"#cb6-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-23\"><a href=\"#cb6-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-24\"><a href=\"#cb6-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb6-25\"><a href=\"#cb6-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">reserved</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb6-26\"><a href=\"#cb6-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb6-27\"><a href=\"#cb6-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb6-28\"><a href=\"#cb6-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-29\"><a href=\"#cb6-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> AccountFlags<span class=\"op\">.</span><span class=\"at\">history</span><span class=\"op\">,</span></span>\n<span id=\"cb6-30\"><a href=\"#cb6-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb6-31\"><a href=\"#cb6-31\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-32\"><a href=\"#cb6-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span>([account0<span class=\"op\">,</span> account1])<span class=\"op\">;</span></span>\n<span id=\"cb6-33\"><a href=\"#cb6-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h3 id=\"response-and-errors\"><a href=\"#response-and-errors\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all accounts were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for an account that failed. The error\nobject contains an error code and the index of the account in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"https://docs.tigerbeetle.com/reference/requests/create_accounts\">create_accounts\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb7\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account0 <span class=\"op\">=</span> {</span>\n<span id=\"cb7-2\"><a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-3\"><a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-4\"><a href=\"#cb7-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-5\"><a href=\"#cb7-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-6\"><a href=\"#cb7-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-7\"><a href=\"#cb7-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-8\"><a href=\"#cb7-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-9\"><a href=\"#cb7-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-10\"><a href=\"#cb7-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">reserved</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-11\"><a href=\"#cb7-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-12\"><a href=\"#cb7-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-13\"><a href=\"#cb7-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-14\"><a href=\"#cb7-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-15\"><a href=\"#cb7-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb7-16\"><a href=\"#cb7-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account1 <span class=\"op\">=</span> {</span>\n<span id=\"cb7-17\"><a href=\"#cb7-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-18\"><a href=\"#cb7-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-19\"><a href=\"#cb7-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-20\"><a href=\"#cb7-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-21\"><a href=\"#cb7-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-22\"><a href=\"#cb7-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-23\"><a href=\"#cb7-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-24\"><a href=\"#cb7-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-25\"><a href=\"#cb7-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">reserved</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-26\"><a href=\"#cb7-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-27\"><a href=\"#cb7-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-28\"><a href=\"#cb7-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-29\"><a href=\"#cb7-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-30\"><a href=\"#cb7-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb7-31\"><a href=\"#cb7-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account2 <span class=\"op\">=</span> {</span>\n<span id=\"cb7-32\"><a href=\"#cb7-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">104</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-33\"><a href=\"#cb7-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-34\"><a href=\"#cb7-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-35\"><a href=\"#cb7-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-36\"><a href=\"#cb7-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-37\"><a href=\"#cb7-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-38\"><a href=\"#cb7-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-39\"><a href=\"#cb7-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-40\"><a href=\"#cb7-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">reserved</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-41\"><a href=\"#cb7-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-42\"><a href=\"#cb7-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-43\"><a href=\"#cb7-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-44\"><a href=\"#cb7-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-45\"><a href=\"#cb7-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb7-46\"><a href=\"#cb7-46\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-47\"><a href=\"#cb7-47\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span>([account0<span class=\"op\">,</span> account1<span class=\"op\">,</span> account2])<span class=\"op\">;</span></span>\n<span id=\"cb7-48\"><a href=\"#cb7-48\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> (<span class=\"kw\">const</span> error <span class=\"kw\">of</span> account_errors) {</span>\n<span id=\"cb7-49\"><a href=\"#cb7-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"cf\">switch</span> (error<span class=\"op\">.</span><span class=\"at\">result</span>) {</span>\n<span id=\"cb7-50\"><a href=\"#cb7-50\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">case</span> CreateAccountError<span class=\"op\">.</span><span class=\"at\">exists</span><span class=\"op\">:</span></span>\n<span id=\"cb7-51\"><a href=\"#cb7-51\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"bu\">console</span><span class=\"op\">.</span><span class=\"fu\">error</span>(<span class=\"vs\">`Batch account at </span><span class=\"sc\">${</span>error<span class=\"op\">.</span><span class=\"at\">index</span><span class=\"sc\">}</span><span class=\"vs\"> already exists.`</span>)<span class=\"op\">;</span></span>\n<span id=\"cb7-52\"><a href=\"#cb7-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"cf\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb7-53\"><a href=\"#cb7-53\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">default</span><span class=\"op\">:</span></span>\n<span id=\"cb7-54\"><a href=\"#cb7-54\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"bu\">console</span><span class=\"op\">.</span><span class=\"fu\">error</span>(</span>\n<span id=\"cb7-55\"><a href=\"#cb7-55\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"vs\">`Batch account at </span><span class=\"sc\">${</span>error<span class=\"op\">.</span><span class=\"at\">index</span><span class=\"sc\">}</span><span class=\"vs\"> failed to create: </span><span class=\"sc\">${</span></span>\n<span id=\"cb7-56\"><a href=\"#cb7-56\" aria-hidden=\"true\" tabindex=\"-1\"></a>          CreateAccountError[error<span class=\"op\">.</span><span class=\"at\">result</span>]</span>\n<span id=\"cb7-57\"><a href=\"#cb7-57\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"sc\">}</span><span class=\"vs\">.`</span><span class=\"op\">,</span></span>\n<span id=\"cb7-58\"><a href=\"#cb7-58\" aria-hidden=\"true\" tabindex=\"-1\"></a>      )<span class=\"op\">;</span></span>\n<span id=\"cb7-59\"><a href=\"#cb7-59\" aria-hidden=\"true\" tabindex=\"-1\"></a>  }</span>\n<span id=\"cb7-60\"><a href=\"#cb7-60\" aria-hidden=\"true\" tabindex=\"-1\"></a>}</span></code></pre></div>\n<p>To handle errors you can either 1) exactly match error codes returned\nfrom <code>client.createAccounts</code> with enum values in the\n<code>CreateAccountError</code> object, or you can 2) look up the error\ncode in the <code>CreateAccountError</code> object for a human-readable\nstring.</p>\n<h2 id=\"account-lookup\"><a href=\"#account-lookup\" class=\"anchor\">Account\nLookup</a></h2>\n<p>Account lookup is batched, like account creation. Pass in all IDs to\nfetch. The account for each matched ID is returned.</p>\n<p>If no account matches an ID, no object is returned for that account.\nSo the order of accounts in the response is not necessarily the same as\nthe order of IDs in the request. You can refer to the ID field in the\nresponse to distinguish accounts.</p>\n<div class=\"sourceCode\" id=\"cb8\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb8-1\"><a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> accounts <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">lookupAccounts</span>([<span class=\"dv\">100</span>n<span class=\"op\">,</span> <span class=\"dv\">101</span>n])<span class=\"op\">;</span></span></code></pre></div>\n<h2 id=\"create-transfers\"><a href=\"#create-transfers\"\nclass=\"anchor\">Create Transfers</a></h2>\n<p>This creates a journal entry between two accounts.</p>\n<p>See details for transfer fields in the <a\nhref=\"https://docs.tigerbeetle.com/reference/transfer\">Transfers\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb9\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfers <span class=\"op\">=</span> [{</span>\n<span id=\"cb9-2\"><a href=\"#cb9-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"fu\">id</span>()<span class=\"op\">,</span> <span class=\"co\">// TigerBeetle time-based ID.</span></span>\n<span id=\"cb9-3\"><a href=\"#cb9-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb9-4\"><a href=\"#cb9-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb9-5\"><a href=\"#cb9-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb9-6\"><a href=\"#cb9-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb9-7\"><a href=\"#cb9-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb9-8\"><a href=\"#cb9-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb9-9\"><a href=\"#cb9-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb9-10\"><a href=\"#cb9-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb9-11\"><a href=\"#cb9-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb9-12\"><a href=\"#cb9-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb9-13\"><a href=\"#cb9-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb9-14\"><a href=\"#cb9-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb9-15\"><a href=\"#cb9-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>}]<span class=\"op\">;</span></span>\n<span id=\"cb9-16\"><a href=\"#cb9-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb9-17\"><a href=\"#cb9-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>(transfers)<span class=\"op\">;</span></span>\n<span id=\"cb9-18\"><a href=\"#cb9-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<p>See details for the recommended ID scheme in <a\nhref=\"https://docs.tigerbeetle.com/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<h3 id=\"response-and-errors-1\"><a href=\"#response-and-errors-1\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all transfers were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for a transfer that failed. The error\nobject contains an error code and the index of the transfer in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"https://docs.tigerbeetle.com/reference/requests/create_transfers\">create_transfers\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb10\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb10-1\"><a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfers <span class=\"op\">=</span> [{</span>\n<span id=\"cb10-2\"><a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">1</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-3\"><a href=\"#cb10-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-4\"><a href=\"#cb10-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-5\"><a href=\"#cb10-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-6\"><a href=\"#cb10-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-7\"><a href=\"#cb10-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-8\"><a href=\"#cb10-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-9\"><a href=\"#cb10-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-10\"><a href=\"#cb10-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-11\"><a href=\"#cb10-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-12\"><a href=\"#cb10-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb10-13\"><a href=\"#cb10-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-14\"><a href=\"#cb10-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-15\"><a href=\"#cb10-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">,</span></span>\n<span id=\"cb10-16\"><a href=\"#cb10-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>{</span>\n<span id=\"cb10-17\"><a href=\"#cb10-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">2</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-18\"><a href=\"#cb10-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-19\"><a href=\"#cb10-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-20\"><a href=\"#cb10-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-21\"><a href=\"#cb10-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-22\"><a href=\"#cb10-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-23\"><a href=\"#cb10-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-24\"><a href=\"#cb10-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-25\"><a href=\"#cb10-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-26\"><a href=\"#cb10-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-27\"><a href=\"#cb10-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb10-28\"><a href=\"#cb10-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-29\"><a href=\"#cb10-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-30\"><a href=\"#cb10-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">,</span></span>\n<span id=\"cb10-31\"><a href=\"#cb10-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>{</span>\n<span id=\"cb10-32\"><a href=\"#cb10-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">3</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-33\"><a href=\"#cb10-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-34\"><a href=\"#cb10-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-35\"><a href=\"#cb10-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-36\"><a href=\"#cb10-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-37\"><a href=\"#cb10-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-38\"><a href=\"#cb10-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-39\"><a href=\"#cb10-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-40\"><a href=\"#cb10-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-41\"><a href=\"#cb10-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-42\"><a href=\"#cb10-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb10-43\"><a href=\"#cb10-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-44\"><a href=\"#cb10-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-45\"><a href=\"#cb10-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>}]<span class=\"op\">;</span></span>\n<span id=\"cb10-46\"><a href=\"#cb10-46\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb10-47\"><a href=\"#cb10-47\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>(batch)<span class=\"op\">;</span></span>\n<span id=\"cb10-48\"><a href=\"#cb10-48\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> (<span class=\"kw\">const</span> error <span class=\"kw\">of</span> transfer_errors) {</span>\n<span id=\"cb10-49\"><a href=\"#cb10-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"cf\">switch</span> (error<span class=\"op\">.</span><span class=\"at\">result</span>) {</span>\n<span id=\"cb10-50\"><a href=\"#cb10-50\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">case</span> CreateTransferError<span class=\"op\">.</span><span class=\"at\">exists</span><span class=\"op\">:</span></span>\n<span id=\"cb10-51\"><a href=\"#cb10-51\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"bu\">console</span><span class=\"op\">.</span><span class=\"fu\">error</span>(<span class=\"vs\">`Batch transfer at </span><span class=\"sc\">${</span>error<span class=\"op\">.</span><span class=\"at\">index</span><span class=\"sc\">}</span><span class=\"vs\"> already exists.`</span>)<span class=\"op\">;</span></span>\n<span id=\"cb10-52\"><a href=\"#cb10-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"cf\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb10-53\"><a href=\"#cb10-53\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">default</span><span class=\"op\">:</span></span>\n<span id=\"cb10-54\"><a href=\"#cb10-54\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"bu\">console</span><span class=\"op\">.</span><span class=\"fu\">error</span>(</span>\n<span id=\"cb10-55\"><a href=\"#cb10-55\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"vs\">`Batch transfer at </span><span class=\"sc\">${</span>error<span class=\"op\">.</span><span class=\"at\">index</span><span class=\"sc\">}</span><span class=\"vs\"> failed to create: </span><span class=\"sc\">${</span></span>\n<span id=\"cb10-56\"><a href=\"#cb10-56\" aria-hidden=\"true\" tabindex=\"-1\"></a>          CreateTransferError[error<span class=\"op\">.</span><span class=\"at\">result</span>]</span>\n<span id=\"cb10-57\"><a href=\"#cb10-57\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"sc\">}</span><span class=\"vs\">.`</span><span class=\"op\">,</span></span>\n<span id=\"cb10-58\"><a href=\"#cb10-58\" aria-hidden=\"true\" tabindex=\"-1\"></a>      )<span class=\"op\">;</span></span>\n<span id=\"cb10-59\"><a href=\"#cb10-59\" aria-hidden=\"true\" tabindex=\"-1\"></a>  }</span>\n<span id=\"cb10-60\"><a href=\"#cb10-60\" aria-hidden=\"true\" tabindex=\"-1\"></a>}</span></code></pre></div>\n<p>To handle errors you can either 1) exactly match error codes returned\nfrom <code>client.createTransfers</code> with enum values in the\n<code>CreateTransferError</code> object, or you can 2) look up the error\ncode in the <code>CreateTransferError</code> object for a human-readable\nstring.</p>\n<h2 id=\"batching\"><a href=\"#batching\" class=\"anchor\">Batching</a></h2>\n<p>TigerBeetle performance is maximized when you batch API requests. The\nclient does not do this automatically for you. So, for example, you\n<em>can</em> insert 1 million transfers one at a time like so:</p>\n<div class=\"sourceCode\" id=\"cb11\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> batch <span class=\"op\">=</span> []<span class=\"op\">;</span> <span class=\"co\">// Array of transfer to create.</span></span>\n<span id=\"cb11-2\"><a href=\"#cb11-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> (<span class=\"kw\">let</span> i <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> i <span class=\"op\">&lt;</span> batch<span class=\"op\">.</span><span class=\"at\">len</span><span class=\"op\">;</span> i<span class=\"op\">++</span>) {</span>\n<span id=\"cb11-3\"><a href=\"#cb11-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"kw\">const</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>(batch[i])<span class=\"op\">;</span></span>\n<span id=\"cb11-4\"><a href=\"#cb11-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb11-5\"><a href=\"#cb11-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>}</span></code></pre></div>\n<p>But the insert rate will be a <em>fraction</em> of potential.\nInstead, <strong>always batch what you can</strong>.</p>\n<p>The maximum batch size is set in the TigerBeetle server. The default\nis 8190.</p>\n<div class=\"sourceCode\" id=\"cb12\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb12-1\"><a href=\"#cb12-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> batch <span class=\"op\">=</span> []<span class=\"op\">;</span> <span class=\"co\">// Array of transfer to create.</span></span>\n<span id=\"cb12-2\"><a href=\"#cb12-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> BATCH_SIZE <span class=\"op\">=</span> <span class=\"dv\">8190</span><span class=\"op\">;</span></span>\n<span id=\"cb12-3\"><a href=\"#cb12-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> (<span class=\"kw\">let</span> i <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> i <span class=\"op\">&lt;</span> batch<span class=\"op\">.</span><span class=\"at\">length</span><span class=\"op\">;</span> i <span class=\"op\">+=</span> BATCH_SIZE) {</span>\n<span id=\"cb12-4\"><a href=\"#cb12-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"kw\">const</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>(</span>\n<span id=\"cb12-5\"><a href=\"#cb12-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">slice</span>(i<span class=\"op\">,</span> <span class=\"bu\">Math</span><span class=\"op\">.</span><span class=\"fu\">min</span>(batch<span class=\"op\">.</span><span class=\"at\">length</span><span class=\"op\">,</span> BATCH_SIZE))<span class=\"op\">,</span></span>\n<span id=\"cb12-6\"><a href=\"#cb12-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  )<span class=\"op\">;</span></span>\n<span id=\"cb12-7\"><a href=\"#cb12-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb12-8\"><a href=\"#cb12-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>}</span></code></pre></div>\n<h3 id=\"queues-and-workers\"><a href=\"#queues-and-workers\"\nclass=\"anchor\">Queues and Workers</a></h3>\n<p>If you are making requests to TigerBeetle from workers pulling jobs\nfrom a queue, you can batch requests to TigerBeetle by having the worker\nact on multiple jobs from the queue at once rather than one at a time.\ni.e. pulling multiple jobs from the queue rather than just one.</p>\n<h2 id=\"transfer-flags\"><a href=\"#transfer-flags\"\nclass=\"anchor\">Transfer Flags</a></h2>\n<p>The transfer <code>flags</code> value is a bitfield. See details for\nthese flags in the <a\nhref=\"https://docs.tigerbeetle.com/reference/transfer#flags\">Transfers\nreference</a>.</p>\n<p>To toggle behavior for a transfer, combine enum values stored in the\n<code>TransferFlags</code> object (in TypeScript it is an actual enum)\nwith bitwise-or:</p>\n<ul>\n<li><code>TransferFlags.linked</code></li>\n<li><code>TransferFlags.pending</code></li>\n<li><code>TransferFlags.post_pending_transfer</code></li>\n<li><code>TransferFlags.void_pending_transfer</code></li>\n</ul>\n<p>For example, to link <code>transfer0</code> and\n<code>transfer1</code>:</p>\n<div class=\"sourceCode\" id=\"cb13\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb13-1\"><a href=\"#cb13-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer0 <span class=\"op\">=</span> {</span>\n<span id=\"cb13-2\"><a href=\"#cb13-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">4</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-3\"><a href=\"#cb13-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-4\"><a href=\"#cb13-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-5\"><a href=\"#cb13-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-6\"><a href=\"#cb13-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-7\"><a href=\"#cb13-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-8\"><a href=\"#cb13-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-9\"><a href=\"#cb13-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb13-10\"><a href=\"#cb13-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb13-11\"><a href=\"#cb13-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb13-12\"><a href=\"#cb13-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb13-13\"><a href=\"#cb13-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> TransferFlags<span class=\"op\">.</span><span class=\"at\">linked</span><span class=\"op\">,</span></span>\n<span id=\"cb13-14\"><a href=\"#cb13-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-15\"><a href=\"#cb13-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb13-16\"><a href=\"#cb13-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer1 <span class=\"op\">=</span> {</span>\n<span id=\"cb13-17\"><a href=\"#cb13-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">5</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-18\"><a href=\"#cb13-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-19\"><a href=\"#cb13-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-20\"><a href=\"#cb13-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-21\"><a href=\"#cb13-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-22\"><a href=\"#cb13-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-23\"><a href=\"#cb13-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-24\"><a href=\"#cb13-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb13-25\"><a href=\"#cb13-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb13-26\"><a href=\"#cb13-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb13-27\"><a href=\"#cb13-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb13-28\"><a href=\"#cb13-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb13-29\"><a href=\"#cb13-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-30\"><a href=\"#cb13-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb13-31\"><a href=\"#cb13-31\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb13-32\"><a href=\"#cb13-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Create the transfer</span></span>\n<span id=\"cb13-33\"><a href=\"#cb13-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>([transfer0<span class=\"op\">,</span> transfer1])<span class=\"op\">;</span></span>\n<span id=\"cb13-34\"><a href=\"#cb13-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h3 id=\"two-phase-transfers\"><a href=\"#two-phase-transfers\"\nclass=\"anchor\">Two-Phase Transfers</a></h3>\n<p>Two-phase transfers are supported natively by toggling the\nappropriate flag. TigerBeetle will then adjust the\n<code>credits_pending</code> and <code>debits_pending</code> fields of\nthe appropriate accounts. A corresponding post pending transfer then\nneeds to be sent to post or void the transfer.</p>\n<h4 id=\"post-a-pending-transfer\"><a href=\"#post-a-pending-transfer\"\nclass=\"anchor\">Post a Pending Transfer</a></h4>\n<p>With <code>flags</code> set to <code>post_pending_transfer</code>,\nTigerBeetle will post the transfer. TigerBeetle will atomically roll\nback the changes to <code>debits_pending</code> and\n<code>credits_pending</code> of the appropriate accounts and apply them\nto the <code>debits_posted</code> and <code>credits_posted</code>\nbalances.</p>\n<div class=\"sourceCode\" id=\"cb14\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb14-1\"><a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer0 <span class=\"op\">=</span> {</span>\n<span id=\"cb14-2\"><a href=\"#cb14-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">6</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-3\"><a href=\"#cb14-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-4\"><a href=\"#cb14-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-5\"><a href=\"#cb14-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-6\"><a href=\"#cb14-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-7\"><a href=\"#cb14-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-8\"><a href=\"#cb14-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-9\"><a href=\"#cb14-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb14-10\"><a href=\"#cb14-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb14-11\"><a href=\"#cb14-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb14-12\"><a href=\"#cb14-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb14-13\"><a href=\"#cb14-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> TransferFlags<span class=\"op\">.</span><span class=\"at\">pending</span><span class=\"op\">,</span></span>\n<span id=\"cb14-14\"><a href=\"#cb14-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-15\"><a href=\"#cb14-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb14-16\"><a href=\"#cb14-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-17\"><a href=\"#cb14-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">let</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>([transfer0])<span class=\"op\">;</span></span>\n<span id=\"cb14-18\"><a href=\"#cb14-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb14-19\"><a href=\"#cb14-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-20\"><a href=\"#cb14-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer1 <span class=\"op\">=</span> {</span>\n<span id=\"cb14-21\"><a href=\"#cb14-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">7</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-22\"><a href=\"#cb14-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-23\"><a href=\"#cb14-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-24\"><a href=\"#cb14-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// Post the entire pending amount.</span></span>\n<span id=\"cb14-25\"><a href=\"#cb14-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> amount_max<span class=\"op\">,</span></span>\n<span id=\"cb14-26\"><a href=\"#cb14-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">6</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-27\"><a href=\"#cb14-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-28\"><a href=\"#cb14-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-29\"><a href=\"#cb14-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb14-30\"><a href=\"#cb14-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb14-31\"><a href=\"#cb14-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb14-32\"><a href=\"#cb14-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb14-33\"><a href=\"#cb14-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> TransferFlags<span class=\"op\">.</span><span class=\"at\">post_pending_transfer</span><span class=\"op\">,</span></span>\n<span id=\"cb14-34\"><a href=\"#cb14-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-35\"><a href=\"#cb14-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb14-36\"><a href=\"#cb14-36\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-37\"><a href=\"#cb14-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>([transfer1])<span class=\"op\">;</span></span>\n<span id=\"cb14-38\"><a href=\"#cb14-38\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h4 id=\"void-a-pending-transfer\"><a href=\"#void-a-pending-transfer\"\nclass=\"anchor\">Void a Pending Transfer</a></h4>\n<p>In contrast, with <code>flags</code> set to\n<code>void_pending_transfer</code>, TigerBeetle will void the transfer.\nTigerBeetle will roll back the changes to <code>debits_pending</code>\nand <code>credits_pending</code> of the appropriate accounts and\n<strong>not</strong> apply them to the <code>debits_posted</code> and\n<code>credits_posted</code> balances.</p>\n<div class=\"sourceCode\" id=\"cb15\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb15-1\"><a href=\"#cb15-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer0 <span class=\"op\">=</span> {</span>\n<span id=\"cb15-2\"><a href=\"#cb15-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">8</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-3\"><a href=\"#cb15-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-4\"><a href=\"#cb15-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-5\"><a href=\"#cb15-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-6\"><a href=\"#cb15-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-7\"><a href=\"#cb15-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-8\"><a href=\"#cb15-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-9\"><a href=\"#cb15-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb15-10\"><a href=\"#cb15-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb15-11\"><a href=\"#cb15-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb15-12\"><a href=\"#cb15-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb15-13\"><a href=\"#cb15-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> TransferFlags<span class=\"op\">.</span><span class=\"at\">pending</span><span class=\"op\">,</span></span>\n<span id=\"cb15-14\"><a href=\"#cb15-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-15\"><a href=\"#cb15-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb15-16\"><a href=\"#cb15-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-17\"><a href=\"#cb15-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">let</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>([transfer0])<span class=\"op\">;</span></span>\n<span id=\"cb15-18\"><a href=\"#cb15-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb15-19\"><a href=\"#cb15-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-20\"><a href=\"#cb15-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer1 <span class=\"op\">=</span> {</span>\n<span id=\"cb15-21\"><a href=\"#cb15-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">9</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-22\"><a href=\"#cb15-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-23\"><a href=\"#cb15-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-24\"><a href=\"#cb15-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-25\"><a href=\"#cb15-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">8</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-26\"><a href=\"#cb15-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-27\"><a href=\"#cb15-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-28\"><a href=\"#cb15-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb15-29\"><a href=\"#cb15-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb15-30\"><a href=\"#cb15-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb15-31\"><a href=\"#cb15-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb15-32\"><a href=\"#cb15-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> TransferFlags<span class=\"op\">.</span><span class=\"at\">void_pending_transfer</span><span class=\"op\">,</span></span>\n<span id=\"cb15-33\"><a href=\"#cb15-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-34\"><a href=\"#cb15-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb15-35\"><a href=\"#cb15-35\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-36\"><a href=\"#cb15-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>([transfer1])<span class=\"op\">;</span></span>\n<span id=\"cb15-37\"><a href=\"#cb15-37\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h2 id=\"transfer-lookup\"><a href=\"#transfer-lookup\"\nclass=\"anchor\">Transfer Lookup</a></h2>\n<p>NOTE: While transfer lookup exists, it is not a flexible query API.\nWe are developing query APIs and there will be new methods for querying\ntransfers in the future.</p>\n<p>Transfer lookup is batched, like transfer creation. Pass in all\n<code>id</code>s to fetch, and matched transfers are returned.</p>\n<p>If no transfer matches an <code>id</code>, no object is returned for\nthat transfer. So the order of transfers in the response is not\nnecessarily the same as the order of <code>id</code>s in the request.\nYou can refer to the <code>id</code> field in the response to\ndistinguish transfers.</p>\n<div class=\"sourceCode\" id=\"cb16\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb16-1\"><a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfers <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">lookupTransfers</span>([<span class=\"dv\">1</span>n<span class=\"op\">,</span> <span class=\"dv\">2</span>n])<span class=\"op\">;</span></span></code></pre></div>\n<h2 id=\"get-account-transfers\"><a href=\"#get-account-transfers\"\nclass=\"anchor\">Get Account Transfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the transfers involving a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb17\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb17-1\"><a href=\"#cb17-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> filter <span class=\"op\">=</span> {</span>\n<span id=\"cb17-2\"><a href=\"#cb17-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">account_id</span><span class=\"op\">:</span> <span class=\"dv\">2</span>n<span class=\"op\">,</span></span>\n<span id=\"cb17-3\"><a href=\"#cb17-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by UserData.</span></span>\n<span id=\"cb17-4\"><a href=\"#cb17-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb17-5\"><a href=\"#cb17-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb17-6\"><a href=\"#cb17-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Code.</span></span>\n<span id=\"cb17-7\"><a href=\"#cb17-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp_min</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb17-8\"><a href=\"#cb17-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp_max</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb17-9\"><a href=\"#cb17-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">limit</span><span class=\"op\">:</span> <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb17-10\"><a href=\"#cb17-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> AccountFilterFlags<span class=\"op\">.</span><span class=\"at\">debits</span> <span class=\"op\">|</span> <span class=\"co\">// Include transfer from the debit side.</span></span>\n<span id=\"cb17-11\"><a href=\"#cb17-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    AccountFilterFlags<span class=\"op\">.</span><span class=\"at\">credits</span> <span class=\"op\">|</span> <span class=\"co\">// Include transfer from the credit side.</span></span>\n<span id=\"cb17-12\"><a href=\"#cb17-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    AccountFilterFlags<span class=\"op\">.</span><span class=\"at\">reversed</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb17-13\"><a href=\"#cb17-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb17-14\"><a href=\"#cb17-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb17-15\"><a href=\"#cb17-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account_transfers <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">getAccountTransfers</span>(filter)<span class=\"op\">;</span></span></code></pre></div>\n<h2 id=\"get-account-balances\"><a href=\"#get-account-balances\"\nclass=\"anchor\">Get Account Balances</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the point-in-time balances of a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>Only accounts created with the flag <a\nhref=\"https://docs.tigerbeetle.com/reference/account#flagshistory\"><code>history</code></a>\nset retain <a\nhref=\"https://docs.tigerbeetle.com/reference/requests/get_account_balances\">historical\nbalances</a>.</p>\n<p>The balances in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb18\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb18-1\"><a href=\"#cb18-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> filter <span class=\"op\">=</span> {</span>\n<span id=\"cb18-2\"><a href=\"#cb18-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">account_id</span><span class=\"op\">:</span> <span class=\"dv\">2</span>n<span class=\"op\">,</span></span>\n<span id=\"cb18-3\"><a href=\"#cb18-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by UserData.</span></span>\n<span id=\"cb18-4\"><a href=\"#cb18-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb18-5\"><a href=\"#cb18-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb18-6\"><a href=\"#cb18-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Code.</span></span>\n<span id=\"cb18-7\"><a href=\"#cb18-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp_min</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb18-8\"><a href=\"#cb18-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp_max</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb18-9\"><a href=\"#cb18-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">limit</span><span class=\"op\">:</span> <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb18-10\"><a href=\"#cb18-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> AccountFilterFlags<span class=\"op\">.</span><span class=\"at\">debits</span> <span class=\"op\">|</span> <span class=\"co\">// Include transfer from the debit side.</span></span>\n<span id=\"cb18-11\"><a href=\"#cb18-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    AccountFilterFlags<span class=\"op\">.</span><span class=\"at\">credits</span> <span class=\"op\">|</span> <span class=\"co\">// Include transfer from the credit side.</span></span>\n<span id=\"cb18-12\"><a href=\"#cb18-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    AccountFilterFlags<span class=\"op\">.</span><span class=\"at\">reversed</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb18-13\"><a href=\"#cb18-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb18-14\"><a href=\"#cb18-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb18-15\"><a href=\"#cb18-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account_balances <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">getAccountBalances</span>(filter)<span class=\"op\">;</span></span></code></pre></div>\n<h2 id=\"query-accounts\"><a href=\"#query-accounts\" class=\"anchor\">Query\nAccounts</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query accounts by the intersection of some fields and by timestamp\nrange.</p>\n<p>The accounts in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb19\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb19-1\"><a href=\"#cb19-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> query_filter <span class=\"op\">=</span> {</span>\n<span id=\"cb19-2\"><a href=\"#cb19-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">1000</span>n<span class=\"op\">,</span> <span class=\"co\">// Filter by UserData.</span></span>\n<span id=\"cb19-3\"><a href=\"#cb19-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">100</span>n<span class=\"op\">,</span></span>\n<span id=\"cb19-4\"><a href=\"#cb19-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb19-5\"><a href=\"#cb19-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"co\">// Filter by Code.</span></span>\n<span id=\"cb19-6\"><a href=\"#cb19-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Ledger.</span></span>\n<span id=\"cb19-7\"><a href=\"#cb19-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp_min</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb19-8\"><a href=\"#cb19-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp_max</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb19-9\"><a href=\"#cb19-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">limit</span><span class=\"op\">:</span> <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb19-10\"><a href=\"#cb19-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> QueryFilterFlags<span class=\"op\">.</span><span class=\"at\">reversed</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb19-11\"><a href=\"#cb19-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb19-12\"><a href=\"#cb19-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb19-13\"><a href=\"#cb19-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> query_accounts <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">queryAccounts</span>(query_filter)<span class=\"op\">;</span></span></code></pre></div>\n<h2 id=\"query-transfers\"><a href=\"#query-transfers\" class=\"anchor\">Query\nTransfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query transfers by the intersection of some fields and by timestamp\nrange.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb20\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb20-1\"><a href=\"#cb20-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> query_filter <span class=\"op\">=</span> {</span>\n<span id=\"cb20-2\"><a href=\"#cb20-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">1000</span>n<span class=\"op\">,</span> <span class=\"co\">// Filter by UserData.</span></span>\n<span id=\"cb20-3\"><a href=\"#cb20-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">100</span>n<span class=\"op\">,</span></span>\n<span id=\"cb20-4\"><a href=\"#cb20-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb20-5\"><a href=\"#cb20-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"co\">// Filter by Code.</span></span>\n<span id=\"cb20-6\"><a href=\"#cb20-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Ledger.</span></span>\n<span id=\"cb20-7\"><a href=\"#cb20-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp_min</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb20-8\"><a href=\"#cb20-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp_max</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb20-9\"><a href=\"#cb20-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">limit</span><span class=\"op\">:</span> <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb20-10\"><a href=\"#cb20-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> QueryFilterFlags<span class=\"op\">.</span><span class=\"at\">reversed</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb20-11\"><a href=\"#cb20-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb20-12\"><a href=\"#cb20-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb20-13\"><a href=\"#cb20-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> query_transfers <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">queryTransfers</span>(query_filter)<span class=\"op\">;</span></span></code></pre></div>\n<h2 id=\"linked-events\"><a href=\"#linked-events\" class=\"anchor\">Linked\nEvents</a></h2>\n<p>When the <code>linked</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it links that\nevent with the next event in the batch, to create a chain of events, of\narbitrary length, which all succeed or fail together. The tail of a\nchain is denoted by the first event without this flag. The last event in\na batch may therefore never have the <code>linked</code> flag set as\nthis would leave a chain open-ended. Multiple chains or individual\nevents may coexist within a batch to succeed or fail independently.</p>\n<p>Events within a chain are executed within order, or are rolled back\non error, so that the effect of each event in the chain is visible to\nthe next, and so that the chain is either visible or invisible as a unit\nto subsequent events after the chain. The event that was the first to\nbreak the chain will have a unique error result. Other events in the\nchain will have their error result set to\n<code>linked_event_failed</code>.</p>\n<div class=\"sourceCode\" id=\"cb21\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb21-1\"><a href=\"#cb21-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> batch <span class=\"op\">=</span> []<span class=\"op\">;</span> <span class=\"co\">// Array of transfer to create.</span></span>\n<span id=\"cb21-2\"><a href=\"#cb21-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">let</span> linkedFlag <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span></span>\n<span id=\"cb21-3\"><a href=\"#cb21-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>linkedFlag <span class=\"op\">|=</span> TransferFlags<span class=\"op\">.</span><span class=\"at\">linked</span><span class=\"op\">;</span></span>\n<span id=\"cb21-4\"><a href=\"#cb21-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-5\"><a href=\"#cb21-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// An individual transfer (successful):</span></span>\n<span id=\"cb21-6\"><a href=\"#cb21-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">1</span>n <span class=\"co\">/* , ... */</span> })<span class=\"op\">;</span></span>\n<span id=\"cb21-7\"><a href=\"#cb21-7\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-8\"><a href=\"#cb21-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 4 transfers (the last transfer in the chain closes the chain with linked=false):</span></span>\n<span id=\"cb21-9\"><a href=\"#cb21-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">2</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> linkedFlag })<span class=\"op\">;</span> <span class=\"co\">// Commit/rollback.</span></span>\n<span id=\"cb21-10\"><a href=\"#cb21-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">3</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> linkedFlag })<span class=\"op\">;</span> <span class=\"co\">// Commit/rollback.</span></span>\n<span id=\"cb21-11\"><a href=\"#cb21-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">2</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> linkedFlag })<span class=\"op\">;</span> <span class=\"co\">// Fail with exists</span></span>\n<span id=\"cb21-12\"><a href=\"#cb21-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">4</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span> })<span class=\"op\">;</span> <span class=\"co\">// Fail without committing.</span></span>\n<span id=\"cb21-13\"><a href=\"#cb21-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-14\"><a href=\"#cb21-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// An individual transfer (successful):</span></span>\n<span id=\"cb21-15\"><a href=\"#cb21-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// This should not see any effect from the failed chain above.</span></span>\n<span id=\"cb21-16\"><a href=\"#cb21-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">2</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span> })<span class=\"op\">;</span></span>\n<span id=\"cb21-17\"><a href=\"#cb21-17\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-18\"><a href=\"#cb21-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 2 transfers (the first transfer fails the chain):</span></span>\n<span id=\"cb21-19\"><a href=\"#cb21-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">2</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> linkedFlag })<span class=\"op\">;</span></span>\n<span id=\"cb21-20\"><a href=\"#cb21-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">3</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span> })<span class=\"op\">;</span></span>\n<span id=\"cb21-21\"><a href=\"#cb21-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-22\"><a href=\"#cb21-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 2 transfers (successful):</span></span>\n<span id=\"cb21-23\"><a href=\"#cb21-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">3</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> linkedFlag })<span class=\"op\">;</span></span>\n<span id=\"cb21-24\"><a href=\"#cb21-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">4</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span> })<span class=\"op\">;</span></span>\n<span id=\"cb21-25\"><a href=\"#cb21-25\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-26\"><a href=\"#cb21-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>(batch)<span class=\"op\">;</span></span>\n<span id=\"cb21-27\"><a href=\"#cb21-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n<h2 id=\"imported-events\"><a href=\"#imported-events\"\nclass=\"anchor\">Imported Events</a></h2>\n<p>When the <code>imported</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it allows\nimporting historical events with a user-defined timestamp.</p>\n<p>The entire batch of events must be set with the flag\n<code>imported</code>.</p>\n<p>It‚Äôs recommended to submit the whole batch as a <code>linked</code>\nchain of events, ensuring that if any event fails, none of them are\ncommitted, preserving the last timestamp unchanged. This approach gives\nthe application a chance to correct failed imported events,\nre-submitting the batch again with the same user-defined timestamps.</p>\n<div class=\"sourceCode\" id=\"cb22\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb22-1\"><a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// External source of time.</span></span>\n<span id=\"cb22-2\"><a href=\"#cb22-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">let</span> historical_timestamp <span class=\"op\">=</span> <span class=\"dv\">0</span>n</span>\n<span id=\"cb22-3\"><a href=\"#cb22-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Events loaded from an external source.</span></span>\n<span id=\"cb22-4\"><a href=\"#cb22-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> historical_accounts <span class=\"op\">=</span> []<span class=\"op\">;</span> <span class=\"co\">// Loaded from an external source.</span></span>\n<span id=\"cb22-5\"><a href=\"#cb22-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> historical_transfers <span class=\"op\">=</span> []<span class=\"op\">;</span> <span class=\"co\">// Loaded from an external source.</span></span>\n<span id=\"cb22-6\"><a href=\"#cb22-6\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-7\"><a href=\"#cb22-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// First, load and import all accounts with their timestamps from the historical source.</span></span>\n<span id=\"cb22-8\"><a href=\"#cb22-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> accounts <span class=\"op\">=</span> []<span class=\"op\">;</span></span>\n<span id=\"cb22-9\"><a href=\"#cb22-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> (<span class=\"kw\">let</span> index <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> i <span class=\"op\">&lt;</span> historical_accounts<span class=\"op\">.</span><span class=\"at\">length</span><span class=\"op\">;</span> i<span class=\"op\">++</span>) {</span>\n<span id=\"cb22-10\"><a href=\"#cb22-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"kw\">let</span> account <span class=\"op\">=</span> historical_accounts[i]<span class=\"op\">;</span></span>\n<span id=\"cb22-11\"><a href=\"#cb22-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb22-12\"><a href=\"#cb22-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  historical_timestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span><span class=\"op\">;</span></span>\n<span id=\"cb22-13\"><a href=\"#cb22-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  account<span class=\"op\">.</span><span class=\"at\">timestamp</span> <span class=\"op\">=</span> historical_timestamp<span class=\"op\">;</span></span>\n<span id=\"cb22-14\"><a href=\"#cb22-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// Set the account as `imported`.</span></span>\n<span id=\"cb22-15\"><a href=\"#cb22-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>  account<span class=\"op\">.</span><span class=\"at\">flags</span> <span class=\"op\">=</span> AccountFlags<span class=\"op\">.</span><span class=\"at\">imported</span><span class=\"op\">;</span></span>\n<span id=\"cb22-16\"><a href=\"#cb22-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb22-17\"><a href=\"#cb22-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// must be `linked`.</span></span>\n<span id=\"cb22-18\"><a href=\"#cb22-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"cf\">if</span> (index <span class=\"op\">&lt;</span> historical_accounts<span class=\"op\">.</span><span class=\"at\">length</span> <span class=\"op\">-</span> <span class=\"dv\">1</span>) {</span>\n<span id=\"cb22-19\"><a href=\"#cb22-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account<span class=\"op\">.</span><span class=\"at\">flags</span> <span class=\"op\">|=</span> AccountFlags<span class=\"op\">.</span><span class=\"at\">linked</span><span class=\"op\">;</span></span>\n<span id=\"cb22-20\"><a href=\"#cb22-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>  }</span>\n<span id=\"cb22-21\"><a href=\"#cb22-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-22\"><a href=\"#cb22-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>  accounts<span class=\"op\">.</span><span class=\"fu\">push</span>(account)<span class=\"op\">;</span></span>\n<span id=\"cb22-23\"><a href=\"#cb22-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>}</span>\n<span id=\"cb22-24\"><a href=\"#cb22-24\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-25\"><a href=\"#cb22-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span>(accounts)<span class=\"op\">;</span></span>\n<span id=\"cb22-26\"><a href=\"#cb22-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb22-27\"><a href=\"#cb22-27\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-28\"><a href=\"#cb22-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Then, load and import all transfers with their timestamps from the historical source.</span></span>\n<span id=\"cb22-29\"><a href=\"#cb22-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfers <span class=\"op\">=</span> []<span class=\"op\">;</span></span>\n<span id=\"cb22-30\"><a href=\"#cb22-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> (<span class=\"kw\">let</span> index <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> i <span class=\"op\">&lt;</span> historical_transfers<span class=\"op\">.</span><span class=\"at\">length</span><span class=\"op\">;</span> i<span class=\"op\">++</span>) {</span>\n<span id=\"cb22-31\"><a href=\"#cb22-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"kw\">let</span> transfer <span class=\"op\">=</span> historical_transfers[i]<span class=\"op\">;</span></span>\n<span id=\"cb22-32\"><a href=\"#cb22-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb22-33\"><a href=\"#cb22-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>  historical_timestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span><span class=\"op\">;</span></span>\n<span id=\"cb22-34\"><a href=\"#cb22-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>  transfer<span class=\"op\">.</span><span class=\"at\">timestamp</span> <span class=\"op\">=</span> historical_timestamp<span class=\"op\">;</span></span>\n<span id=\"cb22-35\"><a href=\"#cb22-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// Set the account as `imported`.</span></span>\n<span id=\"cb22-36\"><a href=\"#cb22-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>  transfer<span class=\"op\">.</span><span class=\"at\">flags</span> <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"at\">imported</span><span class=\"op\">;</span></span>\n<span id=\"cb22-37\"><a href=\"#cb22-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb22-38\"><a href=\"#cb22-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// must be `linked`.</span></span>\n<span id=\"cb22-39\"><a href=\"#cb22-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"cf\">if</span> (index <span class=\"op\">&lt;</span> historical_transfers<span class=\"op\">.</span><span class=\"at\">length</span> <span class=\"op\">-</span> <span class=\"dv\">1</span>) {</span>\n<span id=\"cb22-40\"><a href=\"#cb22-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer<span class=\"op\">.</span><span class=\"at\">flags</span> <span class=\"op\">|=</span> TransferFlags<span class=\"op\">.</span><span class=\"at\">linked</span><span class=\"op\">;</span></span>\n<span id=\"cb22-41\"><a href=\"#cb22-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>  }</span>\n<span id=\"cb22-42\"><a href=\"#cb22-42\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-43\"><a href=\"#cb22-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>  transfers<span class=\"op\">.</span><span class=\"fu\">push</span>(transfer)<span class=\"op\">;</span></span>\n<span id=\"cb22-44\"><a href=\"#cb22-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>}</span>\n<span id=\"cb22-45\"><a href=\"#cb22-45\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-46\"><a href=\"#cb22-46\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>(transfers)<span class=\"op\">;</span></span>\n<span id=\"cb22-47\"><a href=\"#cb22-47\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb22-48\"><a href=\"#cb22-48\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-49\"><a href=\"#cb22-49\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Since it is a linked chain, in case of any error the entire batch is rolled back and can be retried</span></span>\n<span id=\"cb22-50\"><a href=\"#cb22-50\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// with the same historical timestamps without regressing the cluster timestamp.</span></span></code></pre></div>\n"},{"path":"clients/python","html":"<!-- This file is generated by [/src/scripts/client_readmes.zig](/src/scripts/client_readmes.zig). -->\n\n<h1 id=\"tigerbeetle\"><a href=\"#tigerbeetle\"\nclass=\"anchor\">tigerbeetle</a></h1>\n<p>The TigerBeetle client for Python.</p>\n<h2 id=\"prerequisites\"><a href=\"#prerequisites\"\nclass=\"anchor\">Prerequisites</a></h2>\n<p>Linux &gt;= 5.6 is the only production environment we support. But\nfor ease of development we also support macOS and Windows.</p>\n<ul>\n<li>Python (or PyPy, etc) &gt;= <code>3.7</code></li>\n</ul>\n<h2 id=\"setup\"><a href=\"#setup\" class=\"anchor\">Setup</a></h2>\n<p>First, create a directory for your project and <code>cd</code> into\nthe directory.</p>\n<p>Then, install the TigerBeetle client:</p>\n<pre class=\"console\"><code>pip install tigerbeetle</code></pre>\n<p>Now, create <code>main.py</code> and copy this into it:</p>\n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> os</span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> tigerbeetle <span class=\"im\">as</span> tb</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">print</span>(<span class=\"st\">&quot;Import OK!&quot;</span>)</span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># To enable debug logging, via Python&#39;s built in logging module:</span></span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># logging.basicConfig(level=logging.DEBUG)</span></span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># tb.configure_logging(debug=True)</span></span></code></pre></div>\n<p>Finally, build and run:</p>\n<pre class=\"console\"><code>python3 main.py</code></pre>\n<p>Now that all prerequisites and dependencies are correctly set up,\nlet‚Äôs dig into using TigerBeetle.</p>\n<h2 id=\"sample-projects\"><a href=\"#sample-projects\"\nclass=\"anchor\">Sample projects</a></h2>\n<p>This document is primarily a reference guide to the client. Below are\nvarious sample projects demonstrating features of TigerBeetle.</p>\n<ul>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/python/samples/basic/\">Basic</a>:\nCreate two accounts and transfer an amount between them.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/python/samples/two-phase/\">Two-Phase\nTransfer</a>: Create two accounts and start a pending transfer between\nthem, then post the transfer.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/python/samples/two-phase-many/\">Many\nTwo-Phase Transfers</a>: Create two accounts and start a number of\npending transfer between them, posting and voiding alternating\ntransfers.</li>\n</ul>\n<h2 id=\"creating-a-client\"><a href=\"#creating-a-client\"\nclass=\"anchor\">Creating a Client</a></h2>\n<p>A client is created with a cluster ID and replica addresses for all\nreplicas in the cluster. The cluster ID and replica addresses are both\nchosen by the system that starts the TigerBeetle cluster.</p>\n<p>Clients are thread-safe and a single instance should be shared\nbetween multiple concurrent tasks.</p>\n<p>Multiple clients are useful when connecting to more than one\nTigerBeetle cluster.</p>\n<p>In this example the cluster ID is <code>0</code> and there is one\nreplica. The address is read from the <code>TB_ADDRESS</code>\nenvironment variable and defaults to port <code>3000</code>.</p>\n<div class=\"sourceCode\" id=\"cb4\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">with</span> tb.ClientSync(cluster_id<span class=\"op\">=</span><span class=\"dv\">0</span>, replica_addresses<span class=\"op\">=</span>os.getenv(<span class=\"st\">&quot;TB_ADDRESS&quot;</span>, <span class=\"st\">&quot;3000&quot;</span>)) <span class=\"im\">as</span> client:</span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Use the client.</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">pass</span></span></code></pre></div>\n<p>The following are valid addresses:</p>\n<ul>\n<li><code>3000</code> (interpreted as <code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1:3000</code> (interpreted as\n<code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1</code> (interpreted as <code>127.0.0.1:3001</code>,\n<code>3001</code> is the default port)</li>\n</ul>\n<h2 id=\"creating-accounts\"><a href=\"#creating-accounts\"\nclass=\"anchor\">Creating Accounts</a></h2>\n<p>See details for account fields in the <a\nhref=\"https://docs.tigerbeetle.com/reference/account\">Accounts\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb5\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>account <span class=\"op\">=</span> tb.Account(</span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span>tb.<span class=\"bu\">id</span>(), <span class=\"co\"># TigerBeetle time-based ID.</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-7\"><a href=\"#cb5-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-8\"><a href=\"#cb5-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-9\"><a href=\"#cb5-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-10\"><a href=\"#cb5-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb5-11\"><a href=\"#cb5-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">718</span>,</span>\n<span id=\"cb5-12\"><a href=\"#cb5-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-13\"><a href=\"#cb5-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-14\"><a href=\"#cb5-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb5-15\"><a href=\"#cb5-15\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-16\"><a href=\"#cb5-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>account_errors <span class=\"op\">=</span> client.create_accounts([account])</span>\n<span id=\"cb5-17\"><a href=\"#cb5-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n<p>See details for the recommended ID scheme in <a\nhref=\"https://docs.tigerbeetle.com/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<h3 id=\"account-flags\"><a href=\"#account-flags\" class=\"anchor\">Account\nFlags</a></h3>\n<p>The account flags value is a bitfield. See details for these flags in\nthe <a\nhref=\"https://docs.tigerbeetle.com/reference/account#flags\">Accounts\nreference</a>.</p>\n<p>To toggle behavior for an account, combine enum values stored in the\n<code>AccountFlags</code> object (it‚Äôs an <code>enum.IntFlag</code>)\nwith bitwise-or:</p>\n<ul>\n<li><code>AccountFlags.linked</code></li>\n<li><code>AccountFlags.debits_must_not_exceed_credits</code></li>\n<li><code>AccountFlags.credits_must_not_exceed_credits</code></li>\n<li><code>AccountFlags.history</code></li>\n</ul>\n<p>For example, to link two accounts where the first account\nadditionally has the <code>debits_must_not_exceed_credits</code>\nconstraint:</p>\n<div class=\"sourceCode\" id=\"cb6\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>account0 <span class=\"op\">=</span> tb.Account(</span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">100</span>,</span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-5\"><a href=\"#cb6-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-6\"><a href=\"#cb6-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-7\"><a href=\"#cb6-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-8\"><a href=\"#cb6-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-9\"><a href=\"#cb6-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-10\"><a href=\"#cb6-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb6-11\"><a href=\"#cb6-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb6-12\"><a href=\"#cb6-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-13\"><a href=\"#cb6-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.AccountFlags.LINKED <span class=\"op\">|</span> tb.AccountFlags.DEBITS_MUST_NOT_EXCEED_CREDITS,</span>\n<span id=\"cb6-14\"><a href=\"#cb6-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb6-15\"><a href=\"#cb6-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>account1 <span class=\"op\">=</span> tb.Account(</span>\n<span id=\"cb6-16\"><a href=\"#cb6-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">101</span>,</span>\n<span id=\"cb6-17\"><a href=\"#cb6-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-18\"><a href=\"#cb6-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-19\"><a href=\"#cb6-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-20\"><a href=\"#cb6-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-21\"><a href=\"#cb6-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-22\"><a href=\"#cb6-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-23\"><a href=\"#cb6-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-24\"><a href=\"#cb6-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb6-25\"><a href=\"#cb6-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb6-26\"><a href=\"#cb6-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-27\"><a href=\"#cb6-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.AccountFlags.HISTORY,</span>\n<span id=\"cb6-28\"><a href=\"#cb6-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb6-29\"><a href=\"#cb6-29\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-30\"><a href=\"#cb6-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>account_errors <span class=\"op\">=</span> client.create_accounts([account0, account1])</span>\n<span id=\"cb6-31\"><a href=\"#cb6-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n<h3 id=\"response-and-errors\"><a href=\"#response-and-errors\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all accounts were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for an account that failed. The error\nobject contains an error code and the index of the account in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"https://docs.tigerbeetle.com/reference/requests/create_accounts\">create_accounts\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb7\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>account0 <span class=\"op\">=</span> tb.Account(</span>\n<span id=\"cb7-2\"><a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb7-3\"><a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-4\"><a href=\"#cb7-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-5\"><a href=\"#cb7-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-6\"><a href=\"#cb7-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-7\"><a href=\"#cb7-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-8\"><a href=\"#cb7-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-9\"><a href=\"#cb7-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-10\"><a href=\"#cb7-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb7-11\"><a href=\"#cb7-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb7-12\"><a href=\"#cb7-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-13\"><a href=\"#cb7-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-14\"><a href=\"#cb7-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb7-15\"><a href=\"#cb7-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>account1 <span class=\"op\">=</span> tb.Account(</span>\n<span id=\"cb7-16\"><a href=\"#cb7-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb7-17\"><a href=\"#cb7-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-18\"><a href=\"#cb7-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-19\"><a href=\"#cb7-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-20\"><a href=\"#cb7-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-21\"><a href=\"#cb7-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-22\"><a href=\"#cb7-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-23\"><a href=\"#cb7-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-24\"><a href=\"#cb7-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb7-25\"><a href=\"#cb7-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb7-26\"><a href=\"#cb7-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-27\"><a href=\"#cb7-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-28\"><a href=\"#cb7-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb7-29\"><a href=\"#cb7-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>account2 <span class=\"op\">=</span> tb.Account(</span>\n<span id=\"cb7-30\"><a href=\"#cb7-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">104</span>,</span>\n<span id=\"cb7-31\"><a href=\"#cb7-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-32\"><a href=\"#cb7-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-33\"><a href=\"#cb7-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-34\"><a href=\"#cb7-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-35\"><a href=\"#cb7-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-36\"><a href=\"#cb7-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-37\"><a href=\"#cb7-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-38\"><a href=\"#cb7-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb7-39\"><a href=\"#cb7-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb7-40\"><a href=\"#cb7-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-41\"><a href=\"#cb7-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-42\"><a href=\"#cb7-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb7-43\"><a href=\"#cb7-43\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-44\"><a href=\"#cb7-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>account_errors <span class=\"op\">=</span> client.create_accounts([account0, account1, account2])</span>\n<span id=\"cb7-45\"><a href=\"#cb7-45\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> error <span class=\"kw\">in</span> account_errors:</span>\n<span id=\"cb7-46\"><a href=\"#cb7-46\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> error.result <span class=\"op\">==</span> tb.CreateAccountResult.EXISTS:</span>\n<span id=\"cb7-47\"><a href=\"#cb7-47\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(<span class=\"ss\">f&quot;Batch account at </span><span class=\"sc\">{</span>error<span class=\"sc\">.</span>index<span class=\"sc\">}</span><span class=\"ss\"> already exists.&quot;</span>)</span>\n<span id=\"cb7-48\"><a href=\"#cb7-48\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">else</span>:</span>\n<span id=\"cb7-49\"><a href=\"#cb7-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(<span class=\"ss\">f&quot;Batch account at $</span><span class=\"sc\">{</span>error<span class=\"sc\">.</span>index<span class=\"sc\">}</span><span class=\"ss\"> failed to create: </span><span class=\"sc\">{</span>error<span class=\"sc\">.</span>result<span class=\"sc\">}</span><span class=\"ss\">.&quot;</span>)</span></code></pre></div>\n<p>To handle errors you can compare the result code returned from\n<code>client.create_accounts</code> with enum values in the\n<code>CreateAccountResult</code> object.</p>\n<h2 id=\"account-lookup\"><a href=\"#account-lookup\" class=\"anchor\">Account\nLookup</a></h2>\n<p>Account lookup is batched, like account creation. Pass in all IDs to\nfetch. The account for each matched ID is returned.</p>\n<p>If no account matches an ID, no object is returned for that account.\nSo the order of accounts in the response is not necessarily the same as\nthe order of IDs in the request. You can refer to the ID field in the\nresponse to distinguish accounts.</p>\n<div class=\"sourceCode\" id=\"cb8\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb8-1\"><a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts <span class=\"op\">=</span> client.lookup_accounts([<span class=\"dv\">100</span>, <span class=\"dv\">101</span>])</span></code></pre></div>\n<h2 id=\"create-transfers\"><a href=\"#create-transfers\"\nclass=\"anchor\">Create Transfers</a></h2>\n<p>This creates a journal entry between two accounts.</p>\n<p>See details for transfer fields in the <a\nhref=\"https://docs.tigerbeetle.com/reference/transfer\">Transfers\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb9\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers <span class=\"op\">=</span> [tb.Transfer(</span>\n<span id=\"cb9-2\"><a href=\"#cb9-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span>tb.<span class=\"bu\">id</span>(), <span class=\"co\"># TigerBeetle time-based ID.</span></span>\n<span id=\"cb9-3\"><a href=\"#cb9-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb9-4\"><a href=\"#cb9-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb9-5\"><a href=\"#cb9-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb9-6\"><a href=\"#cb9-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb9-7\"><a href=\"#cb9-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb9-8\"><a href=\"#cb9-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb9-9\"><a href=\"#cb9-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb9-10\"><a href=\"#cb9-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb9-11\"><a href=\"#cb9-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb9-12\"><a href=\"#cb9-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb9-13\"><a href=\"#cb9-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb9-14\"><a href=\"#cb9-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb9-15\"><a href=\"#cb9-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>)]</span>\n<span id=\"cb9-16\"><a href=\"#cb9-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb9-17\"><a href=\"#cb9-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers(transfers)</span>\n<span id=\"cb9-18\"><a href=\"#cb9-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n<p>See details for the recommended ID scheme in <a\nhref=\"https://docs.tigerbeetle.com/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<h3 id=\"response-and-errors-1\"><a href=\"#response-and-errors-1\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all transfers were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for a transfer that failed. The error\nobject contains an error code and the index of the transfer in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"https://docs.tigerbeetle.com/reference/requests/create_transfers\">create_transfers\nreference</a>.</p>\n<div class=\"sourceCode\" id=\"cb10\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb10-1\"><a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> [tb.Transfer(</span>\n<span id=\"cb10-2\"><a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb10-3\"><a href=\"#cb10-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb10-4\"><a href=\"#cb10-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb10-5\"><a href=\"#cb10-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb10-6\"><a href=\"#cb10-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-7\"><a href=\"#cb10-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-8\"><a href=\"#cb10-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-9\"><a href=\"#cb10-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-10\"><a href=\"#cb10-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-11\"><a href=\"#cb10-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb10-12\"><a href=\"#cb10-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb10-13\"><a href=\"#cb10-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-14\"><a href=\"#cb10-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-15\"><a href=\"#cb10-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>),</span>\n<span id=\"cb10-16\"><a href=\"#cb10-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    tb.Transfer(</span>\n<span id=\"cb10-17\"><a href=\"#cb10-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">2</span>,</span>\n<span id=\"cb10-18\"><a href=\"#cb10-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb10-19\"><a href=\"#cb10-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb10-20\"><a href=\"#cb10-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb10-21\"><a href=\"#cb10-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-22\"><a href=\"#cb10-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-23\"><a href=\"#cb10-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-24\"><a href=\"#cb10-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-25\"><a href=\"#cb10-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-26\"><a href=\"#cb10-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb10-27\"><a href=\"#cb10-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb10-28\"><a href=\"#cb10-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-29\"><a href=\"#cb10-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-30\"><a href=\"#cb10-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>),</span>\n<span id=\"cb10-31\"><a href=\"#cb10-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>    tb.Transfer(</span>\n<span id=\"cb10-32\"><a href=\"#cb10-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">3</span>,</span>\n<span id=\"cb10-33\"><a href=\"#cb10-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb10-34\"><a href=\"#cb10-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb10-35\"><a href=\"#cb10-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb10-36\"><a href=\"#cb10-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-37\"><a href=\"#cb10-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-38\"><a href=\"#cb10-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-39\"><a href=\"#cb10-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-40\"><a href=\"#cb10-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-41\"><a href=\"#cb10-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb10-42\"><a href=\"#cb10-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb10-43\"><a href=\"#cb10-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-44\"><a href=\"#cb10-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-45\"><a href=\"#cb10-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>)]</span>\n<span id=\"cb10-46\"><a href=\"#cb10-46\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb10-47\"><a href=\"#cb10-47\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers(batch)</span>\n<span id=\"cb10-48\"><a href=\"#cb10-48\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> error <span class=\"kw\">in</span> transfer_errors:</span>\n<span id=\"cb10-49\"><a href=\"#cb10-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> error.result <span class=\"op\">==</span> tb.CreateTransferResult.EXISTS:</span>\n<span id=\"cb10-50\"><a href=\"#cb10-50\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(<span class=\"ss\">f&quot;Batch transfer at </span><span class=\"sc\">{</span>error<span class=\"sc\">.</span>index<span class=\"sc\">}</span><span class=\"ss\"> already exists.&quot;</span>)</span>\n<span id=\"cb10-51\"><a href=\"#cb10-51\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">else</span>:</span>\n<span id=\"cb10-52\"><a href=\"#cb10-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(<span class=\"ss\">f&quot;Batch transfer at </span><span class=\"sc\">{</span>error<span class=\"sc\">.</span>index<span class=\"sc\">}</span><span class=\"ss\"> failed to create: </span><span class=\"sc\">{</span>error<span class=\"sc\">.</span>result<span class=\"sc\">}</span><span class=\"ss\">.&quot;</span>)</span></code></pre></div>\n<p>To handle errors you can compare the result code returned from\n<code>client.create_transfers</code> with enum values in the\n<code>CreateTransferResult</code> object.</p>\n<h2 id=\"batching\"><a href=\"#batching\" class=\"anchor\">Batching</a></h2>\n<p>TigerBeetle performance is maximized when you batch API requests. The\nclient does not do this automatically for you. So, for example, you\n<em>can</em> insert 1 million transfers one at a time like so:</p>\n<div class=\"sourceCode\" id=\"cb11\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> [] <span class=\"co\"># Array of transfer to create.</span></span>\n<span id=\"cb11-2\"><a href=\"#cb11-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> transfer <span class=\"kw\">in</span> batch:</span>\n<span id=\"cb11-3\"><a href=\"#cb11-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer_errors <span class=\"op\">=</span> client.create_transfers([transfer])</span>\n<span id=\"cb11-4\"><a href=\"#cb11-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n<p>But the insert rate will be a <em>fraction</em> of potential.\nInstead, <strong>always batch what you can</strong>.</p>\n<p>The maximum batch size is set in the TigerBeetle server. The default\nis 8190.</p>\n<div class=\"sourceCode\" id=\"cb12\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb12-1\"><a href=\"#cb12-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> [] <span class=\"co\"># Array of transfer to create.</span></span>\n<span id=\"cb12-2\"><a href=\"#cb12-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>BATCH_SIZE <span class=\"op\">=</span> <span class=\"dv\">8190</span> <span class=\"co\">#FIXME</span></span>\n<span id=\"cb12-3\"><a href=\"#cb12-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> i <span class=\"kw\">in</span> <span class=\"bu\">range</span>(<span class=\"dv\">0</span>, <span class=\"bu\">len</span>(batch), BATCH_SIZE):</span>\n<span id=\"cb12-4\"><a href=\"#cb12-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer_errors <span class=\"op\">=</span> client.create_transfers(</span>\n<span id=\"cb12-5\"><a href=\"#cb12-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        batch[i:<span class=\"bu\">min</span>(<span class=\"bu\">len</span>(batch), BATCH_SIZE)],</span>\n<span id=\"cb12-6\"><a href=\"#cb12-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    )</span>\n<span id=\"cb12-7\"><a href=\"#cb12-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n<h3 id=\"queues-and-workers\"><a href=\"#queues-and-workers\"\nclass=\"anchor\">Queues and Workers</a></h3>\n<p>If you are making requests to TigerBeetle from workers pulling jobs\nfrom a queue, you can batch requests to TigerBeetle by having the worker\nact on multiple jobs from the queue at once rather than one at a time.\ni.e. pulling multiple jobs from the queue rather than just one.</p>\n<h2 id=\"transfer-flags\"><a href=\"#transfer-flags\"\nclass=\"anchor\">Transfer Flags</a></h2>\n<p>The transfer <code>flags</code> value is a bitfield. See details for\nthese flags in the <a\nhref=\"https://docs.tigerbeetle.com/reference/transfer#flags\">Transfers\nreference</a>.</p>\n<p>To toggle behavior for a transfer, combine enum values stored in the\n<code>TransferFlags</code> object (it‚Äôs an <code>enum.IntFlag</code>)\nwith bitwise-or:</p>\n<ul>\n<li><code>TransferFlags.linked</code></li>\n<li><code>TransferFlags.pending</code></li>\n<li><code>TransferFlags.post_pending_transfer</code></li>\n<li><code>TransferFlags.void_pending_transfer</code></li>\n</ul>\n<p>For example, to link <code>transfer0</code> and\n<code>transfer1</code>:</p>\n<div class=\"sourceCode\" id=\"cb13\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb13-1\"><a href=\"#cb13-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer0 <span class=\"op\">=</span> tb.Transfer(</span>\n<span id=\"cb13-2\"><a href=\"#cb13-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">4</span>,</span>\n<span id=\"cb13-3\"><a href=\"#cb13-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb13-4\"><a href=\"#cb13-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb13-5\"><a href=\"#cb13-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb13-6\"><a href=\"#cb13-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-7\"><a href=\"#cb13-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-8\"><a href=\"#cb13-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-9\"><a href=\"#cb13-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-10\"><a href=\"#cb13-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-11\"><a href=\"#cb13-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb13-12\"><a href=\"#cb13-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb13-13\"><a href=\"#cb13-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.TransferFlags.LINKED,</span>\n<span id=\"cb13-14\"><a href=\"#cb13-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-15\"><a href=\"#cb13-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb13-16\"><a href=\"#cb13-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer1 <span class=\"op\">=</span> tb.Transfer(</span>\n<span id=\"cb13-17\"><a href=\"#cb13-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">5</span>,</span>\n<span id=\"cb13-18\"><a href=\"#cb13-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb13-19\"><a href=\"#cb13-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb13-20\"><a href=\"#cb13-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb13-21\"><a href=\"#cb13-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-22\"><a href=\"#cb13-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-23\"><a href=\"#cb13-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-24\"><a href=\"#cb13-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-25\"><a href=\"#cb13-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-26\"><a href=\"#cb13-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb13-27\"><a href=\"#cb13-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb13-28\"><a href=\"#cb13-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-29\"><a href=\"#cb13-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-30\"><a href=\"#cb13-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb13-31\"><a href=\"#cb13-31\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb13-32\"><a href=\"#cb13-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Create the transfer</span></span>\n<span id=\"cb13-33\"><a href=\"#cb13-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers([transfer0, transfer1])</span>\n<span id=\"cb13-34\"><a href=\"#cb13-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n<h3 id=\"two-phase-transfers\"><a href=\"#two-phase-transfers\"\nclass=\"anchor\">Two-Phase Transfers</a></h3>\n<p>Two-phase transfers are supported natively by toggling the\nappropriate flag. TigerBeetle will then adjust the\n<code>credits_pending</code> and <code>debits_pending</code> fields of\nthe appropriate accounts. A corresponding post pending transfer then\nneeds to be sent to post or void the transfer.</p>\n<h4 id=\"post-a-pending-transfer\"><a href=\"#post-a-pending-transfer\"\nclass=\"anchor\">Post a Pending Transfer</a></h4>\n<p>With <code>flags</code> set to <code>post_pending_transfer</code>,\nTigerBeetle will post the transfer. TigerBeetle will atomically roll\nback the changes to <code>debits_pending</code> and\n<code>credits_pending</code> of the appropriate accounts and apply them\nto the <code>debits_posted</code> and <code>credits_posted</code>\nbalances.</p>\n<div class=\"sourceCode\" id=\"cb14\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb14-1\"><a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer0 <span class=\"op\">=</span> tb.Transfer(</span>\n<span id=\"cb14-2\"><a href=\"#cb14-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">6</span>,</span>\n<span id=\"cb14-3\"><a href=\"#cb14-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb14-4\"><a href=\"#cb14-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb14-5\"><a href=\"#cb14-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb14-6\"><a href=\"#cb14-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-7\"><a href=\"#cb14-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-8\"><a href=\"#cb14-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-9\"><a href=\"#cb14-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-10\"><a href=\"#cb14-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-11\"><a href=\"#cb14-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb14-12\"><a href=\"#cb14-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb14-13\"><a href=\"#cb14-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.TransferFlags.PENDING,</span>\n<span id=\"cb14-14\"><a href=\"#cb14-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-15\"><a href=\"#cb14-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb14-16\"><a href=\"#cb14-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-17\"><a href=\"#cb14-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers([transfer0])</span>\n<span id=\"cb14-18\"><a href=\"#cb14-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span>\n<span id=\"cb14-19\"><a href=\"#cb14-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-20\"><a href=\"#cb14-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer1 <span class=\"op\">=</span> tb.Transfer(</span>\n<span id=\"cb14-21\"><a href=\"#cb14-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">7</span>,</span>\n<span id=\"cb14-22\"><a href=\"#cb14-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb14-23\"><a href=\"#cb14-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb14-24\"><a href=\"#cb14-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Post the entire pending amount.</span></span>\n<span id=\"cb14-25\"><a href=\"#cb14-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span>tb.amount_max,</span>\n<span id=\"cb14-26\"><a href=\"#cb14-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">6</span>,</span>\n<span id=\"cb14-27\"><a href=\"#cb14-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-28\"><a href=\"#cb14-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-29\"><a href=\"#cb14-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-30\"><a href=\"#cb14-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-31\"><a href=\"#cb14-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb14-32\"><a href=\"#cb14-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb14-33\"><a href=\"#cb14-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.TransferFlags.POST_PENDING_TRANSFER,</span>\n<span id=\"cb14-34\"><a href=\"#cb14-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-35\"><a href=\"#cb14-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb14-36\"><a href=\"#cb14-36\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-37\"><a href=\"#cb14-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers([transfer1])</span>\n<span id=\"cb14-38\"><a href=\"#cb14-38\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n<h4 id=\"void-a-pending-transfer\"><a href=\"#void-a-pending-transfer\"\nclass=\"anchor\">Void a Pending Transfer</a></h4>\n<p>In contrast, with <code>flags</code> set to\n<code>void_pending_transfer</code>, TigerBeetle will void the transfer.\nTigerBeetle will roll back the changes to <code>debits_pending</code>\nand <code>credits_pending</code> of the appropriate accounts and\n<strong>not</strong> apply them to the <code>debits_posted</code> and\n<code>credits_posted</code> balances.</p>\n<div class=\"sourceCode\" id=\"cb15\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb15-1\"><a href=\"#cb15-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer0 <span class=\"op\">=</span> tb.Transfer(</span>\n<span id=\"cb15-2\"><a href=\"#cb15-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">8</span>,</span>\n<span id=\"cb15-3\"><a href=\"#cb15-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb15-4\"><a href=\"#cb15-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb15-5\"><a href=\"#cb15-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb15-6\"><a href=\"#cb15-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-7\"><a href=\"#cb15-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-8\"><a href=\"#cb15-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-9\"><a href=\"#cb15-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-10\"><a href=\"#cb15-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-11\"><a href=\"#cb15-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb15-12\"><a href=\"#cb15-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb15-13\"><a href=\"#cb15-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.TransferFlags.PENDING,</span>\n<span id=\"cb15-14\"><a href=\"#cb15-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-15\"><a href=\"#cb15-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb15-16\"><a href=\"#cb15-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-17\"><a href=\"#cb15-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers([transfer0])</span>\n<span id=\"cb15-18\"><a href=\"#cb15-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span>\n<span id=\"cb15-19\"><a href=\"#cb15-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-20\"><a href=\"#cb15-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer1 <span class=\"op\">=</span> tb.Transfer(</span>\n<span id=\"cb15-21\"><a href=\"#cb15-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">9</span>,</span>\n<span id=\"cb15-22\"><a href=\"#cb15-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb15-23\"><a href=\"#cb15-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb15-24\"><a href=\"#cb15-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb15-25\"><a href=\"#cb15-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">8</span>,</span>\n<span id=\"cb15-26\"><a href=\"#cb15-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-27\"><a href=\"#cb15-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-28\"><a href=\"#cb15-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-29\"><a href=\"#cb15-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-30\"><a href=\"#cb15-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb15-31\"><a href=\"#cb15-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb15-32\"><a href=\"#cb15-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.TransferFlags.VOID_PENDING_TRANSFER,</span>\n<span id=\"cb15-33\"><a href=\"#cb15-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-34\"><a href=\"#cb15-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb15-35\"><a href=\"#cb15-35\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-36\"><a href=\"#cb15-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers([transfer1])</span>\n<span id=\"cb15-37\"><a href=\"#cb15-37\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n<h2 id=\"transfer-lookup\"><a href=\"#transfer-lookup\"\nclass=\"anchor\">Transfer Lookup</a></h2>\n<p>NOTE: While transfer lookup exists, it is not a flexible query API.\nWe are developing query APIs and there will be new methods for querying\ntransfers in the future.</p>\n<p>Transfer lookup is batched, like transfer creation. Pass in all\n<code>id</code>s to fetch, and matched transfers are returned.</p>\n<p>If no transfer matches an <code>id</code>, no object is returned for\nthat transfer. So the order of transfers in the response is not\nnecessarily the same as the order of <code>id</code>s in the request.\nYou can refer to the <code>id</code> field in the response to\ndistinguish transfers.</p>\n<div class=\"sourceCode\" id=\"cb16\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb16-1\"><a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers <span class=\"op\">=</span> client.lookup_transfers([<span class=\"dv\">1</span>, <span class=\"dv\">2</span>])</span></code></pre></div>\n<h2 id=\"get-account-transfers\"><a href=\"#get-account-transfers\"\nclass=\"anchor\">Get Account Transfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the transfers involving a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb17\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb17-1\"><a href=\"#cb17-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">filter</span> <span class=\"op\">=</span> tb.AccountFilter(</span>\n<span id=\"cb17-2\"><a href=\"#cb17-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account_id<span class=\"op\">=</span><span class=\"dv\">2</span>,</span>\n<span id=\"cb17-3\"><a href=\"#cb17-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by UserData.</span></span>\n<span id=\"cb17-4\"><a href=\"#cb17-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb17-5\"><a href=\"#cb17-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb17-6\"><a href=\"#cb17-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Code.</span></span>\n<span id=\"cb17-7\"><a href=\"#cb17-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp_min<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Timestamp.</span></span>\n<span id=\"cb17-8\"><a href=\"#cb17-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp_max<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Timestamp.</span></span>\n<span id=\"cb17-9\"><a href=\"#cb17-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    limit<span class=\"op\">=</span><span class=\"dv\">10</span>, <span class=\"co\"># Limit to ten balances at most.</span></span>\n<span id=\"cb17-10\"><a href=\"#cb17-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.AccountFilterFlags.DEBITS <span class=\"op\">|</span> <span class=\"co\"># Include transfer from the debit side.</span></span>\n<span id=\"cb17-11\"><a href=\"#cb17-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    tb.AccountFilterFlags.CREDITS <span class=\"op\">|</span> <span class=\"co\"># Include transfer from the credit side.</span></span>\n<span id=\"cb17-12\"><a href=\"#cb17-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    tb.AccountFilterFlags.REVERSED, <span class=\"co\"># Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb17-13\"><a href=\"#cb17-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb17-14\"><a href=\"#cb17-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb17-15\"><a href=\"#cb17-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>account_transfers <span class=\"op\">=</span> client.get_account_transfers(<span class=\"bu\">filter</span>)</span></code></pre></div>\n<h2 id=\"get-account-balances\"><a href=\"#get-account-balances\"\nclass=\"anchor\">Get Account Balances</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the point-in-time balances of a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>Only accounts created with the flag <a\nhref=\"https://docs.tigerbeetle.com/reference/account#flagshistory\"><code>history</code></a>\nset retain <a\nhref=\"https://docs.tigerbeetle.com/reference/requests/get_account_balances\">historical\nbalances</a>.</p>\n<p>The balances in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb18\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb18-1\"><a href=\"#cb18-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">filter</span> <span class=\"op\">=</span> tb.AccountFilter(</span>\n<span id=\"cb18-2\"><a href=\"#cb18-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account_id<span class=\"op\">=</span><span class=\"dv\">2</span>,</span>\n<span id=\"cb18-3\"><a href=\"#cb18-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by UserData.</span></span>\n<span id=\"cb18-4\"><a href=\"#cb18-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb18-5\"><a href=\"#cb18-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb18-6\"><a href=\"#cb18-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Code.</span></span>\n<span id=\"cb18-7\"><a href=\"#cb18-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp_min<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Timestamp.</span></span>\n<span id=\"cb18-8\"><a href=\"#cb18-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp_max<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Timestamp.</span></span>\n<span id=\"cb18-9\"><a href=\"#cb18-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    limit<span class=\"op\">=</span><span class=\"dv\">10</span>, <span class=\"co\"># Limit to ten balances at most.</span></span>\n<span id=\"cb18-10\"><a href=\"#cb18-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.AccountFilterFlags.DEBITS <span class=\"op\">|</span> <span class=\"co\"># Include transfer from the debit side.</span></span>\n<span id=\"cb18-11\"><a href=\"#cb18-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    tb.AccountFilterFlags.CREDITS <span class=\"op\">|</span> <span class=\"co\"># Include transfer from the credit side.</span></span>\n<span id=\"cb18-12\"><a href=\"#cb18-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    tb.AccountFilterFlags.REVERSED, <span class=\"co\"># Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb18-13\"><a href=\"#cb18-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb18-14\"><a href=\"#cb18-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb18-15\"><a href=\"#cb18-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>account_balances <span class=\"op\">=</span> client.get_account_balances(<span class=\"bu\">filter</span>)</span></code></pre></div>\n<h2 id=\"query-accounts\"><a href=\"#query-accounts\" class=\"anchor\">Query\nAccounts</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query accounts by the intersection of some fields and by timestamp\nrange.</p>\n<p>The accounts in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb19\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb19-1\"><a href=\"#cb19-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>query_filter <span class=\"op\">=</span> tb.QueryFilter(</span>\n<span id=\"cb19-2\"><a href=\"#cb19-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">1000</span>, <span class=\"co\"># Filter by UserData.</span></span>\n<span id=\"cb19-3\"><a href=\"#cb19-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">100</span>,</span>\n<span id=\"cb19-4\"><a href=\"#cb19-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb19-5\"><a href=\"#cb19-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">1</span>, <span class=\"co\"># Filter by Code.</span></span>\n<span id=\"cb19-6\"><a href=\"#cb19-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Ledger.</span></span>\n<span id=\"cb19-7\"><a href=\"#cb19-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp_min<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Timestamp.</span></span>\n<span id=\"cb19-8\"><a href=\"#cb19-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp_max<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Timestamp.</span></span>\n<span id=\"cb19-9\"><a href=\"#cb19-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    limit<span class=\"op\">=</span><span class=\"dv\">10</span>, <span class=\"co\"># Limit to ten balances at most.</span></span>\n<span id=\"cb19-10\"><a href=\"#cb19-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.QueryFilterFlags.REVERSED, <span class=\"co\"># Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb19-11\"><a href=\"#cb19-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb19-12\"><a href=\"#cb19-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb19-13\"><a href=\"#cb19-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>query_accounts <span class=\"op\">=</span> client.query_accounts(query_filter)</span></code></pre></div>\n<h2 id=\"query-transfers\"><a href=\"#query-transfers\" class=\"anchor\">Query\nTransfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query transfers by the intersection of some fields and by timestamp\nrange.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"sourceCode\" id=\"cb20\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb20-1\"><a href=\"#cb20-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>query_filter <span class=\"op\">=</span> tb.QueryFilter(</span>\n<span id=\"cb20-2\"><a href=\"#cb20-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">1000</span>, <span class=\"co\"># Filter by UserData.</span></span>\n<span id=\"cb20-3\"><a href=\"#cb20-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">100</span>,</span>\n<span id=\"cb20-4\"><a href=\"#cb20-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb20-5\"><a href=\"#cb20-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">1</span>, <span class=\"co\"># Filter by Code.</span></span>\n<span id=\"cb20-6\"><a href=\"#cb20-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Ledger.</span></span>\n<span id=\"cb20-7\"><a href=\"#cb20-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp_min<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Timestamp.</span></span>\n<span id=\"cb20-8\"><a href=\"#cb20-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp_max<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Timestamp.</span></span>\n<span id=\"cb20-9\"><a href=\"#cb20-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    limit<span class=\"op\">=</span><span class=\"dv\">10</span>, <span class=\"co\"># Limit to ten balances at most.</span></span>\n<span id=\"cb20-10\"><a href=\"#cb20-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.QueryFilterFlags.REVERSED, <span class=\"co\"># Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb20-11\"><a href=\"#cb20-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb20-12\"><a href=\"#cb20-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb20-13\"><a href=\"#cb20-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>query_transfers <span class=\"op\">=</span> client.query_transfers(query_filter)</span></code></pre></div>\n<h2 id=\"linked-events\"><a href=\"#linked-events\" class=\"anchor\">Linked\nEvents</a></h2>\n<p>When the <code>linked</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it links that\nevent with the next event in the batch, to create a chain of events, of\narbitrary length, which all succeed or fail together. The tail of a\nchain is denoted by the first event without this flag. The last event in\na batch may therefore never have the <code>linked</code> flag set as\nthis would leave a chain open-ended. Multiple chains or individual\nevents may coexist within a batch to succeed or fail independently.</p>\n<p>Events within a chain are executed within order, or are rolled back\non error, so that the effect of each event in the chain is visible to\nthe next, and so that the chain is either visible or invisible as a unit\nto subsequent events after the chain. The event that was the first to\nbreak the chain will have a unique error result. Other events in the\nchain will have their error result set to\n<code>linked_event_failed</code>.</p>\n<div class=\"sourceCode\" id=\"cb21\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb21-1\"><a href=\"#cb21-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> [] <span class=\"co\"># List of tb.Transfers to create.</span></span>\n<span id=\"cb21-2\"><a href=\"#cb21-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>linkedFlag <span class=\"op\">=</span> <span class=\"dv\">0</span></span>\n<span id=\"cb21-3\"><a href=\"#cb21-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>linkedFlag <span class=\"op\">|=</span> tb.TransferFlags.LINKED</span>\n<span id=\"cb21-4\"><a href=\"#cb21-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-5\"><a href=\"#cb21-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># An individual transfer (successful):</span></span>\n<span id=\"cb21-6\"><a href=\"#cb21-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">1</span>))</span>\n<span id=\"cb21-7\"><a href=\"#cb21-7\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-8\"><a href=\"#cb21-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># A chain of 4 transfers (the last transfer in the chain closes the chain with linked=false):</span></span>\n<span id=\"cb21-9\"><a href=\"#cb21-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">2</span>, flags<span class=\"op\">=</span>linkedFlag)) <span class=\"co\"># Commit/rollback.</span></span>\n<span id=\"cb21-10\"><a href=\"#cb21-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">3</span>, flags<span class=\"op\">=</span>linkedFlag)) <span class=\"co\"># Commit/rollback.</span></span>\n<span id=\"cb21-11\"><a href=\"#cb21-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">2</span>, flags<span class=\"op\">=</span>linkedFlag)) <span class=\"co\"># Fail with exists</span></span>\n<span id=\"cb21-12\"><a href=\"#cb21-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">4</span>, flags<span class=\"op\">=</span><span class=\"dv\">0</span>)) <span class=\"co\"># Fail without committing.</span></span>\n<span id=\"cb21-13\"><a href=\"#cb21-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-14\"><a href=\"#cb21-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># An individual transfer (successful):</span></span>\n<span id=\"cb21-15\"><a href=\"#cb21-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># This should not see any effect from the failed chain above.</span></span>\n<span id=\"cb21-16\"><a href=\"#cb21-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">2</span>, flags<span class=\"op\">=</span><span class=\"dv\">0</span> ))</span>\n<span id=\"cb21-17\"><a href=\"#cb21-17\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-18\"><a href=\"#cb21-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># A chain of 2 transfers (the first transfer fails the chain):</span></span>\n<span id=\"cb21-19\"><a href=\"#cb21-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">2</span>, flags<span class=\"op\">=</span>linkedFlag))</span>\n<span id=\"cb21-20\"><a href=\"#cb21-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">3</span>, flags<span class=\"op\">=</span><span class=\"dv\">0</span>))</span>\n<span id=\"cb21-21\"><a href=\"#cb21-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-22\"><a href=\"#cb21-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># A chain of 2 transfers (successful):</span></span>\n<span id=\"cb21-23\"><a href=\"#cb21-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">3</span>, flags<span class=\"op\">=</span>linkedFlag))</span>\n<span id=\"cb21-24\"><a href=\"#cb21-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">4</span>, flags<span class=\"op\">=</span><span class=\"dv\">0</span>))</span>\n<span id=\"cb21-25\"><a href=\"#cb21-25\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-26\"><a href=\"#cb21-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers(batch)</span>\n<span id=\"cb21-27\"><a href=\"#cb21-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n<h2 id=\"imported-events\"><a href=\"#imported-events\"\nclass=\"anchor\">Imported Events</a></h2>\n<p>When the <code>imported</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it allows\nimporting historical events with a user-defined timestamp.</p>\n<p>The entire batch of events must be set with the flag\n<code>imported</code>.</p>\n<p>It‚Äôs recommended to submit the whole batch as a <code>linked</code>\nchain of events, ensuring that if any event fails, none of them are\ncommitted, preserving the last timestamp unchanged. This approach gives\nthe application a chance to correct failed imported events,\nre-submitting the batch again with the same user-defined timestamps.</p>\n<div class=\"sourceCode\" id=\"cb22\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb22-1\"><a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># External source of time.</span></span>\n<span id=\"cb22-2\"><a href=\"#cb22-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>historical_timestamp <span class=\"op\">=</span> <span class=\"dv\">0</span></span>\n<span id=\"cb22-3\"><a href=\"#cb22-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Events loaded from an external source.</span></span>\n<span id=\"cb22-4\"><a href=\"#cb22-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>historical_accounts <span class=\"op\">=</span> [] <span class=\"co\"># Loaded from an external source.</span></span>\n<span id=\"cb22-5\"><a href=\"#cb22-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>historical_transfers <span class=\"op\">=</span> [] <span class=\"co\"># Loaded from an external source.</span></span>\n<span id=\"cb22-6\"><a href=\"#cb22-6\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-7\"><a href=\"#cb22-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># First, load and import all accounts with their timestamps from the historical source.</span></span>\n<span id=\"cb22-8\"><a href=\"#cb22-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts <span class=\"op\">=</span> []</span>\n<span id=\"cb22-9\"><a href=\"#cb22-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> index, account <span class=\"kw\">in</span> <span class=\"bu\">enumerate</span>(historical_accounts):</span>\n<span id=\"cb22-10\"><a href=\"#cb22-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb22-11\"><a href=\"#cb22-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    historical_timestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span></span>\n<span id=\"cb22-12\"><a href=\"#cb22-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account.timestamp <span class=\"op\">=</span> historical_timestamp</span>\n<span id=\"cb22-13\"><a href=\"#cb22-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Set the account as `imported`.</span></span>\n<span id=\"cb22-14\"><a href=\"#cb22-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account.flags <span class=\"op\">=</span> tb.AccountFlags.IMPORTED</span>\n<span id=\"cb22-15\"><a href=\"#cb22-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb22-16\"><a href=\"#cb22-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># must be `linked`.</span></span>\n<span id=\"cb22-17\"><a href=\"#cb22-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> index <span class=\"op\">&lt;</span> <span class=\"bu\">len</span>(historical_accounts) <span class=\"op\">-</span> <span class=\"dv\">1</span>:</span>\n<span id=\"cb22-18\"><a href=\"#cb22-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>        account.flags <span class=\"op\">|=</span> tb.AccountFlags.LINKED</span>\n<span id=\"cb22-19\"><a href=\"#cb22-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-20\"><a href=\"#cb22-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    accounts.append(account)</span>\n<span id=\"cb22-21\"><a href=\"#cb22-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-22\"><a href=\"#cb22-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>account_errors <span class=\"op\">=</span> client.create_accounts(accounts)</span>\n<span id=\"cb22-23\"><a href=\"#cb22-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span>\n<span id=\"cb22-24\"><a href=\"#cb22-24\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-25\"><a href=\"#cb22-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># The, load and import all transfers with their timestamps from the historical source.</span></span>\n<span id=\"cb22-26\"><a href=\"#cb22-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers <span class=\"op\">=</span> []</span>\n<span id=\"cb22-27\"><a href=\"#cb22-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> index, transfer <span class=\"kw\">in</span> <span class=\"bu\">enumerate</span>(historical_transfers):</span>\n<span id=\"cb22-28\"><a href=\"#cb22-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb22-29\"><a href=\"#cb22-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>    historical_timestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span></span>\n<span id=\"cb22-30\"><a href=\"#cb22-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer.timestamp <span class=\"op\">=</span> historical_timestamp</span>\n<span id=\"cb22-31\"><a href=\"#cb22-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Set the account as `imported`.</span></span>\n<span id=\"cb22-32\"><a href=\"#cb22-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer.flags <span class=\"op\">=</span> tb.TransferFlags.IMPORTED</span>\n<span id=\"cb22-33\"><a href=\"#cb22-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb22-34\"><a href=\"#cb22-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># must be `linked`.</span></span>\n<span id=\"cb22-35\"><a href=\"#cb22-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> index <span class=\"op\">&lt;</span> <span class=\"bu\">len</span>(historical_transfers) <span class=\"op\">-</span> <span class=\"dv\">1</span>:</span>\n<span id=\"cb22-36\"><a href=\"#cb22-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>        transfer.flags <span class=\"op\">|=</span> tb.AccountFlags.LINKED</span>\n<span id=\"cb22-37\"><a href=\"#cb22-37\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-38\"><a href=\"#cb22-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers.append(transfer)</span>\n<span id=\"cb22-39\"><a href=\"#cb22-39\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-40\"><a href=\"#cb22-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers(transfers)</span>\n<span id=\"cb22-41\"><a href=\"#cb22-41\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span>\n<span id=\"cb22-42\"><a href=\"#cb22-42\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-43\"><a href=\"#cb22-43\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Since it is a linked chain, in case of any error the entire batch is rolled back and can be retried</span></span>\n<span id=\"cb22-44\"><a href=\"#cb22-44\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># with the same historical timestamps without regressing the cluster timestamp.</span></span></code></pre></div>\n"},{"path":"reference/account","html":"<h1 id=\"account\"><a href=\"#account\"\nclass=\"anchor\"><code>Account</code></a></h1>\n<p>An <code>Account</code> is a record storing the cumulative effect of\ncommitted <a href=\"../transfer\">transfers</a>.</p>\n<h3 id=\"updates\"><a href=\"#updates\" class=\"anchor\">Updates</a></h3>\n<p>Account fields <em>cannot be changed by the user</em> after creation.\nHowever, debits and credits fields are updated by TigerBeetle as\ntransfers move money to and from an account.</p>\n<h3 id=\"deletion\"><a href=\"#deletion\" class=\"anchor\">Deletion</a></h3>\n<p>Accounts <strong>cannot be deleted</strong> after creation. This\nprovides a strong guarantee for an audit trail ‚Äì and the account record\nis only 128 bytes.</p>\n<p>If an account is no longer in use, you may want to <a\nhref=\"../../coding/recipes/close-account\">zero out its balance</a>.</p>\n<h3 id=\"guarantees\"><a href=\"#guarantees\"\nclass=\"anchor\">Guarantees</a></h3>\n<ul>\n<li>Accounts are immutable. They are never modified once they are\nsuccessfully created (excluding balance fields, which are modified by\ntransfers).</li>\n<li>There is at most one <code>Account</code> with a particular <a\nhref=\"#id\"><code>id</code></a>.</li>\n<li>The sum of all accounts‚Äô <a\nhref=\"#debits_pending\"><code>debits_pending</code></a> equals the sum of\nall accounts‚Äô <a\nhref=\"#credits_pending\"><code>credits_pending</code></a>.</li>\n<li>The sum of all accounts‚Äô <a\nhref=\"#debits_posted\"><code>debits_posted</code></a> equals the sum of\nall accounts‚Äô <a\nhref=\"#credits_posted\"><code>credits_posted</code></a>.</li>\n</ul>\n<h2 id=\"fields\"><a href=\"#fields\" class=\"anchor\">Fields</a></h2>\n<h3 id=\"id\"><a href=\"#id\" class=\"anchor\"><code>id</code></a></h3>\n<p>This is a unique, client-defined identifier for the account.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>Must not be zero or <code>2^128 - 1</code> (the highest 128-bit\nunsigned integer)</li>\n<li>Must not conflict with another account in the cluster</li>\n</ul>\n<p>See the <a href=\"../../coding/data-modeling#id\"><code>id</code>\nsection in the data modeling doc</a> for more recommendations on\nchoosing an ID scheme.</p>\n<p>Note that account IDs are unique for the cluster ‚Äì not per ledger. If\nyou want to store a relationship between accounts, such as indicating\nthat multiple accounts on different ledgers belong to the same user, you\nshould store a user ID in one of the <a\nhref=\"#user_data_128\"><code>user_data</code></a> fields.</p>\n<h3 id=\"debits_pending\"><a href=\"#debits_pending\"\nclass=\"anchor\"><code>debits_pending</code></a></h3>\n<p><code>debits_pending</code> counts debits reserved by pending\ntransfers. When a pending transfer posts, voids, or times out, the\namount is removed from <code>debits_pending</code>.</p>\n<p>Money in <code>debits_pending</code> is reserved ‚Äî that is, it cannot\nbe spent until the corresponding pending transfer resolves.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>Must be zero when the account is created</li>\n</ul>\n<h3 id=\"debits_posted\"><a href=\"#debits_posted\"\nclass=\"anchor\"><code>debits_posted</code></a></h3>\n<p>Amount of posted debits.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>Must be zero when the account is created</li>\n</ul>\n<h3 id=\"credits_pending\"><a href=\"#credits_pending\"\nclass=\"anchor\"><code>credits_pending</code></a></h3>\n<p><code>credits_pending</code> counts credits reserved by pending\ntransfers. When a pending transfer posts, voids, or times out, the\namount is removed from <code>credits_pending</code>.</p>\n<p>Money in <code>credits_pending</code> is reserved ‚Äî that is, it\ncannot be spent until the corresponding pending transfer resolves.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>Must be zero when the account is created</li>\n</ul>\n<h3 id=\"credits_posted\"><a href=\"#credits_posted\"\nclass=\"anchor\"><code>credits_posted</code></a></h3>\n<p>Amount of posted credits.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>Must be zero when the account is created</li>\n</ul>\n<h3 id=\"user_data_128\"><a href=\"#user_data_128\"\nclass=\"anchor\"><code>user_data_128</code></a></h3>\n<p>This is an optional 128-bit secondary identifier to link this account\nto an external entity or event.</p>\n<p>When set to zero, no secondary identifier will be associated with the\naccount, therefore only non-zero values can be used as <a\nhref=\"../query-filter\">query filter</a>.</p>\n<p>As an example, you might use a <a\nhref=\"../../coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">ULID</a>\nthat ties together a group of accounts.</p>\n<p>For more information, see <a\nhref=\"../../coding/data-modeling#user_data\">Data Modeling</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n</ul>\n<h3 id=\"user_data_64\"><a href=\"#user_data_64\"\nclass=\"anchor\"><code>user_data_64</code></a></h3>\n<p>This is an optional 64-bit secondary identifier to link this account\nto an external entity or event.</p>\n<p>When set to zero, no secondary identifier will be associated with the\naccount, therefore only non-zero values can be used as <a\nhref=\"../query-filter\">query filter</a>.</p>\n<p>As an example, you might use this field store an external\ntimestamp.</p>\n<p>For more information, see <a\nhref=\"../../coding/data-modeling#user_data\">Data Modeling</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n</ul>\n<h3 id=\"user_data_32\"><a href=\"#user_data_32\"\nclass=\"anchor\"><code>user_data_32</code></a></h3>\n<p>This is an optional 32-bit secondary identifier to link this account\nto an external entity or event.</p>\n<p>When set to zero, no secondary identifier will be associated with the\naccount, therefore only non-zero values can be used as <a\nhref=\"../query-filter\">query filter</a>.</p>\n<p>As an example, you might use this field to store a timezone or\nlocale.</p>\n<p>For more information, see <a\nhref=\"../../coding/data-modeling#user_data\">Data Modeling</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n</ul>\n<h3 id=\"reserved\"><a href=\"#reserved\"\nclass=\"anchor\"><code>reserved</code></a></h3>\n<p>This space may be used for additional data in the future.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 4 bytes</li>\n<li>Must be zero</li>\n</ul>\n<h3 id=\"ledger\"><a href=\"#ledger\"\nclass=\"anchor\"><code>ledger</code></a></h3>\n<p>This is an identifier that partitions the sets of accounts that can\ntransact with each other.</p>\n<p>See <a href=\"../../coding/data-modeling#ledgers\">data modeling</a>\nfor more details about how to think about setting up your ledgers.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n<li>Must not be zero</li>\n</ul>\n<h3 id=\"code\"><a href=\"#code\" class=\"anchor\"><code>code</code></a></h3>\n<p>This is a user-defined enum denoting the category of the account.</p>\n<p>As an example, you might use codes\n<code>1000</code>-<code>3340</code> to indicate asset accounts in\ngeneral, where <code>1001</code> is Bank Account and <code>1002</code>\nis Money Market Account and <code>2003</code> is Motor Vehicles and so\non.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 16-bit unsigned integer (2 bytes)</li>\n<li>Must not be zero</li>\n</ul>\n<h3 id=\"flags\"><a href=\"#flags\"\nclass=\"anchor\"><code>flags</code></a></h3>\n<p>A bitfield that toggles additional behavior.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 16-bit unsigned integer (2 bytes)</li>\n<li>Some flags are mutually exclusive; see <a\nhref=\"../requests/create_accounts#flags_are_mutually_exclusive\"><code>flags_are_mutually_exclusive</code></a>.</li>\n</ul>\n<h4 id=\"flagslinked\"><a href=\"#flagslinked\"\nclass=\"anchor\"><code>flags.linked</code></a></h4>\n<p>This flag links the result of this account creation to the result of\nthe next one in the request, such that they will either succeed or fail\ntogether.</p>\n<p>The last account in a chain of linked accounts does\n<strong>not</strong> have this flag set.</p>\n<p>You can read more about <a href=\"../requests/#linked-events\">linked\nevents</a>.</p>\n<h4 id=\"flagsdebits_must_not_exceed_credits\"><a\nhref=\"#flagsdebits_must_not_exceed_credits\"\nclass=\"anchor\"><code>flags.debits_must_not_exceed_credits</code></a></h4>\n<p>When set, transfers will be rejected that would cause this account‚Äôs\ndebits to exceed credits. Specifically when\n<code>account.debits_pending + account.debits_posted + transfer.amount &gt; account.credits_posted</code>.</p>\n<p>This cannot be set when <code>credits_must_not_exceed_debits</code>\nis also set.</p>\n<h4 id=\"flagscredits_must_not_exceed_debits\"><a\nhref=\"#flagscredits_must_not_exceed_debits\"\nclass=\"anchor\"><code>flags.credits_must_not_exceed_debits</code></a></h4>\n<p>When set, transfers will be rejected that would cause this account‚Äôs\ncredits to exceed debits. Specifically when\n<code>account.credits_pending + account.credits_posted + transfer.amount &gt; account.debits_posted</code>.</p>\n<p>This cannot be set when <code>debits_must_not_exceed_credits</code>\nis also set.</p>\n<h4 id=\"flagshistory\"><a href=\"#flagshistory\"\nclass=\"anchor\"><code>flags.history</code></a></h4>\n<p>When set, the account will retain the history of balances at each\ntransfer.</p>\n<p>Note that the <a\nhref=\"../requests/get_account_balances\"><code>get_account_balances</code></a>\noperation only works for accounts with this flag set.</p>\n<h4 id=\"flagsimported\"><a href=\"#flagsimported\"\nclass=\"anchor\"><code>flags.imported</code></a></h4>\n<p>When set, allows importing historical <code>Account</code>s with\ntheir original <a href=\"#timestamp\"><code>timestamp</code></a>.</p>\n<p>TigerBeetle will not use the <a href=\"../../coding/time\">cluster\nclock</a> to assign the timestamp, allowing the user to define it,\nexpressing <em>when</em> the account was effectively created by an\nexternal event.</p>\n<p>To maintain system invariants regarding auditability and\ntraceability, some constraints are necessary:</p>\n<ul>\n<li><p>It is not allowed to mix events with the <code>imported</code>\nflag set and <em>not</em> set in the same batch. The application must\nsubmit batches of imported events separately.</p></li>\n<li><p>User-defined timestamps must be <strong>unique</strong> and\nexpressed as nanoseconds since the UNIX epoch. No two objects can have\nthe same timestamp, even different objects like an <code>Account</code>\nand a <code>Transfer</code> cannot share the same timestamp.</p></li>\n<li><p>User-defined timestamps must be a past date, never ahead of the\ncluster clock at the time the request arrives.</p></li>\n<li><p>Timestamps must be strictly increasing.</p>\n<p>Even user-defined timestamps that are required to be past dates need\nto be at least one nanosecond ahead of the timestamp of the last account\ncommitted by the cluster.</p>\n<p>Since the timestamp cannot regress, importing past events can be\nnaturally restrictive without coordination, as the last timestamp can be\nupdated using the cluster clock during regular cluster activity.\nInstead, it‚Äôs recommended to import events only on a fresh cluster or\nduring a scheduled maintenance window.</p>\n<p>It‚Äôs recommended to submit the entire batch as a <a\nhref=\"#flagslinked\">linked chain</a>, ensuring that if any account\nfails, none of them are committed, preserving the last timestamp\nunchanged. This approach gives the application a chance to correct\nfailed imported accounts, re-submitting the batch again with the same\nuser-defined timestamps.</p></li>\n</ul>\n<h4 id=\"flagsclosed\"><a href=\"#flagsclosed\"\nclass=\"anchor\"><code>flags.closed</code></a></h4>\n<p>When set, the account will reject further transfers, except for <a\nhref=\"../transfer#modes\">voiding two-phase transfers</a> that are still\npending.</p>\n<ul>\n<li>This flag can be set during the account creation.</li>\n<li>This flag can also be set by sending a <a\nhref=\"../transfer#flagspending\">two-phase pending transfer</a> with the\n<a\nhref=\"../transfer#flagsclosing_debit\"><code>Transfer.flags.closing_debit</code></a>\nand/or <a\nhref=\"../transfer#flagsclosing_credit\"><code>Transfer.flags.closing_credit</code></a>\nflags set.</li>\n<li>This flag can be <em>unset</em> by <a\nhref=\"../transfer#flagsvoid_pending_transfer\">voiding</a> the two-phase\npending transfer that closed the account.</li>\n</ul>\n<h3 id=\"timestamp\"><a href=\"#timestamp\"\nclass=\"anchor\"><code>timestamp</code></a></h3>\n<p>This is the time the account was created, as nanoseconds since UNIX\nepoch. You can read more about <a href=\"../../coding/time\">Time in\nTigerBeetle</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li><p>Type is 64-bit unsigned integer (8 bytes)</p></li>\n<li><p>Must be <code>0</code> when the <code>Account</code> is created\nwith <a href=\"#flagsimported\"><code>flags.imported</code></a>\n<em>not</em> set</p>\n<p>It is set by TigerBeetle to the moment the account arrives at the\ncluster.</p></li>\n<li><p>Must be greater than <code>0</code> and less than\n<code>2^63</code> when the <code>Account</code> is created with <a\nhref=\"#flagsimported\"><code>flags.imported</code></a> set</p></li>\n</ul>\n<h2 id=\"internals\"><a href=\"#internals\"\nclass=\"anchor\">Internals</a></h2>\n<p>If you‚Äôre curious and want to learn more, you can find the source\ncode for this struct in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/tigerbeetle.zig\">src/tigerbeetle.zig</a>.\nSearch for <code>const Account = extern struct {</code>.</p>\n<p>You can find the source code for creating an account in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/state_machine.zig\">src/state_machine.zig</a>.\nSearch for <code>fn create_account(</code>.</p>\n"},{"path":"reference/transfer","html":"<h1 id=\"transfer\"><a href=\"#transfer\"\nclass=\"anchor\"><code>Transfer</code></a></h1>\n<p>A <code>transfer</code> is an immutable record of a financial\ntransaction between two accounts.</p>\n<p>In TigerBeetle, financial transactions are called ‚Äútransfers‚Äù instead\nof ‚Äútransactions‚Äù because the latter term is heavily overloaded in the\ncontext of databases.</p>\n<p>Note that transfers debit a single account and credit a single\naccount on the same ledger. You can compose these into more complex\ntransactions using the methods described in <a\nhref=\"../../coding/recipes/currency-exchange\">Currency Exchange</a> and\n<a href=\"../../coding/recipes/multi-debit-credit-transfers\">Multi-Debit,\nMulti-Credit Transfers</a>.</p>\n<h3 id=\"updates\"><a href=\"#updates\" class=\"anchor\">Updates</a></h3>\n<p>Transfers <em>cannot be modified</em> after creation.</p>\n<p>If a detail of a transfer is incorrect and needs to be modified, this\nis done using <a\nhref=\"../../coding/recipes/correcting-transfers\">correcting\ntransfers</a>.</p>\n<h3 id=\"deletion\"><a href=\"#deletion\" class=\"anchor\">Deletion</a></h3>\n<p>Transfers <em>cannot be deleted</em> after creation.</p>\n<p>If a transfer is made in error, its effects can be reversed using a\n<a href=\"../../coding/recipes/correcting-transfers\">correcting\ntransfer</a>.</p>\n<h3 id=\"guarantees\"><a href=\"#guarantees\"\nclass=\"anchor\">Guarantees</a></h3>\n<ul>\n<li>Transfers are immutable. They are never modified once they are\nsuccessfully created.</li>\n<li>There is at most one <code>Transfer</code> with a particular <a\nhref=\"#id\"><code>id</code></a>.</li>\n<li>A <a\nhref=\"../../coding/two-phase-transfers#reserve-funds-pending-transfer\">pending\ntransfer</a> resolves at most once.</li>\n<li>Transfer <a href=\"#timeout\">timeouts</a> are deterministic, driven\nby the <a\nhref=\"../../coding/time#why-tigerbeetle-manages-timestamps\">cluster‚Äôs\ntimestamp</a>.</li>\n</ul>\n<h2 id=\"modes\"><a href=\"#modes\" class=\"anchor\">Modes</a></h2>\n<p>Transfers can either be Single-Phase, where they are executed\nimmediately, or Two-Phase, where they are first put in a Pending state\nand then either Posted or Voided. For more details on the latter, see\nthe <a href=\"../../coding/two-phase-transfers\">Two-Phase Transfer\nguide</a>.</p>\n<p>Fields used by each mode of transfer:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Single-Phase</th>\n<th>Pending</th>\n<th>Post-Pending</th>\n<th>Void-Pending</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>id</code></td>\n<td>required</td>\n<td>required</td>\n<td>required</td>\n<td>required</td>\n</tr>\n<tr>\n<td><code>debit_account_id</code></td>\n<td>required</td>\n<td>required</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>credit_account_id</code></td>\n<td>required</td>\n<td>required</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>required</td>\n<td>required</td>\n<td>required</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>pending_id</code></td>\n<td>none</td>\n<td>none</td>\n<td>required</td>\n<td>required</td>\n</tr>\n<tr>\n<td><code>user_data_128</code></td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>user_data_64</code></td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>user_data_32</code></td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>timeout</code></td>\n<td>none</td>\n<td>optional¬π</td>\n<td>none</td>\n<td>none</td>\n</tr>\n<tr>\n<td><code>ledger</code></td>\n<td>required</td>\n<td>required</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>code</code></td>\n<td>required</td>\n<td>required</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>flags.linked</code></td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>flags.pending</code></td>\n<td>false</td>\n<td>true</td>\n<td>false</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>flags.post_pending_transfer</code></td>\n<td>false</td>\n<td>false</td>\n<td>true</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>flags.void_pending_transfer</code></td>\n<td>false</td>\n<td>false</td>\n<td>false</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>flags.balancing_debit</code></td>\n<td>optional</td>\n<td>optional</td>\n<td>false</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>flags.balancing_credit</code></td>\n<td>optional</td>\n<td>optional</td>\n<td>false</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>flags.closing_debit</code></td>\n<td>optional</td>\n<td>true</td>\n<td>false</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>flags.closing_credit</code></td>\n<td>optional</td>\n<td>true</td>\n<td>false</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>flags.imported</code></td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>timestamp</code></td>\n<td>none¬≤</td>\n<td>none¬≤</td>\n<td>none¬≤</td>\n<td>none¬≤</td>\n</tr>\n</tbody>\n</table>\n</div>\n<blockquote>\n<p><em>¬π None if <code>flags.imported</code> is set.</em><br/> <em>¬≤\nRequired if <code>flags.imported</code> is set.</em></p>\n</blockquote>\n<h2 id=\"fields\"><a href=\"#fields\" class=\"anchor\">Fields</a></h2>\n<h3 id=\"id\"><a href=\"#id\" class=\"anchor\"><code>id</code></a></h3>\n<p>This is a unique identifier for the transaction.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>Must not be zero or <code>2^128 - 1</code></li>\n<li>Must not conflict with another transfer in the cluster</li>\n</ul>\n<p>See the <a href=\"../../coding/data-modeling#id\"><code>id</code>\nsection in the data modeling doc</a> for more recommendations on\nchoosing an ID scheme.</p>\n<p>Note that transfer IDs are unique for the cluster ‚Äì not the ledger.\nIf you want to store a relationship between multiple transfers, such as\nindicating that multiple transfers on different ledgers were part of a\nsingle transaction, you should store a transaction ID in one of the <a\nhref=\"#user_data_128\"><code>user_data</code></a> fields.</p>\n<h3 id=\"debit_account_id\"><a href=\"#debit_account_id\"\nclass=\"anchor\"><code>debit_account_id</code></a></h3>\n<p>This refers to the account to debit the transfer‚Äôs <a\nhref=\"#amount\"><code>amount</code></a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>When <code>flags.post_pending_transfer</code> and\n<code>flags.void_pending_transfer</code> are <em>not</em> set:\n<ul>\n<li>Must match an existing account</li>\n<li>Must not be the same as <code>credit_account_id</code></li>\n</ul></li>\n<li>When <code>flags.post_pending_transfer</code> or\n<code>flags.void_pending_transfer</code> are set:\n<ul>\n<li>If <code>debit_account_id</code> is zero, it will be automatically\nset to the pending transfer‚Äôs <code>debit_account_id</code>.</li>\n<li>If <code>debit_account_id</code> is nonzero, it must match the\ncorresponding pending transfer‚Äôs <code>debit_account_id</code>.</li>\n</ul></li>\n<li>When <code>flags.imported</code> is set:\n<ul>\n<li>The matching account‚Äôs <a href=\"../account#timestamp\">timestamp</a>\nmust be less than or equal to the transfer‚Äôs <a\nhref=\"#timestamp\">timestamp</a>.</li>\n</ul></li>\n</ul>\n<h3 id=\"credit_account_id\"><a href=\"#credit_account_id\"\nclass=\"anchor\"><code>credit_account_id</code></a></h3>\n<p>This refers to the account to credit the transfer‚Äôs <a\nhref=\"#amount\"><code>amount</code></a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>When <code>flags.post_pending_transfer</code> and\n<code>flags.void_pending_transfer</code> are <em>not</em> set:\n<ul>\n<li>Must match an existing account</li>\n<li>Must not be the same as <code>debit_account_id</code></li>\n</ul></li>\n<li>When <code>flags.post_pending_transfer</code> or\n<code>flags.void_pending_transfer</code> are set:\n<ul>\n<li>If <code>credit_account_id</code> is zero, it will be automatically\nset to the pending transfer‚Äôs <code>credit_account_id</code>.</li>\n<li>If <code>credit_account_id</code> is nonzero, it must match the\ncorresponding pending transfer‚Äôs <code>credit_account_id</code>.</li>\n</ul></li>\n<li>When <code>flags.imported</code> is set:\n<ul>\n<li>The matching account‚Äôs <a href=\"../account#timestamp\">timestamp</a>\nmust be less than or equal to the transfer‚Äôs <a\nhref=\"#timestamp\">timestamp</a>.</li>\n</ul></li>\n</ul>\n<h3 id=\"amount\"><a href=\"#amount\"\nclass=\"anchor\"><code>amount</code></a></h3>\n<p>This is how much should be debited from the\n<code>debit_account_id</code> account and credited to the\n<code>credit_account_id</code> account.</p>\n<p>Note that this is an unsigned 128-bit integer. You can read more\nabout using <a\nhref=\"../../coding/data-modeling#debits-vs-credits\">debits and\ncredits</a> to represent positive and negative balances as well as <a\nhref=\"../../coding/data-modeling#fractional-amounts-and-asset-scale\">fractional\namounts and asset scales</a>.</p>\n<ul>\n<li>When <code>flags.balancing_debit</code> is set, this is the maximum\namount that will be debited/credited, where the actual transfer amount\nis determined by the debit account‚Äôs constraints.</li>\n<li>When <code>flags.balancing_credit</code> is set, this is the maximum\namount that will be debited/credited, where the actual transfer amount\nis determined by the credit account‚Äôs constraints.</li>\n<li>When <code>flags.post_pending_transfer</code> is set, the amount\nposted will be:\n<ul>\n<li>the pending transfer‚Äôs amount, when the posted transfer‚Äôs\n<code>amount</code> is <code>AMOUNT_MAX</code></li>\n<li>the posting transfer‚Äôs amount, when the posted transfer‚Äôs\n<code>amount</code> is less than or equal to the pending transfer‚Äôs\namount.</li>\n</ul></li>\n</ul>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>When <code>flags.void_pending_transfer</code> is set:\n<ul>\n<li>If <code>amount</code> is zero, it will be automatically be set to\nthe pending transfer‚Äôs <code>amount</code>.</li>\n<li>If <code>amount</code> is nonzero, it must be equal to the pending\ntransfer‚Äôs <code>amount</code>.</li>\n</ul></li>\n<li>When <code>flags.post_pending_transfer</code> is set:\n<ul>\n<li>If <code>amount</code> is <code>AMOUNT_MAX</code>\n(<code>2^128 - 1</code>), it will automatically be set to the pending\ntransfer‚Äôs <code>amount</code>.</li>\n<li>If <code>amount</code> is not <code>AMOUNT_MAX</code>, it must be\nless than or equal to the pending transfer‚Äôs <code>amount</code>.</li>\n</ul></li>\n</ul>\n<details>\n<summary>Client release &lt; 0.16.0</summary>\n\n<p>Additional constraints:</p>\n<ul>\n<li>When <code>flags.post_pending_transfer</code> is set:\n<ul>\n<li>If <code>amount</code> is zero, it will be automatically be set to\nthe pending transfer‚Äôs <code>amount</code>.</li>\n<li>If <code>amount</code> is nonzero, it must be less than or equal to\nthe pending transfer‚Äôs <code>amount</code>.</li>\n</ul></li>\n<li>When <code>flags.balancing_debit</code> and/or\n<code>flags.balancing_credit</code> is set, if <code>amount</code> is\nzero, it will automatically be set to the maximum amount that does not\nviolate the corresponding account limits. (Equivalent to setting\n<code>amount = 2^128 - 1</code>).</li>\n<li>When all of the following flags are not set, <code>amount</code>\nmust be nonzero:\n<ul>\n<li><code>flags.post_pending_transfer</code></li>\n<li><code>flags.void_pending_transfer</code></li>\n<li><code>flags.balancing_debit</code></li>\n<li><code>flags.balancing_credit</code></li>\n</ul></li>\n</ul>\n</details>\n\n<h4 id=\"examples\"><a href=\"#examples\" class=\"anchor\">Examples</a></h4>\n<ul>\n<li>For representing fractional amounts (e.g. <code>$12.34</code>), see\n<a\nhref=\"../../coding/data-modeling#fractional-amounts-and-asset-scale\">Fractional\nAmounts</a>.</li>\n<li>For balancing transfers, see <a\nhref=\"../../coding/recipes/close-account\">Close Account</a>.</li>\n</ul>\n<h3 id=\"pending_id\"><a href=\"#pending_id\"\nclass=\"anchor\"><code>pending_id</code></a></h3>\n<p>If this transfer will post or void a pending transfer,\n<code>pending_id</code> references that pending transfer. If this is not\na post or void transfer, it must be zero.</p>\n<p>See the section on <a\nhref=\"../../coding/two-phase-transfers\">Two-Phase Transfers</a> for more\ninformation on how the <code>pending_id</code> is used.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>Must be zero if neither void nor pending transfer flag is set</li>\n<li>Must match an existing transfer‚Äôs <a href=\"#id\"><code>id</code></a>\nif non-zero</li>\n</ul>\n<h3 id=\"user_data_128\"><a href=\"#user_data_128\"\nclass=\"anchor\"><code>user_data_128</code></a></h3>\n<p>This is an optional 128-bit secondary identifier to link this\ntransfer to an external entity or event.</p>\n<p>When set to zero, no secondary identifier will be associated with the\naccount, therefore only non-zero values can be used as <a\nhref=\"../query-filter\">query filter</a>.</p>\n<p>When set to zero, if <a\nhref=\"#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a>\nor <a\nhref=\"#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a>\nis set, then it will be automatically set to the pending transfer‚Äôs\n<code>user_data_128</code>.</p>\n<p>As an example, you might generate a <a\nhref=\"../../coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">TigerBeetle\nTime-Based Identifier</a> that ties together a group of transfers.</p>\n<p>For more information, see <a\nhref=\"../../coding/data-modeling#user_data\">Data Modeling</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n</ul>\n<h3 id=\"user_data_64\"><a href=\"#user_data_64\"\nclass=\"anchor\"><code>user_data_64</code></a></h3>\n<p>This is an optional 64-bit secondary identifier to link this transfer\nto an external entity or event.</p>\n<p>When set to zero, no secondary identifier will be associated with the\naccount, therefore only non-zero values can be used as <a\nhref=\"../query-filter\">query filter</a>.</p>\n<p>When set to zero, if <a\nhref=\"#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a>\nor <a\nhref=\"#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a>\nis set, then it will be automatically set to the pending transfer‚Äôs\n<code>user_data_64</code>.</p>\n<p>As an example, you might use this field store an external\ntimestamp.</p>\n<p>For more information, see <a\nhref=\"../../coding/data-modeling#user_data\">Data Modeling</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n</ul>\n<h3 id=\"user_data_32\"><a href=\"#user_data_32\"\nclass=\"anchor\"><code>user_data_32</code></a></h3>\n<p>This is an optional 32-bit secondary identifier to link this transfer\nto an external entity or event.</p>\n<p>When set to zero, no secondary identifier will be associated with the\naccount, therefore only non-zero values can be used as <a\nhref=\"../query-filter\">query filter</a>.</p>\n<p>When set to zero, if <a\nhref=\"#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a>\nor <a\nhref=\"#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a>\nis set, then it will be automatically set to the pending transfer‚Äôs\n<code>user_data_32</code>.</p>\n<p>As an example, you might use this field to store a timezone or\nlocale.</p>\n<p>For more information, see <a\nhref=\"../../coding/data-modeling#user_data\">Data Modeling</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n</ul>\n<h3 id=\"timeout\"><a href=\"#timeout\"\nclass=\"anchor\"><code>timeout</code></a></h3>\n<p>This is the interval in seconds after a <a\nhref=\"#flagspending\"><code>pending</code></a> transfer‚Äôs <a\nhref=\"#timestamp\">arrival at the cluster</a> that it may be <a\nhref=\"#flagspost_pending_transfer\">posted</a> or <a\nhref=\"#flagsvoid_pending_transfer\">voided</a>. Zero denotes absence of\ntimeout.</p>\n<p>Non-pending transfers cannot have a timeout.</p>\n<p>Imported transfers cannot have a timeout.</p>\n<p>TigerBeetle makes a best-effort approach to remove pending balances\nof expired transfers automatically:</p>\n<ul>\n<li><p>Transfers expire <em>exactly</em> at their expiry time (<a\nhref=\"#timestamp\"><code>timestamp</code></a> <em>plus</em>\n<code>timeout</code> converted in nanoseconds).</p></li>\n<li><p>Pending balances will never be removed before its\nexpiry.</p></li>\n<li><p>Expired transfers cannot be manually posted or voided.</p></li>\n<li><p>It is not guaranteed that the pending balance will be removed\nexactly at its expiry.</p>\n<p>In particular, client requests may observe still-pending balances for\nexpired transfers.</p></li>\n<li><p>Pending balances are removed in chronological order by expiry. If\nmultiple transfers expire at the same time, then ordered by the\ntransfer‚Äôs creation <a href=\"#timestamp\"><code>timestamp</code></a>.</p>\n<p>If a transfer <code>A</code> has expiry <code>E‚ÇÅ</code> and transfer\n<code>B</code> has expiry <code>E‚ÇÇ</code>, and <code>E‚ÇÅ&lt;E‚ÇÇ</code>, if\ntransfer <code>B</code> had the pending balance removed, then transfer\n<code>A</code> had the pending balance removed as well.</p></li>\n</ul>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n<li>Must be zero if <code>flags.pending</code> is <em>not</em> set</li>\n<li>Must be zero if <code>flags.imported</code> is set.</li>\n</ul>\n<p>The <code>timeout</code> is an interval in seconds rather than an\nabsolute timestamp because this is more robust to clock skew between the\ncluster and the application. (Watch this talk on <a\nhref=\"https://youtu.be/7R-Iz6sJG6Q?si=9sD2TpfD29AxUjOY\">Detecting Clock\nSync Failure in Highly Available Systems</a> on YouTube for more\ndetails.)</p>\n<h3 id=\"ledger\"><a href=\"#ledger\"\nclass=\"anchor\"><code>ledger</code></a></h3>\n<p>This is an identifier that partitions the sets of accounts that can\ntransact with each other.</p>\n<p>See <a href=\"../../coding/data-modeling#ledgers\">data modeling</a>\nfor more details about how to think about setting up your ledgers.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n<li>When <code>flags.post_pending_transfer</code> or\n<code>flags.void_pending_transfer</code> is set:\n<ul>\n<li>If <code>ledger</code> is zero, it will be automatically be set to\nthe pending transfer‚Äôs <code>ledger</code>.</li>\n<li>If <code>ledger</code> is nonzero, it must match the\n<code>ledger</code> value on the pending transfer‚Äôs\n<code>debit_account_id</code> <strong>and</strong>\n<code>credit_account_id</code>.</li>\n</ul></li>\n<li>When <code>flags.post_pending_transfer</code> and\n<code>flags.void_pending_transfer</code> are not set:\n<ul>\n<li><code>ledger</code> must not be zero.</li>\n<li><code>ledger</code> must match the <code>ledger</code> value on the\naccounts referenced in <code>debit_account_id</code>\n<strong>and</strong> <code>credit_account_id</code>.</li>\n</ul></li>\n</ul>\n<h3 id=\"code\"><a href=\"#code\" class=\"anchor\"><code>code</code></a></h3>\n<p>This is a user-defined enum denoting the reason for (or category of)\nthe transfer.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 16-bit unsigned integer (2 bytes)</li>\n<li>When <code>flags.post_pending_transfer</code> or\n<code>flags.void_pending_transfer</code> is set:\n<ul>\n<li>If <code>code</code> is zero, it will be automatically be set to the\npending transfer‚Äôs <code>code</code>.</li>\n<li>If <code>code</code> is nonzero, it must match the pending\ntransfer‚Äôs <code>code</code>.</li>\n</ul></li>\n<li>When <code>flags.post_pending_transfer</code> and\n<code>flags.void_pending_transfer</code> are not set, <code>code</code>\nmust not be zero.</li>\n</ul>\n<h3 id=\"flags\"><a href=\"#flags\"\nclass=\"anchor\"><code>flags</code></a></h3>\n<p>This specifies (optional) transfer behavior.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 16-bit unsigned integer (2 bytes)</li>\n<li>Some flags are mutually exclusive; see <a\nhref=\"../requests/create_transfers#flags_are_mutually_exclusive\"><code>flags_are_mutually_exclusive</code></a>.</li>\n</ul>\n<h4 id=\"flagslinked\"><a href=\"#flagslinked\"\nclass=\"anchor\"><code>flags.linked</code></a></h4>\n<p>This flag links the result of this transfer to the outcome of the\nnext transfer in the request such that they will either succeed or fail\ntogether.</p>\n<p>The last transfer in a chain of linked transfers does\n<strong>not</strong> have this flag set.</p>\n<p>You can read more about <a href=\"../requests/#linked-events\">linked\nevents</a>.</p>\n<h5 id=\"examples-1\"><a href=\"#examples-1\"\nclass=\"anchor\">Examples</a></h5>\n<ul>\n<li><a href=\"../../coding/recipes/currency-exchange\">Currency\nExchange</a></li>\n</ul>\n<h4 id=\"flagspending\"><a href=\"#flagspending\"\nclass=\"anchor\"><code>flags.pending</code></a></h4>\n<p>Mark the transfer as a <a\nhref=\"../../coding/two-phase-transfers#reserve-funds-pending-transfer\">pending\ntransfer</a>.</p>\n<h4 id=\"flagspost_pending_transfer\"><a\nhref=\"#flagspost_pending_transfer\"\nclass=\"anchor\"><code>flags.post_pending_transfer</code></a></h4>\n<p>Mark the transfer as a <a\nhref=\"../../coding/two-phase-transfers#post-pending-transfer\">post-pending\ntransfer</a>.</p>\n<h4 id=\"flagsvoid_pending_transfer\"><a\nhref=\"#flagsvoid_pending_transfer\"\nclass=\"anchor\"><code>flags.void_pending_transfer</code></a></h4>\n<p>Mark the transfer as a <a\nhref=\"../../coding/two-phase-transfers#void-pending-transfer\">void-pending\ntransfer</a>.</p>\n<h4 id=\"flagsbalancing_debit\"><a href=\"#flagsbalancing_debit\"\nclass=\"anchor\"><code>flags.balancing_debit</code></a></h4>\n<p>Transfer at most <a href=\"#amount\"><code>amount</code></a> ‚Äî\nautomatically transferring less than <code>amount</code> as necessary\nsuch that\n<code>debit_account.debits_pending + debit_account.debits_posted ‚â§ debit_account.credits_posted</code>.</p>\n<p>The <code>amount</code> of the recorded transfer is set to the actual\namount that was transferred, which is less than or equal to the amount\nthat was passed to <code>create_transfers</code>.</p>\n<p>Retrying a balancing transfer will return <a\nhref=\"../requests/create_transfers#exists_with_different_amount\"><code>exists_with_different_amount</code></a>\nonly when the maximum amount passed to <code>create_transfers</code> is\ninsufficient to fulfill the amount that was actually transferred.\nOtherwise it may return <a\nhref=\"../requests/create_transfers#exists\"><code>exists</code></a> even\nif the retry amount differs from the original value.</p>\n<p><code>flags.balancing_debit</code> is exclusive with the\n<code>flags.post_pending_transfer</code>/<code>flags.void_pending_transfer</code>\nflags because posting or voiding a pending transfer will never\nexceed/overflow either account‚Äôs limits.</p>\n<p><code>flags.balancing_debit</code> is compatible with (and orthogonal\nto) <code>flags.balancing_credit</code>.</p>\n<details>\n<summary>Client release &lt; 0.16.0</summary>\n\n<p>Transfer at most <a href=\"#amount\"><code>amount</code></a> ‚Äî\nautomatically transferring less than <code>amount</code> as necessary\nsuch that\n<code>debit_account.debits_pending + debit_account.debits_posted ‚â§ debit_account.credits_posted</code>.\nIf <code>amount</code> is set to <code>0</code>, transfer at most\n<code>2^64 - 1</code> (i.e. as much as possible).</p>\n<p>If the highest amount transferable is <code>0</code>, returns <a\nhref=\"../requests/create_transfers#exceeds_credits\"><code>exceeds_credits</code></a>.</p>\n</details>\n\n<h5 id=\"examples-2\"><a href=\"#examples-2\"\nclass=\"anchor\">Examples</a></h5>\n<ul>\n<li><a href=\"../../coding/recipes/close-account\">Close Account</a></li>\n</ul>\n<h4 id=\"flagsbalancing_credit\"><a href=\"#flagsbalancing_credit\"\nclass=\"anchor\"><code>flags.balancing_credit</code></a></h4>\n<p>Transfer at most <a href=\"#amount\"><code>amount</code></a> ‚Äî\nautomatically transferring less than <code>amount</code> as necessary\nsuch that\n<code>credit_account.credits_pending + credit_account.credits_posted ‚â§ credit_account.debits_posted</code>.</p>\n<p>The <code>amount</code> of the recorded transfer is set to the actual\namount that was transferred, which is less than or equal to the amount\nthat was passed to <code>create_transfers</code>.</p>\n<p>Retrying a balancing transfer will return <a\nhref=\"../requests/create_transfers#exists_with_different_amount\"><code>exists_with_different_amount</code></a>\nonly when the maximum amount passed to <code>create_transfers</code> is\ninsufficient to fulfill the amount that was actually transferred.\nOtherwise it may return <a\nhref=\"../requests/create_transfers#exists\"><code>exists</code></a> even\nif the retry amount differs from the original value.</p>\n<p><code>flags.balancing_credit</code> is exclusive with the\n<code>flags.post_pending_transfer</code>/<code>flags.void_pending_transfer</code>\nflags because posting or voiding a pending transfer will never\nexceed/overflow either account‚Äôs limits.</p>\n<p><code>flags.balancing_credit</code> is compatible with (and\northogonal to) <code>flags.balancing_debit</code>.</p>\n<details>\n<summary>Client release &lt; 0.16.0</summary>\n\n<p>Transfer at most <a href=\"#amount\"><code>amount</code></a> ‚Äî\nautomatically transferring less than <code>amount</code> as necessary\nsuch that\n<code>credit_account.credits_pending + credit_account.credits_posted ‚â§ credit_account.debits_posted</code>.\nIf <code>amount</code> is set to <code>0</code>, transfer at most\n<code>2^64 - 1</code> (i.e. as much as possible).</p>\n<p>If the highest amount transferable is <code>0</code>, returns <a\nhref=\"../requests/create_transfers#exceeds_debits\"><code>exceeds_debits</code></a>.</p>\n</details>\n\n<h5 id=\"examples-3\"><a href=\"#examples-3\"\nclass=\"anchor\">Examples</a></h5>\n<ul>\n<li><a href=\"../../coding/recipes/close-account\">Close Account</a></li>\n</ul>\n<h4 id=\"flagsclosing_debit\"><a href=\"#flagsclosing_debit\"\nclass=\"anchor\"><code>flags.closing_debit</code></a></h4>\n<p>When set, it will cause the <a\nhref=\"../account#flagsclosed\"><code>Account.flags.closed</code></a> flag\nof the <a href=\"#debit_account_id\">debit account</a> to be set if the\ntransfer succeeds.</p>\n<p>This flag requires a <a href=\"#modes\">two-phase transfer</a>, so the\nflag <a href=\"#flagspending\"><code>flags.pending</code></a> must also be\nset. This ensures that closing transfers are reversible by <a\nhref=\"#flagsvoid_pending_transfer\">voiding</a> the pending transfer, and\nrequires that the reversal operation references the corresponding\nclosing transfer, guarding against unexpected interleaving of\nclose/unclose operations.</p>\n<h4 id=\"flagsclosing_credit\"><a href=\"#flagsclosing_credit\"\nclass=\"anchor\"><code>flags.closing_credit</code></a></h4>\n<p>When set, it will cause the <a\nhref=\"../account#flagsclosed\"><code>Account.flags.closed</code></a> flag\nof the <a href=\"#credit_account_id\">credit account</a> to be set if the\ntransfer succeeds.</p>\n<p>This flag requires a <a href=\"#modes\">two-phase transfer</a>, so the\nflag <a href=\"#flagspending\"><code>flags.pending</code></a> must also be\nset. This ensures that closing transfers are reversible by <a\nhref=\"#flagsvoid_pending_transfer\">voiding</a> the pending transfer, and\nrequires that the reversal operation references the corresponding\nclosing transfer, guarding against unexpected interleaving of\nclose/unclose operations.</p>\n<h4 id=\"flagsimported\"><a href=\"#flagsimported\"\nclass=\"anchor\"><code>flags.imported</code></a></h4>\n<p>When set, allows importing historical <code>Transfer</code>s with\ntheir original <a href=\"#timestamp\"><code>timestamp</code></a>.</p>\n<p>TigerBeetle will not use the <a href=\"../../coding/time\">cluster\nclock</a> to assign the timestamp, allowing the user to define it,\nexpressing <em>when</em> the transfer was effectively created by an\nexternal event.</p>\n<p>To maintain system invariants regarding auditability and\ntraceability, some constraints are necessary:</p>\n<ul>\n<li><p>It is not allowed to mix events with the <code>imported</code>\nflag set and <em>not</em> set in the same batch. The application must\nsubmit batches of imported events separately.</p></li>\n<li><p>User-defined timestamps must be <strong>unique</strong> and\nexpressed as nanoseconds since the UNIX epoch. No two objects can have\nthe same timestamp, even different objects like an <code>Account</code>\nand a <code>Transfer</code> cannot share the same timestamp.</p></li>\n<li><p>User-defined timestamps must be a past date, never ahead of the\ncluster clock at the time the request arrives.</p></li>\n<li><p>Timestamps must be strictly increasing.</p>\n<p>Even user-defined timestamps that are required to be past dates need\nto be at least one nanosecond ahead of the timestamp of the last\ntransfer committed by the cluster.</p>\n<p>Since the timestamp cannot regress, importing past events can be\nnaturally restrictive without coordination, as the last timestamp can be\nupdated using the cluster clock during regular cluster activity.\nInstead, it‚Äôs recommended to import events only on a fresh cluster or\nduring a scheduled maintenance window.</p>\n<p>It‚Äôs recommended to submit the entire batch as a <a\nhref=\"#flagslinked\">linked chain</a>, ensuring that if any transfer\nfails, none of them are committed, preserving the last timestamp\nunchanged. This approach gives the application a chance to correct\nfailed imported transfers, re-submitting the batch again with the same\nuser-defined timestamps.</p></li>\n<li><p>Imported transfers cannot have a <a\nhref=\"#timeout\"><code>timeout</code></a>.</p>\n<p>It‚Äôs possible to import <a href=\"#flagspending\">pending</a> transfers\nwith a user-defined timestamp, but since it‚Äôs not driven by the cluster\nclock, it cannot define a <a href=\"#timeout\"><code>timeout</code></a>\nfor automatic expiration. In those cases, the <a\nhref=\"../../coding/two-phase-transfers\">two-phase post or rollback</a>\nmust be done manually.</p></li>\n</ul>\n<h3 id=\"timestamp\"><a href=\"#timestamp\"\nclass=\"anchor\"><code>timestamp</code></a></h3>\n<p>This is the time the transfer was created, as nanoseconds since UNIX\nepoch. You can read more about <a href=\"../../coding/time\">Time in\nTigerBeetle</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li><p>Type is 64-bit unsigned integer (8 bytes)</p></li>\n<li><p>Must be <code>0</code> when the <code>Transfer</code> is created\nwith <a href=\"#flagsimported\"><code>flags.imported</code></a>\n<em>not</em> set</p>\n<p>It is set by TigerBeetle to the moment the transfer arrives at the\ncluster.</p></li>\n<li><p>Must be greater than <code>0</code> and less than\n<code>2^63</code> when the <code>Transfer</code> is created with <a\nhref=\"#flagsimported\"><code>flags.imported</code></a> set</p></li>\n</ul>\n<h2 id=\"internals\"><a href=\"#internals\"\nclass=\"anchor\">Internals</a></h2>\n<p>If you‚Äôre curious and want to learn more, you can find the source\ncode for this struct in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/tigerbeetle.zig\">src/tigerbeetle.zig</a>.\nSearch for <code>const Transfer = extern struct {</code>.</p>\n<p>You can find the source code for creating a transfer in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/state_machine.zig\">src/state_machine.zig</a>.\nSearch for <code>fn create_transfer(</code>.</p>\n"},{"path":"reference/account-balance","html":"<h1 id=\"accountbalance\"><a href=\"#accountbalance\"\nclass=\"anchor\"><code>AccountBalance</code></a></h1>\n<p>An <code>AccountBalance</code> is a record storing the <a\nhref=\"../account\"><code>Account</code></a>‚Äôs balance at a given point in\ntime.</p>\n<p>Only Accounts with the flag <a\nhref=\"../account#flagshistory\"><code>history</code></a> set retain <a\nhref=\"https://docs.tigerbeetle.com/reference/requests/get_account_balances\">historical\nbalances</a>.</p>\n<h2 id=\"fields\"><a href=\"#fields\" class=\"anchor\">Fields</a></h2>\n<h3 id=\"timestamp\"><a href=\"#timestamp\"\nclass=\"anchor\"><code>timestamp</code></a></h3>\n<p>This is the time the account balance was updated, as nanoseconds\nsince UNIX epoch.</p>\n<p>The timestamp refers to the same <a\nhref=\"../transfer#timestamp\"><code>Transfer.timestamp</code></a> which\nchanged the <a href=\"../account\"><code>Account</code></a>.</p>\n<p>The amounts refer to the account balance recorded <em>after</em> the\ntransfer execution.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n</ul>\n<h3 id=\"debits_pending\"><a href=\"#debits_pending\"\nclass=\"anchor\"><code>debits_pending</code></a></h3>\n<p>Amount of <a href=\"../account#debits_pending\">pending debits</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n</ul>\n<h3 id=\"debits_posted\"><a href=\"#debits_posted\"\nclass=\"anchor\"><code>debits_posted</code></a></h3>\n<p>Amount of <a href=\"../account#debits_posted\">posted debits</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n</ul>\n<h3 id=\"credits_pending\"><a href=\"#credits_pending\"\nclass=\"anchor\"><code>credits_pending</code></a></h3>\n<p>Amount of <a href=\"../account#credits_pending\">pending\ncredits</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n</ul>\n<h3 id=\"credits_posted\"><a href=\"#credits_posted\"\nclass=\"anchor\"><code>credits_posted</code></a></h3>\n<p>Amount of <a href=\"../account#credits_posted\">posted credits</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n</ul>\n<h3 id=\"reserved\"><a href=\"#reserved\"\nclass=\"anchor\"><code>reserved</code></a></h3>\n<p>This space may be used for additional data in the future.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 56 bytes</li>\n<li>Must be zero</li>\n</ul>\n"},{"path":"reference/account-filter","html":"<h1 id=\"accountfilter\"><a href=\"#accountfilter\"\nclass=\"anchor\"><code>AccountFilter</code></a></h1>\n<p>An <code>AccountFilter</code> is a record containing the filter\nparameters for querying the <a\nhref=\"../requests/get_account_transfers\">account transfers</a> and the\n<a href=\"../requests/get_account_balances\">account historical\nbalances</a>.</p>\n<h2 id=\"fields\"><a href=\"#fields\" class=\"anchor\">Fields</a></h2>\n<h3 id=\"account_id\"><a href=\"#account_id\"\nclass=\"anchor\"><code>account_id</code></a></h3>\n<p>The unique <a href=\"../account#id\">identifier</a> of the account for\nwhich the results will be retrieved.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>Must not be zero or <code>2^128 - 1</code></li>\n</ul>\n<h3 id=\"user_data_128\"><a href=\"#user_data_128\"\nclass=\"anchor\"><code>user_data_128</code></a></h3>\n<p>Filter the results by the field <a\nhref=\"../transfer#user_data_128\"><code>Transfer.user_data_128</code></a>.\nOptional; set to zero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n</ul>\n<h3 id=\"user_data_64\"><a href=\"#user_data_64\"\nclass=\"anchor\"><code>user_data_64</code></a></h3>\n<p>Filter the results by the field <a\nhref=\"../transfer#user_data_64\"><code>Transfer.user_data_64</code></a>.\nOptional; set to zero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n</ul>\n<h3 id=\"user_data_32\"><a href=\"#user_data_32\"\nclass=\"anchor\"><code>user_data_32</code></a></h3>\n<p>Filter the results by the field <a\nhref=\"../transfer#user_data_32\"><code>Transfer.user_data_32</code></a>.\nOptional; set to zero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n</ul>\n<h3 id=\"code\"><a href=\"#code\" class=\"anchor\"><code>code</code></a></h3>\n<p>Filter the results by the <a\nhref=\"../transfer#code\"><code>Transfer.code</code></a>. Optional; set to\nzero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 16-bit unsigned integer (2 bytes)</li>\n</ul>\n<h3 id=\"reserved\"><a href=\"#reserved\"\nclass=\"anchor\"><code>reserved</code></a></h3>\n<p>This space may be used for additional data in the future.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 58 bytes</li>\n<li>Must be zero</li>\n</ul>\n<h3 id=\"timestamp_min\"><a href=\"#timestamp_min\"\nclass=\"anchor\"><code>timestamp_min</code></a></h3>\n<p>The minimum <a\nhref=\"../transfer#timestamp\"><code>Transfer.timestamp</code></a> from\nwhich results will be returned, inclusive range. Optional; set to zero\nto disable the lower-bound filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n<li>Must be less than <code>2^63</code>.</li>\n</ul>\n<h3 id=\"timestamp_max\"><a href=\"#timestamp_max\"\nclass=\"anchor\"><code>timestamp_max</code></a></h3>\n<p>The maximum <a\nhref=\"../transfer#timestamp\"><code>Transfer.timestamp</code></a> from\nwhich results will be returned, inclusive range. Optional; set to zero\nto disable the upper-bound filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n<li>Must be less than <code>2^63</code>.</li>\n</ul>\n<h3 id=\"limit\"><a href=\"#limit\"\nclass=\"anchor\"><code>limit</code></a></h3>\n<p>The maximum number of results that can be returned by this query.</p>\n<p>Limited by the <a href=\"../requests/#batching-events\">maximum message\nsize</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n<li>Must not be zero</li>\n</ul>\n<h3 id=\"flags\"><a href=\"#flags\"\nclass=\"anchor\"><code>flags</code></a></h3>\n<p>A bitfield that specifies querying behavior.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n</ul>\n<h4 id=\"flagsdebits\"><a href=\"#flagsdebits\"\nclass=\"anchor\"><code>flags.debits</code></a></h4>\n<p>Whether or not to include results where the field <a\nhref=\"../transfer#debit_account_id\"><code>debit_account_id</code></a>\nmatches the parameter <a\nhref=\"#account_id\"><code>account_id</code></a>.</p>\n<h4 id=\"flagscredits\"><a href=\"#flagscredits\"\nclass=\"anchor\"><code>flags.credits</code></a></h4>\n<p>Whether or not to include results where the field <a\nhref=\"../transfer#credit_account_id\"><code>credit_account_id</code></a>\nmatches the parameter <a\nhref=\"#account_id\"><code>account_id</code></a>.</p>\n<h4 id=\"flagsreversed\"><a href=\"#flagsreversed\"\nclass=\"anchor\"><code>flags.reversed</code></a></h4>\n<p>Whether the results are sorted by timestamp in chronological or\nreverse-chronological order. If the flag is not set, the event that\nhappened first (has the smallest timestamp) will come first. If the flag\nis set, the event that happened last (has the largest timestamp) will\ncome first.</p>\n"},{"path":"reference/query-filter","html":"<h1 id=\"queryfilter\"><a href=\"#queryfilter\"\nclass=\"anchor\"><code>QueryFilter</code></a></h1>\n<p>A <code>QueryFilter</code> is a record containing the filter\nparameters for <a href=\"../requests/query_accounts\">querying\naccounts</a> and <a href=\"../requests/query_transfers\">querying\ntransfers</a>.</p>\n<h2 id=\"fields\"><a href=\"#fields\" class=\"anchor\">Fields</a></h2>\n<h3 id=\"user_data_128\"><a href=\"#user_data_128\"\nclass=\"anchor\"><code>user_data_128</code></a></h3>\n<p>Filter the results by the field <a\nhref=\"../account#user_data_128\"><code>Account.user_data_128</code></a>\nor <a\nhref=\"../transfer#user_data_128\"><code>Transfer.user_data_128</code></a>.\nOptional; set to zero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n</ul>\n<h3 id=\"user_data_64\"><a href=\"#user_data_64\"\nclass=\"anchor\"><code>user_data_64</code></a></h3>\n<p>Filter the results by the field <a\nhref=\"../account#user_data_64\"><code>Account.user_data_64</code></a> or\n<a\nhref=\"../transfer#user_data_64\"><code>Transfer.user_data_64</code></a>.\nOptional; set to zero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n</ul>\n<h3 id=\"user_data_32\"><a href=\"#user_data_32\"\nclass=\"anchor\"><code>user_data_32</code></a></h3>\n<p>Filter the results by the field <a\nhref=\"../account#user_data_32\"><code>Account.user_data_32</code></a> or\n<a\nhref=\"../transfer#user_data_32\"><code>Transfer.user_data_32</code></a>.\nOptional; set to zero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n</ul>\n<h3 id=\"ledger\"><a href=\"#ledger\"\nclass=\"anchor\"><code>ledger</code></a></h3>\n<p>Filter the results by the field <a\nhref=\"../account#ledger\"><code>Account.ledger</code></a> or <a\nhref=\"../transfer#ledger\"><code>Transfer.ledger</code></a>. Optional;\nset to zero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n</ul>\n<h3 id=\"code\"><a href=\"#code\" class=\"anchor\"><code>code</code></a></h3>\n<p>Filter the results by the field <a\nhref=\"../account#code\"><code>Account.code</code></a> or <a\nhref=\"../transfer#code\"><code>Transfer.code</code></a>. Optional; set to\nzero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 16-bit unsigned integer (2 bytes)</li>\n</ul>\n<h3 id=\"timestamp_min\"><a href=\"#timestamp_min\"\nclass=\"anchor\"><code>timestamp_min</code></a></h3>\n<p>The minimum <a\nhref=\"../account#timestamp\"><code>Account.timestamp</code></a> or <a\nhref=\"../transfer#timestamp\"><code>Transfer.timestamp</code></a> from\nwhich results will be returned, inclusive range. Optional; set to zero\nto disable the lower-bound filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n<li>Must not be <code>2^64 - 1</code></li>\n</ul>\n<h3 id=\"timestamp_max\"><a href=\"#timestamp_max\"\nclass=\"anchor\"><code>timestamp_max</code></a></h3>\n<p>The maximum <a\nhref=\"../account#timestamp\"><code>Account.timestamp</code></a> or <a\nhref=\"../transfer#timestamp\"><code>Transfer.timestamp</code></a> from\nwhich results will be returned, inclusive range. Optional; set to zero\nto disable the upper-bound filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n<li>Must not be <code>2^64 - 1</code></li>\n</ul>\n<h3 id=\"limit\"><a href=\"#limit\"\nclass=\"anchor\"><code>limit</code></a></h3>\n<p>The maximum number of results that can be returned by this query.</p>\n<p>Limited by the <a href=\"../requests/#batching-events\">maximum message\nsize</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n<li>Must not be zero</li>\n</ul>\n<h3 id=\"flags\"><a href=\"#flags\"\nclass=\"anchor\"><code>flags</code></a></h3>\n<p>A bitfield that specifies querying behavior.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n</ul>\n<h4 id=\"flagsreversed\"><a href=\"#flagsreversed\"\nclass=\"anchor\"><code>flags.reversed</code></a></h4>\n<p>Whether the results are sorted by timestamp in chronological or\nreverse-chronological order. If the flag is not set, the event that\nhappened first (has the smallest timestamp) will come first. If the flag\nis set, the event that happened last (has the largest timestamp) will\ncome first.</p>\n<h3 id=\"reserved\"><a href=\"#reserved\"\nclass=\"anchor\"><code>reserved</code></a></h3>\n<p>This space may be used for additional data in the future.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 6 bytes</li>\n<li>Must be zero</li>\n</ul>\n"},{"path":"reference/requests","html":"<h1 id=\"requests\"><a href=\"#requests\" class=\"anchor\">Requests</a></h1>\n<p>A <em>request</em> queries or updates the database state.</p>\n<p>A request consists of one or more <em>events</em> of the same type\nsent to the cluster in a single message. For example, a single request\ncan create multiple transfers but it cannot create both accounts and\ntransfers.</p>\n<p>The cluster commits an entire request at once. Events are applied in\nseries, such that successive events observe the effects of previous ones\nand event timestamps are <a\nhref=\"../../coding/time#timestamps-are-totally-ordered\">totally\nordered</a>.</p>\n<p>Each request receives one <em>reply</em> message from the cluster.\nThe reply contains one <em>result</em> for each event in the\nrequest.</p>\n<h2 id=\"request-types\"><a href=\"#request-types\" class=\"anchor\">Request\nTypes</a></h2>\n<ul>\n<li><a href=\"./create_accounts\"><code>create_accounts</code></a>: create\n<a href=\"../account\"><code>Account</code>s</a></li>\n<li><a href=\"./create_transfers\"><code>create_transfers</code></a>:\ncreate <a href=\"../transfer\"><code>Transfer</code>s</a></li>\n<li><a href=\"./lookup_accounts\"><code>lookup_accounts</code></a>: fetch\n<code>Account</code>s by <code>id</code></li>\n<li><a href=\"./lookup_transfers\"><code>lookup_transfers</code></a>:\nfetch <code>Transfer</code>s by <code>id</code></li>\n<li><a\nhref=\"./get_account_transfers\"><code>get_account_transfers</code></a>:\nfetch <code>Transfer</code>s by <code>debit_account_id</code> or\n<code>credit_account_id</code></li>\n<li><a\nhref=\"./get_account_balances\"><code>get_account_balances</code></a>:\nfetch the historical account balance by the <code>Account</code>‚Äôs\n<code>id</code>.</li>\n<li><a href=\"./query_accounts\"><code>query_accounts</code></a>: query\n<code>Account</code>s</li>\n<li><a href=\"./query_transfers\"><code>query_transfers</code></a>: query\n<code>Transfer</code>s</li>\n</ul>\n<p><em>More request types, including more powerful queries, are coming\nsoon!</em></p>\n<h2 id=\"events-and-results\"><a href=\"#events-and-results\"\nclass=\"anchor\">Events and Results</a></h2>\n<p>Each request has a corresponding <em>event</em> and <em>result</em>\ntype:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Request Type</th>\n<th>Event</th>\n<th>Result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>create_accounts</code></td>\n<td><a href=\"./create_accounts#event\"><code>Account</code></a></td>\n<td><a\nhref=\"./create_accounts#result\"><code>CreateAccountResult</code></a></td>\n</tr>\n<tr>\n<td><code>create_transfers</code></td>\n<td><a href=\"./create_transfers#event\"><code>Transfer</code></a></td>\n<td><a\nhref=\"./create_transfers#result\"><code>CreateTransferResult</code></a></td>\n</tr>\n<tr>\n<td><code>lookup_accounts</code></td>\n<td><a href=\"./lookup_accounts#event\"><code>Account.id</code></a></td>\n<td><a href=\"./lookup_accounts#result\"><code>Account</code></a> or\nnothing</td>\n</tr>\n<tr>\n<td><code>lookup_transfers</code></td>\n<td><a href=\"./lookup_transfers#event\"><code>Transfer.id</code></a></td>\n<td><a href=\"./lookup_transfers#result\"><code>Transfer</code></a> or\nnothing</td>\n</tr>\n<tr>\n<td><code>get_account_transfers</code></td>\n<td><a href=\"../account-filter\"><code>AccountFilter</code></a></td>\n<td><a href=\"./get_account_transfers#result\"><code>Transfer</code></a>\nor nothing</td>\n</tr>\n<tr>\n<td><code>get_account_balances</code></td>\n<td><a href=\"../account-filter\"><code>AccountFilter</code></a></td>\n<td><a\nhref=\"./get_account_balances#result\"><code>AccountBalance</code></a> or\nnothing</td>\n</tr>\n<tr>\n<td><code>query_accounts</code></td>\n<td><a href=\"../query-filter\"><code>QueryFilter</code></a></td>\n<td><a href=\"./lookup_accounts#result\"><code>Account</code></a> or\nnothing</td>\n</tr>\n<tr>\n<td><code>query_transfers</code></td>\n<td><a href=\"../query-filter\"><code>QueryFilter</code></a></td>\n<td><a href=\"./lookup_transfers#result\"><code>Transfer</code></a> or\nnothing</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"idempotency\"><a href=\"#idempotency\"\nclass=\"anchor\">Idempotency</a></h3>\n<p>Events that create objects are idempotent. The first event to create\nan object with a given <code>id</code> will receive the <code>ok</code>\nresult. Subsequent events that attempt to create the same object will\nreceive the <code>exists</code> result.</p>\n<h2 id=\"batching-events\"><a href=\"#batching-events\"\nclass=\"anchor\">Batching Events</a></h2>\n<p>To achieve high throughput, TigerBeetle amortizes the overhead of\nconsensus and I/O by batching many events in each request.</p>\n<p>In the default configuration, the maximum batch sizes for each\nrequest type are:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Request Type</th>\n<th style=\"text-align: right;\">Request Batch Size (Events)</th>\n<th style=\"text-align: right;\">Reply Batch Size (Results)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>lookup_accounts</code></td>\n<td style=\"text-align: right;\">8190</td>\n<td style=\"text-align: right;\">8190</td>\n</tr>\n<tr>\n<td><code>lookup_transfers</code></td>\n<td style=\"text-align: right;\">8190</td>\n<td style=\"text-align: right;\">8190</td>\n</tr>\n<tr>\n<td><code>create_accounts</code></td>\n<td style=\"text-align: right;\">8190</td>\n<td style=\"text-align: right;\">8190</td>\n</tr>\n<tr>\n<td><code>create_transfers</code></td>\n<td style=\"text-align: right;\">8190</td>\n<td style=\"text-align: right;\">8190</td>\n</tr>\n<tr>\n<td><code>get_account_transfers</code></td>\n<td style=\"text-align: right;\">1</td>\n<td style=\"text-align: right;\">8190</td>\n</tr>\n<tr>\n<td><code>get_account_balances</code></td>\n<td style=\"text-align: right;\">1</td>\n<td style=\"text-align: right;\">8190</td>\n</tr>\n<tr>\n<td><code>query_accounts</code></td>\n<td style=\"text-align: right;\">1</td>\n<td style=\"text-align: right;\">8190</td>\n</tr>\n<tr>\n<td><code>query_transfers</code></td>\n<td style=\"text-align: right;\">1</td>\n<td style=\"text-align: right;\">8190</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>TigerBeetle clients automatically batch events. Therefore, it is\nrecommended to share the client instances between multiple threads or\ntasks to have events batched transparently.</p>\n<ul>\n<li><a href=\"/clients/node/#batching\">Node</a></li>\n<li><a href=\"/clients/go/#batching\">Go</a></li>\n<li><a href=\"/clients/java/#batching\">Java</a></li>\n<li><a href=\"/clients/dotnet/#batching\">.NET</a></li>\n</ul>\n<h2 id=\"linked-events\"><a href=\"#linked-events\" class=\"anchor\">Linked\nEvents</a></h2>\n<p>Events within a request <a href=\"./create_transfers#result\">succeed\nor fail</a> independently unless they are explicitly linked using the\n<code>flags.linked</code> (<a\nhref=\"../account#flagslinked\"><code>Account.flags.linked</code></a> or\n<a\nhref=\"../transfer#flagslinked\"><code>Transfer.flags.linked</code></a>).</p>\n<p>When the <code>linked</code> flag is specified, it links the outcome\nof a Transfer or Account creation with the outcome of the next one in\nthe request. These chains of events will all succeed or fail\ntogether.</p>\n<p><strong>The last event in a chain is denoted by the first Transfer or\nAccount without this flag.</strong></p>\n<p>The last Transfer or Account in a request may never have the\n<code>flags.linked</code> set, as it would leave a chain open-ended.\nAttempting to do so will result in the <a\nhref=\"./create_transfers#linked_event_chain_open\"><code>linked_event_chain_open</code></a>\nerror.</p>\n<p>Multiple chains of events may coexist within a request to succeed or\nfail independently.</p>\n<p>Events within a chain are executed in order, or are rolled back on\nerror, so that the effect of each event in the chain is visible to the\nnext. Each chain is either visible or invisible as a unit to subsequent\ntransfers after the chain. The event that was the first to fail within a\nchain will have a unique error result. Other events in the chain will\nhave their error result set to <a\nhref=\"./create_transfers#linked_event_failed\"><code>linked_event_failed</code></a>.</p>\n<h3 id=\"linked-transfers-example\"><a href=\"#linked-transfers-example\"\nclass=\"anchor\">Linked Transfers Example</a></h3>\n<p>Consider this set of Transfers as part of a request:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th>Index in Request</th>\n<th>flags.linked</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>A</code></td>\n<td><code>0</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>B</code></td>\n<td><code>1</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>C</code></td>\n<td><code>2</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>D</code></td>\n<td><code>3</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>E</code></td>\n<td><code>4</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>If any of transfers <code>B</code>, <code>C</code>, or <code>D</code>\nfail (for example, due to <a\nhref=\"./create_transfers#exceeds_credits\"><code>exceeds_credits</code></a>),\nthen <code>B</code>, <code>C</code>, and <code>D</code> will all fail.\nThey are linked.</p>\n<p>Transfers <code>A</code> and <code>E</code> fail or succeed\nindependently of <code>B</code>, <code>C</code>, <code>D</code>, and\neach other.</p>\n<p>After the chain of linked events has executed, the fact that they\nwere linked will not be saved. To save the association between Transfers\nor Accounts, it must be <a href=\"../../coding/data-modeling\">encoded\ninto the data model</a>, for example by adding an ID to one of the <a\nhref=\"../../coding/data-modeling#user_data\">user data</a> fields.</p>\n<h2 id=\"guarantees\"><a href=\"#guarantees\"\nclass=\"anchor\">Guarantees</a></h2>\n<ul>\n<li>A request executes within the cluster at most once.</li>\n<li>Requests do not <a href=\"../sessions#retries\">time out</a>. Clients\nwill continuously retry requests until they receive a reply from the\ncluster. This is because in the case of a network partition, a lack of\nresponse from the cluster could either indicate that the request was\ndropped before it was processed or that the reply was dropped after the\nrequest was processed. Note that individual <a\nhref=\"../../coding/two-phase-transfers\">pending transfers</a> within a\nrequest may have <a href=\"../transfer#timeout\">timeouts</a>.</li>\n<li>Requests retried by their original client session receive identical\nreplies.</li>\n<li>Requests retried by a different client (same request body, different\nsession) may receive different replies.</li>\n<li>Events within a request are executed in sequence. The effects of a\ngiven event are observable when the next event within that request is\napplied.</li>\n<li>Events within a request do not interleave with events from other\nrequests.</li>\n<li>All events within a request batch are committed, or none are. Note\nthat this does not mean that all of the events in a batch will succeed,\nor that all will fail. Events succeed or fail independently unless they\nare explicitly <a href=\"#linked-events\">linked</a></li>\n<li>Once committed, an event will always be committed ‚Äî the cluster‚Äôs\nstate never backtracks.</li>\n<li>Within a cluster, object <a\nhref=\"../../coding/time#timestamps-are-totally-ordered\">timestamps are\nunique and strictly increasing</a>. No two objects within the same\ncluster will have the same timestamp. Furthermore, the order of the\ntimestamps indicates the order in which the objects were committed.</li>\n</ul>\n"},{"path":"reference/requests/create_accounts","html":"<h1 id=\"create_accounts\"><a href=\"#create_accounts\"\nclass=\"anchor\"><code>create_accounts</code></a></h1>\n<p>Create one or more <a\nhref=\"../../account\"><code>Account</code></a>s.</p>\n<h2 id=\"event\"><a href=\"#event\" class=\"anchor\">Event</a></h2>\n<p>The account to create. See <a\nhref=\"../../account\"><code>Account</code></a> for constraints.</p>\n<h2 id=\"result\"><a href=\"#result\" class=\"anchor\">Result</a></h2>\n<p>Results are listed in this section in order of descending precedence\n‚Äî that is, if more than one error is applicable to the account being\ncreated, only the result listed first is returned.</p>\n<h3 id=\"ok\"><a href=\"#ok\" class=\"anchor\"><code>ok</code></a></h3>\n<p>The account was successfully created; it did not previously\nexist.</p>\n<p>Note that <code>ok</code> is generated by the client implementation;\nthe network protocol does not include a result when the account was\nsuccessfully created.</p>\n<h3 id=\"linked_event_failed\"><a href=\"#linked_event_failed\"\nclass=\"anchor\"><code>linked_event_failed</code></a></h3>\n<p>The account was not created. One or more of the accounts in the <a\nhref=\"../../account#flagslinked\">linked chain</a> is invalid, so the\nwhole chain failed.</p>\n<h3 id=\"linked_event_chain_open\"><a href=\"#linked_event_chain_open\"\nclass=\"anchor\"><code>linked_event_chain_open</code></a></h3>\n<p>The account was not created. The <a\nhref=\"../../account#flagslinked\"><code>Account.flags.linked</code></a>\nflag was set on the last event in the batch, which is not legal.\n(<code>flags.linked</code> indicates that the chain continues to the\nnext operation).</p>\n<h3 id=\"imported_event_expected\"><a href=\"#imported_event_expected\"\nclass=\"anchor\"><code>imported_event_expected</code></a></h3>\n<p>The account was not created. The <a\nhref=\"../../account#flagsimported\"><code>Account.flags.imported</code></a>\nwas set on the first account of the batch, but not all accounts in the\nbatch. Batches cannot mix imported accounts with non-imported\naccounts.</p>\n<h3 id=\"imported_event_not_expected\"><a\nhref=\"#imported_event_not_expected\"\nclass=\"anchor\"><code>imported_event_not_expected</code></a></h3>\n<p>The account was not created. The <a\nhref=\"../../account#flagsimported\"><code>Account.flags.imported</code></a>\nwas expected to <em>not</em> be set, as it‚Äôs not allowed to mix accounts\nwith different <code>imported</code> flag in the same batch. The first\naccount determines the entire operation.</p>\n<h3 id=\"timestamp_must_be_zero\"><a href=\"#timestamp_must_be_zero\"\nclass=\"anchor\"><code>timestamp_must_be_zero</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../account#flagsimported\"><code>Account.flags.imported</code></a>\nis <em>not</em> set.</p>\n<p>The account was not created. The <a\nhref=\"../../account#timestamp\"><code>Account.timestamp</code></a> is\nnonzero, but must be zero. The cluster is responsible for setting this\nfield.</p>\n<p>The <a\nhref=\"../../account#timestamp\"><code>Account.timestamp</code></a> can\nonly be assigned when creating accounts with <a\nhref=\"../../account#flagsimported\"><code>Account.flags.imported</code></a>\nset.</p>\n<h3 id=\"imported_event_timestamp_out_of_range\"><a\nhref=\"#imported_event_timestamp_out_of_range\"\nclass=\"anchor\"><code>imported_event_timestamp_out_of_range</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../account#flagsimported\"><code>Account.flags.imported</code></a>\nis set.</p>\n<p>The account was not created. The <a\nhref=\"../../account#timestamp\"><code>Account.timestamp</code></a> is out\nof range, but must be a user-defined timestamp greater than\n<code>0</code> and less than <code>2^63</code>.</p>\n<h3 id=\"imported_event_timestamp_must_not_advance\"><a\nhref=\"#imported_event_timestamp_must_not_advance\"\nclass=\"anchor\"><code>imported_event_timestamp_must_not_advance</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../account#flagsimported\"><code>Account.flags.imported</code></a>\nis set.</p>\n<p>The account was not created. The user-defined <a\nhref=\"../../account#timestamp\"><code>Account.timestamp</code></a> is\ngreater than the current <a href=\"../../../coding/time\">cluster\ntime</a>, but it must be a past timestamp.</p>\n<h3 id=\"reserved_field\"><a href=\"#reserved_field\"\nclass=\"anchor\"><code>reserved_field</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#reserved\"><code>Account.reserved</code></a> is\nnonzero, but must be zero.</p>\n<h3 id=\"reserved_flag\"><a href=\"#reserved_flag\"\nclass=\"anchor\"><code>reserved_flag</code></a></h3>\n<p>The account was not created. <code>Account.flags.reserved</code> is\nnonzero, but must be zero.</p>\n<h3 id=\"id_must_not_be_zero\"><a href=\"#id_must_not_be_zero\"\nclass=\"anchor\"><code>id_must_not_be_zero</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#id\"><code>Account.id</code></a> is zero, which is a\nreserved value.</p>\n<h3 id=\"id_must_not_be_int_max\"><a href=\"#id_must_not_be_int_max\"\nclass=\"anchor\"><code>id_must_not_be_int_max</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#id\"><code>Account.id</code></a> is\n<code>2^128 - 1</code>, which is a reserved value.</p>\n<h3 id=\"exists_with_different_flags\"><a\nhref=\"#exists_with_different_flags\"\nclass=\"anchor\"><code>exists_with_different_flags</code></a></h3>\n<p>An account with the same <code>id</code> already exists, but with\ndifferent <a href=\"../../account#flags\"><code>flags</code></a>.</p>\n<h3 id=\"exists_with_different_user_data_128\"><a\nhref=\"#exists_with_different_user_data_128\"\nclass=\"anchor\"><code>exists_with_different_user_data_128</code></a></h3>\n<p>An account with the same <code>id</code> already exists, but with\ndifferent <a\nhref=\"../../account#user_data_128\"><code>user_data_128</code></a>.</p>\n<h3 id=\"exists_with_different_user_data_64\"><a\nhref=\"#exists_with_different_user_data_64\"\nclass=\"anchor\"><code>exists_with_different_user_data_64</code></a></h3>\n<p>An account with the same <code>id</code> already exists, but with\ndifferent <a\nhref=\"../../account#user_data_64\"><code>user_data_64</code></a>.</p>\n<h3 id=\"exists_with_different_user_data_32\"><a\nhref=\"#exists_with_different_user_data_32\"\nclass=\"anchor\"><code>exists_with_different_user_data_32</code></a></h3>\n<p>An account with the same <code>id</code> already exists, but with\ndifferent <a\nhref=\"../../account#user_data_32\"><code>user_data_32</code></a>.</p>\n<h3 id=\"exists_with_different_ledger\"><a\nhref=\"#exists_with_different_ledger\"\nclass=\"anchor\"><code>exists_with_different_ledger</code></a></h3>\n<p>An account with the same <code>id</code> already exists, but with\ndifferent <a href=\"../../account#ledger\"><code>ledger</code></a>.</p>\n<h3 id=\"exists_with_different_code\"><a\nhref=\"#exists_with_different_code\"\nclass=\"anchor\"><code>exists_with_different_code</code></a></h3>\n<p>An account with the same <code>id</code> already exists, but with\ndifferent <a href=\"../../account#code\"><code>code</code></a>.</p>\n<h3 id=\"exists\"><a href=\"#exists\"\nclass=\"anchor\"><code>exists</code></a></h3>\n<p>An account with the same <code>id</code> already exists.</p>\n<p>With the possible exception of the following fields, the existing\naccount is identical to the account in the request:</p>\n<ul>\n<li><code>timestamp</code></li>\n<li><code>debits_pending</code></li>\n<li><code>debits_posted</code></li>\n<li><code>credits_pending</code></li>\n<li><code>credits_posted</code></li>\n</ul>\n<p>To correctly <a\nhref=\"../../../coding/reliable-transaction-submission\">recover from\napplication crashes</a>, many applications should handle\n<code>exists</code> exactly as <a href=\"#ok\"><code>ok</code></a>.</p>\n<h3 id=\"flags_are_mutually_exclusive\"><a\nhref=\"#flags_are_mutually_exclusive\"\nclass=\"anchor\"><code>flags_are_mutually_exclusive</code></a></h3>\n<p>The account was not created. An account cannot be created with the\nspecified combination of <a\nhref=\"../../account#flags\"><code>Account.flags</code></a>.</p>\n<p>The following flags are mutually exclusive:</p>\n<ul>\n<li><a\nhref=\"../../account#flagsdebits_must_not_exceed_credits\"><code>Account.flags.debits_must_not_exceed_credits</code></a></li>\n<li><a\nhref=\"../../account#flagscredits_must_not_exceed_debits\"><code>Account.flags.credits_must_not_exceed_debits</code></a></li>\n</ul>\n<h3 id=\"debits_pending_must_be_zero\"><a\nhref=\"#debits_pending_must_be_zero\"\nclass=\"anchor\"><code>debits_pending_must_be_zero</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#debits_pending\"><code>Account.debits_pending</code></a>\nis nonzero, but must be zero.</p>\n<p>An account‚Äôs debits and credits are only modified by transfers.</p>\n<h3 id=\"debits_posted_must_be_zero\"><a\nhref=\"#debits_posted_must_be_zero\"\nclass=\"anchor\"><code>debits_posted_must_be_zero</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#debits_posted\"><code>Account.debits_posted</code></a>\nis nonzero, but must be zero.</p>\n<p>An account‚Äôs debits and credits are only modified by transfers.</p>\n<h3 id=\"credits_pending_must_be_zero\"><a\nhref=\"#credits_pending_must_be_zero\"\nclass=\"anchor\"><code>credits_pending_must_be_zero</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#credits_pending\"><code>Account.credits_pending</code></a>\nis nonzero, but must be zero.</p>\n<p>An account‚Äôs debits and credits are only modified by transfers.</p>\n<h3 id=\"credits_posted_must_be_zero\"><a\nhref=\"#credits_posted_must_be_zero\"\nclass=\"anchor\"><code>credits_posted_must_be_zero</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#credits_posted\"><code>Account.credits_posted</code></a>\nis nonzero, but must be zero.</p>\n<p>An account‚Äôs debits and credits are only modified by transfers.</p>\n<h3 id=\"ledger_must_not_be_zero\"><a href=\"#ledger_must_not_be_zero\"\nclass=\"anchor\"><code>ledger_must_not_be_zero</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#ledger\"><code>Account.ledger</code></a> is zero, but\nmust be nonzero.</p>\n<h3 id=\"code_must_not_be_zero\"><a href=\"#code_must_not_be_zero\"\nclass=\"anchor\"><code>code_must_not_be_zero</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#code\"><code>Account.code</code></a> is zero, but\nmust be nonzero.</p>\n<h3 id=\"imported_event_timestamp_must_not_regress\"><a\nhref=\"#imported_event_timestamp_must_not_regress\"\nclass=\"anchor\"><code>imported_event_timestamp_must_not_regress</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../account#flagsimported\"><code>Account.flags.imported</code></a>\nis set.</p>\n<p>The account was not created. The user-defined <a\nhref=\"../../account#timestamp\"><code>Account.timestamp</code></a>\nregressed, but it must be greater than the last timestamp assigned to\nany <code>Account</code> in the cluster and cannot be equal to the\ntimestamp of any existing <a\nhref=\"../../transfer\"><code>Transfer</code></a>.</p>\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>For language-specific docs see:</p>\n<ul>\n<li><a href=\"/clients/dotnet/#creating-accounts\">.NET library</a></li>\n<li><a href=\"/clients/java/#creating-accounts\">Java library</a></li>\n<li><a href=\"/clients/go/#creating-accounts\">Go library</a></li>\n<li><a href=\"/clients/node/#creating-accounts\">Node.js library</a></li>\n<li><a href=\"/clients/python/#creating-accounts\">Python library</a></li>\n</ul>\n<h2 id=\"internals\"><a href=\"#internals\"\nclass=\"anchor\">Internals</a></h2>\n<p>If you‚Äôre curious and want to learn more, you can find the source\ncode for creating an account in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/state_machine.zig\">src/state_machine.zig</a>.\nSearch for <code>fn create_account(</code> and\n<code>fn execute(</code>.</p>\n"},{"path":"reference/requests/create_transfers","html":"<h1 id=\"create_transfers\"><a href=\"#create_transfers\"\nclass=\"anchor\"><code>create_transfers</code></a></h1>\n<p>Create one or more <a\nhref=\"../../transfer\"><code>Transfer</code></a>s. A successfully created\ntransfer will modify the amount fields of its <a\nhref=\"../../transfer#debit_account_id\">debit</a> and <a\nhref=\"../../transfer#credit_account_id\">credit</a> accounts.</p>\n<h2 id=\"event\"><a href=\"#event\" class=\"anchor\">Event</a></h2>\n<p>The transfer to create. See <a\nhref=\"../../transfer\"><code>Transfer</code></a> for constraints.</p>\n<h2 id=\"result\"><a href=\"#result\" class=\"anchor\">Result</a></h2>\n<p>Results are listed in this section in order of descending precedence\n‚Äî that is, if more than one error is applicable to the transfer being\ncreated, only the result listed first is returned.</p>\n<h3 id=\"ok\"><a href=\"#ok\" class=\"anchor\"><code>ok</code></a></h3>\n<p>The transfer was successfully created; did not previously exist.</p>\n<p>Note that <code>ok</code> is generated by the client implementation;\nthe network protocol does not include a result when the transfer was\nsuccessfully created.</p>\n<h3 id=\"linked_event_failed\"><a href=\"#linked_event_failed\"\nclass=\"anchor\"><code>linked_event_failed</code></a></h3>\n<p>The transfer was not created. One or more of the other transfers in\nthe <a href=\"../../transfer#flagslinked\">linked chain</a> is invalid, so\nthe whole chain failed.</p>\n<h3 id=\"linked_event_chain_open\"><a href=\"#linked_event_chain_open\"\nclass=\"anchor\"><code>linked_event_chain_open</code></a></h3>\n<p>The transfer was not created. The <a\nhref=\"../../transfer#flagslinked\"><code>Transfer.flags.linked</code></a>\nflag was set on the last event in the batch, which is not legal.\n(<code>flags.linked</code> indicates that the chain continues to the\nnext operation).</p>\n<h3 id=\"imported_event_expected\"><a href=\"#imported_event_expected\"\nclass=\"anchor\"><code>imported_event_expected</code></a></h3>\n<p>The transfer was not created. The <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nwas set on the first transfer of the batch, but not all transfers in the\nbatch. Batches cannot mix imported transfers with non-imported\ntransfers.</p>\n<h3 id=\"imported_event_not_expected\"><a\nhref=\"#imported_event_not_expected\"\nclass=\"anchor\"><code>imported_event_not_expected</code></a></h3>\n<p>The transfer was not created. The <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nwas expected to <em>not</em> be set, as it‚Äôs not allowed to mix\ntransfers with different <code>imported</code> flag in the same batch.\nThe first transfer determines the entire operation.</p>\n<h3 id=\"timestamp_must_be_zero\"><a href=\"#timestamp_must_be_zero\"\nclass=\"anchor\"><code>timestamp_must_be_zero</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../account#flagsimported\"><code>Account.flags.imported</code></a>\nis <em>not</em> set.</p>\n<p>The transfer was not created. The <a\nhref=\"../../transfer#timestamp\"><code>Transfer.timestamp</code></a> is\nnonzero, but must be zero. The cluster is responsible for setting this\nfield.</p>\n<p>The <a\nhref=\"../../transfer#timestamp\"><code>Transfer.timestamp</code></a> can\nonly be assigned when creating transfers with <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nset.</p>\n<h3 id=\"imported_event_timestamp_out_of_range\"><a\nhref=\"#imported_event_timestamp_out_of_range\"\nclass=\"anchor\"><code>imported_event_timestamp_out_of_range</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nis set.</p>\n<p>The transfer was not created. The <a\nhref=\"../../transfer#timestamp\"><code>Transfer.timestamp</code></a> is\nout of range, but must be a user-defined timestamp greater than\n<code>0</code> and less than <code>2^63</code>.</p>\n<h3 id=\"imported_event_timestamp_must_not_advance\"><a\nhref=\"#imported_event_timestamp_must_not_advance\"\nclass=\"anchor\"><code>imported_event_timestamp_must_not_advance</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nis set.</p>\n<p>The transfer was not created. The user-defined <a\nhref=\"../../transfer#timestamp\"><code>Transfer.timestamp</code></a> is\ngreater than the current <a href=\"../../../coding/time\">cluster\ntime</a>, but it must be a past timestamp.</p>\n<h3 id=\"reserved_flag\"><a href=\"#reserved_flag\"\nclass=\"anchor\"><code>reserved_flag</code></a></h3>\n<p>The transfer was not created. <code>Transfer.flags.reserved</code> is\nnonzero, but must be zero.</p>\n<h3 id=\"id_must_not_be_zero\"><a href=\"#id_must_not_be_zero\"\nclass=\"anchor\"><code>id_must_not_be_zero</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> is zero, which is\na reserved value.</p>\n<h3 id=\"id_must_not_be_int_max\"><a href=\"#id_must_not_be_int_max\"\nclass=\"anchor\"><code>id_must_not_be_int_max</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> is\n<code>2^128 - 1</code>, which is a reserved value.</p>\n<h3 id=\"exists_with_different_flags\"><a\nhref=\"#exists_with_different_flags\"\nclass=\"anchor\"><code>exists_with_different_flags</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with\ndifferent <a href=\"../../transfer#flags\"><code>flags</code></a>.</p>\n<h3 id=\"exists_with_different_pending_id\"><a\nhref=\"#exists_with_different_pending_id\"\nclass=\"anchor\"><code>exists_with_different_pending_id</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a\nhref=\"../../transfer#pending_id\"><code>pending_id</code></a>.</p>\n<h3 id=\"exists_with_different_timeout\"><a\nhref=\"#exists_with_different_timeout\"\nclass=\"anchor\"><code>exists_with_different_timeout</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a href=\"../../transfer#timeout\"><code>timeout</code></a>.</p>\n<h3 id=\"exists_with_different_debit_account_id\"><a\nhref=\"#exists_with_different_debit_account_id\"\nclass=\"anchor\"><code>exists_with_different_debit_account_id</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a\nhref=\"../../transfer#debit_account_id\"><code>debit_account_id</code></a>.</p>\n<h3 id=\"exists_with_different_credit_account_id\"><a\nhref=\"#exists_with_different_credit_account_id\"\nclass=\"anchor\"><code>exists_with_different_credit_account_id</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a\nhref=\"../../transfer#credit_account_id\"><code>credit_account_id</code></a>.</p>\n<h3 id=\"exists_with_different_amount\"><a\nhref=\"#exists_with_different_amount\"\nclass=\"anchor\"><code>exists_with_different_amount</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a href=\"../../transfer#amount\"><code>amount</code></a>.</p>\n<p>If the transfer has <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a>\nor <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a>\nset, then the actual amount transferred exceeds this failed transfer‚Äôs\n<code>amount</code>.</p>\n<h3 id=\"exists_with_different_user_data_128\"><a\nhref=\"#exists_with_different_user_data_128\"\nclass=\"anchor\"><code>exists_with_different_user_data_128</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a\nhref=\"../../transfer#user_data_128\"><code>user_data_128</code></a>.</p>\n<h3 id=\"exists_with_different_user_data_64\"><a\nhref=\"#exists_with_different_user_data_64\"\nclass=\"anchor\"><code>exists_with_different_user_data_64</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a\nhref=\"../../transfer#user_data_64\"><code>user_data_64</code></a>.</p>\n<h3 id=\"exists_with_different_user_data_32\"><a\nhref=\"#exists_with_different_user_data_32\"\nclass=\"anchor\"><code>exists_with_different_user_data_32</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a\nhref=\"../../transfer#user_data_32\"><code>user_data_32</code></a>.</p>\n<h3 id=\"exists_with_different_ledger\"><a\nhref=\"#exists_with_different_ledger\"\nclass=\"anchor\"><code>exists_with_different_ledger</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a href=\"../../transfer#ledger\"><code>ledger</code></a>.</p>\n<h3 id=\"exists_with_different_code\"><a\nhref=\"#exists_with_different_code\"\nclass=\"anchor\"><code>exists_with_different_code</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a href=\"../../transfer#code\"><code>code</code></a>.</p>\n<h3 id=\"exists\"><a href=\"#exists\"\nclass=\"anchor\"><code>exists</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists.</p>\n<p>If the transfer has <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a>\nor <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a>\nset, then the existing transfer may have a different <a\nhref=\"../../transfer#amount\"><code>amount</code></a>, limited to the\nmaximum <code>amount</code> of the transfer in the request.</p>\n<p>If the transfer has <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a>\nset, then the existing transfer may have a different <a\nhref=\"../../transfer#amount\"><code>amount</code></a>:</p>\n<ul>\n<li>If the original posted amount was less than the pending amount, then\nthe transfer amount must be equal to the posted amount.</li>\n<li>Otherwise, the transfer amount must be greater than or equal to the\npending amount.</li>\n</ul>\n<details>\n<summary>Client release &lt; 0.16.0</summary>\n\n<p>If the transfer has <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a>\nor <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a>\nset, then the existing transfer may have a different <a\nhref=\"../../transfer#amount\"><code>amount</code></a>, limited to the\nmaximum <code>amount</code> of the transfer in the request.</p>\n</details>\n\n<p>Otherwise, with the possible exception of the <code>timestamp</code>\nfield, the existing transfer is identical to the transfer in the\nrequest.</p>\n<p>To correctly <a\nhref=\"../../../coding/reliable-transaction-submission\">recover from\napplication crashes</a>, many applications should handle\n<code>exists</code> exactly as <a href=\"#ok\"><code>ok</code></a>.</p>\n<h3 id=\"id_already_failed\"><a href=\"#id_already_failed\"\nclass=\"anchor\"><code>id_already_failed</code></a></h3>\n<p>The transfer was not created. A previous transfer with the same <a\nhref=\"../../transfer#id\"><code>id</code></a> failed due to one of the\nfollowing <em>transient errors</em>:</p>\n<ul>\n<li><a\nhref=\"#debit_account_not_found\"><code>debit_account_not_found</code></a></li>\n<li><a\nhref=\"#credit_account_not_found\"><code>credit_account_not_found</code></a></li>\n<li><a\nhref=\"#pending_transfer_not_found\"><code>pending_transfer_not_found</code></a></li>\n<li><a href=\"#exceeds_credits\"><code>exceeds_credits</code></a></li>\n<li><a href=\"#exceeds_debits\"><code>exceeds_debits</code></a></li>\n<li><a\nhref=\"#debit_account_already_closed\"><code>debit_account_already_closed</code></a></li>\n<li><a\nhref=\"#credit_account_already_closed\"><code>credit_account_already_closed</code></a></li>\n</ul>\n<p>Transient errors depend on the database state at a given point in\ntime, and each attempt is uniquely associated with the corresponding <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a>. This behavior\nguarantees that retrying a transfer will not produce a different outcome\n(either success or failure).</p>\n<p>Without this mechanism, a transfer that previously failed could\nsucceed if retried when the underlying state changes (e.g., the target\naccount has sufficient credits).</p>\n<p><strong>Note:</strong> The application should retry an event only if\nit was unable to acknowledge the last response (e.g., due to an\napplication restart) or because it is correcting a previously rejected\nmalformed request (e.g., due to an application bug). If the application\nintends to submit the transfer again even after a transient error, it\nmust generate a new <a\nhref=\"../../../coding/data-modeling#id\">idempotency id</a>.</p>\n<details>\n<summary>Client release &lt; 0.16.4</summary>\n\n<p>The <a href=\"../../transfer#id\"><code>id</code></a> is never checked\nagainst failed transfers, regardless of the error. Therefore, a transfer\nthat failed due to a transient error could succeed if retried later.</p>\n</details>\n\n<h3 id=\"flags_are_mutually_exclusive\"><a\nhref=\"#flags_are_mutually_exclusive\"\nclass=\"anchor\"><code>flags_are_mutually_exclusive</code></a></h3>\n<p>The transfer was not created. A transfer cannot be created with the\nspecified combination of <a\nhref=\"../../transfer#flags\"><code>Transfer.flags</code></a>.</p>\n<p>Flag compatibility (‚úì = compatible, ‚úó = mutually exclusive):</p>\n<ul>\n<li><a href=\"../../transfer#flagspending\"><code>flags.pending</code></a>\n<ul>\n<li>‚úó <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsclosing_debit\"><code>flags.closing_debit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsclosing_credit\"><code>flags.closing_credit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsimported\"><code>flags.imported</code></a></li>\n</ul></li>\n<li><a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a>\n<ul>\n<li>‚úó <a\nhref=\"../../transfer#flagspending\"><code>flags.pending</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagsclosing_debit\"><code>flags.closing_debit</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagsclosing_credit\"><code>flags.closing_credit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsimported\"><code>flags.imported</code></a></li>\n</ul></li>\n<li><a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a>\n<ul>\n<li>‚úó <a\nhref=\"../../transfer#flagspending\"><code>flags.pending</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagsclosing_debit\"><code>flags.closing_debit</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagsclosing_credit\"><code>flags.closing_credit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsimported\"><code>flags.imported</code></a></li>\n</ul></li>\n<li><a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a>\n<ul>\n<li>‚úì <a\nhref=\"../../transfer#flagspending\"><code>flags.pending</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsclosing_debit\"><code>flags.closing_debit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsclosing_credit\"><code>flags.closing_credit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsimported\"><code>flags.imported</code></a></li>\n</ul></li>\n<li><a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a>\n<ul>\n<li>‚úì <a\nhref=\"../../transfer#flagspending\"><code>flags.pending</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsclosing_debit\"><code>flags.closing_debit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsclosing_credit\"><code>flags.closing_credit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsimported\"><code>flags.imported</code></a></li>\n</ul></li>\n<li><a\nhref=\"../../transfer#flagsclosing_debit\"><code>flags.closing_debit</code></a>\n<ul>\n<li>‚úì <a\nhref=\"../../transfer#flagspending\"><code>flags.pending</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsclosing_credit\"><code>flags.closing_credit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsimported\"><code>flags.imported</code></a></li>\n</ul></li>\n<li><a\nhref=\"../../transfer#flagsclosing_credit\"><code>flags.closing_credit</code></a>\n<ul>\n<li>‚úì <a\nhref=\"../../transfer#flagspending\"><code>flags.pending</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a></li>\n<li>‚úó <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsclosing_debit\"><code>flags.closing_debit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsimported\"><code>flags.imported</code></a></li>\n</ul></li>\n<li><a\nhref=\"../../transfer#flagsimported\"><code>flags.imported</code></a>\n<ul>\n<li>‚úì <a\nhref=\"../../transfer#flagspending\"><code>flags.pending</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsclosing_debit\"><code>flags.closing_debit</code></a></li>\n<li>‚úì <a\nhref=\"../../transfer#flagsclosing_credit\"><code>flags.closing_credit</code></a></li>\n</ul></li>\n</ul>\n<h3 id=\"debit_account_id_must_not_be_zero\"><a\nhref=\"#debit_account_id_must_not_be_zero\"\nclass=\"anchor\"><code>debit_account_id_must_not_be_zero</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#debit_account_id\"><code>Transfer.debit_account_id</code></a>\nis zero, but must be a valid account id.</p>\n<h3 id=\"debit_account_id_must_not_be_int_max\"><a\nhref=\"#debit_account_id_must_not_be_int_max\"\nclass=\"anchor\"><code>debit_account_id_must_not_be_int_max</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#debit_account_id\"><code>Transfer.debit_account_id</code></a>\nis <code>2^128 - 1</code>, but must be a valid account id.</p>\n<h3 id=\"credit_account_id_must_not_be_zero\"><a\nhref=\"#credit_account_id_must_not_be_zero\"\nclass=\"anchor\"><code>credit_account_id_must_not_be_zero</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#credit_account_id\"><code>Transfer.credit_account_id</code></a>\nis zero, but must be a valid account id.</p>\n<h3 id=\"credit_account_id_must_not_be_int_max\"><a\nhref=\"#credit_account_id_must_not_be_int_max\"\nclass=\"anchor\"><code>credit_account_id_must_not_be_int_max</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#credit_account_id\"><code>Transfer.credit_account_id</code></a>\nis <code>2^128 - 1</code>, but must be a valid account id.</p>\n<h3 id=\"accounts_must_be_different\"><a\nhref=\"#accounts_must_be_different\"\nclass=\"anchor\"><code>accounts_must_be_different</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#debit_account_id\"><code>Transfer.debit_account_id</code></a>\nand <a\nhref=\"../../transfer#credit_account_id\"><code>Transfer.credit_account_id</code></a>\nmust not be equal.</p>\n<p>That is, an account cannot transfer money to itself.</p>\n<h3 id=\"pending_id_must_be_zero\"><a href=\"#pending_id_must_be_zero\"\nclass=\"anchor\"><code>pending_id_must_be_zero</code></a></h3>\n<p>The transfer was not created. Only post/void transfers can reference\na pending transfer.</p>\n<p>Either:</p>\n<ul>\n<li><a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>Transfer.flags.post_pending_transfer</code></a>\nmust be set, or</li>\n<li><a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>Transfer.flags.void_pending_transfer</code></a>\nmust be set, or</li>\n<li><a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a>\nmust be zero.</li>\n</ul>\n<h3 id=\"pending_id_must_not_be_zero\"><a\nhref=\"#pending_id_must_not_be_zero\"\nclass=\"anchor\"><code>pending_id_must_not_be_zero</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>Transfer.flags.post_pending_transfer</code></a>\nor <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>Transfer.flags.void_pending_transfer</code></a>\nis set, but <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a> is\nzero. A posting or voiding transfer must reference a <a\nhref=\"../../transfer#flagspending\"><code>pending</code></a>\ntransfer.</p>\n<h3 id=\"pending_id_must_not_be_int_max\"><a\nhref=\"#pending_id_must_not_be_int_max\"\nclass=\"anchor\"><code>pending_id_must_not_be_int_max</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a> is\n<code>2^128 - 1</code>, which is a reserved value.</p>\n<h3 id=\"pending_id_must_be_different\"><a\nhref=\"#pending_id_must_be_different\"\nclass=\"anchor\"><code>pending_id_must_be_different</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a> is\nset to the same id as <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a>. Instead it should\nrefer to a different (existing) transfer.</p>\n<h3 id=\"timeout_reserved_for_pending_transfer\"><a\nhref=\"#timeout_reserved_for_pending_transfer\"\nclass=\"anchor\"><code>timeout_reserved_for_pending_transfer</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#timeout\"><code>Transfer.timeout</code></a> is\nnonzero, but only <a href=\"../../transfer#flagspending\">pending</a>\ntransfers have nonzero timeouts.</p>\n<h3 id=\"closing_transfer_must_be_pending\"><a\nhref=\"#closing_transfer_must_be_pending\"\nclass=\"anchor\"><code>closing_transfer_must_be_pending</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#flagspending\"><code>Transfer.flags.pending</code></a>\nis not set, but closing transfers must be two-phase pending\ntransfers.</p>\n<p>If either <a\nhref=\"../../transfer#flagsclosing_debit\"><code>Transfer.flags.closing_debit</code></a>\nor <a\nhref=\"../../transfer#flagsclosing_credit\"><code>Transfer.flags.closing_credit</code></a>\nis set, <a\nhref=\"../../transfer#flagspending\"><code>Transfer.flags.pending</code></a>\nmust also be set.</p>\n<p>This ensures that closing transfers are reversible by <a\nhref=\"../../transfer#flagsvoid_pending_transfer\">voiding</a> the pending\ntransfer, and requires that the reversal operation references the\ncorresponding closing transfer, guarding against unexpected interleaving\nof close/unclose operations.</p>\n<h3 id=\"amount_must_not_be_zero\"><a href=\"#amount_must_not_be_zero\"\nclass=\"anchor\"><code>amount_must_not_be_zero</code></a></h3>\n<p><strong>Deprecated</strong>: This error code is only returned to\nclients prior to release <code>0.16.0</code>. Since <code>0.16.0</code>,\nzero-amount transfers are permitted.</p>\n<details>\n<summary>Client release &lt; 0.16.0</summary>\n\n<p>The transfer was not created. <a\nhref=\"../../transfer#amount\"><code>Transfer.amount</code></a> is zero,\nbut must be nonzero.</p>\n<p>Every transfer must move value. Only posting and voiding transfer\namounts may be zero ‚Äî when zero, they will move the full pending\namount.</p>\n</details>\n\n<h3 id=\"ledger_must_not_be_zero\"><a href=\"#ledger_must_not_be_zero\"\nclass=\"anchor\"><code>ledger_must_not_be_zero</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#ledger\"><code>Transfer.ledger</code></a> is zero,\nbut must be nonzero.</p>\n<h3 id=\"code_must_not_be_zero\"><a href=\"#code_must_not_be_zero\"\nclass=\"anchor\"><code>code_must_not_be_zero</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#code\"><code>Transfer.code</code></a> is zero, but\nmust be nonzero.</p>\n<h3 id=\"debit_account_not_found\"><a href=\"#debit_account_not_found\"\nclass=\"anchor\"><code>debit_account_not_found</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#debit_account_id\"><code>Transfer.debit_account_id</code></a>\nmust refer to an existing <code>Account</code>.</p>\n<p>This is a <a href=\"#id_already_failed\">transient error</a>. The <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> associated with\nthis particular attempt will always fail upon retry, even if the\nunderlying issue is resolved. To succeed, a new <a\nhref=\"../../../coding/data-modeling#id\">idempotency id</a> must be\nsubmitted.</p>\n<h3 id=\"credit_account_not_found\"><a href=\"#credit_account_not_found\"\nclass=\"anchor\"><code>credit_account_not_found</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#credit_account_id\"><code>Transfer.credit_account_id</code></a>\nmust refer to an existing <code>Account</code>.</p>\n<p>This is a <a href=\"#id_already_failed\">transient error</a>. The <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> associated with\nthis particular attempt will always fail upon retry, even if the\nunderlying issue is resolved. To succeed, a new <a\nhref=\"../../../coding/data-modeling#id\">idempotency id</a> must be\nsubmitted.</p>\n<h3 id=\"accounts_must_have_the_same_ledger\"><a\nhref=\"#accounts_must_have_the_same_ledger\"\nclass=\"anchor\"><code>accounts_must_have_the_same_ledger</code></a></h3>\n<p>The transfer was not created. The accounts referred to by <a\nhref=\"../../transfer#debit_account_id\"><code>Transfer.debit_account_id</code></a>\nand <a\nhref=\"../../transfer#credit_account_id\"><code>Transfer.credit_account_id</code></a>\nmust have an identical <a\nhref=\"../../account#ledger\"><code>ledger</code></a>.</p>\n<p><a href=\"../../../coding/recipes/currency-exchange\">Currency\nexchange</a> is implemented with multiple transfers.</p>\n<h3 id=\"transfer_must_have_the_same_ledger_as_accounts\"><a\nhref=\"#transfer_must_have_the_same_ledger_as_accounts\"\nclass=\"anchor\"><code>transfer_must_have_the_same_ledger_as_accounts</code></a></h3>\n<p>The transfer was not created. The accounts referred to by <a\nhref=\"../../transfer#debit_account_id\"><code>Transfer.debit_account_id</code></a>\nand <a\nhref=\"../../transfer#credit_account_id\"><code>Transfer.credit_account_id</code></a>\nare equivalent, but differ from the <a\nhref=\"../../transfer#ledger\"><code>Transfer.ledger</code></a>.</p>\n<h3 id=\"pending_transfer_not_found\"><a\nhref=\"#pending_transfer_not_found\"\nclass=\"anchor\"><code>pending_transfer_not_found</code></a></h3>\n<p>The transfer was not created. The transfer referenced by <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a>\ndoes not exist.</p>\n<p>This is a <a href=\"#id_already_failed\">transient error</a>. The <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> associated with\nthis particular attempt will always fail upon retry, even if the\nunderlying issue is resolved. To succeed, a new <a\nhref=\"../../../coding/data-modeling#id\">idempotency id</a> must be\nsubmitted.</p>\n<h3 id=\"pending_transfer_not_pending\"><a\nhref=\"#pending_transfer_not_pending\"\nclass=\"anchor\"><code>pending_transfer_not_pending</code></a></h3>\n<p>The transfer was not created. The transfer referenced by <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a>\nexists, but does not have <a\nhref=\"../../transfer#flagspending\"><code>flags.pending</code></a>\nset.</p>\n<h3 id=\"pending_transfer_has_different_debit_account_id\"><a\nhref=\"#pending_transfer_has_different_debit_account_id\"\nclass=\"anchor\"><code>pending_transfer_has_different_debit_account_id</code></a></h3>\n<p>The transfer was not created. The transfer referenced by <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a>\nexists, but with a different <a\nhref=\"../../transfer#debit_account_id\"><code>debit_account_id</code></a>.</p>\n<p>The post/void transfer‚Äôs <code>debit_account_id</code> must either be\n<code>0</code> or identical to the pending transfer‚Äôs\n<code>debit_account_id</code>.</p>\n<h3 id=\"pending_transfer_has_different_credit_account_id\"><a\nhref=\"#pending_transfer_has_different_credit_account_id\"\nclass=\"anchor\"><code>pending_transfer_has_different_credit_account_id</code></a></h3>\n<p>The transfer was not created. The transfer referenced by <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a>\nexists, but with a different <a\nhref=\"../../transfer#credit_account_id\"><code>credit_account_id</code></a>.</p>\n<p>The post/void transfer‚Äôs <code>credit_account_id</code> must either\nbe <code>0</code> or identical to the pending transfer‚Äôs\n<code>credit_account_id</code>.</p>\n<h3 id=\"pending_transfer_has_different_ledger\"><a\nhref=\"#pending_transfer_has_different_ledger\"\nclass=\"anchor\"><code>pending_transfer_has_different_ledger</code></a></h3>\n<p>The transfer was not created. The transfer referenced by <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a>\nexists, but with a different <a\nhref=\"../../transfer#ledger\"><code>ledger</code></a>.</p>\n<p>The post/void transfer‚Äôs <code>ledger</code> must either be\n<code>0</code> or identical to the pending transfer‚Äôs\n<code>ledger</code>.</p>\n<h3 id=\"pending_transfer_has_different_code\"><a\nhref=\"#pending_transfer_has_different_code\"\nclass=\"anchor\"><code>pending_transfer_has_different_code</code></a></h3>\n<p>The transfer was not created. The transfer referenced by <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a>\nexists, but with a different <a\nhref=\"../../transfer#code\"><code>code</code></a>.</p>\n<p>The post/void transfer‚Äôs <code>code</code> must either be\n<code>0</code> or identical to the pending transfer‚Äôs\n<code>code</code>.</p>\n<h3 id=\"exceeds_pending_transfer_amount\"><a\nhref=\"#exceeds_pending_transfer_amount\"\nclass=\"anchor\"><code>exceeds_pending_transfer_amount</code></a></h3>\n<p>The transfer was not created. The transfer‚Äôs <a\nhref=\"../../transfer#amount\"><code>amount</code></a> exceeds the\n<code>amount</code> of its <a\nhref=\"../../transfer#pending_id\">pending</a> transfer.</p>\n<h3 id=\"pending_transfer_has_different_amount\"><a\nhref=\"#pending_transfer_has_different_amount\"\nclass=\"anchor\"><code>pending_transfer_has_different_amount</code></a></h3>\n<p>The transfer was not created. The transfer is attempting to <a\nhref=\"../../transfer#flagsvoid_pending_transfer\">void</a> a pending\ntransfer. The voiding transfer‚Äôs <a\nhref=\"../../transfer#amount\"><code>amount</code></a> must be either\n<code>0</code> or exactly the <code>amount</code> of the pending\ntransfer.</p>\n<p>To partially void a transfer, create a <a\nhref=\"../../transfer#flagspost_pending_transfer\">posting transfer</a>\nwith an amount less than the pending transfer‚Äôs <code>amount</code>.</p>\n<details>\n<summary>Client release &lt; 0.16.0</summary>\n\n<p>To partially void a transfer, create a <a\nhref=\"../../transfer#flagspost_pending_transfer\">posting transfer</a>\nwith an amount between <code>0</code> and the pending transfer‚Äôs\n<code>amount</code>.</p>\n</details>\n\n<h3 id=\"pending_transfer_already_posted\"><a\nhref=\"#pending_transfer_already_posted\"\nclass=\"anchor\"><code>pending_transfer_already_posted</code></a></h3>\n<p>The transfer was not created. The referenced <a\nhref=\"../../transfer#pending_id\">pending</a> transfer was already posted\nby a <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>post_pending_transfer</code></a>.</p>\n<h3 id=\"pending_transfer_already_voided\"><a\nhref=\"#pending_transfer_already_voided\"\nclass=\"anchor\"><code>pending_transfer_already_voided</code></a></h3>\n<p>The transfer was not created. The referenced <a\nhref=\"../../transfer#pending_id\">pending</a> transfer was already voided\nby a <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>void_pending_transfer</code></a>.</p>\n<h3 id=\"pending_transfer_expired\"><a href=\"#pending_transfer_expired\"\nclass=\"anchor\"><code>pending_transfer_expired</code></a></h3>\n<p>The transfer was not created. The referenced <a\nhref=\"../../transfer#pending_id\">pending</a> transfer was already voided\nbecause its <a href=\"../../transfer#timeout\">timeout</a> has passed.</p>\n<h3 id=\"imported_event_timestamp_must_not_regress\"><a\nhref=\"#imported_event_timestamp_must_not_regress\"\nclass=\"anchor\"><code>imported_event_timestamp_must_not_regress</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nis set.</p>\n<p>The transfer was not created. The user-defined <a\nhref=\"../../transfer#timestamp\"><code>Transfer.timestamp</code></a>\nregressed, but it must be greater than the last timestamp assigned to\nany <code>Transfer</code> in the cluster and cannot be equal to the\ntimestamp of any existing <a\nhref=\"../../account\"><code>Account</code></a>.</p>\n<h3 id=\"imported_event_timestamp_must_postdate_debit_account\"><a\nhref=\"#imported_event_timestamp_must_postdate_debit_account\"\nclass=\"anchor\"><code>imported_event_timestamp_must_postdate_debit_account</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nis set.</p>\n<p>The transfer was not created. <a\nhref=\"../../transfer#debit_account_id\"><code>Transfer.debit_account_id</code></a>\nmust refer to an <code>Account</code> whose <a\nhref=\"../../account#timestamp\"><code>timestamp</code></a> is less than\nthe <a\nhref=\"../../transfer#timestamp\"><code>Transfer.timestamp</code></a>.</p>\n<h3 id=\"imported_event_timestamp_must_postdate_credit_account\"><a\nhref=\"#imported_event_timestamp_must_postdate_credit_account\"\nclass=\"anchor\"><code>imported_event_timestamp_must_postdate_credit_account</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nis set.</p>\n<p>The transfer was not created. <a\nhref=\"../../transfer#credit_account_id\"><code>Transfer.credit_account_id</code></a>\nmust refer to an <code>Account</code> whose <a\nhref=\"../../account#timestamp\"><code>timestamp</code></a> is less than\nthe <a\nhref=\"../../transfer#timestamp\"><code>Transfer.timestamp</code></a>.</p>\n<h3 id=\"imported_event_timeout_must_be_zero\"><a\nhref=\"#imported_event_timeout_must_be_zero\"\nclass=\"anchor\"><code>imported_event_timeout_must_be_zero</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nis set.</p>\n<p>The transfer was not created. The <a\nhref=\"../../transfer#timeout\"><code>Transfer.timeout</code></a> is\nnonzero, but must be zero.</p>\n<p>It‚Äôs possible to import <a\nhref=\"../../transfer#flagspending\">pending</a> transfers with a\nuser-defined timestamp, but since it‚Äôs not driven by the cluster clock,\nit cannot define a timeout for automatic expiration. In those cases, the\n<a href=\"../../../coding/two-phase-transfers\">two-phase post or\nrollback</a> must be done manually.</p>\n<h3 id=\"debit_account_already_closed\"><a\nhref=\"#debit_account_already_closed\"\nclass=\"anchor\"><code>debit_account_already_closed</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#debit_account_id\"><code>Transfer.debit_account_id</code></a>\nmust refer to an <code>Account</code> whose <a\nhref=\"../../account#flagsclosed\"><code>Account.flags.closed</code></a>\nis not already set.</p>\n<p>This is a <a href=\"#id_already_failed\">transient error</a>. The <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> associated with\nthis particular attempt will always fail upon retry, even if the\nunderlying issue is resolved. To succeed, a new <a\nhref=\"../../../coding/data-modeling#id\">idempotency id</a> must be\nsubmitted.</p>\n<h3 id=\"credit_account_already_closed\"><a\nhref=\"#credit_account_already_closed\"\nclass=\"anchor\"><code>credit_account_already_closed</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#credit_account_id\"><code>Transfer.credit_account_id</code></a>\nmust refer to an <code>Account</code> whose <a\nhref=\"../../account#flagsclosed\"><code>Account.flags.closed</code></a>\nis not already set.</p>\n<p>This is a <a href=\"#id_already_failed\">transient error</a>. The <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> associated with\nthis particular attempt will always fail upon retry, even if the\nunderlying issue is resolved. To succeed, a new <a\nhref=\"../../../coding/data-modeling#id\">idempotency id</a> must be\nsubmitted.</p>\n<h3 id=\"overflows_debits_pending\"><a href=\"#overflows_debits_pending\"\nclass=\"anchor\"><code>overflows_debits_pending</code></a></h3>\n<p>The transfer was not created.\n<code>debit_account.debits_pending + transfer.amount</code> would\noverflow a 128-bit unsigned integer.</p>\n<h3 id=\"overflows_credits_pending\"><a href=\"#overflows_credits_pending\"\nclass=\"anchor\"><code>overflows_credits_pending</code></a></h3>\n<p>The transfer was not created.\n<code>credit_account.credits_pending + transfer.amount</code> would\noverflow a 128-bit unsigned integer.</p>\n<h3 id=\"overflows_debits_posted\"><a href=\"#overflows_debits_posted\"\nclass=\"anchor\"><code>overflows_debits_posted</code></a></h3>\n<p>The transfer was not created.\n<code>debit_account.debits_posted + transfer.amount</code> would\noverflow a 128-bit unsigned integer.</p>\n<h3 id=\"overflows_credits_posted\"><a href=\"#overflows_credits_posted\"\nclass=\"anchor\"><code>overflows_credits_posted</code></a></h3>\n<p>The transfer was not created.\n<code>debit_account.credits_posted + transfer.amount</code> would\noverflow a 128-bit unsigned integer.</p>\n<h3 id=\"overflows_debits\"><a href=\"#overflows_debits\"\nclass=\"anchor\"><code>overflows_debits</code></a></h3>\n<p>The transfer was not created.\n<code>debit_account.debits_pending + debit_account.debits_posted + transfer.amount</code>\nwould overflow a 128-bit unsigned integer.</p>\n<h3 id=\"overflows_credits\"><a href=\"#overflows_credits\"\nclass=\"anchor\"><code>overflows_credits</code></a></h3>\n<p>The transfer was not created.\n<code>credit_account.credits_pending + credit_account.credits_posted + transfer.amount</code>\nwould overflow a 128-bit unsigned integer.</p>\n<h3 id=\"overflows_timeout\"><a href=\"#overflows_timeout\"\nclass=\"anchor\"><code>overflows_timeout</code></a></h3>\n<p>The transfer was not created.\n<code>transfer.timestamp + (transfer.timeout * 1_000_000_000)</code>\nwould exceed <code>2^63</code>.</p>\n<p><a href=\"../../transfer#timeout\"><code>Transfer.timeout</code></a> is\nconverted to nanoseconds.</p>\n<p>This computation uses the <a\nhref=\"../../transfer#timestamp\"><code>Transfer.timestamp</code></a>\nvalue assigned by the replica, not the <code>0</code> value sent by the\nclient.</p>\n<h3 id=\"exceeds_credits\"><a href=\"#exceeds_credits\"\nclass=\"anchor\"><code>exceeds_credits</code></a></h3>\n<p>The transfer was not created.</p>\n<p>The <a href=\"../../transfer#debit_account_id\">debit account</a> has\n<a\nhref=\"../../account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>\nset, but\n<code>debit_account.debits_pending + debit_account.debits_posted + transfer.amount</code>\nwould exceed <code>debit_account.credits_posted</code>.</p>\n<p>This is a <a href=\"#id_already_failed\">transient error</a>. The <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> associated with\nthis particular attempt will always fail upon retry, even if the\nunderlying issue is resolved. To succeed, a new <a\nhref=\"../../../coding/data-modeling#id\">idempotency id</a> must be\nsubmitted.</p>\n<details>\n<summary>Client release &lt; 0.16.0</summary>\n\n<p>If <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a>\nis set, then\n<code>debit_account.debits_pending + debit_account.debits_posted + 1</code>\nwould exceed <code>debit_account.credits_posted</code>.</p>\n</details>\n\n<h3 id=\"exceeds_debits\"><a href=\"#exceeds_debits\"\nclass=\"anchor\"><code>exceeds_debits</code></a></h3>\n<p>The transfer was not created.</p>\n<p>The <a href=\"../../transfer#credit_account_id\">credit account</a> has\n<a\nhref=\"../../account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>\nset, but\n<code>credit_account.credits_pending + credit_account.credits_posted + transfer.amount</code>\nwould exceed <code>credit_account.debits_posted</code>.</p>\n<p>This is a <a href=\"#id_already_failed\">transient error</a>. The <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> associated with\nthis particular attempt will always fail upon retry, even if the\nunderlying issue is resolved. To succeed, a new <a\nhref=\"../../../coding/data-modeling#id\">idempotency id</a> must be\nsubmitted.</p>\n<details>\n<summary>Client release &lt; 0.16.0</summary>\n\n<p>If <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a>\nis set, then\n<code>credit_account.credits_pending + credit_account.credits_posted + 1</code>\nwould exceed <code>credit_account.debits_posted</code>.</p>\n</details>\n\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>For language-specific docs see:</p>\n<ul>\n<li><a href=\"/clients/dotnet/#create-transfers\">.NET library</a></li>\n<li><a href=\"/clients/java/#create-transfers\">Java library</a></li>\n<li><a href=\"/clients/go/#create-transfers\">Go library</a></li>\n<li><a href=\"/clients/node/#create-transfers\">Node.js library</a></li>\n<li><a href=\"/clients/python/#create-transfers\">Python library</a></li>\n</ul>\n<h2 id=\"internals\"><a href=\"#internals\"\nclass=\"anchor\">Internals</a></h2>\n<p>If you‚Äôre curious and want to learn more, you can find the source\ncode for creating a transfer in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/state_machine.zig\">src/state_machine.zig</a>.\nSearch for <code>fn create_transfer(</code> and\n<code>fn execute(</code>.</p>\n"},{"path":"reference/requests/get_account_balances","html":"<h1 id=\"get_account_balances\"><a href=\"#get_account_balances\"\nclass=\"anchor\"><code>get_account_balances</code></a></h1>\n<p>Fetch the historical <a\nhref=\"../../account-balance\"><code>AccountBalance</code></a>s of a given\n<a href=\"../../account\"><code>Account</code></a>.</p>\n<p><strong>Only accounts created with the <a\nhref=\"../../account#flagshistory\"><code>history</code></a> flag set\nretain historical balances.</strong> This is off by default.</p>\n<ul>\n<li><p>Each balance returned has a corresponding transfer with the same\n<a href=\"../../transfer#timestamp\"><code>timestamp</code></a>. See the\n<a\nhref=\"../get_account_transfers\"><code>get_account_transfers</code></a>\noperation for more details.</p></li>\n<li><p>The amounts refer to the account balance recorded <em>after</em>\nthe transfer execution.</p></li>\n<li><p><a href=\"../../transfer#flagspending\">Pending</a> balances\nautomatically removed due to <a\nhref=\"../../transfer#timeout\">timeout</a> expiration don‚Äôt change\nhistorical balances.</p></li>\n</ul>\n<h2 id=\"event\"><a href=\"#event\" class=\"anchor\">Event</a></h2>\n<p>The account filter. See <a\nhref=\"../../account-filter\"><code>AccountFilter</code></a> for\nconstraints.</p>\n<h2 id=\"result\"><a href=\"#result\" class=\"anchor\">Result</a></h2>\n<ul>\n<li>If the account has the flag <a\nhref=\"../../account#flagshistory\"><code>history</code></a> set and any\nmatching balances exist, return an array of <a\nhref=\"../../account-balance\"><code>AccountBalance</code></a>s.</li>\n<li>If the account does not have the flag <a\nhref=\"../../account#flagshistory\"><code>history</code></a> set, return\nnothing.</li>\n<li>If no matching balances exist, return nothing.</li>\n<li>If any constraint is violated, return nothing.</li>\n</ul>\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>For language-specific docs see:</p>\n<ul>\n<li><a href=\"/clients/dotnet/#get-account-balances\">.NET\nlibrary</a></li>\n<li><a href=\"/clients/java/#get-account-balances\">Java library</a></li>\n<li><a href=\"/clients/go/#get-account-balances\">Go library</a></li>\n<li><a href=\"/clients/node/#get-account-balances\">Node.js\nlibrary</a></li>\n<li><a href=\"/clients/python/#get-account-balances\">Python\nlibrary</a></li>\n</ul>\n"},{"path":"reference/requests/get_account_transfers","html":"<h1 id=\"get_account_transfers\"><a href=\"#get_account_transfers\"\nclass=\"anchor\"><code>get_account_transfers</code></a></h1>\n<p>Fetch <a href=\"../../transfer\"><code>Transfer</code></a>s involving a\ngiven <a href=\"../../account\"><code>Account</code></a>.</p>\n<h2 id=\"event\"><a href=\"#event\" class=\"anchor\">Event</a></h2>\n<p>The account filter. See <a\nhref=\"../../account-filter\"><code>AccountFilter</code></a> for\nconstraints.</p>\n<h2 id=\"result\"><a href=\"#result\" class=\"anchor\">Result</a></h2>\n<ul>\n<li>Return a (possibly empty) array of <a\nhref=\"../../transfer\"><code>Transfer</code></a>s that match the\nfilter.</li>\n<li>If any constraint is violated, return nothing.</li>\n<li>By default, <code>Transfer</code>s are sorted chronologically by\n<code>timestamp</code>. You can use the <a\nhref=\"../../account-filter#flagsreversed\"><code>reversed</code></a> to\nchange this.</li>\n<li>The result is always limited in size. If there are more results, you\nneed to page through them using the <code>AccountFilter</code>‚Äôs <a\nhref=\"../../account-filter#timestamp_min\"><code>timestamp_min</code></a>\nand/or <a\nhref=\"../../account-filter#timestamp_max\"><code>timestamp_max</code></a>.</li>\n</ul>\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>For language-specific docs see:</p>\n<ul>\n<li><a href=\"/clients/dotnet/#get-account-transfers\">.NET\nlibrary</a></li>\n<li><a href=\"/clients/java/#get-account-transfers\">Java library</a></li>\n<li><a href=\"/clients/go/#get-account-transfers\">Go library</a></li>\n<li><a href=\"/clients/node/#get-account-transfers\">Node.js\nlibrary</a></li>\n<li><a href=\"/clients/python/#get-account-transfers\">Python\nlibrary</a></li>\n</ul>\n"},{"path":"reference/requests/lookup_accounts","html":"<h1 id=\"lookup_accounts\"><a href=\"#lookup_accounts\"\nclass=\"anchor\"><code>lookup_accounts</code></a></h1>\n<p>Fetch one or more accounts by their <code>id</code>s.</p>\n<p>‚ö†Ô∏è Note that you <strong>should not</strong> check an account‚Äôs\nbalance using this request before creating a transfer. That would not be\natomic and the balance could change in between the check and the\ntransfer. Instead, set the <a\nhref=\"../../account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a>\nor <a\nhref=\"../../account#flagscredits_must_not_exceed_debits\"><code>credits_must_not_exceed_debits</code></a>\nflag on the accounts to limit their account balances. More complex\nconditional transfers can be expressed using <a\nhref=\"../../../coding/recipes/balance-conditional-transfers\">balance-conditional\ntransfers</a>.</p>\n<p>‚ö†Ô∏è It is not possible currently to look up more than a full batch\n(8190) of accounts atomically. When issuing multiple\n<code>lookup_accounts</code> calls, it can happen that other operations\nwill interleave between the calls leading to read skew. Consider using\nthe <a href=\"../../account#flagshistory\"><code>history</code></a> flag\nto enable atomic lookups.</p>\n<h2 id=\"event\"><a href=\"#event\" class=\"anchor\">Event</a></h2>\n<p>An <a href=\"../../account#id\"><code>id</code></a> belonging to a <a\nhref=\"../../account\"><code>Account</code></a>.</p>\n<h2 id=\"result\"><a href=\"#result\" class=\"anchor\">Result</a></h2>\n<ul>\n<li>If the account exists, return the <a\nhref=\"../../account\"><code>Account</code></a>.</li>\n<li>If the account does not exist, return nothing.</li>\n</ul>\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>For language-specific docs see:</p>\n<ul>\n<li><a href=\"/clients/dotnet/#account-lookup\">.NET library</a></li>\n<li><a href=\"/clients/java/#account-lookup\">Java library</a></li>\n<li><a href=\"/clients/go/#account-lookup\">Go library</a></li>\n<li><a href=\"/clients/node/#account-lookup\">Node.js library</a></li>\n</ul>\n<h2 id=\"internals\"><a href=\"#internals\"\nclass=\"anchor\">Internals</a></h2>\n<p>If you‚Äôre curious and want to learn more, you can find the source\ncode for looking up an account in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/state_machine.zig\">src/state_machine.zig</a>.\nSearch for <code>fn execute_lookup_accounts(</code>.</p>\n"},{"path":"reference/requests/lookup_transfers","html":"<h1 id=\"lookup_transfers\"><a href=\"#lookup_transfers\"\nclass=\"anchor\"><code>lookup_transfers</code></a></h1>\n<p>Fetch one or more transfers by their <code>id</code>s.</p>\n<h2 id=\"event\"><a href=\"#event\" class=\"anchor\">Event</a></h2>\n<p>An <a href=\"../../transfer#id\"><code>id</code></a> belonging to a <a\nhref=\"../../transfer\"><code>Transfer</code></a>.</p>\n<h2 id=\"result\"><a href=\"#result\" class=\"anchor\">Result</a></h2>\n<ul>\n<li>If the transfer exists, return the <a\nhref=\"../../transfer\"><code>Transfer</code></a>.</li>\n<li>If the transfer does not exist, return nothing.</li>\n</ul>\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>For language-specific docs see:</p>\n<ul>\n<li><a href=\"/clients/dotnet/#transfer-lookup\">.NET library</a></li>\n<li><a href=\"/clients/java/#transfer-lookup\">Java library</a></li>\n<li><a href=\"/clients/go/#transfer-lookup\">Go library</a></li>\n<li><a href=\"/clients/node/#transfer-lookup\">Node.js library</a></li>\n</ul>\n<h2 id=\"internals\"><a href=\"#internals\"\nclass=\"anchor\">Internals</a></h2>\n<p>If you‚Äôre curious and want to learn more, you can find the source\ncode for looking up a transfer in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/state_machine.zig\">src/state_machine.zig</a>.\nSearch for <code>fn execute_lookup_transfers(</code>.</p>\n"},{"path":"reference/requests/query_accounts","html":"<h1 id=\"query_accounts\"><a href=\"#query_accounts\"\nclass=\"anchor\"><code>query_accounts</code></a></h1>\n<p>Query <a href=\"../../account\"><code>Account</code></a>s by the\nintersection of some fields and by timestamp range.</p>\n<p>‚ö†Ô∏è It is not possible currently to query more than a full batch\n(8190) of accounts atomically. When issuing multiple\n<code>query_accounts</code> calls, it can happen that other operations\nwill interleave between the calls leading to read skew. Consider using\nthe <a href=\"../../account#flagshistory\"><code>history</code></a> flag\nto enable atomic lookups.</p>\n<h2 id=\"event\"><a href=\"#event\" class=\"anchor\">Event</a></h2>\n<p>The query filter. See <a\nhref=\"../../query-filter\"><code>QueryFilter</code></a> for\nconstraints.</p>\n<h2 id=\"result\"><a href=\"#result\" class=\"anchor\">Result</a></h2>\n<ul>\n<li>Return a (possibly empty) array of <a\nhref=\"../../account\"><code>Account</code></a>s that match the\nfilter.</li>\n<li>If any constraint is violated, return nothing.</li>\n<li>By default, <code>Account</code>s are sorted chronologically by\n<code>timestamp</code>. You can use the <a\nhref=\"../../query-filter#flagsreversed\"><code>reversed</code></a> to\nchange this.</li>\n<li>The result is always limited in size. If there are more results, you\nneed to page through them using the <code>QueryFilter</code>‚Äôs <a\nhref=\"../../query-filter#timestamp_min\"><code>timestamp_min</code></a>\nand/or <a\nhref=\"../../query-filter#timestamp_max\"><code>timestamp_max</code></a>.</li>\n</ul>\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>For language-specific docs see:</p>\n<ul>\n<li><a href=\"/clients/dotnet/#query-accounts\">.NET library</a></li>\n<li><a href=\"/clients/java/#query-accounts\">Java library</a></li>\n<li><a href=\"/clients/go/#query-accounts\">Go library</a></li>\n<li><a href=\"/clients/node/#query-accounts\">Node.js library</a></li>\n<li><a href=\"/clients/python/#query-accounts\">Python library</a></li>\n</ul>\n"},{"path":"reference/requests/query_transfers","html":"<h1 id=\"query_transfers\"><a href=\"#query_transfers\"\nclass=\"anchor\"><code>query_transfers</code></a></h1>\n<p>Query <a href=\"../../transfer\"><code>Transfer</code></a>s by the\nintersection of some fields and by timestamp range.</p>\n<h2 id=\"event\"><a href=\"#event\" class=\"anchor\">Event</a></h2>\n<p>The query filter. See <a\nhref=\"../../query-filter\"><code>QueryFilter</code></a> for\nconstraints.</p>\n<h2 id=\"result\"><a href=\"#result\" class=\"anchor\">Result</a></h2>\n<ul>\n<li>Return a (possibly empty) array of <a\nhref=\"../../transfer\"><code>Transfer</code></a>s that match the\nfilter.</li>\n<li>If any constraint is violated, return nothing.</li>\n<li>By default, <code>Transfer</code>s are sorted chronologically by\n<code>timestamp</code>. You can use the <a\nhref=\"../../query-filter#flagsreversed\"><code>reversed</code></a> to\nchange this.</li>\n<li>The result is always limited in size. If there are more results, you\nneed to page through them using the <code>QueryFilter</code>‚Äôs <a\nhref=\"../../query-filter#timestamp_min\"><code>timestamp_min</code></a>\nand/or <a\nhref=\"../../query-filter#timestamp_max\"><code>timestamp_max</code></a>.</li>\n</ul>\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>For language-specific docs see:</p>\n<ul>\n<li><a href=\"/clients/dotnet/#query-transfers\">.NET library</a></li>\n<li><a href=\"/clients/java/#query-transfers\">Java library</a></li>\n<li><a href=\"/clients/go/#query-transfers\">Go library</a></li>\n<li><a href=\"/clients/node/#query-transfers\">Node.js library</a></li>\n<li><a href=\"/clients/python/#query-transfers\">Python library</a></li>\n</ul>\n"},{"path":"reference/sessions","html":"<h1 id=\"client-sessions\"><a href=\"#client-sessions\"\nclass=\"anchor\">Client Sessions</a></h1>\n<p>A <em>client session</em> is a sequence of <a\nhref=\"../requests/\">requests</a> and replies sent between a client and a\ncluster.</p>\n<p>A client session may have <strong>at most one in-flight\nrequest</strong> ‚Äî i.e. at most one unique request on the network for\nwhich a reply has not been received. This simplifies consistency and\nallows the cluster to statically guarantee capacity in its incoming\nmessage queue. Additional requests from the application are queued by\nthe client, to be dequeued and sent when their preceding request\nreceives a reply.</p>\n<p>Similar to other databases, TigerBeetle has a <a\nhref=\"#eviction\">hard limit</a> on the number of concurrent client\nsessions. To maximize throughput, users are encouraged to minimize the\nnumber of concurrent clients and <a\nhref=\"../requests/#batching-events\">batch</a> as many events as possible\nper request.</p>\n<h2 id=\"lifecycle\"><a href=\"#lifecycle\"\nclass=\"anchor\">Lifecycle</a></h2>\n<p>A client session begins when a client registers itself with the\ncluster.</p>\n<ul>\n<li>Each client session has a unique identifier (‚Äúclient id‚Äù) ‚Äî an\nephemeral random 128-bit id.</li>\n<li>The client sends a special ‚Äúregister‚Äù message which is committed by\nthe cluster, at which point the client is ‚Äúregistered‚Äù ‚Äî once it\nreceives the reply, it may begin sending requests.</li>\n<li>Client registration is handled automatically by the TigerBeetle\nclient implementation when the client is initialized, before it sends\nits first request.</li>\n<li>When a client restarts (for example, the application service running\nthe TigerBeetle client is restarted) it does not resume its old session\n‚Äî it starts a new session, with a new (random) client id.</li>\n</ul>\n<p>A client session ends when either:</p>\n<ul>\n<li>the client session is <a href=\"#eviction\">evicted</a>, or</li>\n<li>the client terminates</li>\n</ul>\n<p>‚Äî whichever occurs first.</p>\n<h2 id=\"eviction\"><a href=\"#eviction\" class=\"anchor\">Eviction</a></h2>\n<p>When a client session is registering and the number of active\nsessions in the cluster is already at the cluster‚Äôs concurrent client\nsession <a\nhref=\"https://tigerbeetle.com/blog/2022-10-12-a-database-without-dynamic-memory\">limit</a>\n(<code>config.clients_max</code>, 64 by default), an existing client\nsession must be evicted to make space for the new session.</p>\n<ul>\n<li>After a session is evicted by the cluster, no future requests from\nthat session will ever execute.</li>\n<li>The evicted session is chosen as the session that committed a\nrequest the longest time ago.</li>\n</ul>\n<p>The cluster sends a message to notify the evicted session that it has\nended. Typically the evicted client is no longer active (already\nterminated), but if it is active, the eviction message causes it to\nself-terminate, bubbling up to the application as an\n<code>session evicted</code> error.</p>\n<p>If active clients are terminating with <code>session evicted</code>\nerrors, it most likely indicates that the application is trying to run\ntoo many concurrent clients. For performance reasons, it is recommended\nto <a href=\"../requests/#batching-events\">batch</a> as many events as\npossible into each request sent by each client.</p>\n<h2 id=\"retries\"><a href=\"#retries\" class=\"anchor\">Retries</a></h2>\n<p>A client session will automatically retry a request until either:</p>\n<ul>\n<li>the client receives a corresponding reply from the cluster, or</li>\n<li>the client is terminated.</li>\n</ul>\n<p>Unlike most database or RPC clients:</p>\n<ul>\n<li>the TigerBeetle client will never time out</li>\n<li>the TigerBeetle client has no retry limits</li>\n<li>the TigerBeetle client does not surface network errors</li>\n</ul>\n<p>With TigerBeetle‚Äôs strict consistency model, surfacing these errors\nat the client/application level would be misleading. An error would\nimply that a request did not execute, when that is not known:</p>\n<ul>\n<li>A request delayed by the network could execute after its\ntimeout.</li>\n<li>A reply delayed by the network could execute before its\ntimeout.</li>\n</ul>\n<h2 id=\"guarantees\"><a href=\"#guarantees\"\nclass=\"anchor\">Guarantees</a></h2>\n<ul>\n<li>A client session may have at most one in-flight <a\nhref=\"../requests/\">request</a>.</li>\n<li>A client session <a\nhref=\"https://jepsen.io/consistency/models/read-your-writes\">reads its\nown writes</a>, meaning that read operations that happen after a given\nwrite operation will observe the effects of the write.</li>\n<li>A client session observes writes in the order that they occur on the\ncluster.</li>\n<li>A client session observes <a\nhref=\"../account#debits_posted\"><code>debits_posted</code></a> and <a\nhref=\"../account#credits_posted\"><code>credits_posted</code></a> as\nmonotonically increasing. That is, a client session will never see\n<code>credits_posted</code> or <code>debits_posted</code> decrease.</li>\n<li>A client session never observes uncommitted updates.</li>\n<li>A client session never observes a broken invariant (e.g. <a\nhref=\"../account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>\nor <a\nhref=\"../transfer#flagslinked\"><code>flags.linked</code></a>).</li>\n<li>Multiple client sessions may receive replies out of order relative\nto one another. For example, if two clients submit requests around the\nsame time, the client whose request is committed first might receive the\nreply later.</li>\n<li>A client session can consider a request executed when it receives a\nreply for the request.</li>\n<li>If a client session is terminated and restarts, it is guaranteed to\nsee the effects of updates for which the corresponding reply was\nreceived prior to termination.</li>\n<li>If a client session is terminated and restarts, it is <em>not</em>\nguaranteed to see the effects of updates for which the corresponding\nreply was <em>not</em> received prior to the restart. Those updates may\noccur at any point in the future, or never. Handling application crash\nrecovery safely requires <a\nhref=\"../../coding/reliable-transaction-submission\">using\n<code>id</code>s to idempotently retry events</a>.</li>\n</ul>\n"},{"path":"about","html":"<h1 id=\"about-tigerbeetle\"><a href=\"#about-tigerbeetle\"\nclass=\"anchor\">About TigerBeetle</a></h1>\n<h2 id=\"mission\"><a href=\"#mission\" class=\"anchor\">Mission</a></h2>\n<p><strong>We want to make it easy for others to build the next\ngeneration of financial services and applications without having to\ncobble together an accounting or ledger system of record from\nscratch.</strong></p>\n<p>TigerBeetle implements the latest research and technology to deliver\nunprecedented <a href=\"./safety\">safety, durability</a> and <a\nhref=\"./performance\">performance</a> while reducing operational costs by\norders of magnitude and providing a fantastic developer experience.</p>\n<h2 id=\"what-is-a-tiger-beetle\"><a href=\"#what-is-a-tiger-beetle\"\nclass=\"anchor\">What Is A Tiger Beetle?</a></h2>\n<p>Two things got us interested in tiger beetles as a species:</p>\n<ol type=\"1\">\n<li><p>Tiger beetles are ridiculously fast‚Ä¶ a tiger beetle can run at a\nspeed of 9 km/h, about 125 body lengths per second. That‚Äôs 20 times\nfaster than an Olympic sprinter when you scale speed to body length,\n<strong>a fantastic speed-to-size ratio</strong>. To put this in\nperspective, a human would need to run at 480 miles per hour to keep\nup.</p></li>\n<li><p>Tiger beetles thrive in different environments, from trees and\nwoodland paths, to sea and lake shores, with the largest of tiger\nbeetles living primarily in the dry regions of Southern Africa‚Ä¶ and\nthat‚Äôs what we want for TigerBeetle, <strong>something that‚Äôs fast and\nsafe to deploy everywhere</strong>.</p></li>\n</ol>\n<h2 id=\"history\"><a href=\"#history\" class=\"anchor\">History</a></h2>\n<h3 id=\"the-problem---realtime-processing-of-balance-updates\"><a\nhref=\"#the-problem---realtime-processing-of-balance-updates\"\nclass=\"anchor\">The Problem - Realtime Processing of Balance\nUpdates</a></h3>\n<p>Processing events that impact the balance of an account must be done\nserially, in the correct order and reliably. For this reason, despite\nthe trend to scale modern applications by distributing work across\nparallel threads/processes/machines, it remains difficult to scale a\nledger or accounting system without sacrificing performance or\nsafety.</p>\n<p>For example, processing a balance update event involves:</p>\n<ol type=\"1\">\n<li>validating the event,</li>\n<li>processing any business rules that must consider the current balance\nbefore processing the event and the new balance after the event,</li>\n<li>updating the balance</li>\n<li>persisting the updated balance, and</li>\n<li>notifying subscribers of the updated balance and that the event has\nbeen processed.</li>\n</ol>\n<p>While investigating a few existing systems it became clear that the\nmajority of architectures cobble together generic databases (relational\nor NoSQL, on-disk or in-memory) with business logic enforced in the\napplication code. This separation between data and code, persistence and\nlogic, invites the worst of distributed system problems: network delays,\nmultiple roundtrips for a single balance update, clock skew, or cache\nincoherency etc.</p>\n<p>Furthermore, these systems may achieve performance but at the expense\nof reliability, especially in the face of hardware failure, corruption\nand misdirected writes, a compromise that is unacceptable for a\nsystem-of-record for financial accounts.</p>\n<h3 id=\"the-solution---a-purpose-built-financial-accounting-database\"><a\nhref=\"#the-solution---a-purpose-built-financial-accounting-database\"\nclass=\"anchor\">The Solution - A Purpose-Built Financial Accounting\nDatabase</a></h3>\n<p>Our survey led us to conclude that, while there are mechanisms\navailable to shard account balances to parallelize updates and improve\nperformance, there are still significant performance gains to be had in\ndesigning a database that is purpose built for storing balances and\nprocessing updates in a reliable manner.</p>\n<h3 id=\"protobeetle---400000-transfers-per-second\"><a\nhref=\"#protobeetle---400000-transfers-per-second\"\nclass=\"anchor\">ProtoBeetle - 400,000 Transfers per Second</a></h3>\n<p>In the month of July 2020, we developed a prototype of TigerBeetle in\nNode as a performance sketch to measure the basic components of the\ndesign (batching, TCP protocol, checksums everywhere, fsync journalling,\nin-memory business logic and hash table operations). <strong>ProtoBeetle\nran at 200,000 two-phase transfers per second on our office\nlaptops</strong>, supporting our back-of-the-envelope numbers.</p>\n<p>We then integrated ProtoBeetle into <a\nhref=\"https://mojaloop.io/\">Mojaloop</a> and our reference minimum\ndeployment cluster of <strong>Mojaloop went from 76 TPS on MySQL to 1757\nTPS on ProtoBeetle</strong>. A single stateless Mojaloop pod was unable\nto saturate ProtoBeetle. Most of the throughput was spent converting\nMojaloop‚Äôs individual HTTP requests into TCP batches.</p>\n<p><strong><a href=\"https://youtu.be/QOC6PHFPtAM?t=324\">Watch a\n10-minute talk introducing ProtoBeetle.</a></strong></p>\n<h3 id=\"alphabeetle---800000-transfers-per-second\"><a\nhref=\"#alphabeetle---800000-transfers-per-second\"\nclass=\"anchor\">AlphaBeetle - 800,000 Transfers per Second</a></h3>\n<p>After ProtoBeetle, from September through October 2020, we knuckled\ndown and rewrote TigerBeetle in C/Zig to create the alpha version of\nTigerBeetle, using <a href=\"https://kernel.dk/io_uring.pdf\">io_uring</a>\nas a foundation for fast I/O.</p>\n<p>TigerBeetle‚Äôs Zig implementation of io_uring was <a\nhref=\"https://github.com/ziglang/zig/pull/6356\">submitted</a> for\naddition to the Zig standard library.</p>\n<p><strong><a href=\"https://www.youtube.com/watch?v=J1OaBRTV2vs\">Watch a\npresentation of TigerBeetle given to the Interledger community on 25\nNovember 2020.</a></strong></p>\n<h3 id=\"betabeetle---high-availability\"><a\nhref=\"#betabeetle---high-availability\" class=\"anchor\">BetaBeetle - High\nAvailability</a></h3>\n<p>BetaBeetle, the beta distributed version of TigerBeetle, was\ndeveloped from January 2021 through August 2021, for strict\nserializability, fault tolerance and automated leader election with the\npioneering <a\nhref=\"https://pmg.csail.mit.edu/papers/vr-revisited.pdf\">Viewstamped\nReplication</a> and consensus protocol, plus the CTRL protocol from <a\nhref=\"https://www.youtube.com/watch?v=fDY6Wi0GcPs\">Protocol-Aware\nRecovery for Consensus-Based Storage</a>.</p>\n<h3 id=\"tigerbeetle---into-production\"><a\nhref=\"#tigerbeetle---into-production\" class=\"anchor\">TigerBeetle - Into\nProduction</a></h3>\n<p>TigerBeetle is <a href=\"./production-ready\">production-ready</a>.</p>\n<h2 id=\"references\"><a href=\"#references\"\nclass=\"anchor\">References</a></h2>\n<p>The collection of papers behind TigerBeetle:</p>\n<ul>\n<li><p><a href=\"https://www.infoq.com/presentations/LMAX/\">LMAX - How to\nDo 100K TPS at Less than 1ms Latency - 2010</a> - Martin Thompson on\nmechanical sympathy and why a relational database is not the right\nsolution.</p></li>\n<li><p><a\nhref=\"https://web.archive.org/web/20230403112934/https://skillsmatter.com/skillscasts/5247-the-lmax-exchange-architecture-high-throughput-low-latency-and-plain-old-java\">The\nLMAX Exchange Architecture - High Throughput, Low Latency and Plain Old\nJava - 2014</a></p>\n<ul>\n<li>Sam Adams on the high-level design of LMAX.</li>\n</ul></li>\n<li><p><a\nhref=\"https://lmax-exchange.github.io/disruptor/files/Disruptor-1.0.pdf\">LMAX\nDisruptor</a> - A high performance alternative to bounded queues for\nexchanging data between concurrent threads.</p></li>\n<li><p><a href=\"https://www.youtube.com/watch?v=qDhTjE0XmkE\">Evolution\nof Financial Exchange Architectures - 2020</a> - Martin Thompson looks\nat the evolution of financial exchanges and explores the state of the\nart today.</p></li>\n<li><p><a\nhref=\"https://www.microsoft.com/en-us/research/wp-content/uploads/2017/06/paper-1.pdf\">Gray\nFailure</a> - ‚ÄúThe major availability breakdowns and performance\nanomalies we see in cloud environments tend to be caused by subtle\nunderlying faults, i.e. gray failure rather than fail-stop\nfailure.‚Äù</p></li>\n<li><p><a\nhref=\"https://www.usenix.org/system/files/conference/fast16/fast16-papers-hao.pdf\">The\nTail at Store: A Revelation from Millions of Hours of Disk and SSD\nDeployments</a> - ‚ÄúWe find that storage performance instability is not\nuncommon: 0.2% of the time, a disk is more than 2x slower than its peer\ndrives in the same RAID group (and 0.6% for SSD). As a consequence, disk\nand SSD-based RAIDs experience at least one slow drive (i.e., storage\ntail) 1.5% and 2.2% of the time.‚Äù</p></li>\n<li><p><a\nhref=\"https://www2.cs.duke.edu/courses/cps296.4/fall13/838-CloudPapers/dean_longtail.pdf\">The\nTail at Scale</a> - ‚ÄúA simple way to curb latency variability is to\nissue the same request to multiple replicas and use the results from\nwhichever replica responds first.‚Äù</p></li>\n<li><p><a\nhref=\"https://pmg.csail.mit.edu/papers/vr-revisited.pdf\">Viewstamped\nReplication Revisited</a></p></li>\n<li><p><a href=\"https://pmg.csail.mit.edu/papers/vr.pdf\">Viewstamped\nReplication: A New Primary Copy Method to Support Highly-Available\nDistributed Systems</a></p></li>\n<li><p><a href=\"https://www.youtube.com/watch?v=NRoUC9P1PmA\">ZFS: The\nLast Word in File Systems (Jeff Bonwick and Bill Moore)</a> - On disk\nfailure and corruption, the need for checksums‚Ä¶ and checksums to check\nthe checksums, and the power of copy-on-write for crash-safety.</p></li>\n<li><p><a\nhref=\"https://research.cs.wisc.edu/wind/Publications/latent-sigmetrics07.pdf\">An\nAnalysis of Latent Sector Errors in Disk Drives</a></p></li>\n<li><p><a\nhref=\"https://www.usenix.org/legacy/events/fast08/tech/full_papers/bairavasundaram/bairavasundaram.pdf\">An\nAnalysis of Data Corruption in the Storage Stack</a></p></li>\n<li><p><a href=\"https://www.usenix.org/system/files/fast20-maneas.pdf\">A\nStudy of SSD Reliability in Large Scale Enterprise Storage\nDeployments</a></p></li>\n<li><p><a href=\"https://www.youtube.com/watch?v=fDY6Wi0GcPs\">SDC 2018 -\nProtocol-Aware Recovery for Consensus-Based Storage</a> - Why replicated\nstate machines need to distinguish between a crash and corruption, and\nwhy it would be disastrous to truncate the journal when encountering a\nchecksum mismatch.</p></li>\n<li><p><a\nhref=\"https://www.usenix.org/system/files/atc20-rebello.pdf\">Can\nApplications Recover from fsync Failures?</a> - Why we use Direct I/O in\nTigerBeetle and why the kernel page cache is a dangerous way to recover\nthe journal, even when restarting from an fsync() failure\npanic.</p></li>\n<li><p><a\nhref=\"https://docs.mojaloop.io/legacy/discussions/Mojaloop%20Performance%202020.pdf\">Coil‚Äôs\nMojaloop Performance Work 2020</a> - By Don Changfoot and Joran Dirk\nGreef, a performance analysis of Mojaloop‚Äôs central ledger that sparked\nthe idea for ‚Äúan accounting database‚Äù as Adrian Hope-Bailie put it. And\nthe rest, as they say, is history!</p></li>\n</ul>\n"},{"path":"about/oltp","html":"<h1 id=\"built-for-oltp\"><a href=\"#built-for-oltp\" class=\"anchor\">Built\nfor OLTP</a></h1>\n<p>Online Transaction Processing (OLTP) is about recording business\ntransactions in real-time. This could be payments, sales, car sharing\nrides, or API usage.</p>\n<p>For the last 20-30 years, OLTP has been handled by general purpose\ndatabases like PostgreSQL, MySQL, and SQLite, which we refer to as\nOnline General Purpose (OLGP) databases. However, general purpose\ndatabases struggle to keep up with the extreme write contention of\ngrowing OLTP workloads today, which have increased by 3-4 orders of\nmagnitude in the last 10 years alone.</p>\n<p>For example:</p>\n<ul>\n<li>In 2019, the UPI real-time payments switch in India processed 10\nbillion payments. In the month of January 2024 alone, the switch\nprocessed 12 billion payments.</li>\n<li>With the moves to cleaner energy and smart metering, energy is being\ntraded by the Kilowatt-hour and billed to customers every 15 or 30\nminutes rather than at the end of the month.</li>\n<li>Serverless APIs charge for usage by the second or per-request,\nrather than per month. (Today, serverless billing at scale is often\nimplemented using MapReduce, which makes it difficult or impossible to\noffer customers real-time spending caps.)</li>\n</ul>\n<p><strong>TigerBeetle is built to handle the scale of OLTP workloads\ntoday and for the decades to come.</strong> It works well alongside a\ngeneral purpose database. The latter holds data that isn‚Äôt updated very\nfrequently, such as account metadata, while TigerBeetle can race ahead\nprocessing transactions and giving your system unparalleled latency and\nthroughput.</p>\n<h2 id=\"oltp-requires-high-performance\"><a\nhref=\"#oltp-requires-high-performance\" class=\"anchor\">OLTP Requires High\nPerformance</a></h2>\n<p>Transaction processing is the core of most business‚Äô software, which\nmakes it the bottleneck for increasing sales, processing payments, or\nserving API requests faster.</p>\n<p>Because performance is so critical, it is common for companies to put\ncaches like Redis in front of a general purpose database to try to\noffload and speed up some types of queries. However, caching brings its\nown set of headaches and does not help for write-heavy workloads.</p>\n<p>At their core, the majority of general purpose databases use a B-Tree\ndata structure, which is meant for a combination of reads and writes.\nBut OLTP is write-heavy. Each transaction coming in needs to be inserted\nand update state such as an account balance.</p>\n<p>Log-Structured Merge (LSM) Trees are optimized for write-heavy\nworkloads. TigerBeetle uses LSM Trees, along with a number of other\nbuilding blocks, to create a database that can handle the scale of OLTP\ntoday and for the next decades.</p>\n<p>Read more about <a href=\"../performance\">TigerBeetle‚Äôs\nperformance</a>.</p>\n<h3 id=\"business-transactions-dont-shard-well\"><a\nhref=\"#business-transactions-dont-shard-well\" class=\"anchor\">Business\nTransactions Don‚Äôt Shard Well</a></h3>\n<p>Two of the main ways of scaling OLTP and billing systems today are\nsharding and MapReduce. However, both of these present problems.</p>\n<p>You could try to separate different groups of accounts into separate\ndatabase clusters. Unfortunately, most accounting systems tend to have a\nfew very hot accounts that are involved in a large number of\ntransactions. For example, those representing the service operator‚Äôs\nassets, liabilities, or income. You can shard accounts, but contention\nand row locks on the hot accounts become the bottleneck.</p>\n<p>Alternatively, certain types of very high-volume transaction systems\nlike billing for serverless usage might use MapReduce to total the\nbalances after the fact. However, this makes it extremely difficult to\nimplement anything like real-time spending caps or live account balance\nviews for users.</p>\n<p>TigerBeetle is designed to squeeze the maximum amount of transaction\nprocessing power out of the leader node, giving you financial\nconsistency at massive scale.</p>\n<h2 id=\"oltp-requires-strong-safety-and-availability-guarantees\"><a\nhref=\"#oltp-requires-strong-safety-and-availability-guarantees\"\nclass=\"anchor\">OLTP Requires Strong Safety and Availability\nGuarantees</a></h2>\n<p>Transaction processing also requires strong safety guarantees to\nensure that data cannot be lost, and high availability to ensure that\nmoney is not lost due to database downtime.</p>\n<p>TigerBeetle takes a unique approach to safety and availability. It is\ndesigned to be run in a fault-tolerant cluster by default ‚Äì without\nneeding a separate add-on or proprietary implementation. It supports\nautomatic failover in the same package to keep your service running\nsmoothly.</p>\n<p>TigerBeetle is also built in a unique way that sets it apart from\nother OLTP databases. It is <a href=\"../zig\">written in Zig</a> instead\nof C or C++, uses <a\nhref=\"https://tigerbeetle.com/blog/2022-10-12-a-database-without-dynamic-memory\">static\nmemory allocation</a>, imposes strict limits on everything it does, and\nmakes heavy use of <a\nhref=\"https://tigerbeetle.com/blog/2023-12-27-it-takes-two-to-contract\">assertions</a>\nand <a\nhref=\"https://tigerbeetle.com/blog/2023-07-06-simulation-testing-for-liveness\">simulation\ntesting</a> to check that code behaves exactly as expected.</p>\n<p>Importantly, TigerBeetle is one of the only OLTP databases that was\ndesigned to handle storage faults. Research on how storage faults affect\ndatabases only came out in 2018 (<a\nhref=\"https://danluu.com/fsyncgate/\">‚Äúfsyncgate 2018‚Äù</a>), and\nTigerBeetle was built from the ground up with these lessons in mind.\nTigerBeetle uses hash chains to detect storage faults, it supports <a\nhref=\"https://www.usenix.org/conference/fast18/presentation/alagappan\">Protocol-Aware\nRecovery</a>, and uses a deterministic on-disk format to speed up the\ncluster‚Äôs recovery.</p>\n<p>Read more about TigerBeetle‚Äôs approach to <a\nhref=\"../safety\">safety</a>.</p>\n<h2 id=\"the-who-what-when-where-why-and-how-much-of-oltp\"><a\nhref=\"#the-who-what-when-where-why-and-how-much-of-oltp\"\nclass=\"anchor\">The ‚ÄúWho, What, When, Where, Why, and How Much‚Äù of\nOLTP</a></h2>\n<p>OLTP and business transactions tend to record the same types of\ninformation:</p>\n<ul>\n<li><strong>Who</strong>: which accounts are transacting?</li>\n<li><strong>What</strong>: what type of asset or value is moving?</li>\n<li><strong>When</strong>: when was the transaction initiated or when\nwas it finalized?</li>\n<li><strong>Where</strong>: where in the world did the transaction take\nplace?</li>\n<li><strong>Why</strong>: what type of transaction is this or why is it\nhappening?</li>\n<li><strong>How Much</strong>: what quantity of the asset or items was\nmoved?</li>\n</ul>\n<p>While SQL is a great query language for getting data out, OLTP is\nprimarily about getting data in and this is where SQL falls short. It is\n<strong>very common for a single business transaction to require\nmultiple SQL queries (on the order of 10 SQL queries per\ntransaction)</strong> and potentially even multiple round-trips from the\napplication to the database.</p>\n<p>With TigerBeetle, these fields are already built into the schema and\nready for you to use:</p>\n<ul>\n<li><strong>Who</strong>: the <a\nhref=\"../../reference/transfer#debit_account_id\"><code>debit_account_id</code></a>\nand <a\nhref=\"../../reference/transfer#credit_account_id\"><code>credit_account_id</code></a>\nindicate which accounts are transacting.</li>\n<li><strong>What</strong>: each asset or type of value in TigerBeetle is\ntracked on a separate <a\nhref=\"../../coding/data-modeling#ledgers\">ledger</a>. The <a\nhref=\"../../reference/transfer#ledger\"><code>ledger</code></a> field\nindicates what is being transferred.</li>\n<li><strong>When</strong>: each transfer has a unique <a\nhref=\"../../reference/transfer#timestamp\"><code>timestamp</code></a> for\nwhen it is processed by the cluster, but you can add another timestamp\nrepresenting when the transaction happened in the real world in the <a\nhref=\"../../reference/transfer#user_data_64\"><code>user_data_64</code></a>\nfield.</li>\n<li><strong>Where</strong>: the <a\nhref=\"../../reference/transfer#user_data_32\"><code>user_data_32</code></a>\ncan be used to store the locale where the transfer occurred.</li>\n<li><strong>Why</strong>: the <a\nhref=\"../../reference/transfer#code\"><code>code</code></a> field stores\nthe reason a transfer occurred and should map to an enum or table of all\nthe possible business events.</li>\n<li><strong>How Much</strong>: the <a\nhref=\"../../reference/transfer#amount\"><code>amount</code></a> indicates\nhow much of the asset or item is being transferred.</li>\n</ul>\n<p>For centuries, this information has been modeled as debits and\ncredits, and double-entry bookkeeping has been the language of business\nsince it was invented over 1000 years ago. TigerBeetle takes this\ntried-and-true schema and adds the performance and safety we need for\nOLTP in the 21st century.</p>\n<p>By implementing double-entry accounting primitives directly in the\ndatabase, TigerBeetle gives you unmatched financial consistency (on top\nof data consistency). Every transaction comes from one account and goes\nto another, ensuring that money is always accounted for. Furthermore,\nTigerBeetle keeps an immutable record of business events and entities,\nensuring that transactions and balances are fully auditable.</p>\n<h2 id=\"tigerbeetle-in-the-hot-path\"><a\nhref=\"#tigerbeetle-in-the-hot-path\" class=\"anchor\">TigerBeetle in the\nHot Path</a></h2>\n<p>You can think about the relationship between TigerBeetle and a\ngeneral purpose database as the difference between the <em>data\nplane</em> and <em>control plane</em>.</p>\n<p>In routing internet packets, the data plane refers to everything\ninvolved in moving IP packets in real-time. The control plane determines\nthe network topology and makes decisions for how packets should be\nrouted. The data plane must be as fast and efficient as possible,\nwhereas the control plane does not need to be touched as frequently.</p>\n<p>TigerBeetle is designed to be in the hot path of your system,\nprocessing every transaction in real-time. You can have a <a\nhref=\"../../coding/system-architecture\">stateless API service</a>\nconstruct and batch transfers to send to TigerBeetle.</p>\n<p>Metadata, such as account details or infrequently changed ledger\ndetails, can be stored in a general purpose database. Note, however,\nthat it is important not to build your system such that it loads the\nmetadata on every transfer, because that would put the slower-moving\ngeneral purpose database back in the hot path.</p>\n<h2 id=\"conclusion-accelerating-oltp-for-the-next-decades\"><a\nhref=\"#conclusion-accelerating-oltp-for-the-next-decades\"\nclass=\"anchor\">Conclusion: Accelerating OLTP for the Next\nDecades</a></h2>\n<p>Building your application on TigerBeetle gives you unmatched\ntransaction processing power. TigerBeetle provides a fixed schema that\nmaps naturally on to the who, what, when, where, why, and how much of\nbusiness transactions. And it is built to handle write-heavy and\nhigh-contention workloads at high performance and with strong safety\nguarantees. TigerBeetle can help you build your application correctly\ntoday, and it can handle the scale as your business grows.</p>\n"},{"path":"about/performance","html":"<h1 id=\"performance\"><a href=\"#performance\"\nclass=\"anchor\">Performance</a></h1>\n<p>TigerBeetle provides more performance than a general-purpose\nrelational database such as MySQL or an in-memory database such as\nRedis:</p>\n<ul>\n<li><p>TigerBeetle <strong>uses small, simple fixed-size data\nstructures</strong> (accounts and transfers) and a tightly scoped\ndomain.</p></li>\n<li><p>TigerBeetle <strong>uses multiple Log-Structured Merge (LSM)\nTrees</strong> for storing objects and indices. This data structure is\nhighly optimized for write-heavy workloads like Online Transaction\nProcessing (OLTP). TigerBeetle squeezes even more performance out of LSM\ntrees by using multiple trees, each storing separate types of\nhomogeneous data.</p></li>\n<li><p>TigerBeetle <strong>performs all balance tracking logic in the\ndatabase</strong>. This is a paradigm shift where we move the code once\nto the data, not the data back and forth to the code in the critical\npath. This eliminates the need for complex caching logic outside the\ndatabase. The ‚ÄúAccounting‚Äù business logic is built into TigerBeetle so\nthat you can <strong>keep your application layer simple and completely\nstateless</strong>.</p></li>\n<li><p>TigerBeetle <strong>supports batching by design</strong>. You can\nbatch all the transfer prepares or commits that you receive in a fixed\n10ms window (or in a dynamic 1ms through 10ms window according to load)\nand then send them all in a single network request to the database. This\nenables low-overhead networking, large sequential disk write patterns\nand amortized fsync and consensus across hundreds and thousands of\ntransfers.</p></li>\n</ul>\n<blockquote>\n<p>Everything is a batch. It‚Äôs your choice whether a batch contains 100\ntransfers or 10,000 transfers but our measurements show that\n<strong>latency is <em>less</em> where batch sizes are larger, thanks to\nLittle‚Äôs Law</strong> (e.g. 50ms for a batch of a hundred transfers vs\n20ms for a batch of ten thousand transfers). TigerBeetle is able to\namortize the cost of I/O to achieve lower latency, even for fairly large\nbatch sizes, by eliminating the cost of queueing delay incurred by small\nbatches.</p>\n</blockquote>\n<ul>\n<li><p>If your system is not under load, TigerBeetle also\n<strong>optimizes the latency of small batches</strong>. After copying\nfrom the kernel‚Äôs TCP receive buffer (TigerBeetle does not do user-space\nTCP), TigerBeetle <strong>does zero-copy Direct I/O</strong> from\nnetwork protocol to disk, and then to state machine and back, to reduce\nmemory pressure and L1-L3 cache pollution.</p></li>\n<li><p>TigerBeetle <strong>uses io_uring for zero-syscall networking and\nstorage I/O</strong>. The cost of a syscall in terms of context switches\nadds up quickly for a few thousand transfers. (You can read about the\nsecurity of using io_uring <a\nhref=\"../safety#io_uring-security\">here</a>.)</p></li>\n<li><p>TigerBeetle <strong>does zero-deserialization</strong> by using\nfixed-size data structures that are optimized for cache line alignment\nto <strong>minimize L1-L3 cache misses</strong>.</p></li>\n<li><p>TigerBeetle <strong>takes advantage of Heidi Howard‚Äôs Flexible\nQuorums</strong> to reduce the cost of <strong>synchronous replication\nto one (or two) remote replicas at most</strong> (in addition to the\nleader) with <strong>asynchronous replication</strong> between the\nremaining followers. This improves write availability without\nsacrificing strict serializability or durability. This also reduces\nserver deployment cost by as much as 20% because a 4-node cluster with\nFlexible Quorums can now provide the same <code>f=2</code> guarantee for\nthe replication quorum as a 5-node cluster.</p></li>\n</ul>\n<blockquote>\n<p><a\nhref=\"https://www.microsoft.com/en-us/research/wp-content/uploads/2017/06/paper-1.pdf\">‚ÄúThe\nmajor availability breakdowns and performance anomalies we see in cloud\nenvironments tend to be caused by subtle underlying faults, i.e. gray\nfailure (slowly failing hardware) rather than fail-stop\nfailure.‚Äù</a></p>\n</blockquote>\n<ul>\n<li>TigerBeetle <strong>routes around transient gray failure latency\nspikes</strong>. For example, if a disk write that typically takes 4ms\nstarts taking 4 seconds because the disk is slowly failing, TigerBeetle\nwill use cluster redundancy to mask the gray failure automatically\nwithout the user seeing any 4-second latency spike. This is a relatively\nnew performance technique in the literature known as ‚Äútail\ntolerance‚Äù.</li>\n</ul>\n<h2 id=\"single-core-by-design\"><a href=\"#single-core-by-design\"\nclass=\"anchor\">Single-Core By Design</a></h2>\n<p>TigerBeetle uses a single core by design and uses a single leader\nnode to process events. Adding more nodes can therefore increase\nreliability but not throughput.</p>\n<p>For a high-performance database, this may seem like an unusual\nchoice. However, sharding in financial databases is notoriously\ndifficult and contention issues often negate the would-be benefits.\nSpecifically, a small number of hot accounts are often involved in a\nlarge proportion of the transactions so the shards responsible for those\naccounts become bottlenecks.</p>\n<p>For more details on when single-threaded implementations of\nalgorithms outperform multi-threaded implementations, see <a\nhref=\"https://www.usenix.org/system/files/conference/hotos15/hotos15-paper-mcsherry.pdf\">‚ÄúScalability!\nBut at what COST?</a>.</p>\n"},{"path":"about/safety","html":"<h1 id=\"safety\"><a href=\"#safety\" class=\"anchor\">Safety</a></h1>\n<p>TigerBeetle is designed to a higher safety standard than a\ngeneral-purpose relational database such as MySQL or an in-memory\ndatabase such as Redis:</p>\n<ul>\n<li><p>Strict consistency, CRCs and crash safety are not\nenough.</p></li>\n<li><p>TigerBeetle <strong>handles and recovers from Latent Sector\nErrors</strong> (e.g. at least <a\nhref=\"https://www.usenix.org/system/files/fast20-maneas.pdf\">0.031% of\nSSD disks per year on average</a>, and <a\nhref=\"https://www.usenix.org/legacy/events/fast08/tech/full_papers/bairavasundaram/bairavasundaram.pdf\">1.4%\nof Enterprise HDD disks per year on average</a>) <strong>detects and\nrepairs disk corruption or misdirected I/O where firmware reads/writes\nthe wrong sector</strong> (e.g. at least <a\nhref=\"https://www.usenix.org/system/files/fast20-maneas.pdf\">0.023% of\nSSD disks per year on average</a>, and <a\nhref=\"https://www.usenix.org/legacy/events/fast08/tech/full_papers/bairavasundaram/bairavasundaram.pdf\">0.466%\nof Nearline HDD disks per year on average</a>), and <strong>detects and\nrepairs data tampering</strong> (on a minority of the cluster, as if it\nwere non-Byzantine corruption) with hash-chained checksums.</p></li>\n<li><p>TigerBeetle <strong>uses Direct I/O by design</strong> to\nsidestep <a\nhref=\"https://www.usenix.org/system/files/atc20-rebello.pdf\">cache\ncoherency bugs in the kernel page cache</a> after an EIO fsync\nerror.</p></li>\n<li><p>TigerBeetle <strong>exceeds the fsync durability of a single\ndisk</strong> and the hardware of a single server because disk firmware\ncan contain bugs and because single server systems fail.</p></li>\n<li><p>TigerBeetle <strong>provides strict serializability</strong>, the\ngold standard of consistency, as a replicated state machine, and as a\ncluster of TigerBeetle servers (called replicas), for optimal high\navailability and distributed fault-tolerance.</p></li>\n<li><p>TigerBeetle <strong>performs synchronous replication</strong> to\na quorum of backup TigerBeetle servers using the pioneering <a\nhref=\"https://pmg.csail.mit.edu/papers/vr-revisited.pdf\">Viewstamped\nReplication</a> and consensus protocol for low-latency automated leader\nelection and to eliminate the risk of split-brain associated with ad hoc\nmanual failover systems.</p></li>\n<li><p>TigerBeetle is ‚Äúfault-aware‚Äù and <strong>recovers from local\nstorage failures in the context of the global consensus\nprotocol</strong>, providing <a\nhref=\"https://www.youtube.com/watch?v=fDY6Wi0GcPs\">more safety than\nreplicated state machines such as ZooKeeper and LogCabin</a>. For\nexample, TigerBeetle can disentangle corruption in the middle of the\ncommitted journal (caused by bitrot) from torn writes at the end of the\njournal (caused by a power failure) to uphold durability guarantees\ngiven for committed data and maximize availability.</p></li>\n<li><p>TigerBeetle does not depend on synchronized system clocks, does\nnot use leader leases, and <strong>performs leader-based\ntimestamping</strong> so that your application can deal only with safe\nrelative quantities of time with respect to transfer timeouts. To ensure\nthat the leader‚Äôs clock is within safe bounds of ‚Äútrue time‚Äù,\nTigerBeetle combines all the clocks in the cluster to create a\nfault-tolerant clock that we call <a\nhref=\"https://tigerbeetle.com/blog/2021-08-30-three-clocks-are-better-than-one\">‚Äúcluster\ntime‚Äù</a>.</p></li>\n</ul>\n<h2 id=\"fault-models\"><a href=\"#fault-models\" class=\"anchor\">Fault\nModels</a></h2>\n<p>We adopt the following fault models with respect to storage, network,\nmemory and processing:</p>\n<h3 id=\"storage-fault-model\"><a href=\"#storage-fault-model\"\nclass=\"anchor\">Storage Fault Model</a></h3>\n<ul>\n<li><p>Disks experience data corruption with significant and material\nprobability.</p></li>\n<li><p>Disk firmware or hardware may cause writes to be misdirected and\nwritten to the wrong sector, or not written at all, with low but\nnevertheless material probability.</p></li>\n<li><p>Disk firmware or hardware may cause reads to be misdirected and\nread from the wrong sector, or not read at all, with low but\nnevertheless material probability.</p></li>\n<li><p>Corruption does not always imply a system crash. Data may be\ncorrupted at any time during its storage lifecycle: before being\nwritten, while being written, after being written, and while being\nread.</p></li>\n<li><p>Disk sector writes are not atomic. For example, an Advanced\nFormat 4096 byte sector write to a disk with an emulated logical sector\nsize of 4096 bytes, but a physical sector size of 512 bytes is not\natomic and would be split into 8 physical sector writes, which may or\nmay not be atomic. Therefore, we do not depend on any sector atomicity\nguarantees from the disk.</p></li>\n<li><p>The Linux kernel page cache is not reliable and may misrepresent\nthe state of data on disk after an EIO or latent sector error. See\n<em><a href=\"https://www.usenix.org/system/files/atc20-rebello.pdf\">Can\nApplications Recover from fsync Failures?</a></em> from the University\nof Wisconsin ‚Äì Madison presented at the 2020 USENIX Annual Technical\nConference.</p></li>\n<li><p>File system metadata (such as a file‚Äôs size) is unreliable and\nmay change at any time.</p></li>\n<li><p>Disk performance and read and write latencies can sometimes be\nvolatile, causing latency spikes on the order of seconds. A slow disk\ndoes not always indicate a failing disk, and a slow disk may return to\nmedian performance levels ‚Äî for example, an SSD undergoing garbage\ncollection.</p></li>\n</ul>\n<h3 id=\"network-fault-model\"><a href=\"#network-fault-model\"\nclass=\"anchor\">Network Fault Model</a></h3>\n<ul>\n<li><p>Messages may be lost.</p></li>\n<li><p>Messages may be corrupted.</p></li>\n<li><p>Messages may be delayed.</p></li>\n<li><p>Messages may be replayed.</p></li>\n<li><p>TCP checksums are inadequate to prevent checksum\ncollisions.</p></li>\n<li><p>Network performance may be asymmetrical for the upload and\ndownload paths.</p></li>\n</ul>\n<h3 id=\"memory-fault-model\"><a href=\"#memory-fault-model\"\nclass=\"anchor\">Memory Fault Model</a></h3>\n<ul>\n<li><p>Memory protected with error-correcting codes is sufficient for\nour purpose. We make no further effort to protect against memory\nfaults.</p></li>\n<li><p>Non-ECC memory is not recommended by TigerBeetle.</p></li>\n</ul>\n<h3 id=\"processing-fault-model\"><a href=\"#processing-fault-model\"\nclass=\"anchor\">Processing Fault Model</a></h3>\n<ul>\n<li><p>The system may crash at any time.</p></li>\n<li><p>The system may freeze process execution for minutes or hours at a\ntime, for example, during a VM migration.</p></li>\n<li><p>The system clock may jump backwards or forwards in time, at any\ntime.</p></li>\n<li><p>NTP can help, but we cannot depend on NTP for strict\nserializability.</p></li>\n<li><p>NTP may stop working because of a network partition, which may\nnot impact TigerBeetle. We, therefore, need to detect when a TigerBeetle\ncluster‚Äôs clocks are not being synchronized by NTP so that financial\ntransaction timestamps are accurate and within the operator‚Äôs tolerance\nfor error.</p></li>\n</ul>\n<h2 id=\"is-tigerbeetle-acid-compliant\"><a\nhref=\"#is-tigerbeetle-acid-compliant\" class=\"anchor\">Is TigerBeetle\nACID-compliant?</a></h2>\n<p>Yes. Let‚Äôs discuss each part:</p>\n<h3 id=\"atomicity\"><a href=\"#atomicity\"\nclass=\"anchor\">Atomicity</a></h3>\n<p>As part of replication, each operation is durably stored in at least\na quorum of replicas‚Äô Write-Ahead Logs (WAL) before the primary will\nacknowledge the operation as committed. WAL entries are executed through\nthe state machine business logic and the resulting state changes are\nstored in TigerBeetle‚Äôs LSM-Forest local storage engine.</p>\n<p>The WAL is what allows TigerBeetle to achieve atomicity and\ndurability since the WAL is the source of truth. If TigerBeetle crashes,\nthe WAL is replayed at startup from the last checkpoint on disk.</p>\n<p>However, financial atomicity goes further than this: events and\ntransfers can be linked when created so they all succeed or fail\ntogether.</p>\n<h3 id=\"consistency\"><a href=\"#consistency\"\nclass=\"anchor\">Consistency</a></h3>\n<p>TigerBeetle guarantees strict serializability. And at the cluster\nlevel, stale reads are not possible since all operations (not only\nwrites, but also reads) go through the global consensus protocol.</p>\n<p>However, financial consistency requires more than this. TigerBeetle\nexposes a double-entry accounting API to guarantee that money cannot be\ncreated or destroyed, but only transferred from one account to another.\nAnd transfer history is immutable.</p>\n<h3 id=\"isolation\"><a href=\"#isolation\"\nclass=\"anchor\">Isolation</a></h3>\n<p>All client requests (and all events within a client request batch)\nare executed with the highest level of isolation, serially through the\nstate machine, one after another, before the next operation begins.\nCounterintuitively, the use of batching and serial execution means that\nTigerBeetle can also provide this level of isolation optimally, without\nthe cost of locks for all the individual events within a batch.</p>\n<h3 id=\"durability\"><a href=\"#durability\"\nclass=\"anchor\">Durability</a></h3>\n<p>Up until 2018, traditional DBMS durability has focused on the Crash\nConsistency Model, however, Fsyncgate and <a\nhref=\"https://www.usenix.org/conference/fast18/presentation/alagappan\">Protocol\nAware Recovery</a> have shown that this model can lead to real data loss\nfor users in the wild. TigerBeetle therefore adopts an explicit storage\nfault model, which we then verify and test with incredible levels of\ncorruption, something which few distributed systems historically were\ndesigned to handle. Our emphasis on protecting Durability is what sets\nTigerBeetle apart, not only as a ledger but as a DBMS.</p>\n<p>However, absolute durability is impossible, because all hardware can\nultimately fail. Data we write today might not be available tomorrow.\nTigerBeetle embraces limited disk reliability and maximizes data\ndurability in spite of imperfect disks. We actively work against such\nentropy by taking advantage of cluster-wide storage. A record would need\nto get corrupted on all replicas in a cluster to get lost, and even in\nthat case the system would safely halt.</p>\n<h2 id=\"io_uring-security\"><a href=\"#io_uring-security\"\nclass=\"anchor\"><code>io_uring</code> Security</a></h2>\n<p><code>io_uring</code> is a relatively new part of the Linux kernel\n(support for it was added in version 5.1, which was released in May\n2019). Since then, many kernel exploits have been found related to\n<code>io_uring</code> and in 2023 <a\nhref=\"https://security.googleblog.com/2023/06/learnings-from-kctf-vrps-42-linux.html\">Google\nannounced</a> that they were disabling it in ChromeOS, for Android apps,\nand on Google production servers.</p>\n<p>Google‚Äôs post is primarily about how they secure operating systems\nand web servers that handle hostile user content. In the Google blog\npost, they specifically note:</p>\n<blockquote>\n<p>we currently consider it safe only for use by trusted components</p>\n</blockquote>\n<p>As a financial system of record, TigerBeetle is a trusted component\nand it should be running in a trusted environment.</p>\n<p>Furthermore, TigerBeetle only uses 128-byte <a\nhref=\"../../reference/account\"><code>Account</code>s</a> and <a\nhref=\"../../reference/transfer\"><code>Transfer</code>s</a> with pure\ninteger fields. TigerBeetle has no (de)serialization and does not take\nuser-generated strings, which significantly constrains the attack\nsurface.</p>\n<p>We are confident that <code>io_uring</code> is the safest (and most\nperformant) way for TigerBeetle to handle async I/O. It is significantly\neasier for the kernel to implement this correctly than for us to include\na userspace multithreaded thread pool (for example, as libuv does).</p>\n"},{"path":"about/vopr","html":"<h1 id=\"deterministic-simulation-testing\"><a\nhref=\"#deterministic-simulation-testing\" class=\"anchor\">Deterministic\nSimulation Testing</a></h1>\n<p>Deterministic Simulation Testing (DST) is one of our favorite parts\nabout TigerBeetle, and it is a key way that we improve the system‚Äôs\nreliability.</p>\n<p>Simulation testing enables us to run the production TigerBeetle code\nunder a wide variety of conditions to ensure that the cluster behaves\nproperly. Because our simulator is deterministic based on a\n<em>seed</em> number and the Git commit, we can perfectly reproduce any\nbugs discovered in testing for easy local debugging. Crucially, VOPR can\nspeed up time arbitrarily. One minute of VOPR time is equivalent to days\nof real-world testing.</p>\n<h2 id=\"live-simulator-in-the-browser\"><a\nhref=\"#live-simulator-in-the-browser\" class=\"anchor\">Live Simulator in\nthe Browser</a></h2>\n<p>You can see the simulator in action at <a\nhref=\"https://sim.tigerbeetle.com\">https://sim.tigerbeetle.com</a>!</p>\n<p>The three modes show TigerBeetle handling different types of network\nand hardware conditions ‚Äì and you can inject different faults yourself\nüî®üßä‚ö°.</p>\n<h2 id=\"the-vopr\"><a href=\"#the-vopr\" class=\"anchor\">The VOPR</a></h2>\n<p><em>The VOPR</em>, or The Viewstamped Operation Replicator, is our\nname for our deterministic simulator. (The name was inspired by the AI\nsupercomputer in the 1983 movie <a\nhref=\"https://www.imdb.com/title/tt0086567/\">WarGames</a>, which was\ncalled the War Operation Plan Response or WOPR, which constantly\nsimulated scenarios in order to learn.)</p>\n<p>The key purpose of the VOPR is to test TigerBeetle‚Äôs safety and\nliveness, and it focuses on consensus and the cluster‚Äôs recovery\nmechanisms.</p>\n<p>In the simulator, all non-deterministic parts of the system are\nstubbed out. This includes the clock, network, and disk operations.</p>\n<p>The VOPR uses a random seed to tune parameters for injecting\ndifferent types of faults into the simulation. For example, it may drop\nand reorder packets, partition the network, or corrupt reads and writes\nto the ‚Äúdisk‚Äù.</p>\n<p>Using those conditions, the simulator commits several hundred batches\nof operations and checks that they are applied as expected.</p>\n<p>When a simulation causes any type of failure, the seed and Git commit\nhash can be used to replay back the exact simulation and bug. If you are\ninterested in understanding how we debug and fix failures discovered in\nsimulation, you can watch this <a\nhref=\"https://youtu.be/kZ3xVeO0vBw?si=gaHgOzrN-X86CAmi\">IronBeetle\nepisode where @matklad live debugs a real simulator failure</a>.</p>\n<p>Using the same deterministic simulation infrastructure, we also test\nfor <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/vsr/replica_test.zig\">specific\ncases</a> that are hard or slow to replicate through random\nsimulation.</p>\n<h2 id=\"assertions-and-checkers\"><a href=\"#assertions-and-checkers\"\nclass=\"anchor\">Assertions and Checkers</a></h2>\n<p>Simulation testing pairs particularly well with TigerBeetle‚Äôs heavy\nuse of assertions. Throughout the code base there are thousands of\nassertions checking that all manner of invariants hold true.</p>\n<p>TigerBeetle is somewhat unique in that it keeps these assertions on,\neven in production. The logic is that it is far better to stop operating\nthan to continue operating in an incorrect state.</p>\n<p>Assertions are a force multiplier when used with simulation testing\nand fuzzing. If any assertion is broken under a specific set of\ncircumstances, the simulation will crash and we debug that failure.</p>\n<p>On top of the assertions in the code, the simulator also includes a\nvariety of additional checkers that verify the correctness of the\ncluster‚Äôs state. For example, TigerBeetle replicas‚Äô data files are\ndesigned to be byte-for-byte identical across caught-up nodes in the\ncluster. Some of the storage checkers verify that this is the case\nacross simulations.</p>\n<h2 id=\"inspiration\"><a href=\"#inspiration\"\nclass=\"anchor\">Inspiration</a></h2>\n<p>TigerBeetle‚Äôs approach to DST was heavily inspired by the work of <a\nhref=\"https://apple.github.io/foundationdb/testing.html\">FoundationDB</a>\nand <a\nhref=\"https://www.antithesis.com/solutions/problems_we_solve/\">Antithesis</a>.</p>\n<h2 id=\"learn-more\"><a href=\"#learn-more\" class=\"anchor\">Learn\nMore</a></h2>\n<ul>\n<li><a\nhref=\"https://tigerbeetle.com/blog/2023-07-06-simulation-testing-for-liveness\">Simulation\nTesting for Liveness (Blog)</a></li>\n<li><a\nhref=\"https://youtu.be/el-LqUTv00M?si=ltKilzPSW8c7nKVQ\">Deterministic\nSimulation Testing (Video)</a></li>\n</ul>\n"},{"path":"about/architecture","html":"<h1 id=\"architecture\"><a href=\"#architecture\"\nclass=\"anchor\">Architecture</a></h1>\n<p>In theory, TigerBeetle is a replicated state machine that\n<strong>takes an initial starting state</strong> (account opening\nbalances), and <strong>applies a set of input events</strong>\n(transfers) in deterministic order, after first replicating these input\nevents safely, to <strong>arrive at a final state</strong> (account\nclosing balances).</p>\n<p>In practice, TigerBeetle is based on the <a\nhref=\"https://www.infoq.com/presentations/LMAX/\">LMAX Exchange\nArchitecture</a> and makes a few improvements.</p>\n<p>We take the same three classic LMAX steps:</p>\n<ol type=\"1\">\n<li>journal incoming events safely to disk, and replicate to backup\nnodes, then</li>\n<li>apply these events to the in-memory state, then</li>\n<li>ACK to the client</li>\n</ol>\n<p>And then we introduce something new:</p>\n<ol start=\"4\" type=\"1\">\n<li>delete the local journalling step entirely, and</li>\n<li>replace it with parallel replication to 3/5 distributed\nreplicas.</li>\n</ol>\n<p>Our architecture then becomes three easy steps:</p>\n<ol type=\"1\">\n<li>replicate incoming events safely to a quorum of distributed\nreplicas, then</li>\n<li>apply these events to the in-memory state, then</li>\n<li>ACK to the client</li>\n</ol>\n<p>That‚Äôs how TigerBeetle <strong>eliminates gray failure in the\nleader‚Äôs local disk</strong>, and how TigerBeetle <strong>eliminates\ngray failure in the network links to the replication nodes</strong>.</p>\n<p>Like LMAX, TigerBeetle uses a thread-per-core design for optimal\nperformance, with strict single-threading to enforce the single-writer\nprinciple and to avoid the costs of multi-threaded coordinated access to\ndata.</p>\n<h2 id=\"data-structures\"><a href=\"#data-structures\" class=\"anchor\">Data\nStructures</a></h2>\n<p>The best way to understand TigerBeetle is through the data structures\nit provides. All data structures are <strong>fixed-size</strong> for\nperformance and simplicity, and there are two main kinds of data\nstructures, <strong>events</strong> and <strong>states</strong>.</p>\n<h3 id=\"events\"><a href=\"#events\" class=\"anchor\">Events</a></h3>\n<p>Events are <strong>immutable data structures</strong> that\n<strong>instantiate or mutate state data structures</strong>:</p>\n<ul>\n<li>Events cannot be changed, not even by other events.</li>\n<li>Events cannot be derived and must therefore be recorded before\nexecution.</li>\n<li>Events must be executed one after another ‚Äìin deterministic order‚Äì\nto ensure replayability.</li>\n<li>Events may depend on past events (should they choose).</li>\n<li>Events cannot depend on future events.</li>\n<li>Events may depend on states being at an exact version (should they\nchoose).</li>\n<li>Events may succeed or fail, but the result of an event is never\nstored in the event; it is stored in the state instantiated or mutated\nby the event.</li>\n<li>Events can only have one immutable version, which can be referenced\ndirectly by the event‚Äôs id.</li>\n<li>Events should be retained for auditing purposes. However, events may\nbe drained into a separate cold storage system once their effect has\nbeen captured in a state snapshot to compact the journal and improve\nstartup times.</li>\n</ul>\n<p><strong>create_transfer</strong>: Create a transfer between accounts\n(maps to a ‚Äúprepare‚Äù). We group fields in descending order of size to\navoid unnecessary struct padding in C implementations.</p>\n<pre><code>          create_transfer {\n                      id: 16 bytes (128-bit)\n        debit_account_id: 16 bytes (128-bit)\n       credit_account_id: 16 bytes (128-bit)\n                  amount: 16 bytes (128-bit) [required, an unsigned integer in the unit of value of the debit and credit accounts, which must be the same for both accounts]\n              pending_id: 16 bytes (128-bit) [optional, required to post or void an existing but pending transfer]\n           user_data_128: 16 bytes (128-bit) [optional, e.g. opaque third-party identifier to link this transfer (many-to-one) to an external entity]\n            user_data_64:  8 bytes ( 64-bit) [optional, e.g. opaque third-party identifier to link this transfer (many-to-one) to an external entity]\n            user_data_32:  4 bytes ( 32-bit) [optional, e.g. opaque third-party identifier to link this transfer (many-to-one) to an external entity]\n                 timeout:  4 bytes ( 32-bit) [optional, required only for a pending transfer, a quantity of time, i.e. an offset in seconds from timestamp]\n                  ledger:  4 bytes ( 32-bit) [required, to enforce isolation by ensuring that all transfers are between accounts of the same ledger]\n                    code:  2 bytes ( 16-bit) [required, an opaque chart of accounts code describing the reason for the transfer, e.g. deposit, settlement]\n                   flags:  2 bytes ( 16-bit) [optional, to modify the usage of the reserved field and for future feature expansion]\n               timestamp:  8 bytes ( 64-bit) [reserved, assigned by the leader before journalling]\n} = 128 bytes (2 CPU cache lines)</code></pre>\n<p><strong>create_account</strong>: Create an account.</p>\n<ul>\n<li>We use the terms <code>credit</code> and <code>debit</code> instead\nof ‚Äúpayable‚Äù or ‚Äúreceivable‚Äù since the meaning of a credit balance\ndepends on whether the account is an asset or liability or equity,\nincome or expense.</li>\n<li>A <code>posted</code> amount refers to an amount posted by a\ntransfer.</li>\n<li>A <code>pending</code> amount refers to an inflight amount\nyet-to-be-posted by a two-phase transfer only, where the transfer is\nstill pending, and the transfer timeout has not yet fired. In other\nwords, the transfer amount has been reserved in the pending account\nbalance (to avoid double-spending) but not yet posted to the posted\nbalance. The reserved amount will rollback if the transfer ultimately\nfails. By default, transfers post automatically, but being able to\nreserve the amount as pending and then post the amount only later can\nsometimes be convenient, for example, when switching credit card\npayments.</li>\n<li>The debit balance of an account is given by adding\n<code>debits_posted</code> plus <code>debits_pending</code>, likewise,\nfor the credit balance of an account.</li>\n<li>The total balance of an account can be derived by subtracting the\ntotal credit balance from the total debit balance.</li>\n<li>We keep both sides of the ledger (debit and credit) separate to\navoid having to deal with signed numbers and to preserve more\ninformation about the nature of an account. For example, two accounts\ncould have the same balance of 0, but one account could have 1,000,000\nunits on both sides of the ledger, whereas another account could have 1\nunit on both sides, both balancing out to 0.</li>\n<li>Once created, an account may be changed only through transfer events\nto keep an immutable paper trail for auditing.</li>\n</ul>\n<pre><code>           create_account {\n                      id: 16 bytes (128-bit)\n          debits_pending: 16 bytes (128-bit)\n           debits_posted: 16 bytes (128-bit)\n         credits_pending: 16 bytes (128-bit)\n          credits_posted: 16 bytes (128-bit)\n           user_data_128: 16 bytes (128-bit) [optional, opaque third-party identifier to link this account (many-to-one) to an external entity]\n            user_data_64:  8 bytes ( 64-bit) [optional, opaque third-party identifier to link this account (many-to-one) to an external entity]\n            user_data_32:  4 bytes ( 32-bit) [optional, opaque third-party identifier to link this account (many-to-one) to an external entity]\n                reserved:  4 bytes ( 32-bit) [reserved for future accounting policy primitives]\n                  ledger:  4 bytes ( 32-bit) [required, to enforce isolation by ensuring that all transfers are between accounts of the same ledger]\n                    code:  2 bytes ( 16-bit) [required, an opaque chart of accounts code describing the reason for the transfer, e.g. deposit, settlement]\n                   flags:  2 bytes ( 16-bit) [optional, net balance limits: e.g. debits_must_not_exceed_credits or credits_must_not_exceed_debits]\n               timestamp:  8 bytes ( 64-bit) [reserved]\n} = 128 bytes (2 CPU cache lines)</code></pre>\n<h3 id=\"states\"><a href=\"#states\" class=\"anchor\">States</a></h3>\n<p>States are <strong>data structures</strong> that capture the results\nof events:</p>\n<ul>\n<li>States can always be derived by replaying all events.</li>\n</ul>\n<p>TigerBeetle provides <strong>exactly one state data\nstructure</strong>:</p>\n<ul>\n<li><strong>Account</strong>: An account showing the effect of all\ntransfers.</li>\n</ul>\n<p>To simplify, to reduce memory copies and to reuse the wire format of\nevent data structures as much as possible, we reuse our\n<code>create_account</code> event data structure to instantiate the\ncorresponding state data structure.</p>\n<h2 id=\"protocol\"><a href=\"#protocol\" class=\"anchor\">Protocol</a></h2>\n<p>The current TCP wire protocol is:</p>\n<ul>\n<li>a fixed-size header that can be used for requests or responses,</li>\n<li>followed by variable-length data.</li>\n</ul>\n<pre><code>HEADER (128 bytes)\n16 bytes CHECKSUM (of remaining HEADER)\n16 bytes CHECKSUM BODY\n[...see src/vsr.zig for the rest of the Header definition...]\nDATA (multiples of 64 bytes)\n................................................................................\n................................................................................\n................................................................................</code></pre>\n<p>The <code>DATA</code> in <strong>the request</strong> for a\n<code>create_transfer</code> command looks like this:</p>\n<pre><code>{ create_transfer event struct }, { create_transfer event struct } etc.</code></pre>\n<ul>\n<li>All event structures are appended one after the other in the\n<code>DATA</code>.</li>\n</ul>\n<p>The <code>DATA</code> in <strong>the response</strong> to a\n<code>create_transfer</code> command looks like this:</p>\n<pre><code>{ index: integer, error: integer }, { index: integer, error: integer }, etc.</code></pre>\n<ul>\n<li>Only failed <code>create_transfer</code> events emit an\n<code>error</code> struct in the response. We do this to optimize the\ncommon case where most <code>create_transfer</code> events succeed.</li>\n<li>The <code>error</code> struct includes the <code>index</code> into\nthe batch of the <code>create_transfer</code> event that failed and a\nTigerBeetle <code>error</code> return code indicating why.</li>\n<li>All other <code>create_transfer</code> events succeeded.</li>\n<li>This <code>error</code> struct response strategy is the same for\n<code>create_account</code> events.</li>\n</ul>\n<h3 id=\"protocol-design-decisions\"><a href=\"#protocol-design-decisions\"\nclass=\"anchor\">Protocol Design Decisions</a></h3>\n<p>The header is a multiple of 128 bytes because we want to keep the\nsubsequent data aligned to 64-byte cache line boundaries. We don‚Äôt want\nany structure to straddle multiple cache lines unnecessarily for the\nsake of simplicity with respect to struct alignment and because this can\nhave a performance impact through false sharing.</p>\n<p>We order the header struct as we do to keep any C protocol\nimplementations padding-free.</p>\n<p>We use AEGIS-128L as our checksum, designed to fully exploit the\nparallelism and built-in AES support of recent Intel and ARM CPUs.</p>\n<p>The reason we use two checksums instead of only a single checksum\nacross header and data is that we need a reliable way to know the size\nof the data to expect before we start receiving the data.</p>\n<p>Here is an example showing the risk of a single checksum for the\nrecipient:</p>\n<ol type=\"1\">\n<li>We receive a header with a single checksum protecting both header\nand data.</li>\n<li>We extract the SIZE of the data from the header (4 GiB in this\ncase).</li>\n<li>We cannot tell if this SIZE value is corrupt until we receive the\ndata.</li>\n<li>We wait for 4 GiB of data to arrive before calculating/comparing\nchecksums.</li>\n<li>Except the SIZE was corrupted in transit from 16 MiB to 4 GiB (2-bit\nflips).</li>\n<li>We never detect the corruption, the connection times out, and we\nmiss our SLA.</li>\n</ol>\n"},{"path":"about/production-ready","html":"<h1 id=\"production-ready\"><a href=\"#production-ready\"\nclass=\"anchor\">Production Ready</a></h1>\n<p>TigerBeetle is ready for production use on Linux as of version\n0.15.3, which provides protocol and storage stability, and a forward\nupgrade path, without requiring data migration.</p>\n<p>TigerBeetle releases are tested in a deterministic simulator to apply\nmodel checking techniques but on the actual code. For example, fault\ninjection simulates network partitions, packet loss, crashes, and even\nhigh levels of disk corruption, while time is accelerated in the\nsimulated world by a factor of up to seven hundred times to find bugs\nfaster.</p>\n<p>Beyond this level of testing, TigerBeetle follows NASA‚Äôs Power of Ten\nRules for Safety-Critical Code, with 6000+ assertions to verify\ncorrectness at runtime, so that as far as possible, TigerBeetle either\nruns correctly in production or else shuts down safely.</p>\n<p>Please be aware that certain APIs, for example, how to query\nTigerBeetle to lookup accounts or transfers, may be replaced by\nTigerBeetle‚Äôs new Query engine when it ships. These features will be\nsimple to update in code, and will first be deprecated, with time to\nupdate between versions.</p>\n<p>We are happy to provide assistance with operating TigerBeetle in\nproduction. Please contact our CEO, Joran Dirk Greef, at <a\nhref=\"mailto:joran@tigerbeetle.com\">joran@tigerbeetle.com</a> if your\ncompany would like professional support.</p>\n"},{"path":"about/zig","html":"<h1 id=\"zig\"><a href=\"#zig\" class=\"anchor\">Zig</a></h1>\n<p>Coming from C, Zig is the language we‚Äôve always wanted ‚Äì and the\nperfect language in which to write a database focused on performance and\nsafety.</p>\n<p>We want:</p>\n<ul>\n<li><strong>C ABI compatibility</strong> to embed the TigerBeetle leader\nlibrary or TigerBeetle network client directly into any language, to\nmatch the portability and ease of use of the <a\nhref=\"https://www.sqlite.org/index.html\">SQLite library</a>, the most\nused database engine in the world.</li>\n<li>Bounds checking and checked arithmetic for greater memory safety\nthan C.</li>\n<li><strong>Control the memory layout, alignment, and padding of data\nstructures</strong> to avoid cache misses and unaligned accesses and\nallow zero-copy parsing of data structures from off the network.</li>\n<li><strong>Explicit static memory allocation</strong> from the network\nall the way to the disk with <strong>no hidden memory\nallocations</strong>. Zig also has a rich choice of allocators and test\nallocators.</li>\n<li><strong>OOM safety</strong> as the TigerBeetle leader library needs\nto manage GiBs of in-memory state without crashing.</li>\n<li>Direct access to <strong>io_uring</strong> for fast, simple\nnetworking and file system operations.</li>\n<li>Direct access to <strong>fast CPU instructions</strong> such as\n<code>POPCNT</code>, which are essential for the hash table\nimplementation we want to use.</li>\n<li>Direct access to <strong>existing C libraries</strong> without the\noverhead of FFI.</li>\n<li><strong>Strict single-threaded control flow</strong> to eliminate\ndata races by design and to enforce the single writer principle.</li>\n<li><strong>Compiler support for error sets</strong> to enforce <a\nhref=\"https://www.eecg.utoronto.ca/~yuan/papers/failure_analysis_osdi14.pdf\">fine-grained\nerror handling</a>.</li>\n<li>A developer-friendly and fast build system.</li>\n<li><a href=\"https://zig.guide/language-basics/comptime/\">Comptime</a>\nis a game changer.</li>\n</ul>\n<p>Zig retains C ABI interoperability, offers relief from undefined\nbehavior and makefiles, and provides an order of magnitude improvement\nin runtime safety and fine-grained error handling. Zig is a good fit\nwith its emphasis on explicit memory allocation and OOM safety.</p>\n<p>Since Zig is pre-1.0.0 we plan to use only stable language features.\nIt‚Äôs an excellent time for TigerBeetle to adopt Zig since our stable\nroadmaps will probably coincide. We wanted to invest for the next 20\nyears and didn‚Äôt want to be stuck with C/C++ or compiler/language\ncomplexity and pay a tax for the lifetime of the project.</p>\n"}]
