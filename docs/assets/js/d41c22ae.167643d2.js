"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[795],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},g="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),g=s(n),p=i,d=g["".concat(u,".").concat(p)]||g[p]||b[p]||a;return n?r.createElement(d,l(l({ref:t},c),{},{components:n})):r.createElement(d,l({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=p;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[g]="string"==typeof e?e:i,l[1]=o;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8215:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>b,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:1},l="Single-node cluster with a single binary",o={unversionedId:"quick-start/single-binary",id:"quick-start/single-binary",title:"Single-node cluster with a single binary",description:"Production",source:"@site/pages/quick-start/single-binary.md",sourceDirName:"quick-start",slug:"/quick-start/single-binary",permalink:"/quick-start/single-binary",draft:!1,editUrl:"https://github.com/tigerbeetledb/tigerbeetle/blob/main/docs/quick-start/single-binary.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Quickstart",permalink:"/quick-start/"},next:{title:"Single-node cluster with Docker",permalink:"/quick-start/with-docker"}},u={},s=[{value:"Prebuilt Linux binary",id:"prebuilt-linux-binary",level:2},{value:"Debugging panics",id:"debugging-panics",level:3},{value:"Prebuilt macOS binary",id:"prebuilt-macos-binary",level:2},{value:"Debugging panics",id:"debugging-panics-1",level:3},{value:"Building from source",id:"building-from-source",level:2},{value:"Debugging panics",id:"debugging-panics-2",level:3},{value:"Running TigerBeetle",id:"running-tigerbeetle",level:2}],c={toc:s},g="wrapper";function b(e){let{components:t,...n}=e;return(0,i.kt)(g,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"single-node-cluster-with-a-single-binary"},"Single-node cluster with a single binary"),(0,i.kt)("p",null,"Production\nInstall TigerBeetle by grabbing the latest release from\nGitHub."),(0,i.kt)("h2",{id:"prebuilt-linux-binary"},"Prebuilt Linux binary"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ curl -LO https://github.com/tigerbeetledb/tigerbeetle/releases/download/2022-11-16-weekly/tigerbeetle-Linux-x64-2022-11-16-weekly.zip\n$ unzip tigerbeetle-Linux-x64-2022-11-16-weekly.zip\n$ sudo cp tigerbeetle /usr/local/bin/tigerbeetle\n$ tigerbeetle version --verbose | head -n6\nTigerBeetle version experimental\n\ngit_commit="b47292aaf2492e6b56a977009b85f7fca6e66775"\n\nzig_version=0.9.1\nmode=Mode.ReleaseSafe\n')),(0,i.kt)("h3",{id:"debugging-panics"},"Debugging panics"),(0,i.kt)("p",null,"If you run into panics, you can get more information by using the\ndebug binary. To grab this binary, add ",(0,i.kt)("inlineCode",{parentName:"p"},"--debug")," before the ",(0,i.kt)("inlineCode",{parentName:"p"},".zip"),"\nextension:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ curl -LO https://github.com/tigerbeetledb/tigerbeetle/releases/download/2022-11-16-weekly/tigerbeetle-Linux-x64-2022-11-16-weekly--debug.zip\n")),(0,i.kt)("h2",{id:"prebuilt-macos-binary"},"Prebuilt macOS binary"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ curl -LO https://github.com/tigerbeetledb/tigerbeetle/releases/download/2022-11-16-weekly/tigerbeetle-macOS-x64-2022-11-16-weekly.zip\n$ unzip tigerbeetle-macOS-x64-2022-11-16-weekly.zip\n$ sudo cp tigerbeetle /usr/local/bin/tigerbeetle\n$ tigerbeetle version --verbose | head -n6\nTigerBeetle version experimental\n\ngit_commit="b47292aaf2492e6b56a977009b85f7fca6e66775"\n\nzig_version=0.9.1\nmode=Mode.ReleaseSafe\n')),(0,i.kt)("h3",{id:"debugging-panics-1"},"Debugging panics"),(0,i.kt)("p",null,"If you run into panics, you can get more information by using the\ndebug binary. To grab this binary, add ",(0,i.kt)("inlineCode",{parentName:"p"},"--debug")," before the ",(0,i.kt)("inlineCode",{parentName:"p"},".zip"),"\nextension:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ curl -LO https://github.com/tigerbeetledb/tigerbeetle/releases/download/2022-11-16-weekly/tigerbeetle-macOS-x64-2022-11-16-weekly--debug.zip\n")),(0,i.kt)("h2",{id:"building-from-source"},"Building from source"),(0,i.kt)("p",null,"Or to build from source, clone the repo, checkout a release, and run\nthe install script."),(0,i.kt)("p",null,"You will need POSIX userland, curl or wget, tar, and xz."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/tigerbeetledb/tigerbeetle.git\n$ git checkout 2022-11-16-weekly # Or latest tag\n$ cd tigerbeetle\n$ scripts/install.sh\n")),(0,i.kt)("p",null,"Don't worry, this will only make changes within the ",(0,i.kt)("inlineCode",{parentName:"p"},"tigerbeetle"),"\ndirectory. No global changes. The result will place the compiled\n",(0,i.kt)("inlineCode",{parentName:"p"},"tigerbeetle")," binary into the current directory."),(0,i.kt)("h3",{id:"debugging-panics-2"},"Debugging panics"),(0,i.kt)("p",null,"If you run into panics, you can get more information by using the\ndebug binary:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ DEBUG=true ./scripts/install.sh\n")),(0,i.kt)("h2",{id:"running-tigerbeetle"},"Running TigerBeetle"),(0,i.kt)("p",null,"Now create the TigerBeetle data file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ ./tigerbeetle format --cluster=0 --replica=0 --replica-count=1 0_0.tigerbeetle\ninfo(io): creating "0_0.tigerbeetle"...\ninfo(io): allocating 660.140625MiB...\n')),(0,i.kt)("p",null,"And start the server."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ ./tigerbeetle start --addresses=3000 0_0.tigerbeetle\ninfo(io): opening "0_0.tigerbeetle"...\ninfo(main): 0: cluster=0: listening on 127.0.0.1:3000\n')),(0,i.kt)("p",null,"Now you can connect to the running server with any client. For a quick\nstart, try ",(0,i.kt)("a",{parentName:"p",href:"/quick-start/node-cli"},"creating accounts and transfers in the Node\nCLI"),"."))}b.isMDXComponent=!0}}]);