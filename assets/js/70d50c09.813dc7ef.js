"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9759],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),c=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),d=a,m=p["".concat(o,".").concat(d)]||p[d]||f[d]||i;return r?n.createElement(m,l(l({ref:t},u),{},{components:r})):n.createElement(m,l({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[p]="string"==typeof e?e:a,l[1]=s;for(var c=2;c<i;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9397:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const i={},l="get_account_transfers",s={unversionedId:"reference/operations/get_account_transfers",id:"reference/operations/get_account_transfers",title:"get_account_transfers",description:"Fetch Transfers involving a given Account.",source:"@site/pages/reference/operations/get_account_transfers.md",sourceDirName:"reference/operations",slug:"/reference/operations/get_account_transfers",permalink:"/reference/operations/get_account_transfers",draft:!1,editUrl:"https://github.com/tigerbeetle/tigerbeetle/blob/main/docs/reference/operations/get_account_transfers.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"create_transfers",permalink:"/reference/operations/create_transfers"},next:{title:"lookup_accounts",permalink:"/reference/operations/lookup_accounts"}},o={},c=[{value:"Event",id:"event",level:2},{value:"<code>account_id</code>",id:"account_id",level:3},{value:"<code>timestamp</code>",id:"timestamp",level:3},{value:"<code>limit</code>",id:"limit",level:3},{value:"<code>flags</code>",id:"flags",level:3},{value:"<code>flags.debits</code>",id:"flagsdebits",level:4},{value:"<code>flags.credits</code>",id:"flagscredits",level:4},{value:"<code>flags.reversed</code>",id:"flagsreversed",level:4},{value:"Result",id:"result",level:2},{value:"Client libraries",id:"client-libraries",level:2}],u={toc:c},p="wrapper";function f(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"get_account_transfers"},(0,a.kt)("inlineCode",{parentName:"h1"},"get_account_transfers")),(0,a.kt)("p",null,"Fetch ",(0,a.kt)("a",{parentName:"p",href:"/reference/transfers"},(0,a.kt)("inlineCode",{parentName:"a"},"Transfer")),"s involving a given ",(0,a.kt)("a",{parentName:"p",href:"/reference/accounts"},(0,a.kt)("inlineCode",{parentName:"a"},"Account")),"."),(0,a.kt)("h2",{id:"event"},"Event"),(0,a.kt)("p",null,"The query filter: "),(0,a.kt)("h3",{id:"account_id"},(0,a.kt)("inlineCode",{parentName:"h3"},"account_id")),(0,a.kt)("p",null,"The unique identifier of the account for which the transfers will be retrieved."),(0,a.kt)("p",null,"Constraints:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type is 128-bit unsigned integer (16 bytes)"),(0,a.kt)("li",{parentName:"ul"},"Must not be zero or ",(0,a.kt)("inlineCode",{parentName:"li"},"2^128 - 1"))),(0,a.kt)("h3",{id:"timestamp"},(0,a.kt)("inlineCode",{parentName:"h3"},"timestamp")),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/reference/transfers#timestamp"},(0,a.kt)("inlineCode",{parentName:"a"},"Transfer.timestamp"))," from which results will be returned, exclusive range\napplied as:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Greater than ",(0,a.kt)("inlineCode",{parentName:"li"},">")," when ",(0,a.kt)("a",{parentName:"li",href:"#flagsreversed"},"reversed")," is ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},"Less than ",(0,a.kt)("inlineCode",{parentName:"li"},"<")," when ",(0,a.kt)("a",{parentName:"li",href:"#flagsreversed"},"reversed")," is ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),".")),(0,a.kt)("p",null,"This parameter together with ",(0,a.kt)("a",{parentName:"p",href:"#limit"},(0,a.kt)("inlineCode",{parentName:"a"},"limit"))," can be used for pagination, passing the last\ntimestamp seen from the previous results."),(0,a.kt)("p",null,"Optional, use zero for no filter by timestamp."),(0,a.kt)("p",null,"Constraints:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type is 64-bit unsigned integer (8 bytes)"),(0,a.kt)("li",{parentName:"ul"},"Must not be ",(0,a.kt)("inlineCode",{parentName:"li"},"2^64 - 1"))),(0,a.kt)("h3",{id:"limit"},(0,a.kt)("inlineCode",{parentName:"h3"},"limit")),(0,a.kt)("p",null,"The maximum number of ",(0,a.kt)("a",{parentName:"p",href:"/reference/transfers"},(0,a.kt)("inlineCode",{parentName:"a"},"Transfer")),"s that can be returned by this query."),(0,a.kt)("p",null,"Limited by the ",(0,a.kt)("a",{parentName:"p",href:"/design/client-requests#batching-events"},"maximum message size"),"."),(0,a.kt)("p",null,"Constraints:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type is 32-bit unsigned integer (4 bytes)"),(0,a.kt)("li",{parentName:"ul"},"Must not be zero")),(0,a.kt)("h3",{id:"flags"},(0,a.kt)("inlineCode",{parentName:"h3"},"flags")),(0,a.kt)("p",null,"A bitfield that specifies querying behavior."),(0,a.kt)("p",null,"Constraints:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type is 32-bit unsigned integer (4 bytes)")),(0,a.kt)("h4",{id:"flagsdebits"},(0,a.kt)("inlineCode",{parentName:"h4"},"flags.debits")),(0,a.kt)("p",null,"Whether or not to include ",(0,a.kt)("a",{parentName:"p",href:"/reference/transfers"},(0,a.kt)("inlineCode",{parentName:"a"},"Transfer")),"s where the field ",(0,a.kt)("a",{parentName:"p",href:"/reference/transfers#debit_account_id"},(0,a.kt)("inlineCode",{parentName:"a"},"debit_account_id")),"\nmatches the parameter ",(0,a.kt)("a",{parentName:"p",href:"#account_id"},(0,a.kt)("inlineCode",{parentName:"a"},"account_id")),"."),(0,a.kt)("h4",{id:"flagscredits"},(0,a.kt)("inlineCode",{parentName:"h4"},"flags.credits")),(0,a.kt)("p",null,"Whether or not to include ",(0,a.kt)("a",{parentName:"p",href:"/reference/transfers"},(0,a.kt)("inlineCode",{parentName:"a"},"Transfer")),"s where the field ",(0,a.kt)("a",{parentName:"p",href:"/reference/transfers#credit_account_id"},(0,a.kt)("inlineCode",{parentName:"a"},"credit_account_id")),"\nmatches the parameter ",(0,a.kt)("a",{parentName:"p",href:"#account_id"},(0,a.kt)("inlineCode",{parentName:"a"},"account_id")),"."),(0,a.kt)("h4",{id:"flagsreversed"},(0,a.kt)("inlineCode",{parentName:"h4"},"flags.reversed")),(0,a.kt)("p",null,"Whether the results are sorted by timestamp in chronological or reverse-chronological order."),(0,a.kt)("h2",{id:"result"},"Result"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If any matching transfers exist, return an array of ",(0,a.kt)("a",{parentName:"li",href:"/reference/transfers"},(0,a.kt)("inlineCode",{parentName:"a"},"Transfer")),"s.  "),(0,a.kt)("li",{parentName:"ul"},"If no matching transfers exist, return nothing.  "),(0,a.kt)("li",{parentName:"ul"},"If any constraint is violated, return nothing. ")),(0,a.kt)("h2",{id:"client-libraries"},"Client libraries"),(0,a.kt)("p",null,"For language-specific docs see:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/clients/dotnet#get-account-transfers"},"Looking up transfers using the .NET library")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/clients/java#get-account-transfers"},"Looking up transfers using the Java library")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/clients/go#get-account-transfers"},"Looking up transfers using the Go library")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/clients/node#get-account-transfers"},"Looking up transfers using the Node.js library"))))}f.isMDXComponent=!0}}]);