"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[662],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),b=i,d=p["".concat(s,".").concat(b)]||p[b]||g[b]||l;return n?r.createElement(d,a(a({ref:t},c),{},{components:n})):r.createElement(d,a({ref:t},c))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,a=new Array(l);a[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var u=2;u<l;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3767:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>g,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const l={sidebar_position:2},a="Single-node cluster with a single binary",o={unversionedId:"deployment/single-binary",id:"deployment/single-binary",title:"Single-node cluster with a single binary",description:"Install TigerBeetle by grabbing the latest release from",source:"@site/pages/deployment/single-binary.md",sourceDirName:"deployment",slug:"/deployment/single-binary",permalink:"/deployment/single-binary",draft:!1,editUrl:"https://github.com/tigerbeetledb/tigerbeetle/blob/main/docs/deployment/single-binary.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Single-node cluster with Docker",permalink:"/deployment/with-docker"},next:{title:"3-node cluster with Docker Compose",permalink:"/deployment/with-docker-compose"}},s={},u=[{value:"Prebuilt Linux binary",id:"prebuilt-linux-binary",level:2},{value:"Debugging panics",id:"debugging-panics",level:3},{value:"Prebuilt macOS binary",id:"prebuilt-macos-binary",level:2},{value:"Debugging panics",id:"debugging-panics-1",level:3},{value:"Building from source",id:"building-from-source",level:2},{value:"Debugging panics",id:"debugging-panics-2",level:3},{value:"Running TigerBeetle",id:"running-tigerbeetle",level:2}],c={toc:u};function g(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"single-node-cluster-with-a-single-binary"},"Single-node cluster with a single binary"),(0,i.kt)("p",null,"Install TigerBeetle by grabbing the latest release from\nGitHub."),(0,i.kt)("h2",{id:"prebuilt-linux-binary"},"Prebuilt Linux binary"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ curl -LO https://github.com/tigerbeetledb/tigerbeetle/releases/download/2022-11-16-weekly/tigerbeetle-Linux-x64-2022-11-16-weekly.zip\n$ unzip tigerbeetle-Linux-x64-2022-11-16-weekly.zip\n$ sudo cp tigerbeetle /usr/local/bin/tigerbeetle\n$ tigerbeetle version --verbose | head -n6\nTigerBeetle version experimental\n\ngit_commit="b47292aaf2492e6b56a977009b85f7fca6e66775"\n\nzig_version=0.9.1\nmode=Mode.ReleaseSafe\n')),(0,i.kt)("h3",{id:"debugging-panics"},"Debugging panics"),(0,i.kt)("p",null,"If you run into panics, you can get more information by using the\ndebug binary. To grab this binary, add ",(0,i.kt)("inlineCode",{parentName:"p"},"--debug")," before the ",(0,i.kt)("inlineCode",{parentName:"p"},".zip"),"\nextension:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ curl -LO https://github.com/tigerbeetledb/tigerbeetle/releases/download/2022-11-16-weekly/tigerbeetle-Linux-x64-2022-11-16-weekly--debug.zip\n")),(0,i.kt)("h2",{id:"prebuilt-macos-binary"},"Prebuilt macOS binary"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ curl -LO https://github.com/tigerbeetledb/tigerbeetle/releases/download/2022-11-16-weekly/tigerbeetle-macOS-x64-2022-11-16-weekly.zip\n$ unzip tigerbeetle-macOS-x64-2022-11-16-weekly.zip\n$ sudo cp tigerbeetle /usr/local/bin/tigerbeetle\n$ tigerbeetle version --verbose | head -n6\nTigerBeetle version experimental\n\ngit_commit="b47292aaf2492e6b56a977009b85f7fca6e66775"\n\nzig_version=0.9.1\nmode=Mode.ReleaseSafe\n')),(0,i.kt)("h3",{id:"debugging-panics-1"},"Debugging panics"),(0,i.kt)("p",null,"If you run into panics, you can get more information by using the\ndebug binary. To grab this binary, add ",(0,i.kt)("inlineCode",{parentName:"p"},"--debug")," before the ",(0,i.kt)("inlineCode",{parentName:"p"},".zip"),"\nextension:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ curl -LO https://github.com/tigerbeetledb/tigerbeetle/releases/download/2022-11-16-weekly/tigerbeetle-macOS-x64-2022-11-16-weekly--debug.zip\n")),(0,i.kt)("h2",{id:"building-from-source"},"Building from source"),(0,i.kt)("p",null,"Or to build from source, clone the repo, checkout a release, and run\nthe install script."),(0,i.kt)("p",null,"You will need POSIX userland, curl or wget, tar, and xz."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/tigerbeetledb/tigerbeetle.git\n$ git checkout 2022-11-16-weekly # Or latest tag\n$ cd tigerbeetle\n$ scripts/install.sh\n")),(0,i.kt)("p",null,"Don't worry, this will only make changes within the ",(0,i.kt)("inlineCode",{parentName:"p"},"tigerbeetle"),"\ndirectory. No global changes. The result will place the compiled\n",(0,i.kt)("inlineCode",{parentName:"p"},"tigerbeetle")," binary into the current directory."),(0,i.kt)("h3",{id:"debugging-panics-2"},"Debugging panics"),(0,i.kt)("p",null,"If you run into panics, you can get more information by using the\ndebug binary:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ DEBUG=true ./scripts/install.sh\n")),(0,i.kt)("h2",{id:"running-tigerbeetle"},"Running TigerBeetle"),(0,i.kt)("p",null,"Now create the TigerBeetle data file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ ./tigerbeetle format --cluster=0 --replica=0 --replica-count=1 0_0.tigerbeetle\ninfo(io): creating "0_0.tigerbeetle"...\ninfo(io): allocating 660.140625MiB...\n')),(0,i.kt)("p",null,"And start the server."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ ./tigerbeetle start --addresses=3000 0_0.tigerbeetle\ninfo(io): opening "0_0.tigerbeetle"...\ninfo(main): 0: cluster=0: listening on 127.0.0.1:3000\n')),(0,i.kt)("p",null,"Now you can connect to the running server with any client. For a quick\nstart, try ",(0,i.kt)("a",{parentName:"p",href:"../usage/node-cli"},"creating accounts and transfers in the Node\nCLI"),"."))}g.isMDXComponent=!0}}]);