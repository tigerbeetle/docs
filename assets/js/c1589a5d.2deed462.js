"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7146],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>f});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return t?n.createElement(f,i(i({ref:r},p),{},{components:t})):n.createElement(f,i({ref:r},p))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4316:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=t(7462),o=(t(7294),t(3905));const a={sidebar_position:2},i="Hardware",l={unversionedId:"deploy/hardware",id:"deploy/hardware",title:"Hardware",description:"TigerBeetle is designed to operate and provide more than adequate performance even on commodity",source:"@site/pages/deploy/hardware.md",sourceDirName:"deploy",slug:"/deploy/hardware",permalink:"/deploy/hardware",draft:!1,editUrl:"https://github.com/tigerbeetle/tigerbeetle/blob/main/docs/deploy/hardware.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"The TigerBeetle Cluster",permalink:"/deploy/cluster"},next:{title:"Deploying on Linux",permalink:"/deploy/linux"}},c={},s=[{value:"Storage",id:"storage",level:2},{value:"Memory",id:"memory",level:2},{value:"CPU",id:"cpu",level:2},{value:"Multitenancy",id:"multitenancy",level:2}],p={toc:s},d="wrapper";function u(e){let{components:r,...t}=e;return(0,o.kt)(d,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"hardware"},"Hardware"),(0,o.kt)("p",null,"TigerBeetle is designed to operate and provide more than adequate performance even on commodity\nhardware."),(0,o.kt)("h2",{id:"storage"},"Storage"),(0,o.kt)("p",null,"NVMe is preferred to SSD for high performance deployments."),(0,o.kt)("p",null,"However, spinning rust is perfectly acceptable, especially where a cluster is expected to be long\nlived, and the data file is expected to be large. There is no requirement for NVMe or SSD."),(0,o.kt)("p",null,"A 20 TiB disk containing a replica's data file is enough to address on the order of 50 billion\naccounts or transfers. It is more important to provision sufficient storage space for a replica\u2019s\ndata file than to provision high performance storage. The data file is created before the server is\ninitially run and grows automatically."),(0,o.kt)("p",null,"A replica's data file may reside on local storage or else on remote storage. The most important\nconcern is to ensure ",(0,o.kt)("a",{parentName:"p",href:"/deploy/cluster#hardware-fault-tolerance"},"independent fault domains")," across\nreplicas."),(0,o.kt)("p",null,"The operator may consider the use of RAID 10 to reduce the need for remote recovery if a replica's\ndisk fails."),(0,o.kt)("h2",{id:"memory"},"Memory"),(0,o.kt)("p",null,"ECC memory is recommended for production deployments."),(0,o.kt)("p",null,"A replica requires at least 6 GiB RAM per machine. Between 16 GiB and 32 GiB or more (depending on\nbudget) is recommended to be allocated to each replica for caching. TigerBeetle uses static\nallocation and will use exactly how much memory is explicitly allocated to it for caching via\ncommand line argument."),(0,o.kt)("h2",{id:"cpu"},"CPU"),(0,o.kt)("p",null,"TigerBeetle requires only a single core per replica machine. TigerBeetle at present ",(0,o.kt)("a",{parentName:"p",href:"/about/performance#single-core-by-design"},"does not\nutilize more cores"),", but may in future."),(0,o.kt)("h2",{id:"multitenancy"},"Multitenancy"),(0,o.kt)("p",null,"There are no restrictions on sharing a server with other tenant processes."))}u.isMDXComponent=!0}}]);