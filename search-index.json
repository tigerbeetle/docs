[{"path":"","html":"<h1 id=\"tigerbeetle\"><a href=\"#tigerbeetle\"\nclass=\"anchor\">TigerBeetle</a></h1>\n<p>This is the documentation for TigerBeetle: the financial transactions\ndatabase designed for mission critical safety and performance to power\nthe next 30 years of <a href=\"./concepts/oltp\">OLTP</a>.</p>\n<p>This is how the entire documentation is organized:</p>\n<ul>\n<li><a href=\"./start\">Start</a> gets you up and running with a\ncluster.</li>\n<li><a href=\"./concepts/\">Concepts</a> explains why TigerBeetle\nexists.</li>\n<li><a href=\"./coding/\">Coding</a> shows how to integrate TigerBeetle\ninto your application.</li>\n<li><a href=\"./operating/\">Operating</a> covers deployment and operating\na TigerBeetle cluster.</li>\n<li><a href=\"./reference/\">Reference</a> is a companion to <a\nhref=\"./coding/\">Coding</a> which meticulously documents every\ndetail.</li>\n</ul>\n<p>Note that this documentation is aimed at the users of TigerBeetle. If\nyou want to understand how it works under the hood, check out the <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/tree/main/docs/internals\">internals\ndocs</a>.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/README.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"start","html":"<h1 id=\"start\"><a href=\"#start\" class=\"anchor\">Start</a></h1>\n<p>TigerBeetle is a reliable, fast, and highly available database for\nfinancial accounting. It tracks financial transactions or anything else\nthat can be expressed as double-entry bookkeeping, providing three\norders of magnitude more performance and guaranteeing durability even in\nthe face of network, machine, and storage faults. You will learn more\nabout why this is an important and hard problem to solve in the <a\nhref=\"../concepts/\">Concepts</a> section, but let’s make some real\ntransactions first!</p>\n<h2 id=\"install\"><a href=\"#install\" class=\"anchor\">Install</a></h2>\n<p>TigerBeetle is a single, small, statically linked binary.</p>\n<p>You can download a pre-built binary from\n<code>tigerbeetle.com</code>:</p>\n<details open>\n<summary>Linux</summary>\n\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>curl -Lo tigerbeetle.zip https://linux.tigerbeetle.com &amp;&amp; unzip tigerbeetle.zip\n./tigerbeetle version</code></pre>\n</div>\n</details>\n\n<details>\n<summary>macOS</summary>\n\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>curl -Lo tigerbeetle.zip https://mac.tigerbeetle.com &amp;&amp; unzip tigerbeetle.zip\n./tigerbeetle version</code></pre>\n</div>\n</details>\n\n<details>\n<summary>Windows</summary>\n\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>powershell -command &quot;curl.exe -Lo tigerbeetle.zip https://windows.tigerbeetle.com; Expand-Archive tigerbeetle.zip .\n.\\tigerbeetle version</code></pre>\n</div>\n</details>\n\n<p>See <a href=\"../operating/installing\">Installing</a> for other\noptions.</p>\n<h2 id=\"run-a-cluster\"><a href=\"#run-a-cluster\" class=\"anchor\">Run a\nCluster</a></h2>\n<p>Typically, TigerBeetle is deployed as a cluster of 6 replicas, which\nis described in the <a href=\"../operating/\">Operating</a> section. But\nit is also possible to run a single-replica cluster, which of course\ndoesn’t provide high-availability, but is convenient for\nexperimentation. That’s what we’ll do here.</p>\n<p>First, format a data file:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>./tigerbeetle format --cluster=0 --replica=0 --replica-count=1 --development ./0_0.tigerbeetle</code></pre>\n</div>\n<p>A TigerBeetle replica stores everything in a single file\n(<code>./0_0.tigerbeetle</code> in this case). The\n<code>--cluster</code>, <code>--replica</code>, and\n<code>--replica-count</code> arguments set the topology of the cluster\n(a single replica for this tutorial).</p>\n<p>Now, start a replica:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>./tigerbeetle start --addresses=3000 --development ./0_0.tigerbeetle</code></pre>\n</div>\n<p>It will listen on port 3000 for connections from clients. There’s\nintensionally no way to gracefully shut down a replica, you can\n<code>^C</code> it freely, and the data will be safe as long as the\nunderlying storage functions correctly. Note that with a real cluster of\n6 replicas, the data is safe even if the storage misbehaves.</p>\n<h2 id=\"connecting-to-a-cluster\"><a href=\"#connecting-to-a-cluster\"\nclass=\"anchor\">Connecting to a Cluster</a></h2>\n<p>Now that the cluster is running, we can connect to it using a client.\nTigerBeetle already has clients for several popular programming\nlanguages, including Go, Node.js, Java, and Python, and more are coming;\nsee the <a href=\"../coding\">Coding</a> section for details. For this\ntutorial, we’ll keep it simple and connect to the cluster using the\nbuilt-in CLI client. In a separate terminal, start a REPL with</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>./tigerbeetle repl --cluster=0 --addresses=3000</code></pre>\n</div>\n<p>The <code>--addresses</code> argument is the port the server is\nlistening on. The <code>--cluster</code> argument is required to\ndouble-check that the client connects to the correct cluster. While not\nstrictly necessary, it helps prevent operator errors.</p>\n<h2 id=\"issuing-transactions\"><a href=\"#issuing-transactions\"\nclass=\"anchor\">Issuing Transactions</a></h2>\n<p>TigerBeetle comes with a pre-defined database schema — double-entry\nbookkeeping. The <a href=\"../concepts\">Concept</a> section explains why\nthis particular schema, and the <a href=\"../reference\">Reference</a>\ndocuments all the bells and whistles, but, for the purposes of this\ntutorial, it is enough to understand that there are accounts holding\n<code>credits</code> and <code>debits</code> balances, and that each\ntransfer moves value between two accounts by incrementing\n<code>credits</code> on one side and <code>debits</code> on the\nother.</p>\n<p>In the REPL, let’s create two empty accounts:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>&gt; create_accounts id=1 code=10 ledger=700, id=2 code=10 ledger=700;\n&gt; lookup_accounts id=1, id=2;</code></pre>\n</div>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb8\"><pre\nclass=\"sourceCode json\"><code class=\"sourceCode json\"><span id=\"cb8-1\"><a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">{</span></span>\n<span id=\"cb8-2\"><a href=\"#cb8-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;id&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;1&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb8-3\"><a href=\"#cb8-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;user_data&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb8-4\"><a href=\"#cb8-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;ledger&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;700&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb8-5\"><a href=\"#cb8-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;code&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;10&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb8-6\"><a href=\"#cb8-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;flags&quot;</span><span class=\"fu\">:</span> <span class=\"ot\">[]</span><span class=\"fu\">,</span></span>\n<span id=\"cb8-7\"><a href=\"#cb8-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;debits_pending&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb8-8\"><a href=\"#cb8-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;debits_posted&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb8-9\"><a href=\"#cb8-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;credits_pending&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb8-10\"><a href=\"#cb8-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;credits_posted&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span></span>\n<span id=\"cb8-11\"><a href=\"#cb8-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">}</span></span>\n<span id=\"cb8-12\"><a href=\"#cb8-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">{</span></span>\n<span id=\"cb8-13\"><a href=\"#cb8-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;id&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;2&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb8-14\"><a href=\"#cb8-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;user_data&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb8-15\"><a href=\"#cb8-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;ledger&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;700&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb8-16\"><a href=\"#cb8-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;code&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;10&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb8-17\"><a href=\"#cb8-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;flags&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb8-18\"><a href=\"#cb8-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;debits_pending&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb8-19\"><a href=\"#cb8-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;debits_posted&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb8-20\"><a href=\"#cb8-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;credits_pending&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb8-21\"><a href=\"#cb8-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;credits_posted&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span></span>\n<span id=\"cb8-22\"><a href=\"#cb8-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">}</span></span></code></pre></div>\n</div>\n<p>Now, create our first transfer and inspect the state of accounts\nafterwards:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>&gt; create_transfers id=1 debit_account_id=1 credit_account_id=2 amount=10 ledger=700 code=10;\n&gt; lookup_accounts id=1, id=2;</code></pre>\n</div>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb10\"><pre\nclass=\"sourceCode json\"><code class=\"sourceCode json\"><span id=\"cb10-1\"><a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">{</span></span>\n<span id=\"cb10-2\"><a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;id&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;1&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-3\"><a href=\"#cb10-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;user_data&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-4\"><a href=\"#cb10-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;ledger&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;700&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-5\"><a href=\"#cb10-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;code&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;10&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-6\"><a href=\"#cb10-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;flags&quot;</span><span class=\"fu\">:</span> <span class=\"ot\">[]</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-7\"><a href=\"#cb10-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;debits_pending&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-8\"><a href=\"#cb10-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;debits_posted&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;10&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-9\"><a href=\"#cb10-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;credits_pending&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-10\"><a href=\"#cb10-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;credits_posted&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span></span>\n<span id=\"cb10-11\"><a href=\"#cb10-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">}</span></span>\n<span id=\"cb10-12\"><a href=\"#cb10-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">{</span></span>\n<span id=\"cb10-13\"><a href=\"#cb10-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;id&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;2&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-14\"><a href=\"#cb10-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;user_data&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-15\"><a href=\"#cb10-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;ledger&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;700&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-16\"><a href=\"#cb10-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;code&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;10&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-17\"><a href=\"#cb10-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;flags&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-18\"><a href=\"#cb10-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;debits_pending&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-19\"><a href=\"#cb10-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;debits_posted&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-20\"><a href=\"#cb10-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;credits_pending&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;0&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-21\"><a href=\"#cb10-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;credits_posted&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;10&quot;</span></span>\n<span id=\"cb10-22\"><a href=\"#cb10-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">}</span></span></code></pre></div>\n</div>\n<p>Note how the transfer amount is added both to the credits and to the\ndebits. That the sum of debits and credits stays equal no matter what is\na powerful invariant of the double-entry bookkeeping system.</p>\n<h2 id=\"conclusion\"><a href=\"#conclusion\"\nclass=\"anchor\">Conclusion</a></h2>\n<p>This is the end of the quick start! You now know how to format a data\nfile, run a single-replica TigerBeetle cluster, and run transactions\nthrough it. Here’s where to go from here:</p>\n<ul>\n<li><a href=\"../concepts/\">Concepts</a> explains the “why?” of\nTigerBeetle, read this to decide if you need to use TigerBeetle.</li>\n<li><a href=\"../coding/\">Coding</a> gives guidance on developing\napplications which store accounting data in a TigerBeetle cluster.</li>\n<li><a href=\"../operating/\">Operating</a> explains how to deploy a\nTigerBeetle cluster in a highly-available manner, with replication\nenabled.</li>\n<li><a href=\"../reference/\">Reference</a> meticulously documents every\nsingle available feature and flag of the underlying data model.</li>\n</ul>\n<h2 id=\"community\"><a href=\"#community\"\nclass=\"anchor\">Community</a></h2>\n<p>If you want to keep up to speed with recent TigerBeetle developments,\nhere are some things to follow:</p>\n<ul>\n<li><a\nhref=\"https://mailchi.mp/8e9fa0f36056/subscribe-to-tigerbeetle\">Monthly\nNewsletter</a> covers everything of importance that happened with\nTigerBeetle. It is a changelog director’s cut!</li>\n<li><a href=\"https://slack.tigerbeetle.com/join\">Slack</a> is the place\nto hang out with users and developers of TigerBeetle. We try to answer\nevery question.</li>\n<li><a href=\"https://www.youtube.com/@tigerbeetledb\">YouTube</a> channel\nhas most of the talks about TigerBeetle, as well as talks from the\nSystems Distributed conference. We also stream on <a\nhref=\"https://www.twitch.tv/tigerbeetle\">Twitch</a>, with recordings\nduplicated to YouTube.</li>\n<li><a href=\"https://twitter.com/TigerBeetleDB\">𝕏</a> is good for\nsmaller updates, and word-of-mouth historical trivia you won’t learn\nelsewhere!</li>\n<li><a href=\"https://github.com/tigerbeetle/tigerbeetle\">GitHub</a> — if\nyou want to keep closer to the source!</li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/start.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"concepts","html":"<h1 id=\"concepts\"><a href=\"#concepts\" class=\"anchor\">Concepts</a></h1>\n<p>This section is for anyone evaluating TigerBeetle, eager to learn\nabout it, or curious. It focuses on the big picture and problems that\nTigerBeetle solves. As well as why it looks nothing like a typical SQL\ndatabase from the outside <em>and</em> from the inside.</p>\n<ul>\n<li><a href=\"./oltp\">OLTP</a> defines the domain of TigerBeetle — system\nof record for business transactions.</li>\n<li><a href=\"./debit-credit\">Debit-Credit</a> argues that double-entry\nbookkeeping is the right schema for this domain.</li>\n<li><a href=\"./performance\">Performance</a> explains how TigerBeetle\nachieves state-of-the-art performance.</li>\n<li><a href=\"./safety\">Safety</a> shows that safety and performance are\nnot at odds with each other.</li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/concepts/README.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"concepts/oltp","html":"<h1 id=\"online-transaction-processing-oltp\"><a\nhref=\"#online-transaction-processing-oltp\" class=\"anchor\">Online\nTransaction Processing (OLTP)</a></h1>\n<p>Online Transaction Processing (OLTP) is about <strong>recording\nbusiness transactions in real-time</strong>. This could be payments,\nsales, car sharing rides, game scores, or API usage.</p>\n<h2 id=\"the-world-is-becoming-more-transactional\"><a\nhref=\"#the-world-is-becoming-more-transactional\" class=\"anchor\">The\nWorld is Becoming More Transactional</a></h2>\n<p>Historically, general purpose databases like PostgreSQL, MySQL, and\nSQLite handled OLTP. We refer to these as Online General Purpose (OLGP)\ndatabases.</p>\n<p>OLTP workloads have increased by 3-4 orders of magnitude in the last\n10 years alone. For example:</p>\n<ul>\n<li>The <a\nhref=\"https://en.wikipedia.org/wiki/Unified_Payments_Interface\">UPI</a>\nreal-time payments switch in India processed 10 billion payments in the\nyear 2019. In January 2025 alone, it processed <a\nhref=\"https://www.npci.org.in/what-we-do/upi/product-statistics\">16.9\nbillion payments.</a></li>\n<li>Cleaner energy and smart metering means energy is being traded by\nthe kilowatt-hour. Customer billing is every 15 or 30 minutes rather\nthan at the end of the month.</li>\n<li>Serverless APIs charge for usage by the second or per-request,\nrather than per month. (Today, serverless billing at scale is often\nimplemented using <a\nhref=\"https://en.wikipedia.org/wiki/MapReduce\">MapReduce</a>. This makes\nit difficult or impossible to offer customers real-time spending\ncaps.)</li>\n</ul>\n<p>OLGP databases already struggle to keep up.</p>\n<p><strong>But TigerBeetle is built to handle the scale of OLTP\nworkloads today and for the decades to come.</strong> It works well\nalongside OLGP databases, which hold infrequently updated data.\nTigerBeetle can race ahead, giving your system unparalleled latency and\nthroughput.</p>\n<h2 id=\"write-heavy-workloads\"><a href=\"#write-heavy-workloads\"\nclass=\"anchor\">Write-Heavy Workloads</a></h2>\n<p>A distinguishing characteristic of OLTP is its focus on\n<em>recording</em> business transactions. In contrast, OLGP databases\nare often designed for read-heavy or balanced workloads.</p>\n<p>TigerBeetle is optimized from the ground up for write-heavy\nworkloads. This means it can handle the increasing scale of OLTP, unlike\nan OLGP database.</p>\n<h2 id=\"high-contention-on-hot-accounts\"><a\nhref=\"#high-contention-on-hot-accounts\" class=\"anchor\">High Contention\non Hot Accounts</a></h2>\n<p>Business transactions always involve more than one account. One\naccount gets paid but then there are fees, taxes, revenue splits, and\nother costs to account for.</p>\n<p>OLTP systems often have accounts involved in a high percentage of all\ntransactions. This is especially true for accounts that represent the\nbusiness income or expenses. Locks can be used to ensure that updates to\nthese ‘hot accounts’ are consistent. But the resulting contention can\nbring the system’s performance to a crawl.</p>\n<p>TigerBeetle provides strong consistency guarantees without row locks.\nThis sidesteps the issue of contention on hot accounts. Due to\nTigerBeetle’s use of the system cache, transactions processing speed\neven <em>increases</em>.</p>\n<h2 id=\"business-transactions-dont-shard-well\"><a\nhref=\"#business-transactions-dont-shard-well\" class=\"anchor\">Business\nTransactions Don’t Shard Well</a></h2>\n<p>One of the most common ways to scale systems is to horizontally scale\nor shard them. This means different servers process different sets of\ntransactions. Unfortunately, business transactions don’t shard well.\nHorizontal scaling is a poor fit for OLTP:</p>\n<ul>\n<li>Most accounts cannot be neatly partitioned between shards.</li>\n<li>Transactions between accounts on different shards become more\ncomplex and slow.</li>\n<li>Row locks on hot accounts worsen when the transactions must execute\nacross shards.</li>\n</ul>\n<p>Another approach to scaling OLTP systems is to use MapReduce for\nbilling. But this makes it hard to provide real-time balance reporting\nor spending limits. It also creates a poor user experience that’s hard\nto fix post system design.</p>\n<p>TigerBeetle uses a <a\nhref=\"../performance#single-threaded-by-design\">single-core design</a>\nand unique performance optimizations to deliver high throughput. And\nthis without the downsides of horizontal scaling.</p>\n<h2 id=\"bottleneck-for-your-system\"><a\nhref=\"#bottleneck-for-your-system\" class=\"anchor\">Bottleneck for Your\nSystem</a></h2>\n<p>You can only do as much business as your database supports. You need\na core OLTP database capable of handling your transactions on your\nbusiest days. And for decades to come.</p>\n<p>TigerBeetle is designed to handle <strong>1 million transactions per\nsecond</strong>, to remove the risk of your business outgrowing your\ndatabase.</p>\n<h2 id=\"next-up-debit--credit-is-the-schema-for-oltp\"><a\nhref=\"#next-up-debit--credit-is-the-schema-for-oltp\" class=\"anchor\">Next\nUp: Debit / Credit is the Schema for OLTP</a></h2>\n<p>The world is becoming more transactional. OLTP workloads are\nincreasing and we need a database designed from the ground up to handle\nthem. What is the perfect schema and language for this database? <a\nhref=\"../debit-credit\">Debit / Credit</a>.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/concepts/oltp.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"concepts/debit-credit","html":"<h1 id=\"debit--credit-the-schema-for-oltp\"><a\nhref=\"#debit--credit-the-schema-for-oltp\" class=\"anchor\">Debit / Credit:\nThe Schema for OLTP</a></h1>\n<p>As discussed in the previous section, OLTP is all about processing\nbusiness transactions. We saw that the nuances of OLTP workloads make\nthem tricky to handle at scale.</p>\n<p>Now, we’ll turn to the data model and see how the specifics of\nbusiness transactions actually lend themselves to an incredibly simple\nschema – and one that’s been in use for centuries!</p>\n<h2 id=\"the-who-what-when-where-why-and-how-much-of-oltp\"><a\nhref=\"#the-who-what-when-where-why-and-how-much-of-oltp\"\nclass=\"anchor\">The “Who, What, When, Where, Why, and How Much” of\nOLTP</a></h2>\n<p>OLTP and business transactions tend to record the same types of\ninformation:</p>\n<ul>\n<li><strong>Who</strong>: which accounts are transacting?</li>\n<li><strong>What</strong>: what type of asset or value is moving?</li>\n<li><strong>When</strong>: when was the transaction initiated or when\nwas it finalized?</li>\n<li><strong>Where</strong>: where in the world did the transaction take\nplace?</li>\n<li><strong>Why</strong>: what type of transaction is this or why is it\nhappening?</li>\n<li><strong>How Much</strong>: what quantity of the asset or items was\nmoved?</li>\n</ul>\n<h2 id=\"the-language-of-business-for-centuries\"><a\nhref=\"#the-language-of-business-for-centuries\" class=\"anchor\">The\nLanguage of Business for Centuries</a></h2>\n<p>Debit / credit, or double-entry bookkeeping, has been the lingua\nfranca of business and accounting since at least the 13th century.</p>\n<p>The key insight underpinning debit / credit systems is that every\ntransfer records a movement of value from one or more accounts to one or\nmore accounts. Money never appears from nowhere or disappears. This\nsimple principle helps ensure that all of a business’s money is\naccounted for.</p>\n<p>Debit / credit perfectly captures the who, what, when, where, why,\nand how much of OLTP while ensuring financial consistency.</p>\n<p>(For a deeper dive on debits and credits, see our primer on <a\nhref=\"../../coding/financial-accounting\">Financial Accounting</a>.)</p>\n<h2 id=\"sql-vs-debit--credit\"><a href=\"#sql-vs-debit--credit\"\nclass=\"anchor\">SQL vs Debit / Credit</a></h2>\n<p>While SQL is a great query language for getting data out of a\ndatabase, OLTP is primarily about getting data into the database and\nthis is where SQL falls short.</p>\n<p><strong>Often, a single business transaction requires multiple SQL\nqueries (on the order of 10 SQL queries per transaction)</strong> and\npotentially even multiple round-trips from the application to the\ndatabase.</p>\n<p>By designing a database specifically for the schema and needs of\nOLTP, we can ensure our accounting logic is enforced correctly while\nmassively increasing performance.</p>\n<h2 id=\"tigerbeetle-enforces-debit--credit-in-the-database\"><a\nhref=\"#tigerbeetle-enforces-debit--credit-in-the-database\"\nclass=\"anchor\">TigerBeetle Enforces Debit / Credit in the\nDatabase</a></h2>\n<p>The schema of OLTP is built into TigerBeetle’s data model, and is\nready for you to use:</p>\n<ul>\n<li><strong>Who</strong>: the <a\nhref=\"../../reference/transfer#debit_account_id\"><code>debit_account_id</code></a>\nand <a\nhref=\"../../reference/transfer#credit_account_id\"><code>credit_account_id</code></a>\nindicate which accounts are transacting.</li>\n<li><strong>What</strong>: each asset or type of value in TigerBeetle is\ntracked on a separate <a\nhref=\"../../coding/data-modeling#ledgers\">ledger</a>. The <a\nhref=\"../../reference/transfer#ledger\"><code>ledger</code></a> field\nindicates what is being transferred.</li>\n<li><strong>When</strong>: each transfer has a unique <a\nhref=\"../../reference/transfer#timestamp\"><code>timestamp</code></a> for\nwhen it is processed by the cluster, but you can add another timestamp\nrepresenting when the transaction happened in the real world in the <a\nhref=\"../../reference/transfer#user_data_64\"><code>user_data_64</code></a>\nfield.</li>\n<li><strong>Where</strong>: the <a\nhref=\"../../reference/transfer#user_data_32\"><code>user_data_32</code></a>\ncan be used to store the locale where the transfer occurred.</li>\n<li><strong>Why</strong>: the <a\nhref=\"../../reference/transfer#code\"><code>code</code></a> field stores\nthe reason a transfer occurred and should map to an enum or table of all\nthe possible business events.</li>\n<li><strong>How Much</strong>: the <a\nhref=\"../../reference/transfer#amount\"><code>amount</code></a> indicates\nhow much of the asset or item is being transferred.</li>\n</ul>\n<p>TigerBeetle also supports <a\nhref=\"../../coding/two-phase-transfers\">two-phase transfers</a> out of\nthe box, and can express complex atomic chains of transfers using <a\nhref=\"../../coding/linked-events\">linked events</a>. These powerful\nbuilt-in primitives allow for a large vocabulary of <a\nhref=\"../../coding/recipes/\">patterns and recipes</a> for <a\nhref=\"../../coding/data-modeling\">data modeling</a>.</p>\n<p>Crucially, accounting invariants such as balance limits are enforced\nwithin the database, avoiding round-trips between your database and\napplication logic.</p>\n<h2 id=\"immutability-is-essential\"><a href=\"#immutability-is-essential\"\nclass=\"anchor\">Immutability is Essential</a></h2>\n<p>Another critical element of debit / credit systems is immutability:\nonce transfers are recorded, they cannot be erased. Reversals are\nimplemented with separate transfers to provide a full and auditable log\nof business events.</p>\n<p>Accidentally dropping rows or tables is bad in any database, but it\nis unacceptable when it comes to accounting. Legal compliance and good\nbusiness practices require that all funds be fully accounted for, and\nall history be maintained.</p>\n<p>Transfers in TigerBeetle are always immutable, providing you with\npeace of mind out of the box. There is no possibility of a malformed\nquery unintentionally deleting data.</p>\n<h2 id=\"dont-roll-your-own-ledger\"><a href=\"#dont-roll-your-own-ledger\"\nclass=\"anchor\">Don’t Roll Your Own Ledger</a></h2>\n<p>Many companies start out building their own system for recording\nbusiness transactions. Then, once their business scales, they realize\nthey need a proper ledger and end up coming back to debits and\ncredits.</p>\n<p>A number of prime examples of this are:</p>\n<ul>\n<li><strong>Uber</strong>: In 2018, Uber started a 2-year, 40-engineer\neffort to migrate their collection and disbursement payment platform to\none based on the principles of double-entry accounting and debits and\ncredits.<a href=\"#fn1\" class=\"footnote-ref\" id=\"fnref1\"\nrole=\"doc-noteref\"><sup>1</sup></a></li>\n<li><strong>Airbnb</strong>: From 2012 to 2016, Airbnb used a\nMySQL-based data pipeline to record all of its transactions in an\nimmutable store suitable for reporting. The pipeline became too complex,\nhard to scale, and slow. They ended up building a new financial\nreporting system based on double-entry accounting.<a href=\"#fn2\"\nclass=\"footnote-ref\" id=\"fnref2\"\nrole=\"doc-noteref\"><sup>2</sup></a></li>\n<li><strong>Stripe</strong>: While we don’t know when this system\ninitially went into service, Stripe relies on an internal system based\non double-entry accounting and an immutable log of events to record all\nof the payments they process.<a href=\"#fn3\" class=\"footnote-ref\"\nid=\"fnref3\" role=\"doc-noteref\"><sup>3</sup></a></li>\n</ul>\n<aside id=\"footnotes\" class=\"footnotes footnotes-end-of-section\"\nrole=\"doc-footnote\">\n<hr />\n<ol>\n<li id=\"fn1\"><p>Singla, A., &amp; Wu, S. (2020, October 2).\n<em>Revolutionizing Money Movements at Scale with Strong Data\nConsistency</em>. Uber Blog. [<a\nhref=\"https://www.uber.com/blog/money-scale-strong-data](https://www.uber.com/blog/money-scale-strong-data)\">https://www.uber.com/blog/money-scale-strong-data](https://www.uber.com/blog/money-scale-strong-data)</a>.<a\nhref=\"#fnref1\" class=\"footnote-back\" role=\"doc-backlink\">↩︎</a></p></li>\n<li id=\"fn2\"><p>Liang, A. (2017, March 16). <em>Tracking the Money —\nScaling Financial Reporting at Airbnb</em>. The Airbnb Tech Blog. [<a\nhref=\"https://medium.com/airbnb-engineering/tracking-the-money-scaling-financial-reporting-at-airbnb-6d742b80f040](https://medium.com/airbnb-engineering/tracking-the-money-scaling-financial-reporting-at-airbnb-6d742b80f040)\">https://medium.com/airbnb-engineering/tracking-the-money-scaling-financial-reporting-at-airbnb-6d742b80f040](https://medium.com/airbnb-engineering/tracking-the-money-scaling-financial-reporting-at-airbnb-6d742b80f040)</a>.<a\nhref=\"#fnref2\" class=\"footnote-back\" role=\"doc-backlink\">↩︎</a></p></li>\n<li id=\"fn3\"><p>Ganelin, I. (2024, February 16). <em>Ledger: Stripe’s\nsystem for tracking and validating money movement</em>. Stripe Blog. [<a\nhref=\"https://stripe.com/blog/ledger-stripe-system-for-tracking-and-validating-money-movement](https://stripe.com/blog/ledger-stripe-system-for-tracking-and-validating-money-movement)\">https://stripe.com/blog/ledger-stripe-system-for-tracking-and-validating-money-movement](https://stripe.com/blog/ledger-stripe-system-for-tracking-and-validating-money-movement)</a>.<a\nhref=\"#fnref3\" class=\"footnote-back\" role=\"doc-backlink\">↩︎</a></p></li>\n</ol>\n</aside>\n<h2 id=\"standardized-simple-and-scalable\"><a\nhref=\"#standardized-simple-and-scalable\" class=\"anchor\">Standardized,\nSimple, and Scalable</a></h2>\n<p>From one perspective, debit / credit may seem like a limited data\nmodel. However, it is incredibly flexible and scalable. Any business\nevent can be recorded as debits and credits – indeed, accountants have\nbeen doing precisely this for centuries!</p>\n<p>Instead of modeling business transactions as a set of ad-hoc tables\nand relationships, debits and credits provide a simple and standardized\nschema that can be used across all product lines, now and in the future.\nThis avoids the need to add columns, tables, and complex relations\nbetween them as new features are added – and avoids complex schema\nmigrations.</p>\n<p>Debit / credit has been the foundation of business for hundreds of\nyears, and now you can leverage TigerBeetle’s high-performance\nimplementation of it built for OLTP in the 21st century.</p>\n<h2 id=\"next-performance\"><a href=\"#next-performance\"\nclass=\"anchor\">Next: Performance</a></h2>\n<p>So far, we’ve seen why we need a new database designed for OLTP and\nhow debit / credit provides the perfect data model for it. Next, we can\nlook at the <a href=\"../performance\">performance</a> of a database,\ndesigned for OLTP.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/concepts/debit-credit.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"concepts/performance","html":"<h1 id=\"performance\"><a href=\"#performance\"\nclass=\"anchor\">Performance</a></h1>\n<p>How, exactly, is TigerBeetle so fast?</p>\n<h2 id=\"its-all-about-the-interface\"><a\nhref=\"#its-all-about-the-interface\" class=\"anchor\">It’s All About The\nInterface</a></h2>\n<p>The key is that TigerBeetle designed specifically for <a\nhref=\"../oltp\">OLTP</a> workloads, as opposed to OLGP. The prevailing\nparadigm for OLGP is interactive transactions, where business-logic\nlives in the application, and the job of the database is to send the\ndata to the application, holding the locks while the data is being\nprocessed. This works for mixed read-write workload with low contention,\nbut fails for highly-contended OLTP workloads — locks over the network\nare very expensive!</p>\n<p>With TigerBeetle, <strong>all the logic lives inside the\ndatabase</strong>, obviating the need for locking. Not only is this very\nfast, it is also more convenient — the application can speak <a\nhref=\"../debit-credit\">Debit/Credit</a> directly, it doesn’t need to\ntranslate the language of business to SQL.</p>\n<h2 id=\"batching-batching-batching\"><a\nhref=\"#batching-batching-batching\" class=\"anchor\">Batching, Batching,\nBatching</a></h2>\n<p>On a busy day in a busy city, taking the subway is faster than using\na car. On empty streets, a personal sports car gives you the best\nlatency, but when the load and contention increase, due to <a\nhref=\"https://en.wikipedia.org/wiki/Little%27s_law\"><strong>Little’s\nlaw</strong></a>, both latency and throughput become abysmal.</p>\n<p>TigerBeetle works like a high-speed train — its interface always\ndeals with <em>batches</em> of transactions, 8k apiece. Although\nTigerBeetle is a replicated database using a consensus algorithm, the\ncost of replication is paid only once per batch, which means that\nTigerBeetle runs almost as fast as an in-memory hash map, all the while\nproviding extreme durability and availability.</p>\n<p>What’s more, under light load, the batches automatically become\nsmaller, trading unnecessary throughput for better latency.</p>\n<h2 id=\"extreme-engineering\"><a href=\"#extreme-engineering\"\nclass=\"anchor\">Extreme Engineering</a></h2>\n<p>Debit/Credit fixes inefficiency in the interface, pervasive batching\namortizes costs, but, to really hit performance targets, solid\nengineering is required at every level of the stack.</p>\n<p>TigerBeetle is built fully from scratch, without using any\ndependencies, to make sure that all the layers are co-designed for\nOLTP.</p>\n<p>TigerBeetle is written in Zig — a systems programming language which\ndoesn’t use garbage collection and is designed for writing fast\ncode.</p>\n<p>Every data structure is hand-crafted with the CPU in mind: a transfer\nobject is 128 bytes in size, cache-line aligned. Executing a batch of\ntransfers is just one tight CPU loop!</p>\n<p>TigerBeetle allocates all the memory statically: it never runs out of\nmemory, it never stalls due to a GC pause or mutex contention, and it\nnever fragments the memory.</p>\n<p>TigerBeetle is designed for io_uring — a new Linux kernel interface\nfor zero syscall networking and storage I/O.</p>\n<p>These and other performance rules are captured in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/docs/TIGER_STYLE.md\">TIGER_STYLE.md</a>\n— the secret recipe that keeps TigerBeetle fast and safe.</p>\n<h2 id=\"single-threaded-by-design\"><a href=\"#single-threaded-by-design\"\nclass=\"anchor\">Single Threaded By Design</a></h2>\n<p>TigerBeetle uses a single core by design and uses a single leader\nnode to process events. Adding more nodes can therefore increase\nreliability, but not throughput.</p>\n<p>For a high-performance database, this may seem like an unusual\nchoice. However, sharding in financial databases is notoriously\ndifficult, and contention issues often negate the would-be benefits.\nSpecifically, a small number of hot accounts are often involved in a\nlarge proportion of the transactions, so the shards responsible for\nthose accounts become bottlenecks.</p>\n<p>For more details on when single-threaded implementations of\nalgorithms outperform multi-threaded implementations, see <a\nhref=\"https://www.usenix.org/system/files/conference/hotos15/hotos15-paper-mcsherry.pdf\">“Scalability!\nBut at what COST?</a>.</p>\n<h2 id=\"performance--flexibility\"><a href=\"#performance--flexibility\"\nclass=\"anchor\">Performance = Flexibility</a></h2>\n<p>Is it <em>really</em> necessary to go to such great lengths in the\nname of performance? It of course depends on a particular use-case, but\nit’s worth keeping in mind that higher performance can unlock new\nuse-cases. An OLGP database might be enough to do nightly settlement,\nbut with OLTP real-time settlement is a no-brainer. If a transaction\nsystem just hits its throughput target, every unexpected delay or ops\naccident will lead to missed transactions. If a system operates at one\ntenth of capacity, this gives a lot of headroom for operators to deal\nwith the unexpected.</p>\n<p>Finally, it is always helpful to think about the future. The future\nis hard to predict (even the <em>present</em> is hard to wrap your head\naround!), but the <em>option</em> to handle significantly more load on a\nshort notice greatly expands your options.</p>\n<h2 id=\"next-safety\"><a href=\"#next-safety\" class=\"anchor\">Next:\nSafety</a></h2>\n<p>Performance can get you very far very fast, but it is useless if the\nresult is wrong. Business transaction processing also requires\n<strong>strong safety guarantees</strong>, to ensure that data cannot be\nlost, and <strong>high availability</strong> to ensure that money is not\nlost due to database downtime. Let’s look at how TigerBeetle ensures <a\nhref=\"../safety\">safety</a>.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/concepts/performance.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"concepts/safety","html":"<h1 id=\"safety\"><a href=\"#safety\" class=\"anchor\">Safety</a></h1>\n<p>The purpose of a database is to store data: if the database accepted\nnew data, it should be able to retrieve it later. Surprisingly, many\ndatabases don’t provide guaranteed durability — usually the data is\nthere, but, under certain edge case conditions, it can get lost!</p>\n<p>As the purpose of TigerBeetle is to be the system of record for\nbusiness transaction, associated with real-world value transfers, it is\nparamount that the data stored in TigerBeetle is safe.</p>\n<h2 id=\"strict-serializability\"><a href=\"#strict-serializability\"\nclass=\"anchor\">Strict Serializability</a></h2>\n<p>The easiest way to lose data is by incorrectly using the database, by\nmisconfiguring (or just misunderstanding) its isolation level. For this\nreason, TigerBeetle intentionally supports only the strictest possible\nisolation level — <strong>strict serializability</strong>. All transfers\nare executed one-by-one, on a single core.</p>\n<p>Furthermore, TigerBeetle’s state machine is designed according to the\n<a\nhref=\"../../coding/reliable-transaction-submission\"><strong>end-to-end\nidempotency principle</strong></a> — each transfer has a unique\nclient-generated <code>u128</code> id, and each transfer is processed at\nmost once, even in the presence of intermediate retry loops.</p>\n<h2 id=\"high-availability\"><a href=\"#high-availability\"\nclass=\"anchor\">High Availability</a></h2>\n<p>Some databases rely on a single central server, which puts the data\nat risk as any single server might fail catastrophically (e.g. due to a\nfire in the data center). Primary/backup systems with ad-hoc failover\ncan lose data due to split-brain.</p>\n<p>To avoid these pitfalls, TigerBeetle implements pioneering <a\nhref=\"http://pmg.csail.mit.edu/papers/vr-revisited.pdf\">Viewstamped\nReplication</a> and consensus algorithm, that guarantees correct,\nautomatic failover. It’s worth emphasizing that consensus proper needs\nonly be engaged during actual failover. During the normal operation, the\ncost of consensus is just the cost of replication, which is further\nminimized because of <a\nhref=\"../performance#batching-batching-batching\">batching</a>, tail\nlatency tolerance, and pipelining.</p>\n<p>TigerBeetle does not depend on synchronized system clocks, does not\nuse leader leases, and <strong>performs leader-based\ntimestamping</strong> so that your application can deal only with safe\nrelative quantities of time with respect to transfer timeouts. To ensure\nthat the leader’s clock is within safe bounds of “true time”,\nTigerBeetle combines all the clocks in the cluster to create a\nfault-tolerant clock that we call <a\nhref=\"https://tigerbeetle.com/blog/three-clocks-are-better-than-one/\">“cluster\ntime”</a>.</p>\n<p>For the highest availability, TigerBeetle should be deployed as a\ncluster of six replicas across three different cloud providers (two\nreplicas per provider). Because TigerBeetle uses <a\nhref=\"https://arxiv.org/pdf/1608.06696v1\">Heidi Howard’s flexible\nquorums</a>, this deployment is guaranteed to tolerate a complete outage\nof any cloud provider and will likely survive even if one extra replica\nfails.</p>\n<p>TigerBeetle detects and overcomes <a\nhref=\"https://www.microsoft.com/en-us/research/wp-content/uploads/2017/06/paper-1.pdf\">Gray\nFailure</a> automatically. If a replica’s disk becomes slow or the\nnetwork interface starts dropping packets, TigerBeetle automatically\nadjusts replication topology to ensure that the slow replica doesn’t\naffect user-visible latencies, while still guaranteeing cluster-wide\ndurability.</p>\n<h2 id=\"storage-fault-tolerance\"><a href=\"#storage-fault-tolerance\"\nclass=\"anchor\">Storage Fault Tolerance</a></h2>\n<p>Traditionally, databases assume that disks do not fail, or at least\nfail politely with a clear error code. This is usually a reasonable\nassumption, but edge cases matter.</p>\n<p>HDD and SSD hardware can fail. Disks can silently return corrupt data\n( <a href=\"https://www.usenix.org/system/files/fast20-maneas.pdf\">0.031%\nof SSD disks per year</a>, <a\nhref=\"https://www.usenix.org/legacy/events/fast08/tech/full_papers/bairavasundaram/bairavasundaram.pdf\">1.4%\nof Enterprise HDD disks per year</a>), misdirect IO ( <a\nhref=\"https://www.usenix.org/system/files/fast20-maneas.pdf\">0.023% of\nSSD disks per year</a>, <a\nhref=\"https://www.usenix.org/legacy/events/fast08/tech/full_papers/bairavasundaram/bairavasundaram.pdf\">0.466%\nof Nearline HDD disks per year</a>), or just suddenly become extremely\nslow, without returning an error code (the so called <a\nhref=\"https://www.microsoft.com/en-us/research/wp-content/uploads/2017/06/paper-1.pdf\">gray\nfailure</a>).</p>\n<p>On top of hardware, software might be buggy or just tricky to use\ncorrectly. Handling fsync failures correctly is <a\nhref=\"https://www.usenix.org/system/files/atc20-rebello.pdf\">particularly\nhard</a>.</p>\n<p><strong>TigerBeetle assumes that its disk <em>will</em> fail</strong>\nand takes advantage of replication to proactively repair replica’s local\ndisks.</p>\n<ul>\n<li>All data in TigerBeetle is immutable, checksummed, and <a\nhref=\"https://csrc.nist.gov/glossary/term/hash_chain\">hash-chained</a>,\nproviding a strong guarantee that no corruption or tampering happened.\nIn case of a latent sector error, the error is detected and repaired\nwithout any operator involvement.</li>\n<li>Most consensus implementations lose data or become unavailable if\nthe write-ahead log gets corrupted. TigerBeetle uses <a\nhref=\"https://www.youtube.com/watch?v=fDY6Wi0GcPs\">Protocol Aware\nRecovery</a> to remain available unless the data gets corrupted on every\nsingle replica.</li>\n<li>To minimize the impact of software bugs, TigerBeetle puts as little\nsoftware as possible between itself and the disk — TigerBeetle manages\nits own page cache, writes data to disk with O_DIRECT and can work with\na block device directly, no file system is necessary.</li>\n<li>TigerBeetle also tolerates gray failure — if a disk on a replica\nbecomes very slow, the cluster falls back on other replicas for\ndurability.</li>\n</ul>\n<h2 id=\"software-reliability\"><a href=\"#software-reliability\"\nclass=\"anchor\">Software Reliability</a></h2>\n<p>Even the advanced algorithm with a formally proved correctness\ntheorem is useless if the implementation is buggy. TigerBeetle uses the\noldest and the newest software engineering practices to ensure\ncorrectness.</p>\n<p>TigerBeetle is written in <a href=\"https://ziglang.org\">Zig</a> — a\nmodern systems programming language that removes many instances of\nundefined behavior, provides spatial memory safety and encourages\nsimple, straightforward code.</p>\n<p>TigerBeetle adheres to a strict code style, <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/docs/TIGER_STYLE.md\">TIGER_STYLE</a>,\ninspired by <a href=\"https://spinroot.com/gerard/pdf/P10.pdf\">NASA’s\npower of ten</a>. For example, TigerBeetle uses static memory\nallocation, which designs away memory fragmentation, out-of-memory\nerrors and use-after-frees.</p>\n<p>TigerBeetle is tested in the VOPR — a simulated environment where an\nentire cluster, running real code, is subjected to all kinds of network,\nstorage and process faults, at 1000x speed. This simulation can find\nboth logical errors in the algorithms and coding bugs in the source.\nThis simulator is running 24/7 on 1024 cores, fuzzing the latest version\nof the database.</p>\n<p>It also <strong>runs in your browser</strong>: <a\nhref=\"https://sim.tigerbeetle.com\">https://sim.tigerbeetle.com</a>!</p>\n<h2 id=\"human-fallibility\"><a href=\"#human-fallibility\"\nclass=\"anchor\">Human Fallibility</a></h2>\n<p>While, with a lot of care, software can be perfected to become\nvirtually bug-free, humans will always make mistakes. TigerBeetle takes\nthis into account and tries to protect from operator errors:</p>\n<ul>\n<li>The surface area is intentionally minimized, with little\nconfigurability.</li>\n<li>In particular, there’s only one isolation level — strict\nserializability.</li>\n<li>Upgrades are automatic and atomic, guaranteeing that each transfer\nis applied by only a single version of code.</li>\n<li>TigerBeetle always runs with online verification on, to detect any\ndiscrepancies in the data.</li>\n</ul>\n<h2 id=\"is-tigerbeetle-acid-compliant\"><a\nhref=\"#is-tigerbeetle-acid-compliant\" class=\"anchor\">Is TigerBeetle\nACID-compliant?</a></h2>\n<p>Yes. Let’s discuss each part:</p>\n<h3 id=\"atomicity\"><a href=\"#atomicity\"\nclass=\"anchor\">Atomicity</a></h3>\n<p>As part of replication, each operation is durably stored in at least\na quorum of replicas’ Write-Ahead Logs (WAL) before the primary will\nacknowledge the operation as committed. WAL entries are executed through\nthe state machine business logic and the resulting state changes are\nstored in TigerBeetle’s LSM-Forest local storage engine.</p>\n<p>The WAL is what allows TigerBeetle to achieve atomicity and\ndurability since the WAL is the source of truth. If TigerBeetle crashes,\nthe WAL is replayed at startup from the last checkpoint on disk.</p>\n<p>However, financial atomicity goes further than this: events and\ntransfers can be <a href=\"../../coding/linked-events\">linked</a> when\ncreated so they all succeed or fail together.</p>\n<h3 id=\"consistency\"><a href=\"#consistency\"\nclass=\"anchor\">Consistency</a></h3>\n<p>TigerBeetle guarantees strict serializability. And at the cluster\nlevel, stale reads are not possible since all operations (not only\nwrites, but also reads) go through the global consensus protocol.</p>\n<p>However, financial consistency requires more than this. TigerBeetle\nexposes a double-entry accounting API to guarantee that money cannot be\ncreated or destroyed, but only transferred from one account to another.\nAnd transfer history is immutable.</p>\n<h3 id=\"isolation\"><a href=\"#isolation\"\nclass=\"anchor\">Isolation</a></h3>\n<p>All client requests (and all events within a client request batch)\nare executed with the highest level of isolation, serially through the\nstate machine, one after another, before the next operation begins.\nCounterintuitively, the use of batching and serial execution means that\nTigerBeetle can also provide this level of isolation optimally, without\nthe cost of locks for all the individual events within a batch.</p>\n<h3 id=\"durability\"><a href=\"#durability\"\nclass=\"anchor\">Durability</a></h3>\n<p>Up until 2018, traditional DBMS durability has focused on the Crash\nConsistency Model, however, Fsyncgate and <a\nhref=\"https://www.usenix.org/conference/fast18/presentation/alagappan\">Protocol\nAware Recovery</a> have shown that this model can lead to real data loss\nfor users in the wild. TigerBeetle therefore adopts an explicit storage\nfault model, which we then verify and test with incredible levels of\ncorruption, something which few distributed systems historically were\ndesigned to handle. Our emphasis on protecting Durability is what sets\nTigerBeetle apart, not only as a ledger but as a DBMS.</p>\n<p>However, absolute durability is impossible, because all hardware can\nultimately fail. Data we write today might not be available tomorrow.\nTigerBeetle embraces limited disk reliability and maximizes data\ndurability in spite of imperfect disks. We actively work against such\nentropy by taking advantage of cluster-wide storage. A record would need\nto get corrupted on all replicas in a cluster to get lost, and even in\nthat case the system would safely halt.</p>\n<h2 id=\"io_uring-security\"><a href=\"#io_uring-security\"\nclass=\"anchor\"><code>io_uring</code> Security</a></h2>\n<p><code>io_uring</code> is a relatively new part of the Linux kernel\n(support for it was added in version 5.1, which was released in May\n2019). Since then, many kernel exploits have been found related to\n<code>io_uring</code> and in 2023 <a\nhref=\"https://security.googleblog.com/2023/06/learnings-from-kctf-vrps-42-linux.html\">Google\nannounced</a> that they were disabling it in ChromeOS, for Android apps,\nand on Google production servers.</p>\n<p>Google’s post is primarily about how they secure operating systems\nand web servers that handle hostile user content. In the Google blog\npost, they specifically note:</p>\n<blockquote>\n<p>we currently consider it safe only for use by trusted components</p>\n</blockquote>\n<p>As a financial system of record, TigerBeetle is a trusted component\nand it should be running in a trusted environment.</p>\n<p>Furthermore, TigerBeetle only uses 128-byte <a\nhref=\"../../reference/account\"><code>Account</code>s</a> and <a\nhref=\"../../reference/transfer\"><code>Transfer</code>s</a> with pure\ninteger fields. TigerBeetle has no (de)serialization and does not take\nuser-generated strings, which significantly constrains the attack\nsurface.</p>\n<p>We are confident that <code>io_uring</code> is the safest (and most\nperformant) way for TigerBeetle to handle async I/O. It is significantly\neasier for the kernel to implement this correctly than for us to include\na userspace multithreaded thread pool (for example, as libuv does).</p>\n<h2 id=\"next-coding\"><a href=\"#next-coding\" class=\"anchor\">Next:\nCoding</a></h2>\n<p>This concludes the discussion of the concepts behind TigerBeetle — an\n<a href=\"../oltp\">OLTP</a> database for recording business transactions\nin real time, using a <a href=\"../debit-credit\">double-entry\nbookkeeping</a> schema, which <a href=\"../performance\">is orders of\nmagnitude faster</a> and <a href=\"../safety\">keeps the data safe</a>\neven when the underling hardware inevitably fails.</p>\n<p>We will now learn <a href=\"../../coding/\">how to build applications\non top of TigerBeetle</a>.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/concepts/safety.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding","html":"<h1 id=\"coding\"><a href=\"#coding\" class=\"anchor\">Coding</a></h1>\n<p>This section is aimed at programmers building applications on top of\nTigerBeetle. It is organized as a series of loosely connected guides\nwhich can be read in any order.</p>\n<ul>\n<li><a href=\"./system-architecture\">System Architecture</a> paints the\nbig picture.</li>\n<li><a href=\"./data-modeling\">Data Modeling</a> shows how to map\nbusiness-level entities to the primitives provided by TigerBeetle.</li>\n<li><a href=\"./financial-accounting\">Financial Accounting</a>, a deep\ndive into double-entry bookkeeping.</li>\n<li><a href=\"./requests\">Requests</a> outlines the database\ninterface.</li>\n<li><a href=\"./reliable-transaction-submission\">Reliable Transaction\nSubmission</a> explains the end-to-end principle and how it helps to\navoid double spending.</li>\n<li><a href=\"./two-phase-transfers\">Two-Phase Transfers</a> introduces\npending transfers, one of the most powerful primitives built into\nTigerBeetle.</li>\n<li><a href=\"./linked-events\">Linked Events</a> shows how several\ntransfers can be chained together into a larger transaction, which\nsucceeds or fails atomically.</li>\n<li><a href=\"./time\">Time</a> lists the guarantees provided by the\nTigerBeetle cluster clock.</li>\n<li><a href=\"./recipes/\">Recipes</a> is a library of ready-made\nsolutions for common business requirements such as a currency\nexchange.</li>\n<li><a href=\"./clients/\">Clients</a> shows how to use TigerBeetle from\nthe comfort of .NET, Go, Java, Node.js, or Python.</li>\n</ul>\n<p>Subscribe to the <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/issues/2231\">tracking\nissue #2231</a> to receive notifications about breaking changes!</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/README.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/system-architecture","html":"<h1 id=\"tigerbeetle-in-your-system-architecture\"><a\nhref=\"#tigerbeetle-in-your-system-architecture\"\nclass=\"anchor\">TigerBeetle in Your System Architecture</a></h1>\n<p>TigerBeetle is an Online Transaction Processing (OLTP) database built\nfor safety and performance. It is not a general purpose database like\nPostgreSQL or MySQL. Instead, TigerBeetle works alongside your general\npurpose database, which we refer to as an Online General Purpose (OLGP)\ndatabase.</p>\n<p>TigerBeetle should be used in the data plane, or hot path of\ntransaction processing, while your general purpose database is used in\nthe control plane and may be used for storing information or metadata\nthat is updated less frequently.</p>\n<p><img\nsrc=\"https://github.com/user-attachments/assets/679ec8be-640d-4c7e-b082-076557baeac7\"\nalt=\"TigerBeetle in Your System Architecture\" /></p>\n<h2 id=\"division-of-responsibilities\"><a\nhref=\"#division-of-responsibilities\" class=\"anchor\">Division of\nResponsibilities</a></h2>\n<p><strong>App or Website</strong></p>\n<ul>\n<li>Initiate transactions</li>\n<li><a\nhref=\"../reliable-transaction-submission#the-app-or-browser-should-generate-the-id\">Generate\nTransfer and Account IDs</a></li>\n</ul>\n<p><strong>Stateless API Service</strong></p>\n<ul>\n<li>Handle authentication and authorization</li>\n<li>Create account records in both the general purpose database and\nTigerBeetle when users sign up</li>\n<li><a href=\"#ledger-account-and-transfer-types\">Cache ledger\nmetadata</a></li>\n<li><a href=\"../requests#batching-events\">Batch transfers</a></li>\n<li>Apply exchange rates for <a\nhref=\"../recipes/currency-exchange\">currency exchange</a>\ntransactions</li>\n</ul>\n<p><strong>General Purpose (OLGP) Database</strong></p>\n<ul>\n<li>Store metadata about ledgers and accounts (such as string names or\ndescriptions)</li>\n<li>Store mappings between <a\nhref=\"#ledger-account-and-transfer-types\">integer type identifiers</a>\nused in TigerBeetle and string representations used by the app and\nAPI</li>\n</ul>\n<p><strong>TigerBeetle (OLTP) Database</strong></p>\n<ul>\n<li>Record transfers between accounts</li>\n<li>Track balances for accounts</li>\n<li>Enforce balance limits</li>\n<li>Enforce financial consistency through double-entry bookkeeping</li>\n<li>Enforce strict serializability of events</li>\n<li>Optionally store pointers to records or entities in the general\npurpose database in the <a\nhref=\"../data-modeling#user_data\"><code>user_data</code></a> fields</li>\n</ul>\n<h2 id=\"ledger-account-and-transfer-types\"><a\nhref=\"#ledger-account-and-transfer-types\" class=\"anchor\">Ledger,\nAccount, and Transfer Types</a></h2>\n<p>For performance reasons, TigerBeetle stores the ledger, account, and\ntransfer types as simple integers. Most likely, you will want these\nintegers to map to enums of type names or strings, along with other\nassociated metadata.</p>\n<p>The mapping from the string representation of these types to the\nintegers used within TigerBeetle may be hard-coded into your application\nlogic or stored in a general purpose (OLGP) database and cached by your\napplication. (These mappings should be immutable and append-only, so\nthere is no concern about cache invalidation.)</p>\n<p>⚠️ Importantly, <strong>initiating a transfer should not require\nfetching metadata from the general purpose database</strong>. If it\ndoes, that database will become the bottleneck and will negate the\nperformance gains from using TigerBeetle.</p>\n<p>Specifically, the types of information that fit into this category\ninclude:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Hard-coded in app or cached</th>\n<th>In TigerBeetle</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Currency or asset code’s string representation (for example,\n“USD”)</td>\n<td><a href=\"../data-modeling#asset-scale\"><code>ledger</code></a> and\n<a href=\"../data-modeling#asset-scale\">asset scale</a></td>\n</tr>\n<tr>\n<td>Account type’s string representation (for example, “cash”)</td>\n<td><a href=\"../data-modeling#code\"><code>code</code></a></td>\n</tr>\n<tr>\n<td>Transfer type’s string representation (for example, “refund”)</td>\n<td><a href=\"../data-modeling#code\"><code>code</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"authentication\"><a href=\"#authentication\"\nclass=\"anchor\">Authentication</a></h2>\n<p>TigerBeetle does not support authentication. You should never allow\nuntrusted users or services to interact with it directly.</p>\n<p>Also, untrusted processes must not be able to access or modify\nTigerBeetle’s on-disk data file.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/system-architecture.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/data-modeling","html":"<h1 id=\"data-modeling\"><a href=\"#data-modeling\" class=\"anchor\">Data\nModeling</a></h1>\n<p>This section describes various aspects of the TigerBeetle data model\nand provides some suggestions for how you can map your application’s\nrequirements onto the data model.</p>\n<h2 id=\"accounts-transfers-and-ledgers\"><a\nhref=\"#accounts-transfers-and-ledgers\" class=\"anchor\">Accounts,\nTransfers, and Ledgers</a></h2>\n<p>The TigerBeetle data model consists of <a\nhref=\"../../reference/account\"><code>Account</code>s</a>, <a\nhref=\"../../reference/transfer\"><code>Transfer</code>s</a>, and\nledgers.</p>\n<h3 id=\"ledgers\"><a href=\"#ledgers\" class=\"anchor\">Ledgers</a></h3>\n<p>Ledgers partition accounts into groups that may represent a currency\nor asset type or any other logical grouping. Only accounts on the same\nledger can transact directly, but you can use atomically linked\ntransfers to implement <a href=\"../recipes/currency-exchange\">currency\nexchange</a>.</p>\n<p>Ledgers are only stored in TigerBeetle as a numeric identifier on the\n<a href=\"../../reference/account#ledger\">account</a> and <a\nhref=\"../../reference/transfer\">transfer</a> data structures. You may\nwant to store additional metadata about each ledger in a control plane\n<a href=\"../system-architecture\">database</a>.</p>\n<p>You can also use different ledgers to further partition accounts,\nbeyond asset type. For example, if you have a multi-tenant setup where\nyou are tracking balances for your customers’ end-users, you might have\na ledger for each of your customers. If customers have end-user accounts\nin multiple currencies, each of your customers would have multiple\nledgers.</p>\n<h2 id=\"debits-vs-credits\"><a href=\"#debits-vs-credits\"\nclass=\"anchor\">Debits vs Credits</a></h2>\n<p>TigerBeetle tracks each account’s cumulative posted debits and\ncumulative posted credits. In double-entry accounting, an account\nbalance is the difference between the two — computed as either\n<code>debits - credits</code> or <code>credits - debits</code>,\ndepending on the type of account. It is up to the application to compute\nthe balance from the cumulative debits/credits.</p>\n<p>From the database’s perspective the distinction is arbitrary, but\naccounting conventions recommend using a certain balance type for\ncertain types of accounts.</p>\n<p>If you are new to thinking in terms of debits and credits, read the\n<a href=\"../financial-accounting\">deep dive on financial accounting</a>\nto get a better understanding of double-entry bookkeeping and the\ndifferent types of accounts.</p>\n<h3 id=\"debit-balances\"><a href=\"#debit-balances\" class=\"anchor\">Debit\nBalances</a></h3>\n<p><code>balance = debits - credits</code></p>\n<p>By convention, debit balances are used to represent:</p>\n<ul>\n<li>Operator’s Assets</li>\n<li>Operator’s Expenses</li>\n</ul>\n<p>To enforce a positive (non-negative) debit balance, use <a\nhref=\"../../reference/account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>.</p>\n<p>To keep an account’s balance between an upper and lower bound, see\nthe <a href=\"../recipes/balance-bounds\">Balance Bounds recipe</a>.</p>\n<h3 id=\"credit-balances\"><a href=\"#credit-balances\"\nclass=\"anchor\">Credit Balances</a></h3>\n<p><code>balance = credits - debits</code></p>\n<p>By convention, credit balances are used to represent:</p>\n<ul>\n<li>Operator’s Liabilities</li>\n<li>Equity in the Operator’s Business</li>\n<li>Operator’s Income</li>\n</ul>\n<p>To enforce a positive (non-negative) credit balance, use <a\nhref=\"../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>.\nFor example, a customer account that is represented as an Operator’s\nLiability would use this flag to ensure that the balance cannot go\nnegative.</p>\n<p>To keep an account’s balance between an upper and lower bound, see\nthe <a href=\"../recipes/balance-bounds\">Balance Bounds recipe</a>.</p>\n<h3 id=\"compound-transfers\"><a href=\"#compound-transfers\"\nclass=\"anchor\">Compound Transfers</a></h3>\n<p><code>Transfer</code>s in TigerBeetle debit a single account and\ncredit a single account. You can read more about implementing compound\ntransfers in <a\nhref=\"../recipes/multi-debit-credit-transfers\">Multi-Debit, Multi-Credit\nTransfers</a>.</p>\n<h2 id=\"fractional-amounts-and-asset-scale\"><a\nhref=\"#fractional-amounts-and-asset-scale\" class=\"anchor\">Fractional\nAmounts and Asset Scale</a></h2>\n<p>To maximize precision and efficiency, <a\nhref=\"../../reference/account\"><code>Account</code></a> debits/credits\nand <a href=\"../../reference/transfer\"><code>Transfer</code></a> amounts\nare unsigned 128-bit integers. However, currencies are often denominated\nin fractional amounts.</p>\n<p>To represent a fractional amount in TigerBeetle, <strong>map the\nsmallest useful unit of the fractional currency to 1</strong>. Consider\nall amounts in TigerBeetle as a multiple of that unit.</p>\n<p>Applications may rescale the integer amounts as necessary when\nrendering or interfacing with other systems. But when working with\nfractional amounts, calculations should be performed on the integers to\navoid loss of precision due to floating-point approximations.</p>\n<h3 id=\"asset-scale\"><a href=\"#asset-scale\" class=\"anchor\">Asset\nScale</a></h3>\n<p>When the multiplier is a power of 10 (e.g. <code>10 ^ n</code>), then\nthe exponent <code>n</code> is referred to as an <em>asset scale</em>.\nFor example, representing USD in cents uses an asset scale of\n<code>2</code>.</p>\n<h4 id=\"examples\"><a href=\"#examples\" class=\"anchor\">Examples</a></h4>\n<ul>\n<li><p>In USD, <code>$1</code> = <code>100</code> cents. Using an asset\nscale of <code>2</code>,</p>\n<ul>\n<li>The fractional amount <code>$0.45</code> is represented as the\ninteger <code>45</code>.</li>\n<li>The fractional amount <code>$123.00</code> is represented as the\ninteger <code>12300</code>.</li>\n<li>The fractional amount <code>$123.45</code> is represented as the\ninteger <code>12345</code>.</li>\n</ul></li>\n<li><p>In JPY, <code>¥1</code> = <code>1</code> yen. Using an asset\nscale of <code>0</code>,</p>\n<ul>\n<li>The fractional amount <code>¥123</code> is represented as the\ninteger <code>123</code>.</li>\n</ul></li>\n<li><p>In KWD, <code>د.ك 1</code> = <code>1000</code> fils. Using an\nasset scale of <code>3</code>,</p>\n<ul>\n<li>The fractional amount <code>0.450 د.ك</code> is represented as the\ninteger <code>450</code>.</li>\n<li>The fractional amount <code>123.000 د.ك</code> is represented as the\ninteger <code>123000</code>.</li>\n<li>The fractional amount <code>123.450 د.ك</code> is represented as the\ninteger <code>123450</code>.</li>\n</ul></li>\n</ul>\n<p>The other direction works as well. If the smallest useful unit of an\nasset is <code>10,000,000</code> units, then it can be scaled down to\nthe integer <code>1</code> using an asset scale of <code>-7</code>.</p>\n<h3 id=\"warning-asset-scales-cannot-be-easily-changed\"><a\nhref=\"#warning-asset-scales-cannot-be-easily-changed\" class=\"anchor\">⚠️\nAsset Scales Cannot Be Easily Changed</a></h3>\n<p>When setting your asset scales, we recommend thinking about whether\nyour application may <em>ever</em> require a larger asset scale. If so,\nwe would recommend using that larger scale from the start.</p>\n<p>For example, it might seem natural to use an asset scale of 2 for\nmany currencies. However, it may be wise to use a higher scale in case\nyou ever need to represent smaller fractions of that asset.</p>\n<p>Accounts and transfers are immutable once created. In order to change\nthe asset scale of a ledger, you would need to use a different\n<code>ledger</code> number and duplicate all the accounts on that ledger\nover to the new one.</p>\n<h2 id=\"user_data\"><a href=\"#user_data\"\nclass=\"anchor\"><code>user_data</code></a></h2>\n<p><code>user_data_128</code>, <code>user_data_64</code> and\n<code>user_data_32</code> are the most flexible fields in the schema\n(for both <a href=\"../../reference/account\">accounts</a> and <a\nhref=\"../../reference/transfer\">transfers</a>). Each\n<code>user_data</code> field’s contents are arbitrary, interpreted only\nby the application.</p>\n<p>Each <code>user_data</code> field is indexed for efficient point and\nrange queries.</p>\n<p>While the usage of each field is entirely up to you, one way of\nthinking about each of the fields is:</p>\n<ul>\n<li><code>user_data_128</code> - this might store the “who” and/or\n“what” of a transfer. For example, it could be a pointer to a business\nentity stored within the <a\nhref=\"https://en.wikipedia.org/wiki/Control_plane\">control plane</a>\ndatabase.</li>\n<li><code>user_data_64</code> - this might store a second timestamp for\n“when” the transaction originated in the real world, rather than when\nthe transfer was <a\nhref=\"../time#why-tigerbeetle-manages-timestamps\">timestamped by\nTigerBeetle</a>. This can be used if you need to model <a\nhref=\"https://en.wikipedia.org/wiki/Bitemporal_modeling\">bitemporality</a>.\nAlternatively, if you do not need this to be used for a timestamp, you\ncould use this field in place of the <code>user_data_128</code> to store\nthe “who”/“what”.</li>\n<li><code>user_data_32</code> - this might store the “where” of a\ntransfer. For example, it could store the jurisdiction where the\ntransaction originated in the real world. In certain cases, such as for\ncross-border remittances, it might not be enough to have the UTC\ntimestamp and you may want to know the transfer’s locale.</li>\n</ul>\n<p>(Note that the <a href=\"#code\"><code>code</code></a> can be used to\nencode the “why” of a transfer.)</p>\n<p>Any of the <code>user_data</code> fields can be used as a group\nidentifier for objects that will be queried together. For example, for\nmultiple transfers used for <a\nhref=\"../recipes/currency-exchange\">currency exchange</a>.</p>\n<h2 id=\"id\"><a href=\"#id\" class=\"anchor\"><code>id</code></a></h2>\n<p>The <code>id</code> field uniquely identifies each <a\nhref=\"../../reference/account#id\"><code>Account</code></a> and <a\nhref=\"../../reference/transfer#id\"><code>Transfer</code></a> within the\ncluster.</p>\n<p>The primary purpose of an <code>id</code> is to serve as an\n“idempotency key” — to avoid executing an event twice. For example, if a\nclient creates a transfer but the server’s reply is lost, the client (or\napplication) will retry — the database must not transfer the money\ntwice.</p>\n<p>Note that <code>id</code>s are unique per cluster – not per ledger.\nYou should attach a separate identifier in the <a\nhref=\"#user_data\"><code>user_data</code></a> field if you want to store\na connection between multiple <code>Account</code>s or multiple\n<code>Transfer</code>s that are related to one another. For example,\ndifferent currency <code>Account</code>s belonging to the same user or\nmultiple <code>Transfer</code>s that are part of a <a\nhref=\"../recipes/currency-exchange\">currency exchange</a>.</p>\n<p><a href=\"#tigerbeetle-time-based-identifiers-recommended\">TigerBeetle\nTime-Based Identifiers</a> are recommended for most applications.</p>\n<p>When selecting an <code>id</code> scheme:</p>\n<ul>\n<li>Idempotency is particularly important (and difficult) in the context\nof <a href=\"../reliable-transaction-submission\">application crash\nrecovery</a>.</li>\n<li>Be careful to <a\nhref=\"https://en.wikipedia.org/wiki/Birthday_problem\">avoid\n<code>id</code> collisions</a>.</li>\n<li>An account and a transfer may share the same <code>id</code> (they\nbelong to different “namespaces”), but this is not recommended because\nother systems (that you may later connect to TigerBeetle) may use a\nsingle “namespace” for all objects.</li>\n<li>Avoid requiring a central oracle to generate each unique\n<code>id</code> (e.g. an auto-increment field in SQL). A central oracle\nmay become a performance bottleneck when creating\naccounts/transfers.</li>\n<li>Sequences of identifiers with long runs of strictly increasing (or\nstrictly decreasing) values are amenable to optimization, leading to\nhigher database throughput.</li>\n<li>Random identifiers are not recommended – they can’t take advantage\nof all of the LSM optimizations. (Random identifiers have ~10% lower\nthroughput than strictly-increasing ULIDs).</li>\n</ul>\n<h3 id=\"tigerbeetle-time-based-identifiers-recommended\"><a\nhref=\"#tigerbeetle-time-based-identifiers-recommended\"\nclass=\"anchor\">TigerBeetle Time-Based Identifiers (Recommended)</a></h3>\n<p>TigerBeetle recommends using a specific ID scheme for most\napplications. It is time-based and lexicographically sortable. The\nscheme is inspired by ULIDs and UUIDv7s but is better able to take\nadvantage of LSM optimizations, which leads to higher database\nthroughput.</p>\n<p>TigerBeetle clients include an <code>id()</code> function to generate\nIDs using the recommended scheme.</p>\n<p>TigerBeetle IDs consist of:</p>\n<ul>\n<li>48 bits of (millisecond) timestamp (high-order bits)</li>\n<li>80 bits of randomness (low-order bits)</li>\n</ul>\n<p>When creating multiple objects during the same millisecond, we\nincrement the random bytes rather than generating new random bytes.\nFurthermore, it is important that IDs are stored in little-endian with\nthe random bytes as the lower-order bits and the timestamp as the\nhigher-order bits. These details ensure that a sequence of objects have\nstrictly increasing IDs according to the server, which improves database\noptimization.</p>\n<p>Similar to ULIDs and UUIDv7s, these IDs have the following\nbenefits:</p>\n<ul>\n<li>they have an insignificant risk of collision.</li>\n<li>they do not require a central oracle to generate.</li>\n</ul>\n<h3 id=\"reuse-foreign-identifier\"><a href=\"#reuse-foreign-identifier\"\nclass=\"anchor\">Reuse Foreign Identifier</a></h3>\n<p>This technique is most appropriate when integrating TigerBeetle with\nan existing application where TigerBeetle accounts or transfers map\none-to-one with an entity in the foreign database.</p>\n<p>Set <code>id</code> to a “foreign key” — that is, reuse an identifier\nof a corresponding object from another database. For example, if every\nuser (within the application’s database) has a single account, then the\nidentifier within the foreign database can be used as the\n<code>Account.id</code> within TigerBeetle.</p>\n<p>To reuse the foreign identifier, it must conform to TigerBeetle’s\n<code>id</code> <a\nhref=\"../../reference/account#id\">constraints</a>.</p>\n<h2 id=\"code\"><a href=\"#code\" class=\"anchor\"><code>code</code></a></h2>\n<p>The <code>code</code> identifier represents the “why” for an Account\nor Transfer.</p>\n<p>On an <a\nhref=\"../../reference/account#code\"><code>Account</code></a>, the\n<code>code</code> indicates the account type, such as assets,\nliabilities, equity, income, or expenses, and subcategories within those\nclassification.</p>\n<p>On a <a\nhref=\"../../reference/transfer#code\"><code>Transfer</code></a>, the\n<code>code</code> indicates why a given transfer is happening, such as a\npurchase, refund, currency exchange, etc.</p>\n<p>When you start building out your application on top of TigerBeetle,\nyou may find it helpful to list out all of the known types of accounts\nand movements of funds and mapping each of these to <code>code</code>\nnumbers or ranges.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/data-modeling.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/financial-accounting","html":"<h1 id=\"financial-accounting\"><a href=\"#financial-accounting\"\nclass=\"anchor\">Financial Accounting</a></h1>\n<p>For developers with non-financial backgrounds, TigerBeetle’s use of\naccounting concepts like debits and credits may be one of the trickier\nparts to understand. However, these concepts have been the language of\nbusiness for hundreds of years, so we promise it’s worth it!</p>\n<p>This page goes a bit deeper into debits and credits, double-entry\nbookkeeping, and how to think about your accounts as part of a type\nsystem.</p>\n<h2 id=\"building-intuition-with-two-simple-examples\"><a\nhref=\"#building-intuition-with-two-simple-examples\"\nclass=\"anchor\">Building Intuition with Two Simple Examples</a></h2>\n<p>If you have an outstanding loan and owe a bank $100, is your balance\n$100 or -$100? Conversely, if you have $200 in your bank account, is the\nbalance $200 or -$200?</p>\n<p>Thinking about these two examples, we can start to build an intuition\nthat the <strong>positive or negative sign of the balance depends on\nwhose perspective we’re looking from</strong>. That $100 you owe the\nbank represents a “bad” thing for you, but a “good” thing for the bank.\nWe might think about that same debt differently if we’re doing your\naccounting or the bank’s.</p>\n<p>These examples also hint at the <strong>different types of\naccounts</strong>. We probably want to think about a debt as having the\nopposite “sign” as the funds in your bank account. At the same time, the\ntypes of these accounts look different depending on whether you are\nconsidering them from the perspective of you or the bank.</p>\n<p>Now, back to our original questions: is the loan balance $100 or\n-$100 and is the bank account balance $200 or -$200? On some level, this\nfeels a bit arbitrary.</p>\n<p>Wouldn’t it be nice if there were some <strong>commonly agreed-upon\nstandards</strong> so we wouldn’t have to make such an arbitrary\ndecision? Yes! This is exactly what debits and credits and the financial\naccounting type system provide.</p>\n<h2 id=\"types-of-accounts\"><a href=\"#types-of-accounts\"\nclass=\"anchor\">Types of Accounts</a></h2>\n<p>In financial accounting, there are 5 main types of accounts:</p>\n<ul>\n<li><strong>Asset</strong> - what you own, which could produce income or\nwhich you could sell.</li>\n<li><strong>Liability</strong> - what you owe to other people.</li>\n<li><strong>Equity</strong> - value of the business owned by the owners\nor shareholders, or “the residual interest in the assets of the entity\nafter deducting all its liabilities.”<a href=\"#fn1\" class=\"footnote-ref\"\nid=\"fnref1\" role=\"doc-noteref\"><sup>1</sup></a></li>\n<li><strong>Income</strong> - money or things of value you receive for\nselling products or services, or “increases in assets, or decreases in\nliabilities, that result in increases in equity, other than those\nrelating to contributions from holders of equity claims.”<a href=\"#fn2\"\nclass=\"footnote-ref\" id=\"fnref2\"\nrole=\"doc-noteref\"><sup>2</sup></a></li>\n<li><strong>Expense</strong> - money you spend to pay for products or\nservices, or “decreases in assets, or increases in liabilities, that\nresult in decreases in equity, other than those relating to\ndistributions to holders of equity claims.”<a href=\"#fn3\"\nclass=\"footnote-ref\" id=\"fnref3\"\nrole=\"doc-noteref\"><sup>3</sup></a></li>\n</ul>\n<p>As mentioned above, the type of account depends on whose perspective\nyou are doing the accounting from. In those examples, the loan you have\nfrom the bank is liability for you, because you owe the amount to the\nbank. However, that same loan is an asset from the bank’s perspective.\nIn contrast, the money in your bank account is an asset for you but it\nis a liability for the bank.</p>\n<p>Each of these major categories are further subdivided into more\nspecific types of accounts. For example, in your personal accounting you\nwould separately track the cash in your physical wallet from the funds\nin your checking account, even though both of those are assets. The bank\nwould split out mortgages from car loans, even though both of those are\nalso assets for the bank.</p>\n<aside id=\"footnotes\" class=\"footnotes footnotes-end-of-section\"\nrole=\"doc-footnote\">\n<hr />\n<ol>\n<li id=\"fn1\"><p>IFRS. <em>Conceptual Framework for Financial\nReporting</em>. IFRS Foundation, 2018. <a\nhref=\"https://www.ifrs.org/content/dam/ifrs/publications/pdf-standards/english/2021/issued/part-a/conceptual-framework-for-financial-reporting.pdf\">https://www.ifrs.org/content/dam/ifrs/publications/pdf-standards/english/2021/issued/part-a/conceptual-framework-for-financial-reporting.pdf</a><a\nhref=\"#fnref1\" class=\"footnote-back\" role=\"doc-backlink\">↩︎</a></p></li>\n<li id=\"fn2\"><p>IFRS. <em>Conceptual Framework for Financial\nReporting</em>. IFRS Foundation, 2018. <a\nhref=\"https://www.ifrs.org/content/dam/ifrs/publications/pdf-standards/english/2021/issued/part-a/conceptual-framework-for-financial-reporting.pdf\">https://www.ifrs.org/content/dam/ifrs/publications/pdf-standards/english/2021/issued/part-a/conceptual-framework-for-financial-reporting.pdf</a><a\nhref=\"#fnref2\" class=\"footnote-back\" role=\"doc-backlink\">↩︎</a></p></li>\n<li id=\"fn3\"><p>IFRS. <em>Conceptual Framework for Financial\nReporting</em>. IFRS Foundation, 2018. <a\nhref=\"https://www.ifrs.org/content/dam/ifrs/publications/pdf-standards/english/2021/issued/part-a/conceptual-framework-for-financial-reporting.pdf\">https://www.ifrs.org/content/dam/ifrs/publications/pdf-standards/english/2021/issued/part-a/conceptual-framework-for-financial-reporting.pdf</a><a\nhref=\"#fnref3\" class=\"footnote-back\" role=\"doc-backlink\">↩︎</a></p></li>\n</ol>\n</aside>\n<h2 id=\"double-entry-bookkeeping\"><a href=\"#double-entry-bookkeeping\"\nclass=\"anchor\">Double-Entry Bookkeeping</a></h2>\n<p>Categorizing accounts into different types is useful for\norganizational purposes, but it also provides a key error-correcting\nmechanism.</p>\n<p>Every record in our accounting is not only recorded in one place, but\nin two. This is double-entry bookkeeping. Why would we do that?</p>\n<p>Let’s think about the bank loan in our example above. When you took\nout the loan, two things actually happened at the same time. On the one\nhand, you now owe the bank $100. At the same time, the bank gave you\n$100. These are the two entries that comprise the loan transaction.</p>\n<p>From your perspective, your liability to the bank increased by $100\nwhile your assets also increased by $100. From the bank’s perspective,\ntheir assets (the loan to you) increased by $100 while their liabilities\n(the money in your bank account) also increased by $100.</p>\n<p>Double-entry bookkeeping ensures that funds are always accounted for.\nMoney never just appears. <strong>Funds always go from somewhere to\nsomewhere.</strong></p>\n<h2 id=\"keeping-accounts-in-balance\"><a\nhref=\"#keeping-accounts-in-balance\" class=\"anchor\">Keeping Accounts in\nBalance</a></h2>\n<p>Now we understand that there are different types of accounts and\nevery transaction will be recorded in two (or more) accounts – but which\naccounts?</p>\n<p>The <a\nhref=\"https://en.wikipedia.org/wiki/Accounting_equation\">Fundamental\nAccounting Equation</a> stipulates that:</p>\n<p><strong>Assets - Liabilities = Equity</strong></p>\n<p>Using our loan example, it’s no accident that the loan increases\nassets and liabilities at the same time. Assets and liabilities are on\nthe opposite sides of the equation, and both sides must be exactly\nequal. Loans increase assets and liabilities equally.</p>\n<p>Here are some other types of transactions that would affect assets,\nliabilities, and equity, while maintaining this balance:</p>\n<ul>\n<li>If you withdraw $100 in cash from your bank account, your total\nassets stay the same. Your bank account balance (an asset) would\ndecrease while your physical cash (another asset) would increase.</li>\n<li>From the perspective of the bank, you withdrawing $100 in cash\ndecreases their assets in the form of the cash they give you, while also\ndecreasing their liabilities because your bank balance decreases as\nwell.</li>\n<li>If a shareholder invests $1000 in the bank, that increases both the\nbank’s assets and equity.</li>\n</ul>\n<p>Assets, liabilities, and equity represent a point in time. The other\ntwo main categories, income and expenses, represent flows of money in\nand out.</p>\n<p>Income and expenses impact the position of the business over time.\nThe expanded accounting equation can be written as:</p>\n<p><strong>Assets - Liabilities = Equity + Income −\nExpenses</strong></p>\n<p>You don’t need to memorize these equations (unless you’re training as\nan accountant!). However, it is useful to understand that those main\naccount types lie on different sides of this equation.</p>\n<h2 id=\"debits-and-credits-vs-signed-integers\"><a\nhref=\"#debits-and-credits-vs-signed-integers\" class=\"anchor\">Debits and\nCredits vs Signed Integers</a></h2>\n<p>Instead of using a positive or negative integer to track a balance,\nTigerBeetle and double-entry bookkeeping systems use <strong>debits and\ncredits</strong>.</p>\n<p>The two entries that give “double-entry bookkeeping” its name are the\ndebit and the credit: every transaction has at least one debit and at\nleast one credit. (Note that for efficiency’s sake, TigerBeetle\n<code>Transfer</code>s consist of exactly one debit and one credit.\nThese can be composed into more complex <a\nhref=\"../recipes/multi-debit-credit-transfers\">multi-debit, multi-credit\ntransfers</a>.) Which entry is the debit and which is the credit? The\nanswer is easy once you understand that <strong>accounting is a type\nsystem</strong>. An account increases with a debit or credit according\nto its type.</p>\n<p>When our example loan increases the assets and liabilities, we need\nto assign each of these entries to either be a debit or a credit. At\nsome level, this is completely arbitrary. For clarity, accountants have\nused the same standards for hundreds of years:</p>\n<h3 id=\"how-debits-and-credits-increase-or-decrease-account-balances\"><a\nhref=\"#how-debits-and-credits-increase-or-decrease-account-balances\"\nclass=\"anchor\">How Debits and Credits Increase or Decrease Account\nBalances</a></h3>\n<ul>\n<li><strong>Assets and expenses are increased with debits, decreased\nwith credits</strong></li>\n<li><strong>Liabilities, equity, and income are increased with credits,\ndecreased with debits</strong></li>\n</ul>\n<p>Or, in a table form:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Debit</th>\n<th>Credit</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Asset</td>\n<td>+</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Liability</td>\n<td>-</td>\n<td>+</td>\n</tr>\n<tr>\n<td>Equity</td>\n<td>-</td>\n<td>+</td>\n</tr>\n<tr>\n<td>Income</td>\n<td>-</td>\n<td>+</td>\n</tr>\n<tr>\n<td>Expense</td>\n<td>+</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>From the perspective of our example bank:</p>\n<ul>\n<li>You taking out a loan debits (increases) their loan assets and\ncredits (increases) their bank account balance liabilities.</li>\n<li>You paying off the loan debits (decreases) their bank account\nbalance liabilities and credits (decreases) their loan assets.</li>\n<li>You depositing cash debits (increases) their cash assets and credits\n(increases) their bank account balance liabilities.</li>\n<li>You withdrawing cash debits (decreases) their bank account balance\nliabilities and credits (decreases) their cash assets.</li>\n</ul>\n<p>Note that accounting conventions also always write the debits first,\nto represent the funds flowing <em>from</em> the debited account\n<em>to</em> the credited account.</p>\n<p>If this seems arbitrary and confusing, we understand! It’s a\nconvention, just like how most programmers need to learn zero-based\narray indexing and then at some point it becomes second nature.</p>\n<h3 id=\"account-types-and-the-normal-balance\"><a\nhref=\"#account-types-and-the-normal-balance\" class=\"anchor\">Account\nTypes and the “Normal Balance”</a></h3>\n<p>Some other accounting systems have the concept of a “normal balance”,\nwhich would indicate whether a given account’s balance is increased by\ndebits or credits.</p>\n<p>When designing for TigerBeetle, we recommend thinking about account\ntypes instead of “normal balances”. This is because the type of balance\nfollows from the type of account, but the type of balance doesn’t tell\nyou the type of account. For example, an account might have a normal\nbalance on the debit side but that doesn’t tell you whether it is an\nasset or expense.</p>\n<h2 id=\"takeaways\"><a href=\"#takeaways\"\nclass=\"anchor\">Takeaways</a></h2>\n<ul>\n<li>Accounts are categorized into types. The 5 main types are asset,\nliability, equity, income, and expense.</li>\n<li>Depending on the type of account, an increase is recorded as either\na debit or a credit.</li>\n<li>All transfers consist of two entries, a debit and a credit.\nDouble-entry bookkeeping ensures that all funds come from somewhere and\ngo somewhere.</li>\n</ul>\n<p>When you get started using TigerBeetle, we would recommend writing a\nlist of all the types of accounts in your system that you can think of.\nThen, think about whether, from the perspective of your business, each\naccount represents an asset, liability, equity, income, or expense. That\ndetermines whether the given type of account is increased with a debit\nor a credit.</p>\n<h2 id=\"want-more-help-understanding-debits-and-credits\"><a\nhref=\"#want-more-help-understanding-debits-and-credits\"\nclass=\"anchor\">Want More Help Understanding Debits and Credits?</a></h2>\n<h3 id=\"ask-the-community\"><a href=\"#ask-the-community\"\nclass=\"anchor\">Ask the Community</a></h3>\n<p>Have questions about debits and credits, TigerBeetle’s data model,\nhow to design your application on top of it, or anything else?</p>\n<p>Come join our <a href=\"https://slack.tigerbeetle.com/join\">Community\nSlack</a> and ask any and all questions you might have!</p>\n<h3 id=\"dedicated-consultation\"><a href=\"#dedicated-consultation\"\nclass=\"anchor\">Dedicated Consultation</a></h3>\n<p>Would you like the TigerBeetle team to help you design your chart of\naccounts and leverage the power of TigerBeetle in your architecture?</p>\n<p>Let us help you get it right. Contact us at <a\nhref=\"mailto:sales@tigerbeetle.com\">sales@tigerbeetle.com</a> to set up\na call.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/financial-accounting.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/requests","html":"<h1 id=\"requests\"><a href=\"#requests\" class=\"anchor\">Requests</a></h1>\n<p>A <em>request</em> queries or updates the database state.</p>\n<p>A request consists of one or more <em>events</em> of the same type\nsent to the cluster in a single message. For example, a single request\ncan create multiple transfers but it cannot create both accounts and\ntransfers.</p>\n<p>The cluster commits an entire request at once. Events are applied in\nseries, such that successive events observe the effects of previous ones\nand event timestamps are <a\nhref=\"../time#timestamps-are-totally-ordered\">totally ordered</a>.</p>\n<p>Each request receives one <em>reply</em> message from the cluster.\nThe reply contains one <em>result</em> for each event in the\nrequest.</p>\n<h2 id=\"request-types\"><a href=\"#request-types\" class=\"anchor\">Request\nTypes</a></h2>\n<ul>\n<li><a\nhref=\"../../reference/requests/create_accounts\"><code>create_accounts</code></a>:\ncreate <a href=\"../../reference/account\"><code>Account</code>s</a></li>\n<li><a\nhref=\"../../reference/requests/create_transfers\"><code>create_transfers</code></a>:\ncreate <a\nhref=\"../../reference/transfer\"><code>Transfer</code>s</a></li>\n<li><a\nhref=\"../../reference/requests/lookup_accounts\"><code>lookup_accounts</code></a>:\nfetch <code>Account</code>s by <code>id</code></li>\n<li><a\nhref=\"../../reference/requests/lookup_transfers\"><code>lookup_transfers</code></a>:\nfetch <code>Transfer</code>s by <code>id</code></li>\n<li><a\nhref=\"../../reference/requests/get_account_transfers\"><code>get_account_transfers</code></a>:\nfetch <code>Transfer</code>s by <code>debit_account_id</code> or\n<code>credit_account_id</code></li>\n<li><a\nhref=\"../../reference/requests/get_account_balances\"><code>get_account_balances</code></a>:\nfetch the historical account balance by the <code>Account</code>’s\n<code>id</code>.</li>\n<li><a\nhref=\"../../reference/requests/query_accounts\"><code>query_accounts</code></a>:\nquery <code>Account</code>s</li>\n<li><a\nhref=\"../../reference/requests/query_transfers\"><code>query_transfers</code></a>:\nquery <code>Transfer</code>s</li>\n</ul>\n<p><em>More request types, including more powerful queries, are coming\nsoon!</em></p>\n<h2 id=\"events-and-results\"><a href=\"#events-and-results\"\nclass=\"anchor\">Events and Results</a></h2>\n<p>Each request has a corresponding <em>event</em> and <em>result</em>\ntype:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Request Type</th>\n<th>Event</th>\n<th>Result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>create_accounts</code></td>\n<td><a\nhref=\"../../reference/requests/create_accounts#event\"><code>Account</code></a></td>\n<td><a\nhref=\"../../reference/requests/create_accounts#result\"><code>CreateAccountResult</code></a></td>\n</tr>\n<tr>\n<td><code>create_transfers</code></td>\n<td><a\nhref=\"../../reference/requests/create_transfers#event\"><code>Transfer</code></a></td>\n<td><a\nhref=\"../../reference/requests/create_transfers#result\"><code>CreateTransferResult</code></a></td>\n</tr>\n<tr>\n<td><code>lookup_accounts</code></td>\n<td><a\nhref=\"../../reference/requests/lookup_accounts#event\"><code>Account.id</code></a></td>\n<td><a\nhref=\"../../reference/requests/lookup_accounts#result\"><code>Account</code></a>\nor nothing</td>\n</tr>\n<tr>\n<td><code>lookup_transfers</code></td>\n<td><a\nhref=\"../../reference/requests/lookup_transfers#event\"><code>Transfer.id</code></a></td>\n<td><a\nhref=\"../../reference/requests/lookup_transfers#result\"><code>Transfer</code></a>\nor nothing</td>\n</tr>\n<tr>\n<td><code>get_account_transfers</code></td>\n<td><a\nhref=\"../../reference/account-filter\"><code>AccountFilter</code></a></td>\n<td><a\nhref=\"../../reference/requests/get_account_transfers#result\"><code>Transfer</code></a>\nor nothing</td>\n</tr>\n<tr>\n<td><code>get_account_balances</code></td>\n<td><a\nhref=\"../../reference/account-filter\"><code>AccountFilter</code></a></td>\n<td><a\nhref=\"../../reference/requests/get_account_balances#result\"><code>AccountBalance</code></a>\nor nothing</td>\n</tr>\n<tr>\n<td><code>query_accounts</code></td>\n<td><a\nhref=\"../../reference/query-filter\"><code>QueryFilter</code></a></td>\n<td><a\nhref=\"../../reference/requests/lookup_accounts#result\"><code>Account</code></a>\nor nothing</td>\n</tr>\n<tr>\n<td><code>query_transfers</code></td>\n<td><a\nhref=\"../../reference/query-filter\"><code>QueryFilter</code></a></td>\n<td><a\nhref=\"../../reference/requests/lookup_transfers#result\"><code>Transfer</code></a>\nor nothing</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"idempotency\"><a href=\"#idempotency\"\nclass=\"anchor\">Idempotency</a></h3>\n<p>Events that create objects are idempotent. The first event to create\nan object with a given <code>id</code> will receive the <code>ok</code>\nresult. Subsequent events that attempt to create the same object will\nreceive the <code>exists</code> result.</p>\n<h2 id=\"batching-events\"><a href=\"#batching-events\"\nclass=\"anchor\">Batching Events</a></h2>\n<p>To achieve high throughput, TigerBeetle amortizes the overhead of\nconsensus and I/O by batching many events in each request.</p>\n<p>In the default configuration, the maximum batch sizes for each\nrequest type are:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Request Type</th>\n<th style=\"text-align: right;\">Request Batch Size (Events)</th>\n<th style=\"text-align: right;\">Reply Batch Size (Results)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>lookup_accounts</code></td>\n<td style=\"text-align: right;\">8189</td>\n<td style=\"text-align: right;\">8189</td>\n</tr>\n<tr>\n<td><code>lookup_transfers</code></td>\n<td style=\"text-align: right;\">8189</td>\n<td style=\"text-align: right;\">8189</td>\n</tr>\n<tr>\n<td><code>create_accounts</code></td>\n<td style=\"text-align: right;\">8189</td>\n<td style=\"text-align: right;\">8189</td>\n</tr>\n<tr>\n<td><code>create_transfers</code></td>\n<td style=\"text-align: right;\">8189</td>\n<td style=\"text-align: right;\">8189</td>\n</tr>\n<tr>\n<td><code>get_account_transfers</code></td>\n<td style=\"text-align: right;\">1</td>\n<td style=\"text-align: right;\">8189</td>\n</tr>\n<tr>\n<td><code>get_account_balances</code></td>\n<td style=\"text-align: right;\">1</td>\n<td style=\"text-align: right;\">8189</td>\n</tr>\n<tr>\n<td><code>query_accounts</code></td>\n<td style=\"text-align: right;\">1</td>\n<td style=\"text-align: right;\">8189</td>\n</tr>\n<tr>\n<td><code>query_transfers</code></td>\n<td style=\"text-align: right;\">1</td>\n<td style=\"text-align: right;\">8189</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li><a href=\"/coding/clients/node/#batching\">Node.js</a></li>\n<li><a href=\"/coding/clients/go/#batching\">Go</a></li>\n<li><a href=\"/coding/clients/java/#batching\">Java</a></li>\n<li><a href=\"/coding/clients/dotnet/#batching\">.NET</a></li>\n<li><a href=\"/coding/clients/python/#batching\">Python</a></li>\n</ul>\n<h3 id=\"automatic-batching\"><a href=\"#automatic-batching\"\nclass=\"anchor\">Automatic Batching</a></h3>\n<p>TigerBeetle clients automatically batch operations. There may be\ninstances where your application logic makes it hard to fill up the\nbatches that you send to TigerBeetle, for example a multi-threaded web\nserver where each HTTP request is handled on a different thread.</p>\n<p>The TigerBeetle client should be shared across threads (or tasks,\ndepending on your paradigm), since it automatically groups together\nbatches of small sizes into one request. Since TigerBeetle clients can\nhave <a href=\"../../reference/sessions\"><strong>at most one in-flight\nrequest</strong></a>, the client accumulates smaller batches together\nwhile waiting for a reply to the last request.</p>\n<h2 id=\"guarantees\"><a href=\"#guarantees\"\nclass=\"anchor\">Guarantees</a></h2>\n<ul>\n<li>A request executes within the cluster at most once.</li>\n<li>Requests do not <a href=\"../../reference/sessions#retries\">time\nout</a>. Clients will continuously retry requests until they receive a\nreply from the cluster. This is because in the case of a network\npartition, a lack of response from the cluster could either indicate\nthat the request was dropped before it was processed or that the reply\nwas dropped after the request was processed. Note that individual <a\nhref=\"../two-phase-transfers\">pending transfers</a> within a request may\nhave <a href=\"../../reference/transfer#timeout\">timeouts</a>.</li>\n<li>Requests retried by their original client session receive identical\nreplies.</li>\n<li>Requests retried by a different client (same request body, different\nsession) may receive different replies.</li>\n<li>Events within a request are executed in sequence. The effects of a\ngiven event are observable when the next event within that request is\napplied.</li>\n<li>Events within a request do not interleave with events from other\nrequests.</li>\n<li>All events within a request batch are committed, or none are. Note\nthat this does not mean that all of the events in a batch will succeed,\nor that all will fail. Events succeed or fail independently unless they\nare explicitly <a href=\"../linked-events\">linked</a></li>\n<li>Once committed, an event will always be committed — the cluster’s\nstate never backtracks.</li>\n<li>Within a cluster, object <a\nhref=\"../time#timestamps-are-totally-ordered\">timestamps are unique and\nstrictly increasing</a>. No two objects within the same cluster will\nhave the same timestamp. Furthermore, the order of the timestamps\nindicates the order in which the objects were committed.</li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/requests.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/reliable-transaction-submission","html":"<h1 id=\"reliable-transaction-submission\"><a\nhref=\"#reliable-transaction-submission\" class=\"anchor\">Reliable\nTransaction Submission</a></h1>\n<p>When making payments or recording transfers, it is important to\nensure that they are recorded once and only once – even if some parts of\nthe system fail during the transaction.</p>\n<p>There are some subtle gotchas to avoid, so this page describes how to\nsubmit events – and especially transfers – reliably.</p>\n<h2 id=\"the-app-or-browser-should-generate-the-id\"><a\nhref=\"#the-app-or-browser-should-generate-the-id\" class=\"anchor\">The App\nor Browser Should Generate the ID</a></h2>\n<p><a href=\"../../reference/transfer#id\"><code>Transfer</code>s</a> and\n<a href=\"../../reference/account#id\"><code>Account</code>s</a> carry an\n<code>id</code> field that is used as an idempotency key to ensure the\nsame object is not created twice.</p>\n<p><strong>The client software, such as your app or web page, that the\nuser interacts with should generate the <code>id</code> (not your API).\nThis <code>id</code> should be persisted locally before submission, and\nthe same <code>id</code> should be used for subsequent\nretries.</strong></p>\n<ol type=\"1\">\n<li>User initiates a transfer.</li>\n<li>Client software (app, web page, etc) <a\nhref=\"../data-modeling#id\">generates the transfer\n<code>id</code></a>.</li>\n<li>Client software <strong>persists the <code>id</code> in the app or\nbrowser local storage.</strong></li>\n<li>Client software submits the transfer to your <a\nhref=\"../system-architecture\">API service</a>.</li>\n<li>API service includes the transfer in a <a\nhref=\"../../reference/requests/\">request</a>.</li>\n<li>TigerBeetle creates the transfer with the given <code>id</code> once\nand only once.</li>\n<li>TigerBeetle responds to the API service.</li>\n<li>The API service responds to the client software.</li>\n</ol>\n<h3 id=\"handling-network-failures\"><a href=\"#handling-network-failures\"\nclass=\"anchor\">Handling Network Failures</a></h3>\n<p>The method described above handles various potential network\nfailures. The request may be lost before it reaches the API service or\nbefore it reaches TigerBeetle. Or, the response may be lost on the way\nback from TigerBeetle.</p>\n<p>Generating the <code>id</code> on the client side ensures that\ntransfers can be safely retried. The app must use the same\n<code>id</code> each time the transfer is resent.</p>\n<p>If the transfer was already created before and then retried,\nTigerBeetle will return the <a\nhref=\"../../reference/requests/create_transfers#exists\"><code>exists</code></a>\nresponse code. If the transfer had not already been created, it will be\ncreated and return the <a\nhref=\"../../reference/requests/create_transfers#ok\"><code>ok</code></a>.</p>\n<h3 id=\"handling-client-software-restarts\"><a\nhref=\"#handling-client-software-restarts\" class=\"anchor\">Handling Client\nSoftware Restarts</a></h3>\n<p>The method described above also handles potential restarts of the app\nor browser while the request is in flight.</p>\n<p>It is important to <strong>persist the <code>id</code> to local\nstorage on the client’s device before submitting the transfer</strong>.\nWhen the app or web page reloads, it should resubmit the transfer using\nthe same <code>id</code>.</p>\n<p>This ensures that the operation can be safely retried even if the\nclient app or browser restarts before receiving the response to the\noperation. Similar to the case of a network failure, TigerBeetle will\nrespond with the <a\nhref=\"../../reference/requests/create_transfers#ok\"><code>ok</code></a>\nif a transfer is newly created and <a\nhref=\"../../reference/requests/create_transfers#exists\"><code>exists</code></a>\nif an object with the same <code>id</code> was already created.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/reliable-transaction-submission.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/two-phase-transfers","html":"<h1 id=\"two-phase-transfers\"><a href=\"#two-phase-transfers\"\nclass=\"anchor\">Two-Phase Transfers</a></h1>\n<p>A two-phase transfer moves funds in stages:</p>\n<ol type=\"1\">\n<li>Reserve funds (<a\nhref=\"#reserve-funds-pending-transfer\">pending</a>)</li>\n<li>Resolve funds (<a href=\"#post-pending-transfer\">post</a>, <a\nhref=\"#void-pending-transfer\">void</a>, or <a\nhref=\"#expire-pending-transfer\">expire</a>)</li>\n</ol>\n<p>The name “two-phase transfer” is a reference to the <a\nhref=\"https://en.wikipedia.org/wiki/Two-phase_commit_protocol\">two-phase\ncommit protocol for distributed transactions</a>.</p>\n<h2 id=\"reserve-funds-pending-transfer\"><a\nhref=\"#reserve-funds-pending-transfer\" class=\"anchor\">Reserve Funds\n(Pending Transfer)</a></h2>\n<p>A pending transfer, denoted by <a\nhref=\"../../reference/transfer#flagspending\"><code>flags.pending</code></a>,\nreserves its <code>amount</code> in the debit/credit accounts’ <a\nhref=\"../../reference/account#debits_pending\"><code>debits_pending</code></a>/<a\nhref=\"../../reference/account#credits_pending\"><code>credits_pending</code></a>\nfields, respectively. Pending transfers leave the\n<code>debits_posted</code>/<code>credits_posted</code> unmodified.</p>\n<h2 id=\"resolve-funds\"><a href=\"#resolve-funds\" class=\"anchor\">Resolve\nFunds</a></h2>\n<p>Pending transfers can be posted, voided, or they may time out.</p>\n<h3 id=\"post-pending-transfer\"><a href=\"#post-pending-transfer\"\nclass=\"anchor\">Post-Pending Transfer</a></h3>\n<p>A post-pending transfer, denoted by <a\nhref=\"../../reference/transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a>,\ncauses a pending transfer to “post”, transferring some or all of the\npending transfer’s reserved amount to its destination.</p>\n<ul>\n<li>If the posted <a\nhref=\"../../reference/transfer#amount\"><code>amount</code></a> is less\nthan the pending transfer’s amount, then only this amount is posted, and\nthe remainder is restored to its original accounts.</li>\n<li>If the posted <a\nhref=\"../../reference/transfer#amount\"><code>amount</code></a> is equal\nto the pending transfer’s amount or equal to <code>AMOUNT_MAX</code>\n(<code>2^128 - 1</code>), the full pending transfer’s amount is\nposted.</li>\n<li>If the posted <a\nhref=\"../../reference/transfer#amount\"><code>amount</code></a> is\ngreater than the pending transfer’s amount (but less than\n<code>AMOUNT_MAX</code>), <a\nhref=\"../../reference/requests/create_transfers#exceeds_pending_transfer_amount\"><code>exceeds_pending_transfer_amount</code></a>\nis returned.</li>\n</ul>\n<details>\n<summary>Client &lt; 0.16.0</summary>\n\n<ul>\n<li>If the posted <a\nhref=\"../../reference/transfer#amount\"><code>amount</code></a> is 0, the\nfull pending transfer’s amount is posted.</li>\n<li>If the posted <a\nhref=\"../../reference/transfer#amount\"><code>amount</code></a> is\nnonzero, then only this amount is posted, and the remainder is restored\nto its original accounts. It must be less than or equal to the pending\ntransfer’s amount.</li>\n</ul>\n</details>\n\n<p>Additionally, when <code>flags.post_pending_transfer</code> is\nset:</p>\n<ul>\n<li><a\nhref=\"../../reference/transfer#pending_id\"><code>pending_id</code></a>\nmust reference a <a href=\"#reserve-funds-pending-transfer\">pending\ntransfer</a>.</li>\n<li><a\nhref=\"../../reference/transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a>\nmust not be set.</li>\n</ul>\n<p>The following fields may either be zero or they must match the value\nof the pending transfer’s field:</p>\n<ul>\n<li><a\nhref=\"../../reference/transfer#debit_account_id\"><code>debit_account_id</code></a></li>\n<li><a\nhref=\"../../reference/transfer#credit_account_id\"><code>credit_account_id</code></a></li>\n<li><a\nhref=\"../../reference/transfer#ledger\"><code>ledger</code></a></li>\n<li><a href=\"../../reference/transfer#code\"><code>code</code></a></li>\n</ul>\n<h3 id=\"void-pending-transfer\"><a href=\"#void-pending-transfer\"\nclass=\"anchor\">Void-Pending Transfer</a></h3>\n<p>A void-pending transfer, denoted by <a\nhref=\"../../reference/transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a>,\nrestores the pending amount its original accounts. Additionally, when\nthis field is set:</p>\n<ul>\n<li><a\nhref=\"../../reference/transfer#pending_id\"><code>pending_id</code></a>\nmust reference a <a href=\"#reserve-funds-pending-transfer\">pending\ntransfer</a>.</li>\n<li><a\nhref=\"../../reference/transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a>\nmust not be set.</li>\n</ul>\n<p>The following fields may either be zero or they must match the value\nof the pending transfer’s field:</p>\n<ul>\n<li><a\nhref=\"../../reference/transfer#debit_account_id\"><code>debit_account_id</code></a></li>\n<li><a\nhref=\"../../reference/transfer#credit_account_id\"><code>credit_account_id</code></a></li>\n<li><a\nhref=\"../../reference/transfer#ledger\"><code>ledger</code></a></li>\n<li><a href=\"../../reference/transfer#code\"><code>code</code></a></li>\n</ul>\n<h3 id=\"expire-pending-transfer\"><a href=\"#expire-pending-transfer\"\nclass=\"anchor\">Expire Pending Transfer</a></h3>\n<p>A pending transfer may optionally be created with a <a\nhref=\"../../reference/transfer#timeout\">timeout</a>. If the timeout\ninterval passes before the transfer is either posted or voided, the\ntransfer expires and the full amount is returned to the original\naccount.</p>\n<p>Note that <code>timeout</code>s are given as intervals, specified in\nseconds, rather than as absolute timestamps. For more details on why,\nread the page about <a href=\"../time\">Time in TigerBeetle</a>.</p>\n<h3 id=\"errors\"><a href=\"#errors\" class=\"anchor\">Errors</a></h3>\n<p>A pending transfer can only be posted or voided once. It cannot be\nposted twice or voided then posted, etc.</p>\n<p>Attempting to resolve a pending transfer more than once will return\nthe applicable error result:</p>\n<ul>\n<li><a\nhref=\"../../reference/requests/create_transfers#pending_transfer_already_posted\"><code>pending_transfer_already_posted</code></a></li>\n<li><a\nhref=\"../../reference/requests/create_transfers#pending_transfer_already_voided\"><code>pending_transfer_already_voided</code></a></li>\n<li><a\nhref=\"../../reference/requests/create_transfers#pending_transfer_expired\"><code>pending_transfer_expired</code></a></li>\n</ul>\n<h2 id=\"interaction-with-account-invariants\"><a\nhref=\"#interaction-with-account-invariants\" class=\"anchor\">Interaction\nwith Account Invariants</a></h2>\n<p>The pending transfer’s amount is reserved in a way that the second\nstep in a two-phase transfer will never cause the accounts’ configured\nbalance invariants (<a\nhref=\"../../reference/account#flagscredits_must_not_exceed_debits\"><code>credits_must_not_exceed_debits</code></a>\nor <a\nhref=\"../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a>)\nto be broken, whether the second step is a post or void.</p>\n<h3 id=\"pessimistic-pending-transfers\"><a\nhref=\"#pessimistic-pending-transfers\" class=\"anchor\">Pessimistic Pending\nTransfers</a></h3>\n<p>If an account with <a\nhref=\"../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a>\nhas <code>credits_posted = 100</code> and\n<code>debits_posted = 70</code> and a pending transfer is started\ncausing the account to have <code>debits_pending = 50</code>, the\n<em>pending</em> transfer will fail. It will not wait to get to\n<em>posted</em> status to fail.</p>\n<h2 id=\"all-transfers-are-immutable\"><a\nhref=\"#all-transfers-are-immutable\" class=\"anchor\">All Transfers Are\nImmutable</a></h2>\n<p>To reiterate, completing a two-phase transfer (by either marking it\nvoid or posted) does not involve modifying the pending transfer. Instead\nyou create a new transfer.</p>\n<p>The first transfer that is marked pending will always have its\npending flag set.</p>\n<p>The second transfer will have a <a\nhref=\"../../reference/transfer#flagspost_pending_transfer\"><code>post_pending_transfer</code></a>\nor <a\nhref=\"../../reference/transfer#flagsvoid_pending_transfer\"><code>void_pending_transfer</code></a>\nflag set and a <a\nhref=\"../../reference/transfer#pending_id\"><code>pending_id</code></a>\nfield set to the <a\nhref=\"../../reference/transfer#id\"><code>id</code></a> of the first\ntransfer. The <a href=\"../../reference/transfer#id\"><code>id</code></a>\nof the second transfer will be unique, not the same <a\nhref=\"../../reference/transfer#id\"><code>id</code></a> as the initial\npending transfer.</p>\n<h2 id=\"examples\"><a href=\"#examples\" class=\"anchor\">Examples</a></h2>\n<p>The following examples show the state of two accounts in three\nsteps:</p>\n<ol type=\"1\">\n<li>Initially, before any transfers</li>\n<li>After a pending transfer</li>\n<li>And after the pending transfer is posted or voided</li>\n</ol>\n<h3 id=\"post-full-pending-amount\"><a href=\"#post-full-pending-amount\"\nclass=\"anchor\">Post Full Pending Amount</a></h3>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left;\">Account <code>A</code></th>\n<th style=\"text-align: left;\"></th>\n<th style=\"text-align: left;\">Account <code>B</code></th>\n<th style=\"text-align: left;\"></th>\n<th style=\"text-align: left;\">Transfers</th>\n<th style=\"text-align: left;\"></th>\n<th style=\"text-align: right;\"></th>\n<th style=\"text-align: left;\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left;\"><strong>debits</strong></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: left;\"><strong>credits</strong></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: right;\"></td>\n<td style=\"text-align: left;\"></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><strong>pending</strong></td>\n<td style=\"text-align: left;\"><strong>posted</strong></td>\n<td style=\"text-align: left;\"><strong>pending</strong></td>\n<td style=\"text-align: left;\"><strong>posted</strong></td>\n<td style=\"text-align: left;\"><strong>debit_account_id</strong></td>\n<td style=\"text-align: left;\"><strong>credit_account_id</strong></td>\n<td style=\"text-align: right;\"><strong>amount</strong></td>\n<td style=\"text-align: left;\"><strong>flags</strong></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>w</code></td>\n<td style=\"text-align: left;\"><code>x</code></td>\n<td style=\"text-align: left;\"><code>y</code></td>\n<td style=\"text-align: left;\"><code>z</code></td>\n<td style=\"text-align: left;\">-</td>\n<td style=\"text-align: left;\">-</td>\n<td style=\"text-align: right;\">-</td>\n<td style=\"text-align: left;\">-</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>w</code> + 123</td>\n<td style=\"text-align: left;\"><code>x</code></td>\n<td style=\"text-align: left;\"><code>y</code> + 123</td>\n<td style=\"text-align: left;\"><code>z</code></td>\n<td style=\"text-align: left;\"><code>A</code></td>\n<td style=\"text-align: left;\"><code>B</code></td>\n<td style=\"text-align: right;\">123</td>\n<td style=\"text-align: left;\"><code>pending</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>w</code></td>\n<td style=\"text-align: left;\"><code>x</code>+ 123</td>\n<td style=\"text-align: left;\"><code>y</code></td>\n<td style=\"text-align: left;\"><code>z</code> + 123</td>\n<td style=\"text-align: left;\"><code>A</code></td>\n<td style=\"text-align: left;\"><code>B</code></td>\n<td style=\"text-align: right;\">123</td>\n<td style=\"text-align: left;\"><code>post_pending_transfer</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"post-partial-pending-amount\"><a\nhref=\"#post-partial-pending-amount\" class=\"anchor\">Post Partial Pending\nAmount</a></h3>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left;\">Account <code>A</code></th>\n<th style=\"text-align: left;\"></th>\n<th style=\"text-align: left;\">Account <code>B</code></th>\n<th style=\"text-align: left;\"></th>\n<th style=\"text-align: left;\">Transfers</th>\n<th style=\"text-align: left;\"></th>\n<th style=\"text-align: right;\"></th>\n<th style=\"text-align: left;\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left;\"><strong>debits</strong></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: left;\"><strong>credits</strong></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: right;\"></td>\n<td style=\"text-align: left;\"></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><strong>pending</strong></td>\n<td style=\"text-align: left;\"><strong>posted</strong></td>\n<td style=\"text-align: left;\"><strong>pending</strong></td>\n<td style=\"text-align: left;\"><strong>posted</strong></td>\n<td style=\"text-align: left;\"><strong>debit_account_id</strong></td>\n<td style=\"text-align: left;\"><strong>credit_account_id</strong></td>\n<td style=\"text-align: right;\"><strong>amount</strong></td>\n<td style=\"text-align: left;\"><strong>flags</strong></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>w</code></td>\n<td style=\"text-align: left;\"><code>x</code></td>\n<td style=\"text-align: left;\"><code>y</code></td>\n<td style=\"text-align: left;\"><code>z</code></td>\n<td style=\"text-align: left;\">-</td>\n<td style=\"text-align: left;\">-</td>\n<td style=\"text-align: right;\">-</td>\n<td style=\"text-align: left;\">-</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>w</code> + 123</td>\n<td style=\"text-align: left;\"><code>x</code></td>\n<td style=\"text-align: left;\"><code>y</code> + 123</td>\n<td style=\"text-align: left;\"><code>z</code></td>\n<td style=\"text-align: left;\"><code>A</code></td>\n<td style=\"text-align: left;\"><code>B</code></td>\n<td style=\"text-align: right;\">123</td>\n<td style=\"text-align: left;\"><code>pending</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>w</code></td>\n<td style=\"text-align: left;\"><code>x</code> + 100</td>\n<td style=\"text-align: left;\"><code>y</code></td>\n<td style=\"text-align: left;\"><code>z</code> + 100</td>\n<td style=\"text-align: left;\"><code>A</code></td>\n<td style=\"text-align: left;\"><code>B</code></td>\n<td style=\"text-align: right;\">100</td>\n<td style=\"text-align: left;\"><code>post_pending_transfer</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"void-pending-transfer-1\"><a href=\"#void-pending-transfer-1\"\nclass=\"anchor\">Void Pending Transfer</a></h3>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left;\">Account <code>A</code></th>\n<th style=\"text-align: left;\"></th>\n<th style=\"text-align: left;\">Account <code>B</code></th>\n<th style=\"text-align: left;\"></th>\n<th style=\"text-align: left;\">Transfers</th>\n<th style=\"text-align: left;\"></th>\n<th style=\"text-align: right;\"></th>\n<th style=\"text-align: left;\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left;\"><strong>debits</strong></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: left;\"><strong>credits</strong></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: right;\"></td>\n<td style=\"text-align: left;\"></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><strong>pending</strong></td>\n<td style=\"text-align: left;\"><strong>posted</strong></td>\n<td style=\"text-align: left;\"><strong>pending</strong></td>\n<td style=\"text-align: left;\"><strong>posted</strong></td>\n<td style=\"text-align: left;\"><strong>debit_account_id</strong></td>\n<td style=\"text-align: left;\"><strong>credit_account_id</strong></td>\n<td style=\"text-align: right;\"><strong>amount</strong></td>\n<td style=\"text-align: left;\"><strong>flags</strong></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>w</code></td>\n<td style=\"text-align: left;\"><code>x</code></td>\n<td style=\"text-align: left;\"><code>y</code></td>\n<td style=\"text-align: left;\"><code>z</code></td>\n<td style=\"text-align: left;\">-</td>\n<td style=\"text-align: left;\">-</td>\n<td style=\"text-align: right;\">-</td>\n<td style=\"text-align: left;\">-</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>w</code> + 123</td>\n<td style=\"text-align: left;\"><code>x</code></td>\n<td style=\"text-align: left;\"><code>y</code> + 123</td>\n<td style=\"text-align: left;\"><code>z</code></td>\n<td style=\"text-align: left;\"><code>A</code></td>\n<td style=\"text-align: left;\"><code>B</code></td>\n<td style=\"text-align: right;\">123</td>\n<td style=\"text-align: left;\"><code>pending</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>w</code></td>\n<td style=\"text-align: left;\"><code>x</code></td>\n<td style=\"text-align: left;\"><code>y</code></td>\n<td style=\"text-align: left;\"><code>z</code></td>\n<td style=\"text-align: left;\"><code>A</code></td>\n<td style=\"text-align: left;\"><code>B</code></td>\n<td style=\"text-align: right;\">123</td>\n<td style=\"text-align: left;\"><code>void_pending_transfer</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/two-phase-transfers.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/linked-events","html":"<h1 id=\"linked-events\"><a href=\"#linked-events\" class=\"anchor\">Linked\nEvents</a></h1>\n<p>Events within a request <a\nhref=\"../../reference/requests/create_transfers#result\">succeed or\nfail</a> independently unless they are explicitly linked using\n<code>flags.linked</code> (<a\nhref=\"../../reference/account#flagslinked\"><code>Account.flags.linked</code></a>\nor <a\nhref=\"../../reference/transfer#flagslinked\"><code>Transfer.flags.linked</code></a>).</p>\n<p>When the <code>linked</code> flag is specified, it links the outcome\nof a Transfer or Account creation with the outcome of the next one in\nthe request. These chains of events will all succeed or fail\ntogether.</p>\n<p><strong>The last event in a chain is denoted by the first Transfer or\nAccount without this flag.</strong></p>\n<p>The last Transfer or Account in a request may never have the\n<code>flags.linked</code> set, as it would leave a chain open-ended.\nAttempting to do so will result in the <a\nhref=\"../../reference/requests/create_transfers#linked_event_chain_open\"><code>linked_event_chain_open</code></a>\nerror.</p>\n<p>Multiple chains of events may coexist within a request to succeed or\nfail independently.</p>\n<p>Events within a chain are executed in order, or are rolled back on\nerror, so that the effect of each event in the chain is visible to the\nnext. Each chain is either visible or invisible as a unit to subsequent\ntransfers after the chain. The event that was the first to fail within a\nchain will have a unique error result. Other events in the chain will\nhave their error result set to <a\nhref=\"../../reference/requests/create_transfers#linked_event_failed\"><code>linked_event_failed</code></a>.</p>\n<h3 id=\"linked-transfers-example\"><a href=\"#linked-transfers-example\"\nclass=\"anchor\">Linked Transfers Example</a></h3>\n<p>Consider this set of Transfers as part of a request:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th>Index in Request</th>\n<th>flags.linked</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>A</code></td>\n<td><code>0</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>B</code></td>\n<td><code>1</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>C</code></td>\n<td><code>2</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>D</code></td>\n<td><code>3</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>E</code></td>\n<td><code>4</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>If any of transfers <code>B</code>, <code>C</code>, or <code>D</code>\nfail (for example, due to <a\nhref=\"../../reference/requests/create_transfers#exceeds_credits\"><code>exceeds_credits</code></a>),\nthen <code>B</code>, <code>C</code>, and <code>D</code> will all fail.\nThey are linked.</p>\n<p>Transfers <code>A</code> and <code>E</code> fail or succeed\nindependently of <code>B</code>, <code>C</code>, <code>D</code>, and\neach other.</p>\n<p>After the chain of linked events has executed, the fact that they\nwere linked will not be saved. To save the association between Transfers\nor Accounts, it must be <a href=\"../data-modeling\">encoded into the data\nmodel</a>, for example by adding an ID to one of the <a\nhref=\"../data-modeling#user_data\">user data</a> fields.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/linked-events.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/time","html":"<h1 id=\"time\"><a href=\"#time\" class=\"anchor\">Time</a></h1>\n<p>Time is a critical component of all distributed systems and\ndatabases. Within TigerBeetle, we keep track of two types of time:\nlogical time and physical time. Logical time is about ordering events\nrelative to each other, and physical time is the everyday time, a\nnumeric timestamp.</p>\n<h2 id=\"logical-time\"><a href=\"#logical-time\" class=\"anchor\">Logical\nTime</a></h2>\n<p>TigerBeetle uses a consensus protocol (<a\nhref=\"https://pmg.csail.mit.edu/papers/vr-revisited.pdf\">Viewstamped\nReplication</a>) to guarantee <a\nhref=\"http://www.bailis.org/blog/linearizability-versus-serializability/\">strict\nserializability</a> for all operations.</p>\n<p>In other words, to an external observer, TigerBeetle cluster behaves\nas if it is just a single machine which processes the incoming requests\nin order. If an application submits a batch of transfers with transfer\n<code>T1</code>, receives a reply, and then submits a batch with another\ntransfer <code>T2</code>, it is guaranteed that <code>T2</code> will\nobserve the effects of <code>T1</code>. Note, however, that there could\nbe concurrent requests from multiple applications, so, unless\n<code>T1</code> and <code>T2</code> are in the same batch of transfers,\nsome other transfer could happen in between them. See the <a\nhref=\"../../reference/sessions\">reference</a> for precise\nguarantees.</p>\n<h2 id=\"physical-time\"><a href=\"#physical-time\" class=\"anchor\">Physical\nTime</a></h2>\n<p>TigerBeetle uses physical time in addition to the logical time\nprovided by the consensus algorithm. Financial transactions require\nphysical time for multiple reasons, including:</p>\n<ul>\n<li><strong>Liquidity</strong> - TigerBeetle supports <a\nhref=\"../two-phase-transfers\">Two-Phase Transfers</a> that reserve funds\nand hold them in a pending state until they are posted, voided, or the\ntransfer times out. A timeout is useful to ensure that the reserved\nfunds are not held in limbo indefinitely.</li>\n<li><strong>Compliance and Auditing</strong> - For regulatory and\nsecurity purposes, it is useful to have a specific idea of when (in\nterms of wall clock time) transfers took place.</li>\n</ul>\n<p>TigerBeetle uses two-layered approach to physical time. On the basic\nlayer, each replica asks the underling operating system about the\ncurrent time. Then, timing information from several replicas is\naggregated to make sure that the replicas roughly agree on the time, to\nprevent a replica with a bad clock from issuing incorrect timestamps.\nAdditionally, this “cluster time” is made strictly monotonic, for end\nuser’s convenience.</p>\n<h2 id=\"why-tigerbeetle-manages-timestamps\"><a\nhref=\"#why-tigerbeetle-manages-timestamps\" class=\"anchor\">Why\nTigerBeetle Manages Timestamps</a></h2>\n<p>An important invariant is that the TigerBeetle cluster assigns all\ntimestamps. In particular, timestamps on <a\nhref=\"../../reference/transfer#timestamp\"><code>Transfer</code>s</a> and\n<a href=\"../../reference/account#timestamp\"><code>Account</code>s</a>\nare set by the cluster when the corresponding event arrives at the\nprimary. This is why the <code>timestamp</code> field must be set to\n<code>0</code> when operations are submitted by the client.</p>\n<p>Similarly, the <a\nhref=\"../../reference/transfer#timeout\"><code>Transfer.timeout</code></a>\nis given as an interval in seconds, rather than as an absolute\ntimestamp, because it is also managed by the primary. The\n<code>timeout</code> is calculated relative to the\n<code>timestamp</code> when the operation arrives at the primary.</p>\n<p>This restriction is needed to make sure that any two timestamps\nalways refer to the same underlying clock (cluster’s physical time) and\nare directly comparable. This in turn provides a set of powerful\nguarantees.</p>\n<h3 id=\"timestamps-are-totally-ordered\"><a\nhref=\"#timestamps-are-totally-ordered\" class=\"anchor\">Timestamps are\nTotally Ordered</a></h3>\n<p>All <code>timestamp</code>s within TigerBeetle are unique, immutable\nand <a href=\"https://book.mixu.net/distsys/time.html\">totally\nordered</a>. A transfer that is created before another transfer is\nguaranteed to have an earlier <code>timestamp</code> (even if they were\ncreated in the same request).</p>\n<p>In other systems this is also called a “physical” timestamp,\n“ingestion” timestamp, “record” timestamp, or “system” timestamp.</p>\n<h2 id=\"further-reading\"><a href=\"#further-reading\"\nclass=\"anchor\">Further Reading</a></h2>\n<p>If you are curious how exactly it is that TigerBeetle achieves\nstrictly monotonic physical time, we have a talk and a blog post with\ndetails:</p>\n<ul>\n<li><a href=\"https://youtu.be/7R-Iz6sJG6Q?si=9sD2TpfD29AxUjOY\">Detecting\nClock Sync Failure in Highly Available Systems (YouTube)</a></li>\n<li><a\nhref=\"https://tigerbeetle.com/blog/three-clocks-are-better-than-one/\">Three\nClocks are Better than One (TigerBeetle Blog)</a></li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/time.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/recipes","html":"<h1 id=\"recipes\"><a href=\"#recipes\" class=\"anchor\">Recipes</a></h1>\n<p>A collection of solutions for common use-cases. Want to exchange some\ncurrency? Or made a wrong transfer and want to undo that? We have a\nrecipe for that!</p>\n<ul>\n<li><a href=\"./currency-exchange\">Currency Exchange</a></li>\n<li><a href=\"./multi-debit-credit-transfers\">Multi-Debit, Multi-Credit\nTransfers</a></li>\n<li><a href=\"./close-account\">Closing Accounts</a></li>\n<li><a href=\"./balance-conditional-transfers\">Balance-Conditional\nTransfers</a></li>\n<li><a href=\"./balance-invariant-transfers\">Balance-Invariant\nTransfers</a></li>\n<li><a href=\"./balance-bounds\">Balance Bounds</a></li>\n<li><a href=\"./correcting-transfers\">Correcting Transfers</a></li>\n<li><a href=\"./rate-limiting\">Rate Limiting</a></li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/recipes/README.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/recipes/currency-exchange","html":"<h1 id=\"currency-exchange\"><a href=\"#currency-exchange\"\nclass=\"anchor\">Currency Exchange</a></h1>\n<p>Some applications require multiple currencies. For example, a bank\nmay hold balances in many different currencies. If a single logical\nentity holds multiple currencies, each currency must be held in a\nseparate TigerBeetle <code>Account</code>. (Normalizing to a single\ncurrency at the application level should be avoided because exchange\nrates fluctuate).</p>\n<p>Currency exchange is a trade of one type of currency (denoted by the\n<code>ledger</code>) for another, facilitated by an entity called the\n<em>liquidity provider</em>.</p>\n<h2 id=\"data-modeling\"><a href=\"#data-modeling\" class=\"anchor\">Data\nModeling</a></h2>\n<p>Distinct <a\nhref=\"../../../reference/account#ledger\"><code>ledger</code></a> values\ndenote different currencies (or other asset types). Transfers between\npairs of accounts with different <code>ledger</code>s are <a\nhref=\"../../../reference/requests/create_transfers#accounts_must_have_the_same_ledger\">not\npermitted</a>.</p>\n<p>Instead, currency exchange is implemented by creating two <a\nhref=\"../../../reference/transfer#flagslinked\">atomically linked</a>\ndifferent-ledger transfers between two pairs of same-ledger\naccounts.</p>\n<p>A simple currency exchange involves four accounts:</p>\n<ul>\n<li>A <em>source account</em> <code>A₁</code>, on ledger\n<code>1</code>.</li>\n<li>A <em>destination account</em> <code>A₂</code>, on ledger\n<code>2</code>.</li>\n<li>A <em>source liquidity account</em> <code>L₁</code>, on ledger\n<code>1</code>.</li>\n<li>A <em>destination liquidity account</em> <code>L₂</code>, on ledger\n<code>2</code>.</li>\n</ul>\n<p>and two linked transfers:</p>\n<ul>\n<li>A transfer <code>T₁</code> from the <em>source account</em> to the\n<em>source liquidity account</em>.</li>\n<li>A transfer <code>T₂</code> from the <em>destination liquidity\naccount</em> to the <em>destination account</em>.</li>\n</ul>\n<p>The transfer amounts vary according to the exchange rate.</p>\n<ul>\n<li>Both liquidity accounts belong to the liquidity provider (e.g. a\nbank or exchange).</li>\n<li>The source and destination accounts may belong to the same entity as\none another, or different entities, depending on the use case.</li>\n</ul>\n<h3 id=\"example\"><a href=\"#example\" class=\"anchor\">Example</a></h3>\n<p>Consider sending <code>$100.00</code> from account <code>A₁</code>\n(denominated in USD) to account <code>A₂</code> (denominated in INR).\nAssuming an exchange rate of <code>$1.00 = ₹82.42135</code>,\n<code>$100.00 = ₹8242.135</code>:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\"><code>flags.linked</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A₁</code></td>\n<td style=\"text-align: right;\"><code>L₁</code></td>\n<td style=\"text-align: right;\">10000</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">INR</td>\n<td style=\"text-align: right;\"><code>L₂</code></td>\n<td style=\"text-align: right;\"><code>A₂</code></td>\n<td style=\"text-align: right;\">8242135</td>\n<td style=\"text-align: right;\">false</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li>Amounts are <a\nhref=\"../../data-modeling#fractional-amounts-and-asset-scale\">represented\nas integers</a>.</li>\n<li>Because both liquidity accounts belong to the same entity, the\nentity does not lose money on the transaction.\n<ul>\n<li>If the exchange rate is precise, the entity breaks even.</li>\n<li>If the exchange rate is not precise, the application should round in\nfavor of the liquidity account to deter arbitrage.</li>\n</ul></li>\n<li>Because the two transfers are linked together, they will either both\nsucceed or both fail.</li>\n</ul>\n<h2 id=\"spread\"><a href=\"#spread\" class=\"anchor\">Spread</a></h2>\n<p>In the prior example, the liquidity provider breaks even. A fee (i.e.\nspread) can be included in the <code>linked</code> chain as a separate\ntransfer from the source account to the source liquidity account\n(<code>A₁</code> to <code>L₁</code>).</p>\n<p>This is preferable to simply modifying the exchange rate in the\nliquidity provider’s favor because it implicitly records the exchange\nrate and spread at the time of the exchange — information that cannot be\nderived if the two are combined.</p>\n<h3 id=\"example-1\"><a href=\"#example-1\" class=\"anchor\">Example</a></h3>\n<p>This depicts the same scenario as the prior example, except the\nliquidity provider charges a <code>$0.10</code> fee for the\ntransaction.</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\"><code>flags.linked</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A₁</code></td>\n<td style=\"text-align: right;\"><code>L₁</code></td>\n<td style=\"text-align: right;\">10000</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A₁</code></td>\n<td style=\"text-align: right;\"><code>L₁</code></td>\n<td style=\"text-align: right;\">10</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">INR</td>\n<td style=\"text-align: right;\"><code>L₂</code></td>\n<td style=\"text-align: right;\"><code>A₂</code></td>\n<td style=\"text-align: right;\">8242135</td>\n<td style=\"text-align: right;\">false</td>\n</tr>\n</tbody>\n</table>\n</div>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/recipes/currency-exchange.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/recipes/multi-debit-credit-transfers","html":"<h1 id=\"multi-debit-multi-credit-transfers\"><a\nhref=\"#multi-debit-multi-credit-transfers\" class=\"anchor\">Multi-Debit,\nMulti-Credit Transfers</a></h1>\n<p>TigerBeetle is designed for maximum performance. In order to keep it\nlean, the database only supports simple transfers with a single debit\nand a single credit.</p>\n<p>However, you’ll probably run into cases where you want transactions\nwith multiple debits and/or credits. For example, you might have a\ntransfer where you want to extract fees and/or taxes.</p>\n<p>Read on to see how to implement one-to-many and many-to-many\ntransfers!</p>\n<blockquote>\n<p>Note that all of these examples use the <a\nhref=\"../../../reference/transfer#flagslinked\">Linked Transfers flag\n(<code>flags.linked</code>)</a> to ensure that all of the transfers\nsucceed or fail together.</p>\n</blockquote>\n<h2 id=\"one-to-many-transfers\"><a href=\"#one-to-many-transfers\"\nclass=\"anchor\">One-to-Many Transfers</a></h2>\n<p>Transactions that involve multiple debits and a single credit OR a\nsingle debit and multiple credits are relatively straightforward.</p>\n<p>You can use multiple linked transfers as depicted below.</p>\n<h3 id=\"single-debit-multiple-credits\"><a\nhref=\"#single-debit-multiple-credits\" class=\"anchor\">Single Debit,\nMultiple Credits</a></h3>\n<p>This example debits a single account and credits multiple accounts.\nIt uses the following accounts:</p>\n<ul>\n<li>A <em>source account</em> <code>A</code>, on the <code>USD</code>\nledger.</li>\n<li>Three <em>destination accounts</em> <code>X</code>, <code>Y</code>,\nand <code>Z</code>, on the <code>USD</code> ledger.</li>\n</ul>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\"><code>flags.linked</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>X</code></td>\n<td style=\"text-align: right;\">10000</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>Y</code></td>\n<td style=\"text-align: right;\">50</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>Z</code></td>\n<td style=\"text-align: right;\">10</td>\n<td style=\"text-align: right;\">false</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"multiple-debits-single-credit\"><a\nhref=\"#multiple-debits-single-credit\" class=\"anchor\">Multiple Debits,\nSingle Credit</a></h3>\n<p>This example debits multiple accounts and credits a single account.\nIt uses the following accounts:</p>\n<ul>\n<li>Three <em>source accounts</em> <code>A</code>, <code>B</code>, and\n<code>C</code> on the <code>USD</code> ledger.</li>\n<li>A <em>destination account</em> <code>X</code> on the\n<code>USD</code> ledger.</li>\n</ul>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\"><code>flags.linked</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>X</code></td>\n<td style=\"text-align: right;\">10000</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\"><code>X</code></td>\n<td style=\"text-align: right;\">50</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\"><code>X</code></td>\n<td style=\"text-align: right;\">10</td>\n<td style=\"text-align: right;\">false</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"multiple-debits-single-credit-balancing-debits\"><a\nhref=\"#multiple-debits-single-credit-balancing-debits\"\nclass=\"anchor\">Multiple Debits, Single Credit, Balancing debits</a></h3>\n<p>This example debits multiple accounts and credits a single account.\nThe total amount to transfer to the credit account is known (in this\ncase, <code>100</code>), but the balances of the individual debit\naccounts are not known. That is, each debit account should contribute as\nmuch as possible (in order of precedence) up to the target, cumulative\ntransfer amount.</p>\n<p>It uses the following accounts:</p>\n<ul>\n<li>Three <em>source accounts</em> <code>A</code>, <code>B</code>, and\n<code>C</code>, with <a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>.</li>\n<li>A <em>destination account</em> <code>X</code>.</li>\n<li>A control account <code>LIMIT</code>, with <a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>.</li>\n<li>A control account <code>SETUP</code>, for setting up the\n<code>LIMIT</code> account.</li>\n</ul>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Id</th>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: left;\">Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">1</td>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>SETUP</code></td>\n<td style=\"text-align: right;\"><code>LIMIT</code></td>\n<td style=\"text-align: right;\">100</td>\n<td style=\"text-align: left;\"><a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">2</td>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>SETUP</code></td>\n<td style=\"text-align: right;\">100</td>\n<td style=\"text-align: left;\"><a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsbalancing_debit\"><code>balancing_debit</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsbalancing_credit\"><code>balancing_credit</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">3</td>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\"><code>SETUP</code></td>\n<td style=\"text-align: right;\">100</td>\n<td style=\"text-align: left;\"><a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsbalancing_debit\"><code>balancing_debit</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsbalancing_credit\"><code>balancing_credit</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">4</td>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\"><code>SETUP</code></td>\n<td style=\"text-align: right;\">100</td>\n<td style=\"text-align: left;\"><a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsbalancing_debit\"><code>balancing_debit</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsbalancing_credit\"><code>balancing_credit</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">5</td>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>SETUP</code></td>\n<td style=\"text-align: right;\"><code>X</code></td>\n<td style=\"text-align: right;\">100</td>\n<td style=\"text-align: left;\"><a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">6</td>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>LIMIT</code></td>\n<td style=\"text-align: right;\"><code>SETUP</code></td>\n<td style=\"text-align: right;\"><code>AMOUNT_MAX</code></td>\n<td style=\"text-align: left;\"><a\nhref=\"../../../reference/transfer#flagsbalancing_credit\"><code>balancing_credit</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>If the cumulative <a\nhref=\"../../data-modeling#credit-balances\">credit balance</a> of\n<code>A + B + C</code> is less than <code>100</code>, the chain will\nfail (transfer <code>6</code> will return\n<code>exceeds_credits</code>).</p>\n<h2 id=\"many-to-many-transfers\"><a href=\"#many-to-many-transfers\"\nclass=\"anchor\">Many-to-Many Transfers</a></h2>\n<p>Transactions with multiple debits and multiple credits are a bit more\ninvolved (but you got this!).</p>\n<p>This is where the accounting concept of a Control Account comes in\nhandy. We can use this as an intermediary account, as illustrated\nbelow.</p>\n<p>In this example, we’ll use the following accounts:</p>\n<ul>\n<li>Two <em>source accounts</em> <code>A</code> and <code>B</code> on\nthe <code>USD</code> ledger.</li>\n<li>Three <em>destination accounts</em> <code>X</code>, <code>Y</code>,\nand <code>Z</code>, on the <code>USD</code> ledger.</li>\n<li>A <em>compound entry control account</em> <code>Control</code> on\nthe <code>USD</code> ledger.</li>\n</ul>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\"><code>flags.linked</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>Control</code></td>\n<td style=\"text-align: right;\">10000</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\"><code>Control</code></td>\n<td style=\"text-align: right;\">50</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>Control</code></td>\n<td style=\"text-align: right;\"><code>X</code></td>\n<td style=\"text-align: right;\">9000</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>Control</code></td>\n<td style=\"text-align: right;\"><code>Y</code></td>\n<td style=\"text-align: right;\">1000</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>Control</code></td>\n<td style=\"text-align: right;\"><code>Z</code></td>\n<td style=\"text-align: right;\">50</td>\n<td style=\"text-align: right;\">false</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Here, we use two transfers to debit accounts <code>A</code> and\n<code>B</code> and credit the <code>Control</code> account, and another\nthree transfers to credit accounts <code>X</code>, <code>Y</code>, and\n<code>Z</code>.</p>\n<p>If you looked closely at this example, you may have noticed that we\ncould have debited <code>B</code> and credited <code>Z</code> directly\nbecause the amounts happened to line up. That is true!</p>\n<p>For a little more extreme performance, you <em>might</em> consider\nimplementing logic to circumvent the control account where possible, to\nreduce the number of transfers to implement a compound journal\nentry.</p>\n<p>However, if you’re just getting started, you can avoid premature\noptimizations (we’ve all been there!). You may find it easier to program\nthese compound journal entries <em>always</em> using a control account –\nand you can then come back to squeeze this performance out later!</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/recipes/multi-debit-credit-transfers.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/recipes/close-account","html":"<h1 id=\"close-account\"><a href=\"#close-account\" class=\"anchor\">Close\nAccount</a></h1>\n<p>In accounting, a <em>closing entry</em> calculates the net debit or\ncredit balance for an account and then credits or debits this balance\nrespectively, to zero the account’s balance and move the balance to\nanother account.</p>\n<p>Additionally, it may be desirable to forbid further transfers on this\naccount (i.e. at the end of an accounting period, upon account\ntermination, or even temporarily freezing the account for audit\npurposes.</p>\n<h3 id=\"example\"><a href=\"#example\" class=\"anchor\">Example</a></h3>\n<p>Given a set of accounts:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Account</th>\n<th style=\"text-align: right;\">Debits Pending</th>\n<th style=\"text-align: right;\">Debits Posted</th>\n<th style=\"text-align: right;\">Credits Pending</th>\n<th style=\"text-align: right;\">Credits Posted</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">10</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">20</td>\n<td><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">30</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">5</td>\n<td><a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>credits_must_not_exceed_debits</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">0</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>The “closing entries” for accounts <code>A</code> and <code>B</code>\nare expressed as <em>linked chains</em>, so they either succeed or fail\natomically.</p>\n<ul>\n<li><p>Account <code>A</code>: the linked transfers are <code>T1</code>\nand <code>T2</code>.</p></li>\n<li><p>Account <code>B</code>: the linked transfers are <code>T3</code>\nand <code>T4</code>.</p></li>\n<li><p>Account <code>C</code>: is the <em>control account</em> and will\nnot be closed.</p></li>\n</ul>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Transfer</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\">Amount (recorded)</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\"><code>T1</code></td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\"><code>AMOUNT_MAX</code></td>\n<td style=\"text-align: right;\">10</td>\n<td><a\nhref=\"../../../reference/transfer#flagsbalancing_debit\"><code>balancing_debit</code></a>,<a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>T2</code></td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">0</td>\n<td><a\nhref=\"../../../reference/transfer#flagsclosing_debit\"><code>closing_debit</code></a>,\n<a\nhref=\"../../../reference/transfer#flagspending\"><code>pending</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>T3</code></td>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\"><code>AMOUNT_MAX</code></td>\n<td style=\"text-align: right;\">25</td>\n<td><a\nhref=\"../../../reference/transfer#flagsbalancing_credit\"><code>balancing_credit</code></a>,<a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>T4</code></td>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">0</td>\n<td><a\nhref=\"../../../reference/transfer#flagsclosing_credit\"><code>closing_credit</code></a>,\n<a\nhref=\"../../../reference/transfer#flagspending\"><code>pending</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li><p><code>T1</code> and <code>T3</code> are <em>balancing\ntransfers</em> with <code>AMOUNT_MAX</code> as the\n<code>Transfer.amount</code> so that the application does not need to\nknow (or query) the balance prior to closing the account.</p>\n<p>The stored transfer’s <code>amount</code> will be set to the actual\namount transferred.</p></li>\n<li><p><code>T2</code> and <code>T4</code> are <em>closing\ntransfers</em> that will cause the respective account to be closed.</p>\n<p>The closing transfer must be also a <em>pending transfer</em> so the\naction can be reversible.</p></li>\n</ul>\n<p>After committing these transfers, <code>A</code> and <code>B</code>\nare closed with net balance zero, and will reject any further\ntransfers.</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Account</th>\n<th style=\"text-align: right;\">Debits Pending</th>\n<th style=\"text-align: right;\">Debits Posted</th>\n<th style=\"text-align: right;\">Credits Pending</th>\n<th style=\"text-align: right;\">Credits Posted</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">20</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">20</td>\n<td><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a>,\n<a\nhref=\"../../../reference/account#flagsclosed\"><code>closed</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">30</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">30</td>\n<td><a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>credits_must_not_exceed_debits</code></a>,\n<a\nhref=\"../../../reference/account#flagsclosed\"><code>closed</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">25</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">10</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>To re-open the closed account, the <em>pending closing transfer</em>\ncan be <em>voided</em>, reverting the closing action (but not reverting\nthe net balance):</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Transfer</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\">Pending Transfer</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\"><code>T5</code></td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\"><code>T2</code></td>\n<td><a\nhref=\"../../../reference/transfer#flagsvoid_pending_transfer\"><code>void_pending_transfer</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>T6</code></td>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\"><code>T4</code></td>\n<td><a\nhref=\"../../../reference/transfer#flagsvoid_pending_transfer\"><code>void_pending_transfer</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>After committing these transfers, <code>A</code> and <code>B</code>\nare re-opened and can accept transfers again:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Account</th>\n<th style=\"text-align: right;\">Debits Pending</th>\n<th style=\"text-align: right;\">Debits Posted</th>\n<th style=\"text-align: right;\">Credits Pending</th>\n<th style=\"text-align: right;\">Credits Posted</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">20</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">20</td>\n<td><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>B</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">30</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">30</td>\n<td><a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>credits_must_not_exceed_debits</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\"><code>C</code></td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">25</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">10</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/recipes/close-account.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/recipes/balance-conditional-transfers","html":"<h1 id=\"balance-conditional-transfers\"><a\nhref=\"#balance-conditional-transfers\" class=\"anchor\">Balance-Conditional\nTransfers</a></h1>\n<p>In some use cases, you may want to execute a transfer if and only if\nan account has at least a certain balance.</p>\n<p>It would be unsafe to check an account’s balance using the <a\nhref=\"../../../reference/requests/lookup_accounts\"><code>lookup_accounts</code></a>\nand then perform the transfer, because these requests are not be atomic\nand the account’s balance may change between the lookup and the\ntransfer.</p>\n<p>You can atomically run a check against an account’s balance before\nexecuting a transfer by using a control or temporary account and linked\ntransfers.</p>\n<h2 id=\"preconditions\"><a href=\"#preconditions\"\nclass=\"anchor\">Preconditions</a></h2>\n<h3 id=\"1-target-account-must-have-a-limited-balance\"><a\nhref=\"#1-target-account-must-have-a-limited-balance\" class=\"anchor\">1.\nTarget Account Must Have a Limited Balance</a></h3>\n<p>The account for whom you want to do the balance check must have one\nof these flags set:</p>\n<ul>\n<li><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>\nfor accounts with <a href=\"../../data-modeling#credit-balances\">credit\nbalances</a></li>\n<li><a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>\nfor accounts with <a href=\"../../data-modeling#debit-balances\">debit\nbalances</a></li>\n</ul>\n<h3 id=\"2-create-a-control-account\"><a\nhref=\"#2-create-a-control-account\" class=\"anchor\">2. Create a Control\nAccount</a></h3>\n<p>There must also be a designated control account. As you can see\nbelow, this account will never actually take control of the target\naccount’s funds, but we will set up simultaneous transfers in and out of\nthe control account.</p>\n<h2 id=\"executing-a-balance-conditional-transfer\"><a\nhref=\"#executing-a-balance-conditional-transfer\"\nclass=\"anchor\">Executing a Balance-Conditional Transfer</a></h2>\n<p>The balance-conditional transfer consists of 3 <a\nhref=\"../../linked-events\">linked transfers</a>.</p>\n<p>We will refer to two amounts:</p>\n<ul>\n<li>The <strong>threshold amount</strong> is the minimum amount the\ntarget account should have in order to execute the transfer.</li>\n<li>The <strong>transfer amount</strong> is the amount we want to\ntransfer if and only if the target account’s balance meets the\nthreshold.</li>\n</ul>\n<h3 id=\"if-the-source-account-has-a-credit-balance\"><a\nhref=\"#if-the-source-account-has-a-credit-balance\" class=\"anchor\">If the\nSource Account Has a Credit Balance</a></h3>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th>Debit Account</th>\n<th>Credit Account</th>\n<th>Amount</th>\n<th>Pending Id</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Source</td>\n<td>Control</td>\n<td>Threshold</td>\n<td>-</td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a>,\n<a\nhref=\"../../../reference/transfer#flagspending\"><code>pending</code></a></td>\n</tr>\n<tr>\n<td>2</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>1</td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsvoid_pending_transfer\"><code>void_pending_transfer</code></a></td>\n</tr>\n<tr>\n<td>3</td>\n<td>Source</td>\n<td>Destination</td>\n<td>Transfer</td>\n<td>-</td>\n<td>N/A</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"if-the-source-account-has-a-debit-balance\"><a\nhref=\"#if-the-source-account-has-a-debit-balance\" class=\"anchor\">If the\nSource Account Has a Debit Balance</a></h3>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th>Debit Account</th>\n<th>Credit Account</th>\n<th>Amount</th>\n<th>Pending Id</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Control</td>\n<td>Source</td>\n<td>Threshold</td>\n<td>-</td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a>,\n<a\nhref=\"../../../reference/transfer#flagspending\"><code>pending</code></a></td>\n</tr>\n<tr>\n<td>2</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>1</td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsvoid_pending_transfer\"><code>void_pending_transfer</code></a></td>\n</tr>\n<tr>\n<td>3</td>\n<td>Destination</td>\n<td>Source</td>\n<td>Transfer</td>\n<td>-</td>\n<td>N/A</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"understanding-the-mechanism\"><a\nhref=\"#understanding-the-mechanism\" class=\"anchor\">Understanding the\nMechanism</a></h3>\n<p>Each of the 3 transfers is linked, meaning they will all succeed or\nfail together.</p>\n<p>The first transfer attempts to transfer the threshold amount to the\ncontrol account. If this transfer would cause the source account’s net\nbalance to go below zero, the account’s balance limit flag would ensure\nthat the first transfer fails. If the first transfer fails, the other\ntwo linked transfers would also fail.</p>\n<p>If the first transfer succeeds, it means that the source account did\nhave the threshold balance. In this case, the second transfer cancels\nthe first transfer (returning the threshold amount to the source\naccount). Then, the third transfer would execute the desired transfer to\nthe ultimate destination account.</p>\n<p>Note that in the tables above, we do the balance check on the source\naccount. The balance check could also be applied to the destination\naccount instead.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/recipes/balance-conditional-transfers.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/recipes/balance-invariant-transfers","html":"<h1 id=\"balance-invariant-transfers\"><a\nhref=\"#balance-invariant-transfers\" class=\"anchor\">Balance-invariant\nTransfers</a></h1>\n<p>For some accounts, it may be useful to enforce <a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>\nor <a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>\nbalance invariants for only a subset of all transfers, rather than all\ntransfers.</p>\n<p>This can be achieved by having a <strong>control</strong> account\nused to test the balance invariants at the desired points in time. The\ncontrol account will have a 0 balance and the <strong>opposite</strong>\nbalance invariant set to the invariant that we want to test on the\n<strong>destination</strong> account. At the point where we want to test\nthe destination account balance invariant, we can initiate a pending\nclosing balance transfer to the control account in order to test the\ninvariant. The following example will make this clearer.</p>\n<h2 id=\"per-transfer-credits_must_not_exceed_debits\"><a\nhref=\"#per-transfer-credits_must_not_exceed_debits\"\nclass=\"anchor\">Per-transfer\n<code>credits_must_not_exceed_debits</code></a></h2>\n<p>Let’s test a <code>credits_must_not_exceed_debits</code> balance\ninvariant on a destination account after a particular transfer.</p>\n<p>This recipe requires three accounts:</p>\n<ol type=\"1\">\n<li>The <strong>source</strong> account, to debit.</li>\n<li>The <strong>destination</strong> account, to credit. (With\n<em>neither</em> <a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>\nnor <a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>\nset, since in this recipe we are only enforcing the invariant on a\nper-transfer basis.</li>\n<li>The <strong>control</strong> account, to test the balance invariant.\nThe control account should have <a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>\nset.</li>\n</ol>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Id</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\">Pending Id</th>\n<th style=\"text-align: right;\">Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">1</td>\n<td style=\"text-align: right;\">Source</td>\n<td style=\"text-align: right;\">Destination</td>\n<td style=\"text-align: right;\">123</td>\n<td style=\"text-align: right;\">-</td>\n<td style=\"text-align: right;\"><a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">2</td>\n<td style=\"text-align: right;\">Destination</td>\n<td style=\"text-align: right;\">Control</td>\n<td style=\"text-align: right;\">1</td>\n<td style=\"text-align: right;\">-</td>\n<td style=\"text-align: right;\"><a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a>,\n<a\nhref=\"../../../reference/transfer#flagspending\"><code>pending</code></a>,\n<a\nhref=\"../../../reference/transfer#flagsbalancing_debit\"><code>balancing_debit</code></a></td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">3</td>\n<td style=\"text-align: right;\">-</td>\n<td style=\"text-align: right;\">-</td>\n<td style=\"text-align: right;\">0</td>\n<td style=\"text-align: right;\">2</td>\n<td style=\"text-align: right;\"><a\nhref=\"../../../reference/transfer#flagsvoid_pending_transfer\"><code>void_pending_transfer</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>When the destination account’s credits after transfer <code>1</code>\ndo not exceed its debits, the chain will succeed. When the destination\naccount’s credits after transfer <code>1</code> exceed its debits,\ntransfer <code>2</code> will fail with <code>exceeds_debits</code>.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/recipes/balance-invariant-transfers.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/recipes/balance-bounds","html":"<h1 id=\"balance-bounds\"><a href=\"#balance-bounds\" class=\"anchor\">Balance\nBounds</a></h1>\n<p>It is easy to limit an account’s balance using either <a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>\nor <a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>.</p>\n<p>What if you want an account’s balance to stay between an upper and a\nlower bound?</p>\n<p>This is possible to check atomically using a set of linked transfers.\n(Note: with the <code>must_not_exceed</code> flag invariants, an account\nis guaranteed to never violate those invariants. This maximum balance\napproach must be enforced per-transfer – it is possible to exceed the\nlimit simply by not enforcing it for a particular transfer.)</p>\n<h2 id=\"preconditions\"><a href=\"#preconditions\"\nclass=\"anchor\">Preconditions</a></h2>\n<ol type=\"1\">\n<li>Target Account Should Have a Limited Balance</li>\n</ol>\n<p>The account whose balance you want to bound should have one of these\nflags set:</p>\n<ul>\n<li><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>\nfor accounts with <a href=\"../../data-modeling#credit-balances\">credit\nbalances</a></li>\n<li><a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>\nfor accounts with <a href=\"../../data-modeling#debit-balances\">debit\nbalances</a></li>\n</ul>\n<ol start=\"2\" type=\"1\">\n<li>Create a Control Account with the Opposite Limit</li>\n</ol>\n<p>There must also be a designated control account.</p>\n<p>As you can see below, this account will never actually take control\nof the target account’s funds, but we will set up simultaneous transfers\nin and out of the control account to apply the limit.</p>\n<p>This account must have the opposite limit applied as the target\naccount:</p>\n<ul>\n<li><a\nhref=\"../../../reference/account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>\nif the target account has a <a\nhref=\"../../data-modeling#credit-balances\">credit balance</a></li>\n<li><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>\nif the target account has a <a\nhref=\"../../data-modeling#debit-balances\">debit balance</a></li>\n</ul>\n<ol start=\"3\" type=\"1\">\n<li>Create an Operator Account</li>\n</ol>\n<p>The operator account will be used to fund the Control Account.</p>\n<h2 id=\"executing-a-transfer-with-a-balance-bounds-check\"><a\nhref=\"#executing-a-transfer-with-a-balance-bounds-check\"\nclass=\"anchor\">Executing a Transfer with a Balance Bounds Check</a></h2>\n<p>This consists of 5 <a href=\"../../linked-events\">linked\ntransfers</a>.</p>\n<p>We will refer to two amounts:</p>\n<ul>\n<li>The <strong>limit amount</strong> is upper bound we want to maintain\non the target account’s balance.</li>\n<li>The <strong>transfer amount</strong> is the amount we want to\ntransfer if and only if the target account’s balance after a successful\ntransfer would be within the bounds.</li>\n</ul>\n<h3 id=\"if-the-target-account-has-a-credit-balance\"><a\nhref=\"#if-the-target-account-has-a-credit-balance\" class=\"anchor\">If the\nTarget Account Has a Credit Balance</a></h3>\n<p>In this case, we are keeping the Destination Account’s balance\nbetween the bounds.</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th>Debit Account</th>\n<th>Credit Account</th>\n<th>Amount</th>\n<th>Pending ID</th>\n<th>Flags (Note: <code>|</code> sets multiple flags)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Source</td>\n<td>Destination</td>\n<td>Transfer</td>\n<td>-</td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a></td>\n</tr>\n<tr>\n<td>2</td>\n<td>Control</td>\n<td>Operator</td>\n<td>Limit</td>\n<td>-</td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a></td>\n</tr>\n<tr>\n<td>3</td>\n<td>Destination</td>\n<td>Control</td>\n<td><code>AMOUNT_MAX</code></td>\n<td>-</td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a>\n| <a\nhref=\"../../../reference/transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a>\n| <a\nhref=\"../../../reference/transfer#flagspending\"><code>flags.pending</code></a></td>\n</tr>\n<tr>\n<td>4</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td><code>3</code>*</td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a>\n| <a\nhref=\"../../../reference/transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a></td>\n</tr>\n<tr>\n<td>5</td>\n<td>Operator</td>\n<td>Control</td>\n<td>Limit</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>*This must be set to the transfer ID of the pending transfer (in this\nexample, it is transfer 3).</p>\n<h3 id=\"if-the-target-account-has-a-debit-balance\"><a\nhref=\"#if-the-target-account-has-a-debit-balance\" class=\"anchor\">If the\nTarget Account Has a Debit Balance</a></h3>\n<p>In this case, we are keeping the Destination Account’s balance\nbetween the bounds.</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th>Debit Account</th>\n<th>Credit Account</th>\n<th>Amount</th>\n<th>Pending ID</th>\n<th>Flags (Note <code>|</code> sets multiple flags)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Destination</td>\n<td>Source</td>\n<td>Transfer</td>\n<td>-</td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a></td>\n</tr>\n<tr>\n<td>2</td>\n<td>Operator</td>\n<td>Control</td>\n<td>Limit</td>\n<td>-</td>\n<td><a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a></td>\n</tr>\n<tr>\n<td>3</td>\n<td>Control</td>\n<td>Destination</td>\n<td><code>AMOUNT_MAX</code></td>\n<td>-</td>\n<td><a\nhref=\"../../../reference/transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a>\n| <a\nhref=\"../../../reference/transfer#flagspending\"><code>flags.pending</code></a>\n| <a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a></td>\n</tr>\n<tr>\n<td>4</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td><code>3</code>*</td>\n<td><a\nhref=\"../../../reference/transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a>\n| <a\nhref=\"../../../reference/transfer#flagslinked\"><code>flags.linked</code></a></td>\n</tr>\n<tr>\n<td>5</td>\n<td>Control</td>\n<td>Operator</td>\n<td>Limit</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>*This must be set to the transfer ID of the pending transfer (in this\nexample, it is transfer 3).</p>\n<h3 id=\"understanding-the-mechanism\"><a\nhref=\"#understanding-the-mechanism\" class=\"anchor\">Understanding the\nMechanism</a></h3>\n<p>Each of the 5 transfers is <a href=\"../../linked-events\">linked</a>\nso that all of them will succeed or all of them will fail.</p>\n<p>The first transfer is the one we actually want to send.</p>\n<p>The second transfer sets the Control Account’s balance to the upper\nbound we want to impose.</p>\n<p>The third transfer uses a <a\nhref=\"../../../reference/transfer#flagsbalancing_debit\"><code>balancing_debit</code></a>\nor <a\nhref=\"../../../reference/transfer#flagsbalancing_credit\"><code>balancing_credit</code></a>\nto transfer the Destination Account’s net credit balance or net debit\nbalance, respectively, to the Control Account. This transfer will fail\nif the first transfer would put the Destination Account’s balance above\nthe upper bound.</p>\n<p>The third transfer is also a pending transfer, so it won’t actually\ntransfer the Destination Account’s funds, even if it succeeds.</p>\n<p>If everything to this point succeeds, the fourth and fifth transfers\nsimply undo the effects of the second and third transfers. The fourth\ntransfer voids the pending transfer. And the fifth transfer resets the\nControl Account’s net balance to zero.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/recipes/balance-bounds.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/recipes/correcting-transfers","html":"<h1 id=\"correcting-transfers\"><a href=\"#correcting-transfers\"\nclass=\"anchor\">Correcting Transfers</a></h1>\n<p><a href=\"../../../reference/transfer\"><code>Transfer</code>s</a> in\nTigerBeetle are immutable, so once they are created they cannot be\nmodified or deleted.</p>\n<p>Immutability is useful for creating an auditable log of all of the\nbusiness events, but it does raise the question of what to do when a\ntransfer was made in error or some detail such as the amount was\nincorrect.</p>\n<h2 id=\"always-add-more-transfers\"><a href=\"#always-add-more-transfers\"\nclass=\"anchor\">Always Add More Transfers</a></h2>\n<p>Correcting transfers or entries in TigerBeetle are handled with more\ntransfers to reverse or adjust the effects of the previous\ntransfer(s).</p>\n<p>This is important because adding transfers as opposed to deleting or\nmodifying incorrect ones adds more information to the history. The log\nof events includes the original error, when it took place, as well as\nany attempts to correct the record and when they took place. A\ncorrecting entry might even be wrong, in which case it itself can be\ncorrected with yet another transfer. All of these events form a timeline\nof the particular business event, which is stored permanently.</p>\n<p>Another way to put this is that TigerBeetle is the lowest layer of\nthe accounting stack and represents the finest-resolution data that is\nstored. At a higher-level reporting layer, you can “downsample” the data\nto show only the corrected transfer event. However, it would not be\npossible to go back if the original record were modified or deleted.</p>\n<p>Two specific recommendations for correcting transfers are:</p>\n<ol type=\"1\">\n<li>You may want to have a <a\nhref=\"../../../reference/transfer#code\"><code>Transfer.code</code></a>\nthat indicates a given transfer is a correction, or you may want\nmultiple codes where each one represents a different reason why the\ncorrection has taken place.</li>\n<li>If you use the <a\nhref=\"../../../reference/transfer#user_data_128\"><code>Transfer.user_data_128</code></a>\nto store an ID that links multiple transfers within TigerBeetle or\npoints to a <a href=\"../../system-architecture\">record in an external\ndatabase</a>, you may want to use the same <code>user_data_128</code>\nfield on the correction transfer(s), even if they happen at a later\npoint.</li>\n</ol>\n<h3 id=\"example\"><a href=\"#example\" class=\"anchor\">Example</a></h3>\n<p>Let’s say you had a couple of transfers, from account <code>A</code>\nto accounts <code>X</code> and <code>Y</code>:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\"><code>code</code></th>\n<th style=\"text-align: right;\"><code>user_data_128</code></th>\n<th style=\"text-align: right;\"><code>flags.linked</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>X</code></td>\n<td style=\"text-align: right;\">10000</td>\n<td style=\"text-align: right;\">600</td>\n<td style=\"text-align: right;\">123456</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\"><code>Y</code></td>\n<td style=\"text-align: right;\">50</td>\n<td style=\"text-align: right;\">9000</td>\n<td style=\"text-align: right;\">123456</td>\n<td style=\"text-align: right;\">false</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Now, let’s say we realized the amount was wrong and we need to adjust\nboth of the amounts by 10%. We would submit two\n<strong>additional</strong> transfers going in the opposite\ndirection:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th style=\"text-align: right;\"><code>code</code></th>\n<th style=\"text-align: right;\"><code>user_data_128</code></th>\n<th style=\"text-align: right;\"><code>flags.linked</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>X</code></td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\">1000</td>\n<td style=\"text-align: right;\">10000</td>\n<td style=\"text-align: right;\">123456</td>\n<td style=\"text-align: right;\">true</td>\n</tr>\n<tr>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\"><code>Y</code></td>\n<td style=\"text-align: right;\"><code>A</code></td>\n<td style=\"text-align: right;\">5</td>\n<td style=\"text-align: right;\">10000</td>\n<td style=\"text-align: right;\">123456</td>\n<td style=\"text-align: right;\">false</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Note that the codes used here don’t have any actual meaning, but you\nwould want to <a href=\"../../data-modeling#code\">enumerate your business\nevents</a> and map each to a numeric code value, including the initial\nreasons for transfers and the reasons they might be corrected.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/recipes/correcting-transfers.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/recipes/rate-limiting","html":"<h1 id=\"rate-limiting\"><a href=\"#rate-limiting\" class=\"anchor\">Rate\nLimiting</a></h1>\n<p>TigerBeetle can be used to account for non-financial resources.</p>\n<p>In this recipe, we will show you how to use it to implement rate\nlimiting using the <a\nhref=\"https://en.wikipedia.org/wiki/Leaky_bucket\">leaky bucket\nalgorithm</a> based on the user request rate, bandwidth, and money.</p>\n<h2 id=\"mechanism\"><a href=\"#mechanism\"\nclass=\"anchor\">Mechanism</a></h2>\n<p>For each type of resource we want to limit, we will have a ledger\nspecifically for that resource. On that ledger, we have an operator\naccount and an account for each user. Each user’s account will have a\nbalance limit applied.</p>\n<p>To set up the rate limiting system, we will first credit the resource\nlimit amount to each of the users. For each user request, we will then\ncreate a <a\nhref=\"../../two-phase-transfers#reserve-funds-pending-transfer\">pending\ntransfer</a> with a <a\nhref=\"../../two-phase-transfers#expire-pending-transfer\">timeout</a>. We\nwill never post or void these transfers, but will instead let them\nexpire.</p>\n<p>Since each account’s credit “balance” is limited, requesting a\npending transfer that would exceed the rate limit will fail. However,\nwhen each pending transfer expires, the pending amounts are\nautomatically restored to the available balance.</p>\n<h2 id=\"request-rate-limiting\"><a href=\"#request-rate-limiting\"\nclass=\"anchor\">Request Rate Limiting</a></h2>\n<p>Let’s say we want to limit each user to 10 requests per minute.</p>\n<p>We need our user account to have a limited balance.</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Ledger</th>\n<th>Account</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Request Rate</td>\n<td>Operator</td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td>Request Rate</td>\n<td>User</td>\n<td><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>We’ll first transfer 10 units from the operator to the user.</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td style=\"text-align: right;\">Request Rate</td>\n<td style=\"text-align: right;\">Operator</td>\n<td style=\"text-align: right;\">User</td>\n<td style=\"text-align: right;\">10</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Then, for each incoming request, we will create a pending transfer\nfor 1 unit back to the operator from the user:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th>Timeout</th>\n<th style=\"text-align: right;\">Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2…N</td>\n<td style=\"text-align: right;\">Request Rate</td>\n<td style=\"text-align: right;\">User</td>\n<td style=\"text-align: right;\">Operator</td>\n<td style=\"text-align: right;\">1</td>\n<td>60</td>\n<td style=\"text-align: right;\"><a\nhref=\"../../../reference/transfer#flagspending\"><code>pending</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Note that we use a timeout of 60 (seconds), because we wanted to\nlimit each user to 10 requests <em>per minute</em>.</p>\n<p>That’s it! Each of these transfers will “reserve” some of the user’s\nbalance and then replenish the balance after they expire.</p>\n<h2 id=\"bandwidth-limiting\"><a href=\"#bandwidth-limiting\"\nclass=\"anchor\">Bandwidth Limiting</a></h2>\n<p>To limit user requests based on bandwidth as opposed to request rate,\nwe can apply the same technique but use amounts that represent the\nrequest size.</p>\n<p>Let’s say we wanted to limit each user to 10 MB (10,000,000 bytes)\nper minute.</p>\n<p>Our account setup is the same as before:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Ledger</th>\n<th>Account</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Bandwidth</td>\n<td>Operator</td>\n<td>0</td>\n</tr>\n<tr>\n<td>Bandwidth</td>\n<td>User</td>\n<td><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Now, we’ll transfer 10,000,000 units (bytes in this case) from the\noperator to the user:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td style=\"text-align: right;\">Bandwidth</td>\n<td style=\"text-align: right;\">Operator</td>\n<td style=\"text-align: right;\">User</td>\n<td style=\"text-align: right;\">10000000</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>For each incoming request, we’ll create a pending transfer where the\namount is equal to the request size:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th>Timeout</th>\n<th style=\"text-align: right;\">Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2…N</td>\n<td style=\"text-align: right;\">Bandwidth</td>\n<td style=\"text-align: right;\">User</td>\n<td style=\"text-align: right;\">Operator</td>\n<td style=\"text-align: right;\">Request Size</td>\n<td>60</td>\n<td style=\"text-align: right;\"><a\nhref=\"../../../reference/transfer#flagspending\"><code>pending</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>We’re again using a timeout of 60 seconds, but you could adjust this\nto be whatever time window you want to use to limit requests.</p>\n<h2 id=\"transfer-amount-limiting\"><a href=\"#transfer-amount-limiting\"\nclass=\"anchor\">Transfer Amount Limiting</a></h2>\n<p>Now, let’s say you wanted to limit each account to transferring no\nmore than a certain amount of money per time window. We can do that\nusing 2 ledgers and linked transfers.</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Ledger</th>\n<th>Account</th>\n<th>Flags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Rate Limiting</td>\n<td>Operator</td>\n<td>0</td>\n</tr>\n<tr>\n<td>Rate Limiting</td>\n<td>User</td>\n<td><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a></td>\n</tr>\n<tr>\n<td>USD</td>\n<td>Operator</td>\n<td>0</td>\n</tr>\n<tr>\n<td>USD</td>\n<td>User</td>\n<td><a\nhref=\"../../../reference/account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Let’s say we wanted to limit each account to sending no more than\n1000 USD per day.</p>\n<p>To set up, we transfer 1000 from the Operator to the User on the Rate\nLimiting ledger:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td style=\"text-align: right;\">Rate Limiting</td>\n<td style=\"text-align: right;\">Operator</td>\n<td style=\"text-align: right;\">User</td>\n<td style=\"text-align: right;\">1000</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>For each transfer the user wants to do, we will create 2 transfers\nthat are <a href=\"../../linked-events\">linked</a>:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Transfer</th>\n<th style=\"text-align: right;\">Ledger</th>\n<th style=\"text-align: right;\">Debit Account</th>\n<th style=\"text-align: right;\">Credit Account</th>\n<th style=\"text-align: right;\">Amount</th>\n<th>Timeout</th>\n<th style=\"text-align: right;\">Flags (Note <code>|</code> sets multiple\nflags)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2N</td>\n<td style=\"text-align: right;\">Rate Limiting</td>\n<td style=\"text-align: right;\">User</td>\n<td style=\"text-align: right;\">Operator</td>\n<td style=\"text-align: right;\">Transfer Amount</td>\n<td>86400</td>\n<td style=\"text-align: right;\"><a\nhref=\"../../../reference/transfer#flagspending\"><code>pending</code></a>\n| <a\nhref=\"../../../reference/transfer#flagslinked\"><code>linked</code></a></td>\n</tr>\n<tr>\n<td>2N + 1</td>\n<td style=\"text-align: right;\">USD</td>\n<td style=\"text-align: right;\">User</td>\n<td style=\"text-align: right;\">Destination</td>\n<td style=\"text-align: right;\">Transfer Amount</td>\n<td>0</td>\n<td style=\"text-align: right;\">0</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Note that we are using a timeout of 86400 seconds, because this is\nthe number of seconds in a day.</p>\n<p>These are linked such that if the first transfer fails, because the\nuser has already transferred too much money in the past day, the second\ntransfer will also fail.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/recipes/rate-limiting.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/clients","html":"<h1 id=\"clients\"><a href=\"#clients\" class=\"anchor\">Clients</a></h1>\n<p>TigerBeetle has official client libraries for the following\nlanguages:</p>\n<ul>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/dotnet/\">.NET</a>\n(<a href=\"https://www.nuget.org/packages/tigerbeetle\">nuget\npackage</a>).</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/go/\">Go</a>\n(<a href=\"https://github.com/tigerbeetle/tigerbeetle-go\">package</a>, <a\nhref=\"https://pkg.go.dev/github.com/tigerbeetle/tigerbeetle-go\">API\ndocs</a>).</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/java/\">Java</a>\n(<a\nhref=\"https://central.sonatype.com/artifact/com.tigerbeetle/tigerbeetle-java\">maven\ncentral package</a>, <a\nhref=\"https://javadoc.io/doc/com.tigerbeetle/tigerbeetle-java/\">API\ndocs</a>).</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/node/\">Node.js</a>\n(<a href=\"https://www.npmjs.com/package/tigerbeetle-node\">npm\npackage</a>).</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/python/\">Python</a>\n(<a href=\"https://pypi.org/project/tigerbeetle/\">PyPi package</a>).</li>\n</ul>\n<p>Subscribe to the <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/issues/2231\">tracking\nissue #2231</a> to receive notifications about breaking changes!</p>\n<p>Please report any client bugs to the <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/issues\">main issue\ntracker</a>.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/coding/clients/README.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/clients/dotnet","html":"<!-- This file is generated by [/src/scripts/client_readmes.zig](/src/scripts/client_readmes.zig). -->\n\n<h1 id=\"tigerbeetle-dotnet\"><a href=\"#tigerbeetle-dotnet\"\nclass=\"anchor\">tigerbeetle-dotnet</a></h1>\n<p>The TigerBeetle client for .NET.</p>\n<h2 id=\"prerequisites\"><a href=\"#prerequisites\"\nclass=\"anchor\">Prerequisites</a></h2>\n<p>Linux &gt;= 5.6 is the only production environment we support. But\nfor ease of development we also support macOS and Windows.</p>\n<ul>\n<li>.NET &gt;= 8.0.</li>\n</ul>\n<p>And if you do not already have NuGet.org as a package source, make\nsure to add it:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org</code></pre>\n</div>\n<h2 id=\"setup\"><a href=\"#setup\" class=\"anchor\">Setup</a></h2>\n<p>First, create a directory for your project and <code>cd</code> into\nthe directory.</p>\n<p>Then, install the TigerBeetle client:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>dotnet new console\ndotnet add package tigerbeetle</code></pre>\n</div>\n<p>Now, create <code>Program.cs</code> and copy this into it:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">using</span> System<span class=\"op\">;</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">using</span> TigerBeetle<span class=\"op\">;</span></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Validate import works.</span></span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>Console<span class=\"op\">.</span><span class=\"fu\">WriteLine</span><span class=\"op\">(</span><span class=\"st\">&quot;SUCCESS&quot;</span><span class=\"op\">);</span></span></code></pre></div>\n</div>\n<p>Finally, build and run:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>dotnet run</code></pre>\n</div>\n<p>Now that all prerequisites and dependencies are correctly set up,\nlet’s dig into using TigerBeetle.</p>\n<h2 id=\"sample-projects\"><a href=\"#sample-projects\"\nclass=\"anchor\">Sample projects</a></h2>\n<p>This document is primarily a reference guide to the client. Below are\nvarious sample projects demonstrating features of TigerBeetle.</p>\n<ul>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/dotnet/samples/basic/\">Basic</a>:\nCreate two accounts and transfer an amount between them.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/dotnet/samples/two-phase/\">Two-Phase\nTransfer</a>: Create two accounts and start a pending transfer between\nthem, then post the transfer.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/dotnet/samples/two-phase-many/\">Many\nTwo-Phase Transfers</a>: Create two accounts and start a number of\npending transfers between them, posting and voiding alternating\ntransfers.</li>\n</ul>\n<h2 id=\"creating-a-client\"><a href=\"#creating-a-client\"\nclass=\"anchor\">Creating a Client</a></h2>\n<p>A client is created with a cluster ID and replica addresses for all\nreplicas in the cluster. The cluster ID and replica addresses are both\nchosen by the system that starts the TigerBeetle cluster.</p>\n<p>Clients are thread-safe and a single instance should be shared\nbetween multiple concurrent tasks. This allows events to be <a\nhref=\"/coding/requests/#batching-events\">automatically batched</a>.</p>\n<p>Multiple clients are useful when connecting to more than one\nTigerBeetle cluster.</p>\n<p>In this example the cluster ID is <code>0</code> and there is one\nreplica. The address is read from the <code>TB_ADDRESS</code>\nenvironment variable and defaults to port <code>3000</code>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb5\"><pre class=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> tbAddress <span class=\"op\">=</span> Environment<span class=\"op\">.</span><span class=\"fu\">GetEnvironmentVariable</span><span class=\"op\">(</span><span class=\"st\">&quot;TB_ADDRESS&quot;</span><span class=\"op\">);</span></span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> clusterID <span class=\"op\">=</span> UInt128<span class=\"op\">.</span><span class=\"fu\">Zero</span><span class=\"op\">;</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> addresses <span class=\"op\">=</span> <span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span> tbAddress <span class=\"op\">!=</span> <span class=\"kw\">null</span> <span class=\"op\">?</span> tbAddress <span class=\"op\">:</span> <span class=\"st\">&quot;3000&quot;</span> <span class=\"op\">};</span></span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">using</span> <span class=\"op\">(</span><span class=\"dt\">var</span> client <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">Client</span><span class=\"op\">(</span>clusterID<span class=\"op\">,</span> addresses<span class=\"op\">))</span></span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Use client</span></span>\n<span id=\"cb5-7\"><a href=\"#cb5-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</div>\n<p>The following are valid addresses:</p>\n<ul>\n<li><code>3000</code> (interpreted as <code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1:3000</code> (interpreted as\n<code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1</code> (interpreted as <code>127.0.0.1:3001</code>,\n<code>3001</code> is the default port)</li>\n</ul>\n<h2 id=\"creating-accounts\"><a href=\"#creating-accounts\"\nclass=\"anchor\">Creating Accounts</a></h2>\n<p>See details for account fields in the <a\nhref=\"/reference/account\">Accounts reference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb6\"><pre class=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> accounts <span class=\"op\">=</span> <span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span></span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">new</span> Account</span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Id <span class=\"op\">=</span> ID<span class=\"op\">.</span><span class=\"fu\">Create</span><span class=\"op\">(),</span> <span class=\"co\">// TigerBeetle time-based ID.</span></span>\n<span id=\"cb6-5\"><a href=\"#cb6-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData128 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb6-6\"><a href=\"#cb6-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData64 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb6-7\"><a href=\"#cb6-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData32 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb6-8\"><a href=\"#cb6-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb6-9\"><a href=\"#cb6-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Code <span class=\"op\">=</span> <span class=\"dv\">718</span><span class=\"op\">,</span></span>\n<span id=\"cb6-10\"><a href=\"#cb6-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Flags <span class=\"op\">=</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb6-11\"><a href=\"#cb6-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Timestamp <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb6-12\"><a href=\"#cb6-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">},</span></span>\n<span id=\"cb6-13\"><a href=\"#cb6-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb6-14\"><a href=\"#cb6-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-15\"><a href=\"#cb6-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> accountErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateAccounts</span><span class=\"op\">(</span>accounts<span class=\"op\">);</span></span>\n<span id=\"cb6-16\"><a href=\"#cb6-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<p>See details for the recommended ID scheme in <a\nhref=\"/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<p>The <code>UInt128</code> fields like <code>ID</code>,\n<code>UserData128</code>, <code>Amount</code> and account balances have\na few extension methods to make it easier to convert 128-bit\nlittle-endian unsigned integers between <code>BigInteger</code>,\n<code>byte[]</code>, and <code>Guid</code>.</p>\n<p>See the class <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/dotnet/TigerBeetle/UInt128Extensions.cs\">UInt128Extensions</a>\nfor more details.</p>\n<h3 id=\"account-flags\"><a href=\"#account-flags\" class=\"anchor\">Account\nFlags</a></h3>\n<p>The account flags value is a bitfield. See details for these flags in\nthe <a href=\"/reference/account#flags\">Accounts reference</a>.</p>\n<p>To toggle behavior for an account, combine enum values stored in the\n<code>AccountFlags</code> object with bitwise-or:</p>\n<ul>\n<li><code>AccountFlags.None</code></li>\n<li><code>AccountFlags.Linked</code></li>\n<li><code>AccountFlags.DebitsMustNotExceedCredits</code></li>\n<li><code>AccountFlags.CreditsMustNotExceedDebits</code></li>\n<li><code>AccountFlags.History</code></li>\n</ul>\n<p>For example, to link two accounts where the first account\nadditionally has the <code>debits_must_not_exceed_credits</code>\nconstraint:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb7\"><pre class=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> account0 <span class=\"op\">=</span> <span class=\"kw\">new</span> Account</span>\n<span id=\"cb7-2\"><a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb7-3\"><a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">100</span><span class=\"op\">,</span></span>\n<span id=\"cb7-4\"><a href=\"#cb7-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-5\"><a href=\"#cb7-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-6\"><a href=\"#cb7-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span> <span class=\"op\">|</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">DebitsMustNotExceedCredits</span><span class=\"op\">,</span></span>\n<span id=\"cb7-7\"><a href=\"#cb7-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb7-8\"><a href=\"#cb7-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> account1 <span class=\"op\">=</span> <span class=\"kw\">new</span> Account</span>\n<span id=\"cb7-9\"><a href=\"#cb7-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb7-10\"><a href=\"#cb7-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">101</span><span class=\"op\">,</span></span>\n<span id=\"cb7-11\"><a href=\"#cb7-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-12\"><a href=\"#cb7-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-13\"><a href=\"#cb7-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">History</span><span class=\"op\">,</span></span>\n<span id=\"cb7-14\"><a href=\"#cb7-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb7-15\"><a href=\"#cb7-15\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-16\"><a href=\"#cb7-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> accountErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateAccounts</span><span class=\"op\">(</span><span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span> account0<span class=\"op\">,</span> account1 <span class=\"op\">});</span></span>\n<span id=\"cb7-17\"><a href=\"#cb7-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h3 id=\"response-and-errors\"><a href=\"#response-and-errors\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all accounts were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for an account that failed. The error\nobject contains an error code and the index of the account in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"/reference/requests/create_accounts\">create_accounts\nreference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb8\"><pre class=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb8-1\"><a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> account0 <span class=\"op\">=</span> <span class=\"kw\">new</span> Account</span>\n<span id=\"cb8-2\"><a href=\"#cb8-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb8-3\"><a href=\"#cb8-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb8-4\"><a href=\"#cb8-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb8-5\"><a href=\"#cb8-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb8-6\"><a href=\"#cb8-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb8-7\"><a href=\"#cb8-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb8-8\"><a href=\"#cb8-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> account1 <span class=\"op\">=</span> <span class=\"kw\">new</span> Account</span>\n<span id=\"cb8-9\"><a href=\"#cb8-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb8-10\"><a href=\"#cb8-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb8-11\"><a href=\"#cb8-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb8-12\"><a href=\"#cb8-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb8-13\"><a href=\"#cb8-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb8-14\"><a href=\"#cb8-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb8-15\"><a href=\"#cb8-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> account2 <span class=\"op\">=</span> <span class=\"kw\">new</span> Account</span>\n<span id=\"cb8-16\"><a href=\"#cb8-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb8-17\"><a href=\"#cb8-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">104</span><span class=\"op\">,</span></span>\n<span id=\"cb8-18\"><a href=\"#cb8-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb8-19\"><a href=\"#cb8-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb8-20\"><a href=\"#cb8-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb8-21\"><a href=\"#cb8-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb8-22\"><a href=\"#cb8-22\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb8-23\"><a href=\"#cb8-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> accountErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateAccounts</span><span class=\"op\">(</span><span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span> account0<span class=\"op\">,</span> account1<span class=\"op\">,</span> account2 <span class=\"op\">});</span></span>\n<span id=\"cb8-24\"><a href=\"#cb8-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">foreach</span> <span class=\"op\">(</span><span class=\"dt\">var</span> error <span class=\"kw\">in</span> accountErrors<span class=\"op\">)</span></span>\n<span id=\"cb8-25\"><a href=\"#cb8-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb8-26\"><a href=\"#cb8-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">switch</span> <span class=\"op\">(</span>error<span class=\"op\">.</span><span class=\"fu\">Result</span><span class=\"op\">)</span></span>\n<span id=\"cb8-27\"><a href=\"#cb8-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb8-28\"><a href=\"#cb8-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"kw\">case</span> CreateAccountResult<span class=\"op\">.</span><span class=\"fu\">Exists</span><span class=\"op\">:</span></span>\n<span id=\"cb8-29\"><a href=\"#cb8-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>            Console<span class=\"op\">.</span><span class=\"fu\">WriteLine</span><span class=\"op\">(</span>$<span class=\"st\">&quot;Batch account at ${error.Index} already exists.&quot;</span><span class=\"op\">);</span></span>\n<span id=\"cb8-30\"><a href=\"#cb8-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"kw\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb8-31\"><a href=\"#cb8-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"kw\">default</span><span class=\"op\">:</span></span>\n<span id=\"cb8-32\"><a href=\"#cb8-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>            Console<span class=\"op\">.</span><span class=\"fu\">WriteLine</span><span class=\"op\">(</span>$<span class=\"st\">&quot;Batch account at ${error.Index} failed to create ${error.Result}&quot;</span><span class=\"op\">);</span></span>\n<span id=\"cb8-33\"><a href=\"#cb8-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"kw\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb8-34\"><a href=\"#cb8-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb8-35\"><a href=\"#cb8-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">return</span><span class=\"op\">;</span></span>\n<span id=\"cb8-36\"><a href=\"#cb8-36\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</div>\n<h2 id=\"account-lookup\"><a href=\"#account-lookup\" class=\"anchor\">Account\nLookup</a></h2>\n<p>Account lookup is batched, like account creation. Pass in all IDs to\nfetch. The account for each matched ID is returned.</p>\n<p>If no account matches an ID, no object is returned for that account.\nSo the order of accounts in the response is not necessarily the same as\nthe order of IDs in the request. You can refer to the ID field in the\nresponse to distinguish accounts.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb9\"><pre class=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>Account<span class=\"op\">[]</span> accounts <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">LookupAccounts</span><span class=\"op\">(</span><span class=\"kw\">new</span> UInt128<span class=\"op\">[]</span> <span class=\"op\">{</span> <span class=\"dv\">100</span><span class=\"op\">,</span> <span class=\"dv\">101</span> <span class=\"op\">});</span></span></code></pre></div>\n</div>\n<h2 id=\"create-transfers\"><a href=\"#create-transfers\"\nclass=\"anchor\">Create Transfers</a></h2>\n<p>This creates a journal entry between two accounts.</p>\n<p>See details for transfer fields in the <a\nhref=\"/reference/transfer\">Transfers reference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb10\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb10-1\"><a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfers <span class=\"op\">=</span> <span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span></span>\n<span id=\"cb10-2\"><a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb10-3\"><a href=\"#cb10-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb10-4\"><a href=\"#cb10-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Id <span class=\"op\">=</span> ID<span class=\"op\">.</span><span class=\"fu\">Create</span><span class=\"op\">(),</span> <span class=\"co\">// TigerBeetle time-based ID.</span></span>\n<span id=\"cb10-5\"><a href=\"#cb10-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        DebitAccountId <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb10-6\"><a href=\"#cb10-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        CreditAccountId <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb10-7\"><a href=\"#cb10-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Amount <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb10-8\"><a href=\"#cb10-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData128 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-9\"><a href=\"#cb10-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData64 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-10\"><a href=\"#cb10-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData32 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-11\"><a href=\"#cb10-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Timeout <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-12\"><a href=\"#cb10-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-13\"><a href=\"#cb10-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-14\"><a href=\"#cb10-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb10-15\"><a href=\"#cb10-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Timestamp <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-16\"><a href=\"#cb10-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb10-17\"><a href=\"#cb10-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb10-18\"><a href=\"#cb10-18\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb10-19\"><a href=\"#cb10-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb10-20\"><a href=\"#cb10-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<p>See details for the recommended ID scheme in <a\nhref=\"/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<h3 id=\"response-and-errors-1\"><a href=\"#response-and-errors-1\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all transfers were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for a transfer that failed. The error\nobject contains an error code and the index of the transfer in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"/reference/requests/create_transfers\">create_transfers\nreference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb11\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfers <span class=\"op\">=</span> <span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span></span>\n<span id=\"cb11-2\"><a href=\"#cb11-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb11-3\"><a href=\"#cb11-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb11-4\"><a href=\"#cb11-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Id <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb11-5\"><a href=\"#cb11-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        DebitAccountId <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb11-6\"><a href=\"#cb11-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        CreditAccountId <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb11-7\"><a href=\"#cb11-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Amount <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb11-8\"><a href=\"#cb11-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb11-9\"><a href=\"#cb11-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb11-10\"><a href=\"#cb11-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb11-11\"><a href=\"#cb11-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">},</span></span>\n<span id=\"cb11-12\"><a href=\"#cb11-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb11-13\"><a href=\"#cb11-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb11-14\"><a href=\"#cb11-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Id <span class=\"op\">=</span> <span class=\"dv\">2</span><span class=\"op\">,</span></span>\n<span id=\"cb11-15\"><a href=\"#cb11-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>        DebitAccountId <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb11-16\"><a href=\"#cb11-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>        CreditAccountId <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb11-17\"><a href=\"#cb11-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Amount <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb11-18\"><a href=\"#cb11-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb11-19\"><a href=\"#cb11-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb11-20\"><a href=\"#cb11-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb11-21\"><a href=\"#cb11-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">},</span></span>\n<span id=\"cb11-22\"><a href=\"#cb11-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb11-23\"><a href=\"#cb11-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb11-24\"><a href=\"#cb11-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Id <span class=\"op\">=</span> <span class=\"dv\">3</span><span class=\"op\">,</span></span>\n<span id=\"cb11-25\"><a href=\"#cb11-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>        DebitAccountId <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb11-26\"><a href=\"#cb11-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>        CreditAccountId <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb11-27\"><a href=\"#cb11-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Amount <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb11-28\"><a href=\"#cb11-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb11-29\"><a href=\"#cb11-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb11-30\"><a href=\"#cb11-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb11-31\"><a href=\"#cb11-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">},</span></span>\n<span id=\"cb11-32\"><a href=\"#cb11-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb11-33\"><a href=\"#cb11-33\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb11-34\"><a href=\"#cb11-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb11-35\"><a href=\"#cb11-35\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">foreach</span> <span class=\"op\">(</span><span class=\"dt\">var</span> error <span class=\"kw\">in</span> transferErrors<span class=\"op\">)</span></span>\n<span id=\"cb11-36\"><a href=\"#cb11-36\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb11-37\"><a href=\"#cb11-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">switch</span> <span class=\"op\">(</span>error<span class=\"op\">.</span><span class=\"fu\">Result</span><span class=\"op\">)</span></span>\n<span id=\"cb11-38\"><a href=\"#cb11-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb11-39\"><a href=\"#cb11-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"kw\">case</span> CreateTransferResult<span class=\"op\">.</span><span class=\"fu\">Exists</span><span class=\"op\">:</span></span>\n<span id=\"cb11-40\"><a href=\"#cb11-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>            Console<span class=\"op\">.</span><span class=\"fu\">WriteLine</span><span class=\"op\">(</span>$<span class=\"st\">&quot;Batch transfer at ${error.Index} already exists.&quot;</span><span class=\"op\">);</span></span>\n<span id=\"cb11-41\"><a href=\"#cb11-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"kw\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb11-42\"><a href=\"#cb11-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"kw\">default</span><span class=\"op\">:</span></span>\n<span id=\"cb11-43\"><a href=\"#cb11-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>            Console<span class=\"op\">.</span><span class=\"fu\">WriteLine</span><span class=\"op\">(</span>$<span class=\"st\">&quot;Batch transfer at ${error.Index} failed to create: ${error.Result}&quot;</span><span class=\"op\">);</span></span>\n<span id=\"cb11-44\"><a href=\"#cb11-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"kw\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb11-45\"><a href=\"#cb11-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb11-46\"><a href=\"#cb11-46\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</div>\n<h2 id=\"batching\"><a href=\"#batching\" class=\"anchor\">Batching</a></h2>\n<p>TigerBeetle performance is maximized when you batch API requests. A\nclient instance shared across multiple threads/tasks can automatically\nbatch concurrent requests, but the application must still send as many\nevents as possible in a single call. For example, if you insert 1\nmillion transfers sequentially, one at a time, the insert rate will be a\n<em>fraction</em> of the potential, because the client will wait for a\nreply between each one.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb12\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb12-1\"><a href=\"#cb12-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> batch <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer<span class=\"op\">[]</span> <span class=\"op\">{</span> <span class=\"op\">};</span> <span class=\"co\">// Array of transfer to create.</span></span>\n<span id=\"cb12-2\"><a href=\"#cb12-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">foreach</span> <span class=\"op\">(</span><span class=\"dt\">var</span> t <span class=\"kw\">in</span> batch<span class=\"op\">)</span></span>\n<span id=\"cb12-3\"><a href=\"#cb12-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb12-4\"><a href=\"#cb12-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfer</span><span class=\"op\">(</span>t<span class=\"op\">);</span></span>\n<span id=\"cb12-5\"><a href=\"#cb12-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb12-6\"><a href=\"#cb12-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</div>\n<p>Instead, <strong>always batch as much as you can</strong>. The\nmaximum batch size is set in the TigerBeetle server. The default is\n8189.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb13\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb13-1\"><a href=\"#cb13-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> batch <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer<span class=\"op\">[]</span> <span class=\"op\">{</span> <span class=\"op\">};</span> <span class=\"co\">// Array of transfer to create.</span></span>\n<span id=\"cb13-2\"><a href=\"#cb13-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> BATCH_SIZE <span class=\"op\">=</span> <span class=\"dv\">8189</span><span class=\"op\">;</span></span>\n<span id=\"cb13-3\"><a href=\"#cb13-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">for</span> <span class=\"op\">(</span><span class=\"dt\">int</span> firstIndex <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> firstIndex <span class=\"op\">&lt;</span> batch<span class=\"op\">.</span><span class=\"fu\">Length</span><span class=\"op\">;</span> firstIndex <span class=\"op\">+=</span> BATCH_SIZE<span class=\"op\">)</span></span>\n<span id=\"cb13-4\"><a href=\"#cb13-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb13-5\"><a href=\"#cb13-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">var</span> lastIndex <span class=\"op\">=</span> firstIndex <span class=\"op\">+</span> BATCH_SIZE<span class=\"op\">;</span></span>\n<span id=\"cb13-6\"><a href=\"#cb13-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">if</span> <span class=\"op\">(</span>lastIndex <span class=\"op\">&gt;</span> batch<span class=\"op\">.</span><span class=\"fu\">Length</span><span class=\"op\">)</span></span>\n<span id=\"cb13-7\"><a href=\"#cb13-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb13-8\"><a href=\"#cb13-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>        lastIndex <span class=\"op\">=</span> batch<span class=\"op\">.</span><span class=\"fu\">Length</span><span class=\"op\">;</span></span>\n<span id=\"cb13-9\"><a href=\"#cb13-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb13-10\"><a href=\"#cb13-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span>batch<span class=\"op\">[</span>firstIndex<span class=\"op\">..</span><span class=\"fu\">lastIndex</span><span class=\"op\">]);</span></span>\n<span id=\"cb13-11\"><a href=\"#cb13-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb13-12\"><a href=\"#cb13-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</div>\n<h3 id=\"queues-and-workers\"><a href=\"#queues-and-workers\"\nclass=\"anchor\">Queues and Workers</a></h3>\n<p>If you are making requests to TigerBeetle from workers pulling jobs\nfrom a queue, you can batch requests to TigerBeetle by having the worker\nact on multiple jobs from the queue at once rather than one at a time.\ni.e. pulling multiple jobs from the queue rather than just one.</p>\n<h2 id=\"transfer-flags\"><a href=\"#transfer-flags\"\nclass=\"anchor\">Transfer Flags</a></h2>\n<p>The transfer <code>flags</code> value is a bitfield. See details for\nthese flags in the <a href=\"/reference/transfer#flags\">Transfers\nreference</a>.</p>\n<p>To toggle behavior for an account, combine enum values stored in the\n<code>TransferFlags</code> object with bitwise-or:</p>\n<ul>\n<li><code>TransferFlags.None</code></li>\n<li><code>TransferFlags.Linked</code></li>\n<li><code>TransferFlags.Pending</code></li>\n<li><code>TransferFlags.PostPendingTransfer</code></li>\n<li><code>TransferFlags.VoidPendingTransfer</code></li>\n</ul>\n<p>For example, to link <code>transfer0</code> and\n<code>transfer1</code>:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb14\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb14-1\"><a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfer0 <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb14-2\"><a href=\"#cb14-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb14-3\"><a href=\"#cb14-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">4</span><span class=\"op\">,</span></span>\n<span id=\"cb14-4\"><a href=\"#cb14-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountId <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb14-5\"><a href=\"#cb14-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountId <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb14-6\"><a href=\"#cb14-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb14-7\"><a href=\"#cb14-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb14-8\"><a href=\"#cb14-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb14-9\"><a href=\"#cb14-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span><span class=\"op\">,</span></span>\n<span id=\"cb14-10\"><a href=\"#cb14-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb14-11\"><a href=\"#cb14-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfer1 <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb14-12\"><a href=\"#cb14-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb14-13\"><a href=\"#cb14-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">5</span><span class=\"op\">,</span></span>\n<span id=\"cb14-14\"><a href=\"#cb14-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountId <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb14-15\"><a href=\"#cb14-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountId <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb14-16\"><a href=\"#cb14-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb14-17\"><a href=\"#cb14-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb14-18\"><a href=\"#cb14-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb14-19\"><a href=\"#cb14-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">None</span><span class=\"op\">,</span></span>\n<span id=\"cb14-20\"><a href=\"#cb14-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb14-21\"><a href=\"#cb14-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-22\"><a href=\"#cb14-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span><span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span> transfer0<span class=\"op\">,</span> transfer1 <span class=\"op\">});</span></span>\n<span id=\"cb14-23\"><a href=\"#cb14-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h3 id=\"two-phase-transfers\"><a href=\"#two-phase-transfers\"\nclass=\"anchor\">Two-Phase Transfers</a></h3>\n<p>Two-phase transfers are supported natively by toggling the\nappropriate flag. TigerBeetle will then adjust the\n<code>credits_pending</code> and <code>debits_pending</code> fields of\nthe appropriate accounts. A corresponding post pending transfer then\nneeds to be sent to post or void the transfer.</p>\n<h4 id=\"post-a-pending-transfer\"><a href=\"#post-a-pending-transfer\"\nclass=\"anchor\">Post a Pending Transfer</a></h4>\n<p>With <code>flags</code> set to <code>post_pending_transfer</code>,\nTigerBeetle will post the transfer. TigerBeetle will atomically roll\nback the changes to <code>debits_pending</code> and\n<code>credits_pending</code> of the appropriate accounts and apply them\nto the <code>debits_posted</code> and <code>credits_posted</code>\nbalances.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb15\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb15-1\"><a href=\"#cb15-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfer0 <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb15-2\"><a href=\"#cb15-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb15-3\"><a href=\"#cb15-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">6</span><span class=\"op\">,</span></span>\n<span id=\"cb15-4\"><a href=\"#cb15-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountId <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb15-5\"><a href=\"#cb15-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountId <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb15-6\"><a href=\"#cb15-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb15-7\"><a href=\"#cb15-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb15-8\"><a href=\"#cb15-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb15-9\"><a href=\"#cb15-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Pending</span><span class=\"op\">,</span></span>\n<span id=\"cb15-10\"><a href=\"#cb15-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb15-11\"><a href=\"#cb15-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-12\"><a href=\"#cb15-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span><span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span> transfer0 <span class=\"op\">});</span></span>\n<span id=\"cb15-13\"><a href=\"#cb15-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb15-14\"><a href=\"#cb15-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-15\"><a href=\"#cb15-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfer1 <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb15-16\"><a href=\"#cb15-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb15-17\"><a href=\"#cb15-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">7</span><span class=\"op\">,</span></span>\n<span id=\"cb15-18\"><a href=\"#cb15-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Post the entire pending amount.</span></span>\n<span id=\"cb15-19\"><a href=\"#cb15-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount <span class=\"op\">=</span> Transfer<span class=\"op\">.</span><span class=\"fu\">AmountMax</span><span class=\"op\">,</span></span>\n<span id=\"cb15-20\"><a href=\"#cb15-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    PendingId <span class=\"op\">=</span> <span class=\"dv\">6</span><span class=\"op\">,</span></span>\n<span id=\"cb15-21\"><a href=\"#cb15-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">PostPendingTransfer</span><span class=\"op\">,</span></span>\n<span id=\"cb15-22\"><a href=\"#cb15-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb15-23\"><a href=\"#cb15-23\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-24\"><a href=\"#cb15-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span><span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span> transfer1 <span class=\"op\">});</span></span>\n<span id=\"cb15-25\"><a href=\"#cb15-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h4 id=\"void-a-pending-transfer\"><a href=\"#void-a-pending-transfer\"\nclass=\"anchor\">Void a Pending Transfer</a></h4>\n<p>In contrast, with <code>flags</code> set to\n<code>void_pending_transfer</code>, TigerBeetle will void the transfer.\nTigerBeetle will roll back the changes to <code>debits_pending</code>\nand <code>credits_pending</code> of the appropriate accounts and\n<strong>not</strong> apply them to the <code>debits_posted</code> and\n<code>credits_posted</code> balances.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb16\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb16-1\"><a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfer0 <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb16-2\"><a href=\"#cb16-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb16-3\"><a href=\"#cb16-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">8</span><span class=\"op\">,</span></span>\n<span id=\"cb16-4\"><a href=\"#cb16-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountId <span class=\"op\">=</span> <span class=\"dv\">102</span><span class=\"op\">,</span></span>\n<span id=\"cb16-5\"><a href=\"#cb16-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountId <span class=\"op\">=</span> <span class=\"dv\">103</span><span class=\"op\">,</span></span>\n<span id=\"cb16-6\"><a href=\"#cb16-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb16-7\"><a href=\"#cb16-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb16-8\"><a href=\"#cb16-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb16-9\"><a href=\"#cb16-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Pending</span><span class=\"op\">,</span></span>\n<span id=\"cb16-10\"><a href=\"#cb16-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb16-11\"><a href=\"#cb16-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb16-12\"><a href=\"#cb16-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span><span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span> transfer0 <span class=\"op\">});</span></span>\n<span id=\"cb16-13\"><a href=\"#cb16-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb16-14\"><a href=\"#cb16-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb16-15\"><a href=\"#cb16-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfer1 <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer</span>\n<span id=\"cb16-16\"><a href=\"#cb16-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb16-17\"><a href=\"#cb16-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Id <span class=\"op\">=</span> <span class=\"dv\">9</span><span class=\"op\">,</span></span>\n<span id=\"cb16-18\"><a href=\"#cb16-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb16-19\"><a href=\"#cb16-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    PendingId <span class=\"op\">=</span> <span class=\"dv\">8</span><span class=\"op\">,</span></span>\n<span id=\"cb16-20\"><a href=\"#cb16-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">VoidPendingTransfer</span><span class=\"op\">,</span></span>\n<span id=\"cb16-21\"><a href=\"#cb16-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb16-22\"><a href=\"#cb16-22\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb16-23\"><a href=\"#cb16-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span><span class=\"kw\">new</span><span class=\"op\">[]</span> <span class=\"op\">{</span> transfer1 <span class=\"op\">});</span></span>\n<span id=\"cb16-24\"><a href=\"#cb16-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h2 id=\"transfer-lookup\"><a href=\"#transfer-lookup\"\nclass=\"anchor\">Transfer Lookup</a></h2>\n<p>NOTE: While transfer lookup exists, it is not a flexible query API.\nWe are developing query APIs and there will be new methods for querying\ntransfers in the future.</p>\n<p>Transfer lookup is batched, like transfer creation. Pass in all\n<code>id</code>s to fetch, and matched transfers are returned.</p>\n<p>If no transfer matches an <code>id</code>, no object is returned for\nthat transfer. So the order of transfers in the response is not\nnecessarily the same as the order of <code>id</code>s in the request.\nYou can refer to the <code>id</code> field in the response to\ndistinguish transfers.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb17\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb17-1\"><a href=\"#cb17-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>Transfer<span class=\"op\">[]</span> transfers <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">LookupTransfers</span><span class=\"op\">(</span><span class=\"kw\">new</span> UInt128<span class=\"op\">[]</span> <span class=\"op\">{</span> <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"dv\">2</span> <span class=\"op\">});</span></span></code></pre></div>\n</div>\n<h2 id=\"get-account-transfers\"><a href=\"#get-account-transfers\"\nclass=\"anchor\">Get Account Transfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the transfers involving a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb18\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb18-1\"><a href=\"#cb18-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> filter <span class=\"op\">=</span> <span class=\"kw\">new</span> AccountFilter</span>\n<span id=\"cb18-2\"><a href=\"#cb18-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb18-3\"><a href=\"#cb18-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    AccountId <span class=\"op\">=</span> <span class=\"dv\">101</span><span class=\"op\">,</span></span>\n<span id=\"cb18-4\"><a href=\"#cb18-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData128 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by UserData.</span></span>\n<span id=\"cb18-5\"><a href=\"#cb18-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData64 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb18-6\"><a href=\"#cb18-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData32 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb18-7\"><a href=\"#cb18-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Code.</span></span>\n<span id=\"cb18-8\"><a href=\"#cb18-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMin <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb18-9\"><a href=\"#cb18-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMax <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb18-10\"><a href=\"#cb18-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Limit <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten transfers at most.</span></span>\n<span id=\"cb18-11\"><a href=\"#cb18-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> AccountFilterFlags<span class=\"op\">.</span><span class=\"fu\">Debits</span> <span class=\"op\">|</span> <span class=\"co\">// Include transfer from the debit side.</span></span>\n<span id=\"cb18-12\"><a href=\"#cb18-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>        AccountFilterFlags<span class=\"op\">.</span><span class=\"fu\">Credits</span> <span class=\"op\">|</span> <span class=\"co\">// Include transfer from the credit side.</span></span>\n<span id=\"cb18-13\"><a href=\"#cb18-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>        AccountFilterFlags<span class=\"op\">.</span><span class=\"fu\">Reversed</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb18-14\"><a href=\"#cb18-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb18-15\"><a href=\"#cb18-15\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb18-16\"><a href=\"#cb18-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>Transfer<span class=\"op\">[]</span> transfers <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">GetAccountTransfers</span><span class=\"op\">(</span>filter<span class=\"op\">);</span></span></code></pre></div>\n</div>\n<h2 id=\"get-account-balances\"><a href=\"#get-account-balances\"\nclass=\"anchor\">Get Account Balances</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the point-in-time balances of a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>Only accounts created with the flag <a\nhref=\"/reference/account#flagshistory\"><code>history</code></a> set\nretain <a href=\"/reference/requests/get_account_balances\">historical\nbalances</a>.</p>\n<p>The balances in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb19\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb19-1\"><a href=\"#cb19-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> filter <span class=\"op\">=</span> <span class=\"kw\">new</span> AccountFilter</span>\n<span id=\"cb19-2\"><a href=\"#cb19-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb19-3\"><a href=\"#cb19-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    AccountId <span class=\"op\">=</span> <span class=\"dv\">101</span><span class=\"op\">,</span></span>\n<span id=\"cb19-4\"><a href=\"#cb19-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData128 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by UserData.</span></span>\n<span id=\"cb19-5\"><a href=\"#cb19-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData64 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb19-6\"><a href=\"#cb19-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData32 <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb19-7\"><a href=\"#cb19-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Code.</span></span>\n<span id=\"cb19-8\"><a href=\"#cb19-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMin <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb19-9\"><a href=\"#cb19-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMax <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb19-10\"><a href=\"#cb19-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Limit <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb19-11\"><a href=\"#cb19-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> AccountFilterFlags<span class=\"op\">.</span><span class=\"fu\">Debits</span> <span class=\"op\">|</span> <span class=\"co\">// Include transfer from the debit side.</span></span>\n<span id=\"cb19-12\"><a href=\"#cb19-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>        AccountFilterFlags<span class=\"op\">.</span><span class=\"fu\">Credits</span> <span class=\"op\">|</span> <span class=\"co\">// Include transfer from the credit side.</span></span>\n<span id=\"cb19-13\"><a href=\"#cb19-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>        AccountFilterFlags<span class=\"op\">.</span><span class=\"fu\">Reversed</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb19-14\"><a href=\"#cb19-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb19-15\"><a href=\"#cb19-15\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb19-16\"><a href=\"#cb19-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountBalance<span class=\"op\">[]</span> accountBalances <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">GetAccountBalances</span><span class=\"op\">(</span>filter<span class=\"op\">);</span></span></code></pre></div>\n</div>\n<h2 id=\"query-accounts\"><a href=\"#query-accounts\" class=\"anchor\">Query\nAccounts</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query accounts by the intersection of some fields and by timestamp\nrange.</p>\n<p>The accounts in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb20\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb20-1\"><a href=\"#cb20-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> filter <span class=\"op\">=</span> <span class=\"kw\">new</span> QueryFilter</span>\n<span id=\"cb20-2\"><a href=\"#cb20-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb20-3\"><a href=\"#cb20-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData128 <span class=\"op\">=</span> <span class=\"dv\">1000</span><span class=\"op\">,</span> <span class=\"co\">// Filter by UserData.</span></span>\n<span id=\"cb20-4\"><a href=\"#cb20-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData64 <span class=\"op\">=</span> <span class=\"dv\">100</span><span class=\"op\">,</span></span>\n<span id=\"cb20-5\"><a href=\"#cb20-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData32 <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb20-6\"><a href=\"#cb20-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"co\">// Filter by Code.</span></span>\n<span id=\"cb20-7\"><a href=\"#cb20-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Ledger.</span></span>\n<span id=\"cb20-8\"><a href=\"#cb20-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMin <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb20-9\"><a href=\"#cb20-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMax <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb20-10\"><a href=\"#cb20-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Limit <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb20-11\"><a href=\"#cb20-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> QueryFilterFlags<span class=\"op\">.</span><span class=\"fu\">Reversed</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb20-12\"><a href=\"#cb20-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb20-13\"><a href=\"#cb20-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb20-14\"><a href=\"#cb20-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>Account<span class=\"op\">[]</span> accounts <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">QueryAccounts</span><span class=\"op\">(</span>filter<span class=\"op\">);</span></span></code></pre></div>\n</div>\n<h2 id=\"query-transfers\"><a href=\"#query-transfers\" class=\"anchor\">Query\nTransfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query transfers by the intersection of some fields and by timestamp\nrange.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb21\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb21-1\"><a href=\"#cb21-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> filter <span class=\"op\">=</span> <span class=\"kw\">new</span> QueryFilter</span>\n<span id=\"cb21-2\"><a href=\"#cb21-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb21-3\"><a href=\"#cb21-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData128 <span class=\"op\">=</span> <span class=\"dv\">1000</span><span class=\"op\">,</span> <span class=\"co\">// Filter by UserData</span></span>\n<span id=\"cb21-4\"><a href=\"#cb21-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData64 <span class=\"op\">=</span> <span class=\"dv\">100</span><span class=\"op\">,</span></span>\n<span id=\"cb21-5\"><a href=\"#cb21-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData32 <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb21-6\"><a href=\"#cb21-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"co\">// Filter by Code</span></span>\n<span id=\"cb21-7\"><a href=\"#cb21-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Ledger</span></span>\n<span id=\"cb21-8\"><a href=\"#cb21-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMin <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb21-9\"><a href=\"#cb21-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMax <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb21-10\"><a href=\"#cb21-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Limit <span class=\"op\">=</span> <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb21-11\"><a href=\"#cb21-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags <span class=\"op\">=</span> QueryFilterFlags<span class=\"op\">.</span><span class=\"fu\">Reversed</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb21-12\"><a href=\"#cb21-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb21-13\"><a href=\"#cb21-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-14\"><a href=\"#cb21-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>Transfer<span class=\"op\">[]</span> transfers <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">QueryTransfers</span><span class=\"op\">(</span>filter<span class=\"op\">);</span></span></code></pre></div>\n</div>\n<h2 id=\"linked-events\"><a href=\"#linked-events\" class=\"anchor\">Linked\nEvents</a></h2>\n<p>When the <code>linked</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it links that\nevent with the next event in the batch, to create a chain of events, of\narbitrary length, which all succeed or fail together. The tail of a\nchain is denoted by the first event without this flag. The last event in\na batch may therefore never have the <code>linked</code> flag set as\nthis would leave a chain open-ended. Multiple chains or individual\nevents may coexist within a batch to succeed or fail independently.</p>\n<p>Events within a chain are executed within order, or are rolled back\non error, so that the effect of each event in the chain is visible to\nthe next, and so that the chain is either visible or invisible as a unit\nto subsequent events after the chain. The event that was the first to\nbreak the chain will have a unique error result. Other events in the\nchain will have their error result set to\n<code>linked_event_failed</code>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb22\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb22-1\"><a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> batch <span class=\"op\">=</span> <span class=\"kw\">new</span> System<span class=\"op\">.</span><span class=\"fu\">Collections</span><span class=\"op\">.</span><span class=\"fu\">Generic</span><span class=\"op\">.</span><span class=\"fu\">List</span><span class=\"op\">&lt;</span>Transfer<span class=\"op\">&gt;();</span></span>\n<span id=\"cb22-2\"><a href=\"#cb22-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-3\"><a href=\"#cb22-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// An individual transfer (successful):</span></span>\n<span id=\"cb22-4\"><a href=\"#cb22-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> <span class=\"op\">});</span></span>\n<span id=\"cb22-5\"><a href=\"#cb22-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-6\"><a href=\"#cb22-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 4 transfers (the last transfer in the chain closes the chain with linked=false):</span></span>\n<span id=\"cb22-7\"><a href=\"#cb22-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">2</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span> <span class=\"op\">});</span> <span class=\"co\">// Commit/rollback.</span></span>\n<span id=\"cb22-8\"><a href=\"#cb22-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">3</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span> <span class=\"op\">});</span> <span class=\"co\">// Commit/rollback.</span></span>\n<span id=\"cb22-9\"><a href=\"#cb22-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">2</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span> <span class=\"op\">});</span> <span class=\"co\">// Fail with exists</span></span>\n<span id=\"cb22-10\"><a href=\"#cb22-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">4</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> <span class=\"op\">});</span> <span class=\"co\">// Fail without committing</span></span>\n<span id=\"cb22-11\"><a href=\"#cb22-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-12\"><a href=\"#cb22-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// An individual transfer (successful):</span></span>\n<span id=\"cb22-13\"><a href=\"#cb22-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// This should not see any effect from the failed chain above.</span></span>\n<span id=\"cb22-14\"><a href=\"#cb22-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">2</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> <span class=\"op\">});</span></span>\n<span id=\"cb22-15\"><a href=\"#cb22-15\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-16\"><a href=\"#cb22-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 2 transfers (the first transfer fails the chain):</span></span>\n<span id=\"cb22-17\"><a href=\"#cb22-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">2</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span> <span class=\"op\">});</span></span>\n<span id=\"cb22-18\"><a href=\"#cb22-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">3</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> <span class=\"op\">});</span></span>\n<span id=\"cb22-19\"><a href=\"#cb22-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-20\"><a href=\"#cb22-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 2 transfers (successful):</span></span>\n<span id=\"cb22-21\"><a href=\"#cb22-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">3</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span> <span class=\"op\">});</span></span>\n<span id=\"cb22-22\"><a href=\"#cb22-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span><span class=\"kw\">new</span> Transfer <span class=\"op\">{</span> Id <span class=\"op\">=</span> <span class=\"dv\">4</span><span class=\"op\">,</span> <span class=\"co\">/* ... rest of transfer ... */</span> <span class=\"op\">});</span></span>\n<span id=\"cb22-23\"><a href=\"#cb22-23\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-24\"><a href=\"#cb22-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span>batch<span class=\"op\">.</span><span class=\"fu\">ToArray</span><span class=\"op\">());</span></span>\n<span id=\"cb22-25\"><a href=\"#cb22-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h2 id=\"imported-events\"><a href=\"#imported-events\"\nclass=\"anchor\">Imported Events</a></h2>\n<p>When the <code>imported</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it allows\nimporting historical events with a user-defined timestamp.</p>\n<p>The entire batch of events must be set with the flag\n<code>imported</code>.</p>\n<p>It’s recommended to submit the whole batch as a <code>linked</code>\nchain of events, ensuring that if any event fails, none of them are\ncommitted, preserving the last timestamp unchanged. This approach gives\nthe application a chance to correct failed imported events,\nre-submitting the batch again with the same user-defined timestamps.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb23\"><pre\nclass=\"sourceCode cs\"><code class=\"sourceCode cs\"><span id=\"cb23-1\"><a href=\"#cb23-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// External source of time</span></span>\n<span id=\"cb23-2\"><a href=\"#cb23-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">ulong</span> historicalTimestamp <span class=\"op\">=</span> <span class=\"dv\">0UL</span><span class=\"op\">;</span></span>\n<span id=\"cb23-3\"><a href=\"#cb23-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> historicalAccounts <span class=\"op\">=</span> <span class=\"kw\">new</span> Account<span class=\"op\">[]</span> <span class=\"op\">{</span> <span class=\"co\">/* Loaded from an external source */</span> <span class=\"op\">};</span></span>\n<span id=\"cb23-4\"><a href=\"#cb23-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> historicalTransfers <span class=\"op\">=</span> <span class=\"kw\">new</span> Transfer<span class=\"op\">[]</span> <span class=\"op\">{</span> <span class=\"co\">/* Loaded from an external source */</span> <span class=\"op\">};</span></span>\n<span id=\"cb23-5\"><a href=\"#cb23-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-6\"><a href=\"#cb23-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// First, load and import all accounts with their timestamps from the historical source.</span></span>\n<span id=\"cb23-7\"><a href=\"#cb23-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> accountsBatch <span class=\"op\">=</span> <span class=\"kw\">new</span> System<span class=\"op\">.</span><span class=\"fu\">Collections</span><span class=\"op\">.</span><span class=\"fu\">Generic</span><span class=\"op\">.</span><span class=\"fu\">List</span><span class=\"op\">&lt;</span>Account<span class=\"op\">&gt;();</span></span>\n<span id=\"cb23-8\"><a href=\"#cb23-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">for</span> <span class=\"op\">(</span><span class=\"dt\">var</span> index <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> index <span class=\"op\">&lt;</span> historicalAccounts<span class=\"op\">.</span><span class=\"fu\">Length</span><span class=\"op\">;</span> index<span class=\"op\">++)</span></span>\n<span id=\"cb23-9\"><a href=\"#cb23-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb23-10\"><a href=\"#cb23-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">var</span> account <span class=\"op\">=</span> historicalAccounts<span class=\"op\">[</span>index<span class=\"op\">];</span></span>\n<span id=\"cb23-11\"><a href=\"#cb23-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-12\"><a href=\"#cb23-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb23-13\"><a href=\"#cb23-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    historicalTimestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span><span class=\"op\">;</span></span>\n<span id=\"cb23-14\"><a href=\"#cb23-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account<span class=\"op\">.</span><span class=\"fu\">Timestamp</span> <span class=\"op\">=</span> historicalTimestamp<span class=\"op\">;</span></span>\n<span id=\"cb23-15\"><a href=\"#cb23-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set the account as `imported`.</span></span>\n<span id=\"cb23-16\"><a href=\"#cb23-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account<span class=\"op\">.</span><span class=\"fu\">Flags</span> <span class=\"op\">=</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">Imported</span><span class=\"op\">;</span></span>\n<span id=\"cb23-17\"><a href=\"#cb23-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb23-18\"><a href=\"#cb23-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// must be `linked`.</span></span>\n<span id=\"cb23-19\"><a href=\"#cb23-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">if</span> <span class=\"op\">(</span>index <span class=\"op\">&lt;</span> historicalAccounts<span class=\"op\">.</span><span class=\"fu\">Length</span> <span class=\"op\">-</span> <span class=\"dv\">1</span><span class=\"op\">)</span></span>\n<span id=\"cb23-20\"><a href=\"#cb23-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb23-21\"><a href=\"#cb23-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>        account<span class=\"op\">.</span><span class=\"fu\">Flags</span> <span class=\"op\">|=</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span><span class=\"op\">;</span></span>\n<span id=\"cb23-22\"><a href=\"#cb23-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb23-23\"><a href=\"#cb23-23\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-24\"><a href=\"#cb23-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    accountsBatch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span>account<span class=\"op\">);</span></span>\n<span id=\"cb23-25\"><a href=\"#cb23-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb23-26\"><a href=\"#cb23-26\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-27\"><a href=\"#cb23-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> accountErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateAccounts</span><span class=\"op\">(</span>accountsBatch<span class=\"op\">.</span><span class=\"fu\">ToArray</span><span class=\"op\">());</span></span>\n<span id=\"cb23-28\"><a href=\"#cb23-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb23-29\"><a href=\"#cb23-29\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-30\"><a href=\"#cb23-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Then, load and import all transfers with their timestamps from the historical source.</span></span>\n<span id=\"cb23-31\"><a href=\"#cb23-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transfersBatch <span class=\"op\">=</span> <span class=\"kw\">new</span> System<span class=\"op\">.</span><span class=\"fu\">Collections</span><span class=\"op\">.</span><span class=\"fu\">Generic</span><span class=\"op\">.</span><span class=\"fu\">List</span><span class=\"op\">&lt;</span>Transfer<span class=\"op\">&gt;();</span></span>\n<span id=\"cb23-32\"><a href=\"#cb23-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">for</span> <span class=\"op\">(</span><span class=\"dt\">var</span> index <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> index <span class=\"op\">&lt;</span> historicalTransfers<span class=\"op\">.</span><span class=\"fu\">Length</span><span class=\"op\">;</span> index<span class=\"op\">++)</span></span>\n<span id=\"cb23-33\"><a href=\"#cb23-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb23-34\"><a href=\"#cb23-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">var</span> transfer <span class=\"op\">=</span> historicalTransfers<span class=\"op\">[</span>index<span class=\"op\">];</span></span>\n<span id=\"cb23-35\"><a href=\"#cb23-35\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-36\"><a href=\"#cb23-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb23-37\"><a href=\"#cb23-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>    historicalTimestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span><span class=\"op\">;</span></span>\n<span id=\"cb23-38\"><a href=\"#cb23-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer<span class=\"op\">.</span><span class=\"fu\">Timestamp</span> <span class=\"op\">=</span> historicalTimestamp<span class=\"op\">;</span></span>\n<span id=\"cb23-39\"><a href=\"#cb23-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set the account as `imported`.</span></span>\n<span id=\"cb23-40\"><a href=\"#cb23-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer<span class=\"op\">.</span><span class=\"fu\">Flags</span> <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Imported</span><span class=\"op\">;</span></span>\n<span id=\"cb23-41\"><a href=\"#cb23-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb23-42\"><a href=\"#cb23-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// must be `linked`.</span></span>\n<span id=\"cb23-43\"><a href=\"#cb23-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">if</span> <span class=\"op\">(</span>index <span class=\"op\">&lt;</span> historicalTransfers<span class=\"op\">.</span><span class=\"fu\">Length</span> <span class=\"op\">-</span> <span class=\"dv\">1</span><span class=\"op\">)</span></span>\n<span id=\"cb23-44\"><a href=\"#cb23-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb23-45\"><a href=\"#cb23-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>        transfer<span class=\"op\">.</span><span class=\"fu\">Flags</span> <span class=\"op\">|=</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">Linked</span><span class=\"op\">;</span></span>\n<span id=\"cb23-46\"><a href=\"#cb23-46\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb23-47\"><a href=\"#cb23-47\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-48\"><a href=\"#cb23-48\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfersBatch<span class=\"op\">.</span><span class=\"fu\">Add</span><span class=\"op\">(</span>transfer<span class=\"op\">);</span></span>\n<span id=\"cb23-49\"><a href=\"#cb23-49\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb23-50\"><a href=\"#cb23-50\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-51\"><a href=\"#cb23-51\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">CreateTransfers</span><span class=\"op\">(</span>transfersBatch<span class=\"op\">.</span><span class=\"fu\">ToArray</span><span class=\"op\">());</span></span>\n<span id=\"cb23-52\"><a href=\"#cb23-52\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb23-53\"><a href=\"#cb23-53\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Since it is a linked chain, in case of any error the entire batch is rolled back and can be retried</span></span>\n<span id=\"cb23-54\"><a href=\"#cb23-54\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// with the same historical timestamps without regressing the cluster timestamp.</span></span></code></pre></div>\n</div>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/src/clients/dotnet/README.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/clients/go","html":"<!-- This file is generated by [/src/scripts/client_readmes.zig](/src/scripts/client_readmes.zig). -->\n\n<h1 id=\"tigerbeetle-go\"><a href=\"#tigerbeetle-go\"\nclass=\"anchor\">tigerbeetle-go</a></h1>\n<p>The TigerBeetle client for Go.</p>\n<p><a\nhref=\"https://pkg.go.dev/github.com/tigerbeetle/tigerbeetle-go\"><img\nsrc=\"https://pkg.go.dev/badge/github.com/tigerbeetle/tigerbeetle-go.svg\"\nalt=\"Go Reference\" /></a></p>\n<p>Make sure to import\n<code>github.com/tigerbeetle/tigerbeetle-go</code>, not this repo and\nsubdirectory.</p>\n<h2 id=\"prerequisites\"><a href=\"#prerequisites\"\nclass=\"anchor\">Prerequisites</a></h2>\n<p>Linux &gt;= 5.6 is the only production environment we support. But\nfor ease of development we also support macOS and Windows.</p>\n<ul>\n<li>Go &gt;= 1.21</li>\n</ul>\n<p><strong>Additionally on Windows</strong>: you must install <a\nhref=\"https://ziglang.org/download/#release-0.14.1\">Zig 0.14.1</a> and\nset the <code>CC</code> environment variable to <code>zig.exe cc</code>.\nUse the full path for <code>zig.exe</code>.</p>\n<h2 id=\"setup\"><a href=\"#setup\" class=\"anchor\">Setup</a></h2>\n<p>First, create a directory for your project and <code>cd</code> into\nthe directory.</p>\n<p>Then, install the TigerBeetle client:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>go mod init tbtest\ngo get github.com/tigerbeetle/tigerbeetle-go</code></pre>\n</div>\n<p>Now, create <code>main.go</code> and copy this into it:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">package</span> main</span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">import</span> <span class=\"op\">(</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"st\">&quot;fmt&quot;</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"st\">&quot;log&quot;</span></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"st\">&quot;os&quot;</span></span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">.</span> <span class=\"st\">&quot;github.com/tigerbeetle/tigerbeetle-go&quot;</span></span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">.</span> <span class=\"st\">&quot;github.com/tigerbeetle/tigerbeetle-go/pkg/types&quot;</span></span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">)</span></span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">func</span> main<span class=\"op\">()</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-13\"><a href=\"#cb2-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    fmt<span class=\"op\">.</span>Println<span class=\"op\">(</span><span class=\"st\">&quot;Import ok!&quot;</span><span class=\"op\">)</span></span>\n<span id=\"cb2-14\"><a href=\"#cb2-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</div>\n<p>Finally, build and run:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>go run main.go</code></pre>\n</div>\n<p>Now that all prerequisites and dependencies are correctly set up,\nlet’s dig into using TigerBeetle.</p>\n<h2 id=\"sample-projects\"><a href=\"#sample-projects\"\nclass=\"anchor\">Sample projects</a></h2>\n<p>This document is primarily a reference guide to the client. Below are\nvarious sample projects demonstrating features of TigerBeetle.</p>\n<ul>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/go/samples/basic/\">Basic</a>:\nCreate two accounts and transfer an amount between them.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/go/samples/two-phase/\">Two-Phase\nTransfer</a>: Create two accounts and start a pending transfer between\nthem, then post the transfer.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/go/samples/two-phase-many/\">Many\nTwo-Phase Transfers</a>: Create two accounts and start a number of\npending transfers between them, posting and voiding alternating\ntransfers.</li>\n</ul>\n<h2 id=\"creating-a-client\"><a href=\"#creating-a-client\"\nclass=\"anchor\">Creating a Client</a></h2>\n<p>A client is created with a cluster ID and replica addresses for all\nreplicas in the cluster. The cluster ID and replica addresses are both\nchosen by the system that starts the TigerBeetle cluster.</p>\n<p>Clients are thread-safe and a single instance should be shared\nbetween multiple concurrent tasks. This allows events to be <a\nhref=\"/coding/requests/#batching-events\">automatically batched</a>.</p>\n<p>Multiple clients are useful when connecting to more than one\nTigerBeetle cluster.</p>\n<p>In this example the cluster ID is <code>0</code> and there is one\nreplica. The address is read from the <code>TB_ADDRESS</code>\nenvironment variable and defaults to port <code>3000</code>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>tbAddress <span class=\"op\">:=</span> os<span class=\"op\">.</span>Getenv<span class=\"op\">(</span><span class=\"st\">&quot;TB_ADDRESS&quot;</span><span class=\"op\">)</span></span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> <span class=\"bu\">len</span><span class=\"op\">(</span>tbAddress<span class=\"op\">)</span> <span class=\"op\">==</span> <span class=\"dv\">0</span> <span class=\"op\">{</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    tbAddress <span class=\"op\">=</span> <span class=\"st\">&quot;3000&quot;</span></span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb4-5\"><a href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>client<span class=\"op\">,</span> err <span class=\"op\">:=</span> NewClient<span class=\"op\">(</span>ToUint128<span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">),</span> <span class=\"op\">[]</span><span class=\"dt\">string</span><span class=\"op\">{</span>tbAddress<span class=\"op\">})</span></span>\n<span id=\"cb4-6\"><a href=\"#cb4-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> err <span class=\"op\">!=</span> <span class=\"ot\">nil</span> <span class=\"op\">{</span></span>\n<span id=\"cb4-7\"><a href=\"#cb4-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    log<span class=\"op\">.</span>Printf<span class=\"op\">(</span><span class=\"st\">&quot;Error creating client: %s&quot;</span><span class=\"op\">,</span> err<span class=\"op\">)</span></span>\n<span id=\"cb4-8\"><a href=\"#cb4-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span></span>\n<span id=\"cb4-9\"><a href=\"#cb4-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb4-10\"><a href=\"#cb4-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">defer</span> client<span class=\"op\">.</span>Close<span class=\"op\">()</span></span></code></pre></div>\n</div>\n<p>The following are valid addresses:</p>\n<ul>\n<li><code>3000</code> (interpreted as <code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1:3000</code> (interpreted as\n<code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1</code> (interpreted as <code>127.0.0.1:3001</code>,\n<code>3001</code> is the default port)</li>\n</ul>\n<h2 id=\"creating-accounts\"><a href=\"#creating-accounts\"\nclass=\"anchor\">Creating Accounts</a></h2>\n<p>See details for account fields in the <a\nhref=\"/reference/account\">Accounts reference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb5\"><pre class=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>accountErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateAccounts<span class=\"op\">([]</span>Account<span class=\"op\">{</span></span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">{</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>        ID<span class=\"op\">:</span>          ID<span class=\"op\">(),</span> <span class=\"co\">// TigerBeetle time-based ID.</span></span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData128<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">),</span></span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData64<span class=\"op\">:</span>  <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        UserData32<span class=\"op\">:</span>  <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb5-7\"><a href=\"#cb5-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Ledger<span class=\"op\">:</span>      <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb5-8\"><a href=\"#cb5-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Code<span class=\"op\">:</span>        <span class=\"dv\">718</span><span class=\"op\">,</span></span>\n<span id=\"cb5-9\"><a href=\"#cb5-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Flags<span class=\"op\">:</span>       <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb5-10\"><a href=\"#cb5-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Timestamp<span class=\"op\">:</span>   <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb5-11\"><a href=\"#cb5-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">},</span></span>\n<span id=\"cb5-12\"><a href=\"#cb5-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">})</span></span>\n<span id=\"cb5-13\"><a href=\"#cb5-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<p>See details for the recommended ID scheme in <a\nhref=\"/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<p>The <code>Uint128</code> fields like <code>ID</code>,\n<code>UserData128</code>, <code>Amount</code> and account balances have\na few helper functions to make it easier to convert 128-bit\nlittle-endian unsigned integers between <code>string</code>,\n<code>math/big.Int</code>, and <code>[]byte</code>.</p>\n<p>See the type <a\nhref=\"https://pkg.go.dev/github.com/tigerbeetle/tigerbeetle-go/pkg/types#Uint128\">Uint128</a>\nfor more details.</p>\n<h3 id=\"account-flags\"><a href=\"#account-flags\" class=\"anchor\">Account\nFlags</a></h3>\n<p>The account flags value is a bitfield. See details for these flags in\nthe <a href=\"/reference/account#flags\">Accounts reference</a>.</p>\n<p>To toggle behavior for an account, use the\n<code>types.AccountFlags</code> struct to combine enum values and\ngenerate a <code>uint16</code>. Here are a few examples:</p>\n<ul>\n<li><code>AccountFlags{Linked: true}.ToUint16()</code></li>\n<li><code>AccountFlags{DebitsMustNotExceedCredits: true}.ToUint16()</code></li>\n<li><code>AccountFlags{CreditsMustNotExceedDebits: true}.ToUint16()</code></li>\n<li><code>AccountFlags{History: true}.ToUint16()</code></li>\n</ul>\n<p>For example, to link two accounts where the first account\nadditionally has the <code>debits_must_not_exceed_credits</code>\nconstraint:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb6\"><pre class=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>account0 <span class=\"op\">:=</span> Account<span class=\"op\">{</span></span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>     ToUint128<span class=\"op\">(</span><span class=\"dv\">100</span><span class=\"op\">),</span></span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>   <span class=\"dv\">718</span><span class=\"op\">,</span></span>\n<span id=\"cb6-5\"><a href=\"#cb6-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span> AccountFlags<span class=\"op\">{</span></span>\n<span id=\"cb6-6\"><a href=\"#cb6-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        DebitsMustNotExceedCredits<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">,</span></span>\n<span id=\"cb6-7\"><a href=\"#cb6-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Linked<span class=\"op\">:</span>                     <span class=\"ot\">true</span><span class=\"op\">,</span></span>\n<span id=\"cb6-8\"><a href=\"#cb6-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}.</span>ToUint16<span class=\"op\">(),</span></span>\n<span id=\"cb6-9\"><a href=\"#cb6-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb6-10\"><a href=\"#cb6-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>account1 <span class=\"op\">:=</span> Account<span class=\"op\">{</span></span>\n<span id=\"cb6-11\"><a href=\"#cb6-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>     ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb6-12\"><a href=\"#cb6-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb6-13\"><a href=\"#cb6-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>   <span class=\"dv\">718</span><span class=\"op\">,</span></span>\n<span id=\"cb6-14\"><a href=\"#cb6-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span> AccountFlags<span class=\"op\">{</span></span>\n<span id=\"cb6-15\"><a href=\"#cb6-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>        History<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">,</span></span>\n<span id=\"cb6-16\"><a href=\"#cb6-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}.</span>ToUint16<span class=\"op\">(),</span></span>\n<span id=\"cb6-17\"><a href=\"#cb6-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb6-18\"><a href=\"#cb6-18\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-19\"><a href=\"#cb6-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>accountErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateAccounts<span class=\"op\">([]</span>Account<span class=\"op\">{</span>account0<span class=\"op\">,</span> account1<span class=\"op\">})</span></span>\n<span id=\"cb6-20\"><a href=\"#cb6-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h3 id=\"response-and-errors\"><a href=\"#response-and-errors\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all accounts were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for an account that failed. The error\nobject contains an error code and the index of the account in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"/reference/requests/create_accounts\">create_accounts\nreference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb7\"><pre class=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>account0 <span class=\"op\">:=</span> Account<span class=\"op\">{</span></span>\n<span id=\"cb7-2\"><a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>     ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb7-3\"><a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-4\"><a href=\"#cb7-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>   <span class=\"dv\">718</span><span class=\"op\">,</span></span>\n<span id=\"cb7-5\"><a href=\"#cb7-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>  <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-6\"><a href=\"#cb7-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb7-7\"><a href=\"#cb7-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>account1 <span class=\"op\">:=</span> Account<span class=\"op\">{</span></span>\n<span id=\"cb7-8\"><a href=\"#cb7-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>     ToUint128<span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">),</span></span>\n<span id=\"cb7-9\"><a href=\"#cb7-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-10\"><a href=\"#cb7-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>   <span class=\"dv\">718</span><span class=\"op\">,</span></span>\n<span id=\"cb7-11\"><a href=\"#cb7-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>  <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-12\"><a href=\"#cb7-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb7-13\"><a href=\"#cb7-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>account2 <span class=\"op\">:=</span> Account<span class=\"op\">{</span></span>\n<span id=\"cb7-14\"><a href=\"#cb7-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>     ToUint128<span class=\"op\">(</span><span class=\"dv\">104</span><span class=\"op\">),</span></span>\n<span id=\"cb7-15\"><a href=\"#cb7-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-16\"><a href=\"#cb7-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>   <span class=\"dv\">718</span><span class=\"op\">,</span></span>\n<span id=\"cb7-17\"><a href=\"#cb7-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>  <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-18\"><a href=\"#cb7-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb7-19\"><a href=\"#cb7-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-20\"><a href=\"#cb7-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>accountErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateAccounts<span class=\"op\">([]</span>Account<span class=\"op\">{</span>account0<span class=\"op\">,</span> account1<span class=\"op\">,</span> account2<span class=\"op\">})</span></span>\n<span id=\"cb7-21\"><a href=\"#cb7-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> err <span class=\"op\">!=</span> <span class=\"ot\">nil</span> <span class=\"op\">{</span></span>\n<span id=\"cb7-22\"><a href=\"#cb7-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    log<span class=\"op\">.</span>Printf<span class=\"op\">(</span><span class=\"st\">&quot;Error creating accounts: %s&quot;</span><span class=\"op\">,</span> err<span class=\"op\">)</span></span>\n<span id=\"cb7-23\"><a href=\"#cb7-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span></span>\n<span id=\"cb7-24\"><a href=\"#cb7-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb7-25\"><a href=\"#cb7-25\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-26\"><a href=\"#cb7-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> _<span class=\"op\">,</span> err <span class=\"op\">:=</span> <span class=\"kw\">range</span> accountErrors <span class=\"op\">{</span></span>\n<span id=\"cb7-27\"><a href=\"#cb7-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">switch</span> err<span class=\"op\">.</span>Index <span class=\"op\">{</span></span>\n<span id=\"cb7-28\"><a href=\"#cb7-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">case</span> <span class=\"dt\">uint32</span><span class=\"op\">(</span>AccountExists<span class=\"op\">):</span></span>\n<span id=\"cb7-29\"><a href=\"#cb7-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>        log<span class=\"op\">.</span>Printf<span class=\"op\">(</span><span class=\"st\">&quot;Batch account at %d already exists.&quot;</span><span class=\"op\">,</span> err<span class=\"op\">.</span>Index<span class=\"op\">)</span></span>\n<span id=\"cb7-30\"><a href=\"#cb7-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">default</span><span class=\"op\">:</span></span>\n<span id=\"cb7-31\"><a href=\"#cb7-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>        log<span class=\"op\">.</span>Printf<span class=\"op\">(</span><span class=\"st\">&quot;Batch account at %d failed to create: %s&quot;</span><span class=\"op\">,</span> err<span class=\"op\">.</span>Index<span class=\"op\">,</span> err<span class=\"op\">.</span>Result<span class=\"op\">)</span></span>\n<span id=\"cb7-32\"><a href=\"#cb7-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb7-33\"><a href=\"#cb7-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</div>\n<p>To handle errors you can either 1) exactly match error codes returned\nfrom <code>client.createAccounts</code> with enum values in the\n<code>CreateAccountError</code> object, or you can 2) look up the error\ncode in the <code>CreateAccountError</code> object for a human-readable\nstring.</p>\n<h2 id=\"account-lookup\"><a href=\"#account-lookup\" class=\"anchor\">Account\nLookup</a></h2>\n<p>Account lookup is batched, like account creation. Pass in all IDs to\nfetch. The account for each matched ID is returned.</p>\n<p>If no account matches an ID, no object is returned for that account.\nSo the order of accounts in the response is not necessarily the same as\nthe order of IDs in the request. You can refer to the ID field in the\nresponse to distinguish accounts.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb8\"><pre class=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb8-1\"><a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>LookupAccounts<span class=\"op\">([]</span>Uint128<span class=\"op\">{</span>ToUint128<span class=\"op\">(</span><span class=\"dv\">100</span><span class=\"op\">),</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">)})</span></span></code></pre></div>\n</div>\n<h2 id=\"create-transfers\"><a href=\"#create-transfers\"\nclass=\"anchor\">Create Transfers</a></h2>\n<p>This creates a journal entry between two accounts.</p>\n<p>See details for transfer fields in the <a\nhref=\"/reference/transfer\">Transfers reference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb9\"><pre class=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers <span class=\"op\">:=</span> <span class=\"op\">[]</span>Transfer<span class=\"op\">{{</span></span>\n<span id=\"cb9-2\"><a href=\"#cb9-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>              ID<span class=\"op\">(),</span> <span class=\"co\">// TigerBeetle time-based ID.</span></span>\n<span id=\"cb9-3\"><a href=\"#cb9-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountID<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb9-4\"><a href=\"#cb9-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb9-5\"><a href=\"#cb9-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>          ToUint128<span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">),</span></span>\n<span id=\"cb9-6\"><a href=\"#cb9-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>          <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb9-7\"><a href=\"#cb9-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>            <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb9-8\"><a href=\"#cb9-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>           <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb9-9\"><a href=\"#cb9-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Timestamp<span class=\"op\">:</span>       <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb9-10\"><a href=\"#cb9-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}}</span></span>\n<span id=\"cb9-11\"><a href=\"#cb9-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb9-12\"><a href=\"#cb9-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">(</span>transfers<span class=\"op\">)</span></span>\n<span id=\"cb9-13\"><a href=\"#cb9-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<p>See details for the recommended ID scheme in <a\nhref=\"/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<h3 id=\"response-and-errors-1\"><a href=\"#response-and-errors-1\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all transfers were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for a transfer that failed. The error\nobject contains an error code and the index of the transfer in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"/reference/requests/create_transfers\">create_transfers\nreference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb10\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb10-1\"><a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers <span class=\"op\">:=</span> <span class=\"op\">[]</span>Transfer<span class=\"op\">{{</span></span>\n<span id=\"cb10-2\"><a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>              ToUint128<span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">),</span></span>\n<span id=\"cb10-3\"><a href=\"#cb10-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountID<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb10-4\"><a href=\"#cb10-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb10-5\"><a href=\"#cb10-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>          ToUint128<span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">),</span></span>\n<span id=\"cb10-6\"><a href=\"#cb10-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>          <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-7\"><a href=\"#cb10-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>            <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-8\"><a href=\"#cb10-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>           <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-9\"><a href=\"#cb10-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">},</span> <span class=\"op\">{</span></span>\n<span id=\"cb10-10\"><a href=\"#cb10-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>              ToUint128<span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">),</span></span>\n<span id=\"cb10-11\"><a href=\"#cb10-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountID<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb10-12\"><a href=\"#cb10-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb10-13\"><a href=\"#cb10-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>          ToUint128<span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">),</span></span>\n<span id=\"cb10-14\"><a href=\"#cb10-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>          <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-15\"><a href=\"#cb10-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>            <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-16\"><a href=\"#cb10-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>           <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-17\"><a href=\"#cb10-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">},</span> <span class=\"op\">{</span></span>\n<span id=\"cb10-18\"><a href=\"#cb10-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>              ToUint128<span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">),</span></span>\n<span id=\"cb10-19\"><a href=\"#cb10-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountID<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb10-20\"><a href=\"#cb10-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb10-21\"><a href=\"#cb10-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>          ToUint128<span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">),</span></span>\n<span id=\"cb10-22\"><a href=\"#cb10-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>          <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-23\"><a href=\"#cb10-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>            <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-24\"><a href=\"#cb10-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>           <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-25\"><a href=\"#cb10-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}}</span></span>\n<span id=\"cb10-26\"><a href=\"#cb10-26\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb10-27\"><a href=\"#cb10-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">(</span>transfers<span class=\"op\">)</span></span>\n<span id=\"cb10-28\"><a href=\"#cb10-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> err <span class=\"op\">!=</span> <span class=\"ot\">nil</span> <span class=\"op\">{</span></span>\n<span id=\"cb10-29\"><a href=\"#cb10-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>    log<span class=\"op\">.</span>Printf<span class=\"op\">(</span><span class=\"st\">&quot;Error creating transfers: %s&quot;</span><span class=\"op\">,</span> err<span class=\"op\">)</span></span>\n<span id=\"cb10-30\"><a href=\"#cb10-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span></span>\n<span id=\"cb10-31\"><a href=\"#cb10-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb10-32\"><a href=\"#cb10-32\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb10-33\"><a href=\"#cb10-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> _<span class=\"op\">,</span> err <span class=\"op\">:=</span> <span class=\"kw\">range</span> transferErrors <span class=\"op\">{</span></span>\n<span id=\"cb10-34\"><a href=\"#cb10-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">switch</span> err<span class=\"op\">.</span>Index <span class=\"op\">{</span></span>\n<span id=\"cb10-35\"><a href=\"#cb10-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">case</span> <span class=\"dt\">uint32</span><span class=\"op\">(</span>TransferExists<span class=\"op\">):</span></span>\n<span id=\"cb10-36\"><a href=\"#cb10-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>        log<span class=\"op\">.</span>Printf<span class=\"op\">(</span><span class=\"st\">&quot;Batch transfer at %d already exists.&quot;</span><span class=\"op\">,</span> err<span class=\"op\">.</span>Index<span class=\"op\">)</span></span>\n<span id=\"cb10-37\"><a href=\"#cb10-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">default</span><span class=\"op\">:</span></span>\n<span id=\"cb10-38\"><a href=\"#cb10-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>        log<span class=\"op\">.</span>Printf<span class=\"op\">(</span><span class=\"st\">&quot;Batch transfer at %d failed to create: %s&quot;</span><span class=\"op\">,</span> err<span class=\"op\">.</span>Index<span class=\"op\">,</span> err<span class=\"op\">.</span>Result<span class=\"op\">)</span></span>\n<span id=\"cb10-39\"><a href=\"#cb10-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb10-40\"><a href=\"#cb10-40\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</div>\n<h2 id=\"batching\"><a href=\"#batching\" class=\"anchor\">Batching</a></h2>\n<p>TigerBeetle performance is maximized when you batch API requests. A\nclient instance shared across multiple threads/tasks can automatically\nbatch concurrent requests, but the application must still send as many\nevents as possible in a single call. For example, if you insert 1\nmillion transfers sequentially, one at a time, the insert rate will be a\n<em>fraction</em> of the potential, because the client will wait for a\nreply between each one.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb11\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">:=</span> <span class=\"op\">[]</span>Transfer<span class=\"op\">{}</span></span>\n<span id=\"cb11-2\"><a href=\"#cb11-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> i <span class=\"op\">:=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> i <span class=\"op\">&lt;</span> <span class=\"bu\">len</span><span class=\"op\">(</span>batch<span class=\"op\">);</span> i<span class=\"op\">++</span> <span class=\"op\">{</span></span>\n<span id=\"cb11-3\"><a href=\"#cb11-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">([]</span>Transfer<span class=\"op\">{</span>batch<span class=\"op\">[</span>i<span class=\"op\">]})</span></span>\n<span id=\"cb11-4\"><a href=\"#cb11-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    _<span class=\"op\">,</span> _ <span class=\"op\">=</span> transferErrors<span class=\"op\">,</span> err <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb11-5\"><a href=\"#cb11-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</div>\n<p>Instead, <strong>always batch as much as you can</strong>. The\nmaximum batch size is set in the TigerBeetle server. The default is\n8189.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb12\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb12-1\"><a href=\"#cb12-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">:=</span> <span class=\"op\">[]</span>Transfer<span class=\"op\">{}</span></span>\n<span id=\"cb12-2\"><a href=\"#cb12-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>BATCH_SIZE <span class=\"op\">:=</span> <span class=\"dv\">8189</span></span>\n<span id=\"cb12-3\"><a href=\"#cb12-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> i <span class=\"op\">:=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> i <span class=\"op\">&lt;</span> <span class=\"bu\">len</span><span class=\"op\">(</span>batch<span class=\"op\">);</span> i <span class=\"op\">+=</span> BATCH_SIZE <span class=\"op\">{</span></span>\n<span id=\"cb12-4\"><a href=\"#cb12-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    size <span class=\"op\">:=</span> BATCH_SIZE</span>\n<span id=\"cb12-5\"><a href=\"#cb12-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> i<span class=\"op\">+</span>BATCH_SIZE <span class=\"op\">&gt;</span> <span class=\"bu\">len</span><span class=\"op\">(</span>batch<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb12-6\"><a href=\"#cb12-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        size <span class=\"op\">=</span> <span class=\"bu\">len</span><span class=\"op\">(</span>batch<span class=\"op\">)</span> <span class=\"op\">-</span> i</span>\n<span id=\"cb12-7\"><a href=\"#cb12-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb12-8\"><a href=\"#cb12-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">(</span>batch<span class=\"op\">[</span>i <span class=\"op\">:</span> i<span class=\"op\">+</span>size<span class=\"op\">])</span></span>\n<span id=\"cb12-9\"><a href=\"#cb12-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    _<span class=\"op\">,</span> _ <span class=\"op\">=</span> transferErrors<span class=\"op\">,</span> err <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb12-10\"><a href=\"#cb12-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</div>\n<h3 id=\"queues-and-workers\"><a href=\"#queues-and-workers\"\nclass=\"anchor\">Queues and Workers</a></h3>\n<p>If you are making requests to TigerBeetle from workers pulling jobs\nfrom a queue, you can batch requests to TigerBeetle by having the worker\nact on multiple jobs from the queue at once rather than one at a time.\ni.e. pulling multiple jobs from the queue rather than just one.</p>\n<h2 id=\"transfer-flags\"><a href=\"#transfer-flags\"\nclass=\"anchor\">Transfer Flags</a></h2>\n<p>The transfer <code>flags</code> value is a bitfield. See details for\nthese flags in the <a href=\"/reference/transfer#flags\">Transfers\nreference</a>.</p>\n<p>To toggle behavior for an account, use the\n<code>types.TransferFlags</code> struct to combine enum values and\ngenerate a <code>uint16</code>. Here are a few examples:</p>\n<ul>\n<li><code>TransferFlags{Linked: true}.ToUint16()</code></li>\n<li><code>TransferFlags{Pending: true}.ToUint16()</code></li>\n<li><code>TransferFlags{PostPendingTransfer: true}.ToUint16()</code></li>\n<li><code>TransferFlags{VoidPendingTransfer: true}.ToUint16()</code></li>\n</ul>\n<p>For example, to link <code>transfer0</code> and\n<code>transfer1</code>:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb13\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb13-1\"><a href=\"#cb13-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer0 <span class=\"op\">:=</span> Transfer<span class=\"op\">{</span></span>\n<span id=\"cb13-2\"><a href=\"#cb13-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>              ToUint128<span class=\"op\">(</span><span class=\"dv\">4</span><span class=\"op\">),</span></span>\n<span id=\"cb13-3\"><a href=\"#cb13-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountID<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb13-4\"><a href=\"#cb13-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb13-5\"><a href=\"#cb13-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>          ToUint128<span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">),</span></span>\n<span id=\"cb13-6\"><a href=\"#cb13-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>          <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb13-7\"><a href=\"#cb13-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>            <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb13-8\"><a href=\"#cb13-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>           TransferFlags<span class=\"op\">{</span>Linked<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">}.</span>ToUint16<span class=\"op\">(),</span></span>\n<span id=\"cb13-9\"><a href=\"#cb13-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb13-10\"><a href=\"#cb13-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer1 <span class=\"op\">:=</span> Transfer<span class=\"op\">{</span></span>\n<span id=\"cb13-11\"><a href=\"#cb13-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>              ToUint128<span class=\"op\">(</span><span class=\"dv\">5</span><span class=\"op\">),</span></span>\n<span id=\"cb13-12\"><a href=\"#cb13-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountID<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb13-13\"><a href=\"#cb13-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb13-14\"><a href=\"#cb13-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>          ToUint128<span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">),</span></span>\n<span id=\"cb13-15\"><a href=\"#cb13-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>          <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb13-16\"><a href=\"#cb13-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>            <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb13-17\"><a href=\"#cb13-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>           <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb13-18\"><a href=\"#cb13-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb13-19\"><a href=\"#cb13-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb13-20\"><a href=\"#cb13-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">([]</span>Transfer<span class=\"op\">{</span>transfer0<span class=\"op\">,</span> transfer1<span class=\"op\">})</span></span>\n<span id=\"cb13-21\"><a href=\"#cb13-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h3 id=\"two-phase-transfers\"><a href=\"#two-phase-transfers\"\nclass=\"anchor\">Two-Phase Transfers</a></h3>\n<p>Two-phase transfers are supported natively by toggling the\nappropriate flag. TigerBeetle will then adjust the\n<code>credits_pending</code> and <code>debits_pending</code> fields of\nthe appropriate accounts. A corresponding post pending transfer then\nneeds to be sent to post or void the transfer.</p>\n<h4 id=\"post-a-pending-transfer\"><a href=\"#post-a-pending-transfer\"\nclass=\"anchor\">Post a Pending Transfer</a></h4>\n<p>With <code>flags</code> set to <code>post_pending_transfer</code>,\nTigerBeetle will post the transfer. TigerBeetle will atomically roll\nback the changes to <code>debits_pending</code> and\n<code>credits_pending</code> of the appropriate accounts and apply them\nto the <code>debits_posted</code> and <code>credits_posted</code>\nbalances.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb14\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb14-1\"><a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer0 <span class=\"op\">:=</span> Transfer<span class=\"op\">{</span></span>\n<span id=\"cb14-2\"><a href=\"#cb14-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>              ToUint128<span class=\"op\">(</span><span class=\"dv\">6</span><span class=\"op\">),</span></span>\n<span id=\"cb14-3\"><a href=\"#cb14-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountID<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb14-4\"><a href=\"#cb14-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb14-5\"><a href=\"#cb14-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>          ToUint128<span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">),</span></span>\n<span id=\"cb14-6\"><a href=\"#cb14-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>          <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb14-7\"><a href=\"#cb14-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>            <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb14-8\"><a href=\"#cb14-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>           <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb14-9\"><a href=\"#cb14-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb14-10\"><a href=\"#cb14-10\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-11\"><a href=\"#cb14-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">([]</span>Transfer<span class=\"op\">{</span>transfer0<span class=\"op\">})</span></span>\n<span id=\"cb14-12\"><a href=\"#cb14-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb14-13\"><a href=\"#cb14-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-14\"><a href=\"#cb14-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer1 <span class=\"op\">:=</span> Transfer<span class=\"op\">{</span></span>\n<span id=\"cb14-15\"><a href=\"#cb14-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">7</span><span class=\"op\">),</span></span>\n<span id=\"cb14-16\"><a href=\"#cb14-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Post the entire pending amount.</span></span>\n<span id=\"cb14-17\"><a href=\"#cb14-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>    AmountMax<span class=\"op\">,</span></span>\n<span id=\"cb14-18\"><a href=\"#cb14-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    PendingID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">6</span><span class=\"op\">),</span></span>\n<span id=\"cb14-19\"><a href=\"#cb14-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>     TransferFlags<span class=\"op\">{</span>PostPendingTransfer<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">}.</span>ToUint16<span class=\"op\">(),</span></span>\n<span id=\"cb14-20\"><a href=\"#cb14-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb14-21\"><a href=\"#cb14-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-22\"><a href=\"#cb14-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">([]</span>Transfer<span class=\"op\">{</span>transfer1<span class=\"op\">})</span></span>\n<span id=\"cb14-23\"><a href=\"#cb14-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h4 id=\"void-a-pending-transfer\"><a href=\"#void-a-pending-transfer\"\nclass=\"anchor\">Void a Pending Transfer</a></h4>\n<p>In contrast, with <code>flags</code> set to\n<code>void_pending_transfer</code>, TigerBeetle will void the transfer.\nTigerBeetle will roll back the changes to <code>debits_pending</code>\nand <code>credits_pending</code> of the appropriate accounts and\n<strong>not</strong> apply them to the <code>debits_posted</code> and\n<code>credits_posted</code> balances.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb15\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb15-1\"><a href=\"#cb15-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer0 <span class=\"op\">:=</span> Transfer<span class=\"op\">{</span></span>\n<span id=\"cb15-2\"><a href=\"#cb15-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>              ToUint128<span class=\"op\">(</span><span class=\"dv\">8</span><span class=\"op\">),</span></span>\n<span id=\"cb15-3\"><a href=\"#cb15-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    DebitAccountID<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">),</span></span>\n<span id=\"cb15-4\"><a href=\"#cb15-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreditAccountID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">),</span></span>\n<span id=\"cb15-5\"><a href=\"#cb15-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>          ToUint128<span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">),</span></span>\n<span id=\"cb15-6\"><a href=\"#cb15-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Timeout<span class=\"op\">:</span>         <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb15-7\"><a href=\"#cb15-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>          <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb15-8\"><a href=\"#cb15-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>            <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb15-9\"><a href=\"#cb15-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>           <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb15-10\"><a href=\"#cb15-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb15-11\"><a href=\"#cb15-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-12\"><a href=\"#cb15-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">([]</span>Transfer<span class=\"op\">{</span>transfer0<span class=\"op\">})</span></span>\n<span id=\"cb15-13\"><a href=\"#cb15-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb15-14\"><a href=\"#cb15-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-15\"><a href=\"#cb15-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer1 <span class=\"op\">:=</span> Transfer<span class=\"op\">{</span></span>\n<span id=\"cb15-16\"><a href=\"#cb15-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ID<span class=\"op\">:</span>        ToUint128<span class=\"op\">(</span><span class=\"dv\">9</span><span class=\"op\">),</span></span>\n<span id=\"cb15-17\"><a href=\"#cb15-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Amount<span class=\"op\">:</span>    ToUint128<span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">),</span></span>\n<span id=\"cb15-18\"><a href=\"#cb15-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    PendingID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">8</span><span class=\"op\">),</span></span>\n<span id=\"cb15-19\"><a href=\"#cb15-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span>     TransferFlags<span class=\"op\">{</span>VoidPendingTransfer<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">}.</span>ToUint16<span class=\"op\">(),</span></span>\n<span id=\"cb15-20\"><a href=\"#cb15-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb15-21\"><a href=\"#cb15-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-22\"><a href=\"#cb15-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">([]</span>Transfer<span class=\"op\">{</span>transfer1<span class=\"op\">})</span></span>\n<span id=\"cb15-23\"><a href=\"#cb15-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h2 id=\"transfer-lookup\"><a href=\"#transfer-lookup\"\nclass=\"anchor\">Transfer Lookup</a></h2>\n<p>NOTE: While transfer lookup exists, it is not a flexible query API.\nWe are developing query APIs and there will be new methods for querying\ntransfers in the future.</p>\n<p>Transfer lookup is batched, like transfer creation. Pass in all\n<code>id</code>s to fetch, and matched transfers are returned.</p>\n<p>If no transfer matches an <code>id</code>, no object is returned for\nthat transfer. So the order of transfers in the response is not\nnecessarily the same as the order of <code>id</code>s in the request.\nYou can refer to the <code>id</code> field in the response to\ndistinguish transfers.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb16\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb16-1\"><a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>LookupTransfers<span class=\"op\">([]</span>Uint128<span class=\"op\">{</span>ToUint128<span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">),</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">)})</span></span></code></pre></div>\n</div>\n<h2 id=\"get-account-transfers\"><a href=\"#get-account-transfers\"\nclass=\"anchor\">Get Account Transfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the transfers involving a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb17\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb17-1\"><a href=\"#cb17-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter <span class=\"op\">:=</span> AccountFilter<span class=\"op\">{</span></span>\n<span id=\"cb17-2\"><a href=\"#cb17-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    AccountID<span class=\"op\">:</span>    ToUint128<span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">),</span></span>\n<span id=\"cb17-3\"><a href=\"#cb17-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData128<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">),</span> <span class=\"co\">// No filter by UserData.</span></span>\n<span id=\"cb17-4\"><a href=\"#cb17-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData64<span class=\"op\">:</span>   <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb17-5\"><a href=\"#cb17-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData32<span class=\"op\">:</span>   <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb17-6\"><a href=\"#cb17-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>         <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Code.</span></span>\n<span id=\"cb17-7\"><a href=\"#cb17-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMin<span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb17-8\"><a href=\"#cb17-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMax<span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb17-9\"><a href=\"#cb17-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Limit<span class=\"op\">:</span>        <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten transfers at most.</span></span>\n<span id=\"cb17-10\"><a href=\"#cb17-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span> AccountFilterFlags<span class=\"op\">{</span></span>\n<span id=\"cb17-11\"><a href=\"#cb17-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Debits<span class=\"op\">:</span>   <span class=\"ot\">true</span><span class=\"op\">,</span> <span class=\"co\">// Include transfer from the debit side.</span></span>\n<span id=\"cb17-12\"><a href=\"#cb17-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Credits<span class=\"op\">:</span>  <span class=\"ot\">true</span><span class=\"op\">,</span> <span class=\"co\">// Include transfer from the credit side.</span></span>\n<span id=\"cb17-13\"><a href=\"#cb17-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Reversed<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb17-14\"><a href=\"#cb17-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}.</span>ToUint32<span class=\"op\">(),</span></span>\n<span id=\"cb17-15\"><a href=\"#cb17-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb17-16\"><a href=\"#cb17-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb17-17\"><a href=\"#cb17-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>GetAccountTransfers<span class=\"op\">(</span>filter<span class=\"op\">)</span></span></code></pre></div>\n</div>\n<h2 id=\"get-account-balances\"><a href=\"#get-account-balances\"\nclass=\"anchor\">Get Account Balances</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the point-in-time balances of a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>Only accounts created with the flag <a\nhref=\"/reference/account#flagshistory\"><code>history</code></a> set\nretain <a href=\"/reference/requests/get_account_balances\">historical\nbalances</a>.</p>\n<p>The balances in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb18\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb18-1\"><a href=\"#cb18-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter <span class=\"op\">:=</span> AccountFilter<span class=\"op\">{</span></span>\n<span id=\"cb18-2\"><a href=\"#cb18-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    AccountID<span class=\"op\">:</span>    ToUint128<span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">),</span></span>\n<span id=\"cb18-3\"><a href=\"#cb18-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData128<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">),</span> <span class=\"co\">// No filter by UserData.</span></span>\n<span id=\"cb18-4\"><a href=\"#cb18-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData64<span class=\"op\">:</span>   <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb18-5\"><a href=\"#cb18-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData32<span class=\"op\">:</span>   <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb18-6\"><a href=\"#cb18-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>         <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Code.</span></span>\n<span id=\"cb18-7\"><a href=\"#cb18-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMin<span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb18-8\"><a href=\"#cb18-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMax<span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb18-9\"><a href=\"#cb18-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Limit<span class=\"op\">:</span>        <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb18-10\"><a href=\"#cb18-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span> AccountFilterFlags<span class=\"op\">{</span></span>\n<span id=\"cb18-11\"><a href=\"#cb18-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Debits<span class=\"op\">:</span>   <span class=\"ot\">true</span><span class=\"op\">,</span> <span class=\"co\">// Include transfer from the debit side.</span></span>\n<span id=\"cb18-12\"><a href=\"#cb18-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Credits<span class=\"op\">:</span>  <span class=\"ot\">true</span><span class=\"op\">,</span> <span class=\"co\">// Include transfer from the credit side.</span></span>\n<span id=\"cb18-13\"><a href=\"#cb18-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Reversed<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb18-14\"><a href=\"#cb18-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}.</span>ToUint32<span class=\"op\">(),</span></span>\n<span id=\"cb18-15\"><a href=\"#cb18-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb18-16\"><a href=\"#cb18-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb18-17\"><a href=\"#cb18-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>account_balances<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>GetAccountBalances<span class=\"op\">(</span>filter<span class=\"op\">)</span></span></code></pre></div>\n</div>\n<h2 id=\"query-accounts\"><a href=\"#query-accounts\" class=\"anchor\">Query\nAccounts</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query accounts by the intersection of some fields and by timestamp\nrange.</p>\n<p>The accounts in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb19\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb19-1\"><a href=\"#cb19-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter <span class=\"op\">:=</span> QueryFilter<span class=\"op\">{</span></span>\n<span id=\"cb19-2\"><a href=\"#cb19-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData128<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">1000</span><span class=\"op\">),</span> <span class=\"co\">// Filter by UserData</span></span>\n<span id=\"cb19-3\"><a href=\"#cb19-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData64<span class=\"op\">:</span>   <span class=\"dv\">100</span><span class=\"op\">,</span></span>\n<span id=\"cb19-4\"><a href=\"#cb19-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData32<span class=\"op\">:</span>   <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb19-5\"><a href=\"#cb19-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>         <span class=\"dv\">1</span><span class=\"op\">,</span>  <span class=\"co\">// Filter by Code</span></span>\n<span id=\"cb19-6\"><a href=\"#cb19-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>       <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Ledger</span></span>\n<span id=\"cb19-7\"><a href=\"#cb19-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMin<span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb19-8\"><a href=\"#cb19-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMax<span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb19-9\"><a href=\"#cb19-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Limit<span class=\"op\">:</span>        <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb19-10\"><a href=\"#cb19-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span> QueryFilterFlags<span class=\"op\">{</span></span>\n<span id=\"cb19-11\"><a href=\"#cb19-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Reversed<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb19-12\"><a href=\"#cb19-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}.</span>ToUint32<span class=\"op\">(),</span></span>\n<span id=\"cb19-13\"><a href=\"#cb19-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb19-14\"><a href=\"#cb19-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb19-15\"><a href=\"#cb19-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>QueryAccounts<span class=\"op\">(</span>filter<span class=\"op\">)</span></span></code></pre></div>\n</div>\n<h2 id=\"query-transfers\"><a href=\"#query-transfers\" class=\"anchor\">Query\nTransfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query transfers by the intersection of some fields and by timestamp\nrange.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb20\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb20-1\"><a href=\"#cb20-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter <span class=\"op\">:=</span> QueryFilter<span class=\"op\">{</span></span>\n<span id=\"cb20-2\"><a href=\"#cb20-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData128<span class=\"op\">:</span>  ToUint128<span class=\"op\">(</span><span class=\"dv\">1000</span><span class=\"op\">),</span> <span class=\"co\">// Filter by UserData.</span></span>\n<span id=\"cb20-3\"><a href=\"#cb20-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData64<span class=\"op\">:</span>   <span class=\"dv\">100</span><span class=\"op\">,</span></span>\n<span id=\"cb20-4\"><a href=\"#cb20-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    UserData32<span class=\"op\">:</span>   <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb20-5\"><a href=\"#cb20-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Code<span class=\"op\">:</span>         <span class=\"dv\">1</span><span class=\"op\">,</span>  <span class=\"co\">// Filter by Code.</span></span>\n<span id=\"cb20-6\"><a href=\"#cb20-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Ledger<span class=\"op\">:</span>       <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Ledger.</span></span>\n<span id=\"cb20-7\"><a href=\"#cb20-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMin<span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb20-8\"><a href=\"#cb20-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TimestampMax<span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span>  <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb20-9\"><a href=\"#cb20-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Limit<span class=\"op\">:</span>        <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb20-10\"><a href=\"#cb20-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Flags<span class=\"op\">:</span> QueryFilterFlags<span class=\"op\">{</span></span>\n<span id=\"cb20-11\"><a href=\"#cb20-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Reversed<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb20-12\"><a href=\"#cb20-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}.</span>ToUint32<span class=\"op\">(),</span></span>\n<span id=\"cb20-13\"><a href=\"#cb20-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb20-14\"><a href=\"#cb20-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb20-15\"><a href=\"#cb20-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>QueryTransfers<span class=\"op\">(</span>filter<span class=\"op\">)</span></span></code></pre></div>\n</div>\n<h2 id=\"linked-events\"><a href=\"#linked-events\" class=\"anchor\">Linked\nEvents</a></h2>\n<p>When the <code>linked</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it links that\nevent with the next event in the batch, to create a chain of events, of\narbitrary length, which all succeed or fail together. The tail of a\nchain is denoted by the first event without this flag. The last event in\na batch may therefore never have the <code>linked</code> flag set as\nthis would leave a chain open-ended. Multiple chains or individual\nevents may coexist within a batch to succeed or fail independently.</p>\n<p>Events within a chain are executed within order, or are rolled back\non error, so that the effect of each event in the chain is visible to\nthe next, and so that the chain is either visible or invisible as a unit\nto subsequent events after the chain. The event that was the first to\nbreak the chain will have a unique error result. Other events in the\nchain will have their error result set to\n<code>linked_event_failed</code>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb21\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb21-1\"><a href=\"#cb21-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">:=</span> <span class=\"op\">[]</span>Transfer<span class=\"op\">{}</span></span>\n<span id=\"cb21-2\"><a href=\"#cb21-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>linkedFlag <span class=\"op\">:=</span> TransferFlags<span class=\"op\">{</span>Linked<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">}.</span>ToUint16<span class=\"op\">()</span></span>\n<span id=\"cb21-3\"><a href=\"#cb21-3\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-4\"><a href=\"#cb21-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// An individual transfer (successful):</span></span>\n<span id=\"cb21-5\"><a href=\"#cb21-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">)</span> <span class=\"co\">/* ... rest of transfer ... */</span><span class=\"op\">})</span></span>\n<span id=\"cb21-6\"><a href=\"#cb21-6\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-7\"><a href=\"#cb21-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 4 transfers (the last transfer in the chain closes the chain with linked=false):</span></span>\n<span id=\"cb21-8\"><a href=\"#cb21-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">)</span> <span class=\"co\">/* ... , */</span><span class=\"op\">,</span> Flags<span class=\"op\">:</span> linkedFlag<span class=\"op\">})</span> <span class=\"co\">// Commit/rollback.</span></span>\n<span id=\"cb21-9\"><a href=\"#cb21-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">)</span> <span class=\"co\">/* ... , */</span><span class=\"op\">,</span> Flags<span class=\"op\">:</span> linkedFlag<span class=\"op\">})</span> <span class=\"co\">// Commit/rollback.</span></span>\n<span id=\"cb21-10\"><a href=\"#cb21-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">)</span> <span class=\"co\">/* ... , */</span><span class=\"op\">,</span> Flags<span class=\"op\">:</span> linkedFlag<span class=\"op\">})</span> <span class=\"co\">// Fail with exists</span></span>\n<span id=\"cb21-11\"><a href=\"#cb21-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">4</span><span class=\"op\">)</span> <span class=\"co\">/* ... , */</span><span class=\"op\">})</span>                    <span class=\"co\">// Fail without committing</span></span>\n<span id=\"cb21-12\"><a href=\"#cb21-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-13\"><a href=\"#cb21-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// An individual transfer (successful):</span></span>\n<span id=\"cb21-14\"><a href=\"#cb21-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// This should not see any effect from the failed chain above.</span></span>\n<span id=\"cb21-15\"><a href=\"#cb21-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">)</span> <span class=\"co\">/* ... rest of transfer ... */</span><span class=\"op\">})</span></span>\n<span id=\"cb21-16\"><a href=\"#cb21-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-17\"><a href=\"#cb21-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 2 transfers (the first transfer fails the chain):</span></span>\n<span id=\"cb21-18\"><a href=\"#cb21-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">)</span> <span class=\"co\">/* ... rest of transfer ... */</span><span class=\"op\">,</span> Flags<span class=\"op\">:</span> linkedFlag<span class=\"op\">})</span></span>\n<span id=\"cb21-19\"><a href=\"#cb21-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">)</span> <span class=\"co\">/* ... rest of transfer ... */</span><span class=\"op\">})</span></span>\n<span id=\"cb21-20\"><a href=\"#cb21-20\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-21\"><a href=\"#cb21-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 2 transfers (successful):</span></span>\n<span id=\"cb21-22\"><a href=\"#cb21-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">)</span> <span class=\"co\">/* ... rest of transfer ... */</span><span class=\"op\">,</span> Flags<span class=\"op\">:</span> linkedFlag<span class=\"op\">})</span></span>\n<span id=\"cb21-23\"><a href=\"#cb21-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>batch<span class=\"op\">,</span> Transfer<span class=\"op\">{</span>ID<span class=\"op\">:</span> ToUint128<span class=\"op\">(</span><span class=\"dv\">4</span><span class=\"op\">)</span> <span class=\"co\">/* ... rest of transfer ... */</span><span class=\"op\">})</span></span>\n<span id=\"cb21-24\"><a href=\"#cb21-24\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-25\"><a href=\"#cb21-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">(</span>batch<span class=\"op\">)</span></span>\n<span id=\"cb21-26\"><a href=\"#cb21-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h2 id=\"imported-events\"><a href=\"#imported-events\"\nclass=\"anchor\">Imported Events</a></h2>\n<p>When the <code>imported</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it allows\nimporting historical events with a user-defined timestamp.</p>\n<p>The entire batch of events must be set with the flag\n<code>imported</code>.</p>\n<p>It’s recommended to submit the whole batch as a <code>linked</code>\nchain of events, ensuring that if any event fails, none of them are\ncommitted, preserving the last timestamp unchanged. This approach gives\nthe application a chance to correct failed imported events,\nre-submitting the batch again with the same user-defined timestamps.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb22\"><pre\nclass=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb22-1\"><a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// External source of time.</span></span>\n<span id=\"cb22-2\"><a href=\"#cb22-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">var</span> historicalTimestamp <span class=\"dt\">uint64</span> <span class=\"op\">=</span> <span class=\"dv\">0</span></span>\n<span id=\"cb22-3\"><a href=\"#cb22-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>historicalAccounts <span class=\"op\">:=</span> <span class=\"op\">[]</span>Account<span class=\"op\">{</span> <span class=\"co\">/* Loaded from an external source. */</span> <span class=\"op\">}</span></span>\n<span id=\"cb22-4\"><a href=\"#cb22-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>historicalTransfers <span class=\"op\">:=</span> <span class=\"op\">[]</span>Transfer<span class=\"op\">{</span> <span class=\"co\">/* Loaded from an external source. */</span> <span class=\"op\">}</span></span>\n<span id=\"cb22-5\"><a href=\"#cb22-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-6\"><a href=\"#cb22-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// First, load and import all accounts with their timestamps from the historical source.</span></span>\n<span id=\"cb22-7\"><a href=\"#cb22-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>accountsBatch <span class=\"op\">:=</span> <span class=\"op\">[]</span>Account<span class=\"op\">{}</span></span>\n<span id=\"cb22-8\"><a href=\"#cb22-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> index<span class=\"op\">,</span> account <span class=\"op\">:=</span> <span class=\"kw\">range</span> historicalAccounts <span class=\"op\">{</span></span>\n<span id=\"cb22-9\"><a href=\"#cb22-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb22-10\"><a href=\"#cb22-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    historicalTimestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span></span>\n<span id=\"cb22-11\"><a href=\"#cb22-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account<span class=\"op\">.</span>Timestamp <span class=\"op\">=</span> historicalTimestamp</span>\n<span id=\"cb22-12\"><a href=\"#cb22-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-13\"><a href=\"#cb22-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account<span class=\"op\">.</span>Flags <span class=\"op\">=</span> AccountFlags<span class=\"op\">{</span></span>\n<span id=\"cb22-14\"><a href=\"#cb22-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// Set the account as `imported`.</span></span>\n<span id=\"cb22-15\"><a href=\"#cb22-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Imported<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">,</span></span>\n<span id=\"cb22-16\"><a href=\"#cb22-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb22-17\"><a href=\"#cb22-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// must be `linked`.</span></span>\n<span id=\"cb22-18\"><a href=\"#cb22-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Linked<span class=\"op\">:</span> index <span class=\"op\">&lt;</span> <span class=\"bu\">len</span><span class=\"op\">(</span>historicalAccounts<span class=\"op\">)-</span><span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb22-19\"><a href=\"#cb22-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}.</span>ToUint16<span class=\"op\">()</span></span>\n<span id=\"cb22-20\"><a href=\"#cb22-20\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-21\"><a href=\"#cb22-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    accountsBatch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>accountsBatch<span class=\"op\">,</span> account<span class=\"op\">)</span></span>\n<span id=\"cb22-22\"><a href=\"#cb22-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb22-23\"><a href=\"#cb22-23\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-24\"><a href=\"#cb22-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>accountErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateAccounts<span class=\"op\">(</span>accountsBatch<span class=\"op\">)</span></span>\n<span id=\"cb22-25\"><a href=\"#cb22-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb22-26\"><a href=\"#cb22-26\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-27\"><a href=\"#cb22-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Then, load and import all transfers with their timestamps from the historical source.</span></span>\n<span id=\"cb22-28\"><a href=\"#cb22-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfersBatch <span class=\"op\">:=</span> <span class=\"op\">[]</span>Transfer<span class=\"op\">{}</span></span>\n<span id=\"cb22-29\"><a href=\"#cb22-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> index<span class=\"op\">,</span> transfer <span class=\"op\">:=</span> <span class=\"kw\">range</span> historicalTransfers <span class=\"op\">{</span></span>\n<span id=\"cb22-30\"><a href=\"#cb22-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb22-31\"><a href=\"#cb22-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>    historicalTimestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span></span>\n<span id=\"cb22-32\"><a href=\"#cb22-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer<span class=\"op\">.</span>Timestamp <span class=\"op\">=</span> historicalTimestamp</span>\n<span id=\"cb22-33\"><a href=\"#cb22-33\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-34\"><a href=\"#cb22-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer<span class=\"op\">.</span>Flags <span class=\"op\">=</span> TransferFlags<span class=\"op\">{</span></span>\n<span id=\"cb22-35\"><a href=\"#cb22-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// Set the transfer as `imported`.</span></span>\n<span id=\"cb22-36\"><a href=\"#cb22-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Imported<span class=\"op\">:</span> <span class=\"ot\">true</span><span class=\"op\">,</span></span>\n<span id=\"cb22-37\"><a href=\"#cb22-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb22-38\"><a href=\"#cb22-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// must be `linked`.</span></span>\n<span id=\"cb22-39\"><a href=\"#cb22-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>        Linked<span class=\"op\">:</span> index <span class=\"op\">&lt;</span> <span class=\"bu\">len</span><span class=\"op\">(</span>historicalAccounts<span class=\"op\">)-</span><span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb22-40\"><a href=\"#cb22-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}.</span>ToUint16<span class=\"op\">()</span></span>\n<span id=\"cb22-41\"><a href=\"#cb22-41\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-42\"><a href=\"#cb22-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfersBatch <span class=\"op\">=</span> <span class=\"bu\">append</span><span class=\"op\">(</span>transfersBatch<span class=\"op\">,</span> transfer<span class=\"op\">)</span></span>\n<span id=\"cb22-43\"><a href=\"#cb22-43\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb22-44\"><a href=\"#cb22-44\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-45\"><a href=\"#cb22-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors<span class=\"op\">,</span> err <span class=\"op\">:=</span> client<span class=\"op\">.</span>CreateTransfers<span class=\"op\">(</span>transfersBatch<span class=\"op\">)</span></span>\n<span id=\"cb22-46\"><a href=\"#cb22-46\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted..</span></span>\n<span id=\"cb22-47\"><a href=\"#cb22-47\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Since it is a linked chain, in case of any error the entire batch is rolled back and can be retried</span></span>\n<span id=\"cb22-48\"><a href=\"#cb22-48\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// with the same historical timestamps without regressing the cluster timestamp.</span></span></code></pre></div>\n</div>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/src/clients/go/README.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/clients/java","html":"<!-- This file is generated by [/src/scripts/client_readmes.zig](/src/scripts/client_readmes.zig). -->\n\n<h1 id=\"tigerbeetle-java\"><a href=\"#tigerbeetle-java\"\nclass=\"anchor\">tigerbeetle-java</a></h1>\n<p>The TigerBeetle client for Java.</p>\n<p><a\nhref=\"https://javadoc.io/doc/com.tigerbeetle/tigerbeetle-java\"><img\nsrc=\"https://javadoc.io/badge2/com.tigerbeetle/tigerbeetle-java/javadoc.svg\"\nalt=\"javadoc\" /></a></p>\n<p><a href=\"https://central.sonatype.com/namespace/com.tigerbeetle\"><img\nsrc=\"https://img.shields.io/maven-central/v/com.tigerbeetle/tigerbeetle-java\"\nalt=\"maven-central\" /></a></p>\n<h2 id=\"prerequisites\"><a href=\"#prerequisites\"\nclass=\"anchor\">Prerequisites</a></h2>\n<p>Linux &gt;= 5.6 is the only production environment we support. But\nfor ease of development we also support macOS and Windows.</p>\n<ul>\n<li>Java &gt;= 11</li>\n<li>Maven &gt;= 3.6 (not strictly necessary but it’s what our guides\nassume)</li>\n</ul>\n<h2 id=\"setup\"><a href=\"#setup\" class=\"anchor\">Setup</a></h2>\n<p>First, create a directory for your project and <code>cd</code> into\nthe directory.</p>\n<p>Then create <code>pom.xml</code> and copy this into it:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode xml\"><code class=\"sourceCode xml\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;<span class=\"kw\">project</span><span class=\"ot\"> xmlns=</span><span class=\"st\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">         xmlns:xsi=</span><span class=\"st\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">         xsi:schemaLocation=</span><span class=\"st\">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;<span class=\"kw\">modelVersion</span>&gt;4.0.0&lt;/<span class=\"kw\">modelVersion</span>&gt;</span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;<span class=\"kw\">groupId</span>&gt;com.tigerbeetle&lt;/<span class=\"kw\">groupId</span>&gt;</span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;<span class=\"kw\">artifactId</span>&gt;samples&lt;/<span class=\"kw\">artifactId</span>&gt;</span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;<span class=\"kw\">version</span>&gt;1.0-SNAPSHOT&lt;/<span class=\"kw\">version</span>&gt;</span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;<span class=\"kw\">properties</span>&gt;</span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    &lt;<span class=\"kw\">maven.compiler.source</span>&gt;11&lt;/<span class=\"kw\">maven.compiler.source</span>&gt;</span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    &lt;<span class=\"kw\">maven.compiler.target</span>&gt;11&lt;/<span class=\"kw\">maven.compiler.target</span>&gt;</span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;/<span class=\"kw\">properties</span>&gt;</span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-15\"><a href=\"#cb1-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;<span class=\"kw\">build</span>&gt;</span>\n<span id=\"cb1-16\"><a href=\"#cb1-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    &lt;<span class=\"kw\">plugins</span>&gt;</span>\n<span id=\"cb1-17\"><a href=\"#cb1-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>      &lt;<span class=\"kw\">plugin</span>&gt;</span>\n<span id=\"cb1-18\"><a href=\"#cb1-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;<span class=\"kw\">groupId</span>&gt;org.apache.maven.plugins&lt;/<span class=\"kw\">groupId</span>&gt;</span>\n<span id=\"cb1-19\"><a href=\"#cb1-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;<span class=\"kw\">artifactId</span>&gt;maven-compiler-plugin&lt;/<span class=\"kw\">artifactId</span>&gt;</span>\n<span id=\"cb1-20\"><a href=\"#cb1-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;<span class=\"kw\">version</span>&gt;3.8.1&lt;/<span class=\"kw\">version</span>&gt;</span>\n<span id=\"cb1-21\"><a href=\"#cb1-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;<span class=\"kw\">configuration</span>&gt;</span>\n<span id=\"cb1-22\"><a href=\"#cb1-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>          &lt;<span class=\"kw\">compilerArgs</span>&gt;</span>\n<span id=\"cb1-23\"><a href=\"#cb1-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>            &lt;<span class=\"kw\">arg</span>&gt;-Xlint:all,-options,-path&lt;/<span class=\"kw\">arg</span>&gt;</span>\n<span id=\"cb1-24\"><a href=\"#cb1-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>          &lt;/<span class=\"kw\">compilerArgs</span>&gt;</span>\n<span id=\"cb1-25\"><a href=\"#cb1-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;/<span class=\"kw\">configuration</span>&gt;</span>\n<span id=\"cb1-26\"><a href=\"#cb1-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>      &lt;/<span class=\"kw\">plugin</span>&gt;</span>\n<span id=\"cb1-27\"><a href=\"#cb1-27\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-28\"><a href=\"#cb1-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>      &lt;<span class=\"kw\">plugin</span>&gt;</span>\n<span id=\"cb1-29\"><a href=\"#cb1-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;<span class=\"kw\">groupId</span>&gt;org.codehaus.mojo&lt;/<span class=\"kw\">groupId</span>&gt;</span>\n<span id=\"cb1-30\"><a href=\"#cb1-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;<span class=\"kw\">artifactId</span>&gt;exec-maven-plugin&lt;/<span class=\"kw\">artifactId</span>&gt;</span>\n<span id=\"cb1-31\"><a href=\"#cb1-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;<span class=\"kw\">version</span>&gt;1.6.0&lt;/<span class=\"kw\">version</span>&gt;</span>\n<span id=\"cb1-32\"><a href=\"#cb1-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;<span class=\"kw\">configuration</span>&gt;</span>\n<span id=\"cb1-33\"><a href=\"#cb1-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>          &lt;<span class=\"kw\">mainClass</span>&gt;com.tigerbeetle.samples.Main&lt;/<span class=\"kw\">mainClass</span>&gt;</span>\n<span id=\"cb1-34\"><a href=\"#cb1-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>        &lt;/<span class=\"kw\">configuration</span>&gt;</span>\n<span id=\"cb1-35\"><a href=\"#cb1-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>      &lt;/<span class=\"kw\">plugin</span>&gt;</span>\n<span id=\"cb1-36\"><a href=\"#cb1-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>    &lt;/<span class=\"kw\">plugins</span>&gt;</span>\n<span id=\"cb1-37\"><a href=\"#cb1-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;/<span class=\"kw\">build</span>&gt;</span>\n<span id=\"cb1-38\"><a href=\"#cb1-38\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-39\"><a href=\"#cb1-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;<span class=\"kw\">dependencies</span>&gt;</span>\n<span id=\"cb1-40\"><a href=\"#cb1-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>    &lt;<span class=\"kw\">dependency</span>&gt;</span>\n<span id=\"cb1-41\"><a href=\"#cb1-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>      &lt;<span class=\"kw\">groupId</span>&gt;com.tigerbeetle&lt;/<span class=\"kw\">groupId</span>&gt;</span>\n<span id=\"cb1-42\"><a href=\"#cb1-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>      &lt;<span class=\"kw\">artifactId</span>&gt;tigerbeetle-java&lt;/<span class=\"kw\">artifactId</span>&gt;</span>\n<span id=\"cb1-43\"><a href=\"#cb1-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"co\">&lt;!-- Grab the latest commit from: https://repo1.maven.org/maven2/com/tigerbeetle/tigerbeetle-java/maven-metadata.xml --&gt;</span></span>\n<span id=\"cb1-44\"><a href=\"#cb1-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>      &lt;<span class=\"kw\">version</span>&gt;0.0.1-3431&lt;/<span class=\"kw\">version</span>&gt;</span>\n<span id=\"cb1-45\"><a href=\"#cb1-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>    &lt;/<span class=\"kw\">dependency</span>&gt;</span>\n<span id=\"cb1-46\"><a href=\"#cb1-46\" aria-hidden=\"true\" tabindex=\"-1\"></a>  &lt;/<span class=\"kw\">dependencies</span>&gt;</span>\n<span id=\"cb1-47\"><a href=\"#cb1-47\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;/<span class=\"kw\">project</span>&gt;</span></code></pre></div>\n</div>\n<p>Then, install the TigerBeetle client:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>mvn install</code></pre>\n</div>\n<p>Now, create <code>src/main/java/Main.java</code> and copy this into\nit:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb3\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">import</span> <span class=\"im\">com</span><span class=\"op\">.</span><span class=\"im\">tigerbeetle</span><span class=\"op\">.*;</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">public</span> <span class=\"dt\">final</span> <span class=\"kw\">class</span> Main <span class=\"op\">{</span></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">public</span> <span class=\"dt\">static</span> <span class=\"dt\">void</span> <span class=\"fu\">main</span><span class=\"op\">(</span><span class=\"bu\">String</span><span class=\"op\">[]</span> args<span class=\"op\">)</span> <span class=\"kw\">throws</span> <span class=\"bu\">Exception</span> <span class=\"op\">{</span></span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">System</span><span class=\"op\">.</span><span class=\"fu\">out</span><span class=\"op\">.</span><span class=\"fu\">println</span><span class=\"op\">(</span><span class=\"st\">&quot;Import ok!&quot;</span><span class=\"op\">);</span></span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb3-7\"><a href=\"#cb3-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</div>\n<p>Finally, build and run:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>mvn exec:java</code></pre>\n</div>\n<p>Now that all prerequisites and dependencies are correctly set up,\nlet’s dig into using TigerBeetle.</p>\n<h2 id=\"sample-projects\"><a href=\"#sample-projects\"\nclass=\"anchor\">Sample projects</a></h2>\n<p>This document is primarily a reference guide to the client. Below are\nvarious sample projects demonstrating features of TigerBeetle.</p>\n<ul>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/java/samples/basic/\">Basic</a>:\nCreate two accounts and transfer an amount between them.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/java/samples/two-phase/\">Two-Phase\nTransfer</a>: Create two accounts and start a pending transfer between\nthem, then post the transfer.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/java/samples/two-phase-many/\">Many\nTwo-Phase Transfers</a>: Create two accounts and start a number of\npending transfers between them, posting and voiding alternating\ntransfers.</li>\n</ul>\n<h2 id=\"creating-a-client\"><a href=\"#creating-a-client\"\nclass=\"anchor\">Creating a Client</a></h2>\n<p>A client is created with a cluster ID and replica addresses for all\nreplicas in the cluster. The cluster ID and replica addresses are both\nchosen by the system that starts the TigerBeetle cluster.</p>\n<p>Clients are thread-safe and a single instance should be shared\nbetween multiple concurrent tasks. This allows events to be <a\nhref=\"/coding/requests/#batching-events\">automatically batched</a>.</p>\n<p>Multiple clients are useful when connecting to more than one\nTigerBeetle cluster.</p>\n<p>In this example the cluster ID is <code>0</code> and there is one\nreplica. The address is read from the <code>TB_ADDRESS</code>\nenvironment variable and defaults to port <code>3000</code>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb5\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">String</span> replicaAddress <span class=\"op\">=</span> <span class=\"bu\">System</span><span class=\"op\">.</span><span class=\"fu\">getenv</span><span class=\"op\">(</span><span class=\"st\">&quot;TB_ADDRESS&quot;</span><span class=\"op\">);</span></span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">byte</span><span class=\"op\">[]</span> clusterID <span class=\"op\">=</span> UInt128<span class=\"op\">.</span><span class=\"fu\">asBytes</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">String</span><span class=\"op\">[]</span> replicaAddresses <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"bu\">String</span><span class=\"op\">[]</span> <span class=\"op\">{</span>replicaAddress <span class=\"op\">==</span> <span class=\"kw\">null</span> <span class=\"op\">?</span> <span class=\"st\">&quot;3000&quot;</span> <span class=\"op\">:</span> replicaAddress<span class=\"op\">};</span></span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">try</span> <span class=\"op\">(</span><span class=\"dt\">var</span> client <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">Client</span><span class=\"op\">(</span>clusterID<span class=\"op\">,</span> replicaAddresses<span class=\"op\">))</span> <span class=\"op\">{</span></span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Use client</span></span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</div>\n<p>The following are valid addresses:</p>\n<ul>\n<li><code>3000</code> (interpreted as <code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1:3000</code> (interpreted as\n<code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1</code> (interpreted as <code>127.0.0.1:3001</code>,\n<code>3001</code> is the default port)</li>\n</ul>\n<h2 id=\"creating-accounts\"><a href=\"#creating-accounts\"\nclass=\"anchor\">Creating Accounts</a></h2>\n<p>See details for account fields in the <a\nhref=\"/reference/account\">Accounts reference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb6\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountBatch accounts <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">AccountBatch</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span>UInt128<span class=\"op\">.</span><span class=\"fu\">id</span><span class=\"op\">());</span> <span class=\"co\">// TigerBeetle time-based ID.</span></span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setUserData128</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb6-5\"><a href=\"#cb6-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setUserData64</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb6-6\"><a href=\"#cb6-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setUserData32</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb6-7\"><a href=\"#cb6-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb6-8\"><a href=\"#cb6-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">718</span><span class=\"op\">);</span></span>\n<span id=\"cb6-9\"><a href=\"#cb6-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>AccountFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb6-10\"><a href=\"#cb6-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setTimestamp</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb6-11\"><a href=\"#cb6-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-12\"><a href=\"#cb6-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateAccountResultBatch accountErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span><span class=\"op\">(</span>accounts<span class=\"op\">);</span></span>\n<span id=\"cb6-13\"><a href=\"#cb6-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<p>See details for the recommended ID scheme in <a\nhref=\"/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<p>The 128-bit fields like <code>id</code> and\n<code>user_data_128</code> have a few overrides to make it easier to\nintegrate. You can either pass in a long, a pair of longs (least and\nmost significant bits), or a <code>byte[]</code>.</p>\n<p>There is also a <code>com.tigerbeetle.UInt128</code> helper with\nstatic methods for converting 128-bit little-endian unsigned integers\nbetween instances of <code>long</code>, <code>java.util.UUID</code>,\n<code>java.math.BigInteger</code> and <code>byte[]</code>.</p>\n<p>The fields for transfer amounts and account balances are also\n128-bit, but they are always represented as a\n<code>java.math.BigInteger</code>.</p>\n<h3 id=\"account-flags\"><a href=\"#account-flags\" class=\"anchor\">Account\nFlags</a></h3>\n<p>The account flags value is a bitfield. See details for these flags in\nthe <a href=\"/reference/account#flags\">Accounts reference</a>.</p>\n<p>To toggle behavior for an account, combine enum values stored in the\n<code>AccountFlags</code> object with bitwise-or:</p>\n<ul>\n<li><code>AccountFlags.LINKED</code></li>\n<li><code>AccountFlags.DEBITS_MUST_NOT_EXCEED_CREDITS</code></li>\n<li><code>AccountFlags.CREDITS_MUST_NOT_EXCEED_CREDITS</code></li>\n<li><code>AccountFlags.HISTORY</code></li>\n</ul>\n<p>For example, to link two accounts where the first account\nadditionally has the <code>debits_must_not_exceed_credits</code>\nconstraint:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb7\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountBatch accounts <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">AccountBatch</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb7-2\"><a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-3\"><a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb7-4\"><a href=\"#cb7-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">100</span><span class=\"op\">);</span></span>\n<span id=\"cb7-5\"><a href=\"#cb7-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb7-6\"><a href=\"#cb7-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">718</span><span class=\"op\">);</span></span>\n<span id=\"cb7-7\"><a href=\"#cb7-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>AccountFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span> <span class=\"op\">|</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">DEBITS_MUST_NOT_EXCEED_CREDITS</span><span class=\"op\">);</span></span>\n<span id=\"cb7-8\"><a href=\"#cb7-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-9\"><a href=\"#cb7-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb7-10\"><a href=\"#cb7-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">);</span></span>\n<span id=\"cb7-11\"><a href=\"#cb7-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb7-12\"><a href=\"#cb7-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">718</span><span class=\"op\">);</span></span>\n<span id=\"cb7-13\"><a href=\"#cb7-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>AccountFlags<span class=\"op\">.</span><span class=\"fu\">HISTORY</span><span class=\"op\">);</span></span>\n<span id=\"cb7-14\"><a href=\"#cb7-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-15\"><a href=\"#cb7-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateAccountResultBatch accountErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span><span class=\"op\">(</span>accounts<span class=\"op\">);</span></span>\n<span id=\"cb7-16\"><a href=\"#cb7-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h3 id=\"response-and-errors\"><a href=\"#response-and-errors\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all accounts were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for an account that failed. The error\nobject contains an error code and the index of the account in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"/reference/requests/create_accounts\">create_accounts\nreference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb8\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb8-1\"><a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountBatch accounts <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">AccountBatch</span><span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">);</span></span>\n<span id=\"cb8-2\"><a href=\"#cb8-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb8-3\"><a href=\"#cb8-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb8-4\"><a href=\"#cb8-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb8-5\"><a href=\"#cb8-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb8-6\"><a href=\"#cb8-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">718</span><span class=\"op\">);</span></span>\n<span id=\"cb8-7\"><a href=\"#cb8-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>AccountFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb8-8\"><a href=\"#cb8-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb8-9\"><a href=\"#cb8-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb8-10\"><a href=\"#cb8-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb8-11\"><a href=\"#cb8-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb8-12\"><a href=\"#cb8-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">718</span><span class=\"op\">);</span></span>\n<span id=\"cb8-13\"><a href=\"#cb8-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>AccountFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb8-14\"><a href=\"#cb8-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb8-15\"><a href=\"#cb8-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb8-16\"><a href=\"#cb8-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">104</span><span class=\"op\">);</span></span>\n<span id=\"cb8-17\"><a href=\"#cb8-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb8-18\"><a href=\"#cb8-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">718</span><span class=\"op\">);</span></span>\n<span id=\"cb8-19\"><a href=\"#cb8-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>AccountFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb8-20\"><a href=\"#cb8-20\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb8-21\"><a href=\"#cb8-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateAccountResultBatch accountErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span><span class=\"op\">(</span>accounts<span class=\"op\">);</span></span>\n<span id=\"cb8-22\"><a href=\"#cb8-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">while</span> <span class=\"op\">(</span>accountErrors<span class=\"op\">.</span><span class=\"fu\">next</span><span class=\"op\">())</span> <span class=\"op\">{</span></span>\n<span id=\"cb8-23\"><a href=\"#cb8-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">switch</span> <span class=\"op\">(</span>accountErrors<span class=\"op\">.</span><span class=\"fu\">getResult</span><span class=\"op\">())</span> <span class=\"op\">{</span></span>\n<span id=\"cb8-24\"><a href=\"#cb8-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">case</span> Exists<span class=\"op\">:</span></span>\n<span id=\"cb8-25\"><a href=\"#cb8-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"bu\">System</span><span class=\"op\">.</span><span class=\"fu\">err</span><span class=\"op\">.</span><span class=\"fu\">printf</span><span class=\"op\">(</span><span class=\"st\">&quot;Batch account at </span><span class=\"sc\">%d</span><span class=\"st\"> already exists.</span><span class=\"sc\">\\n</span><span class=\"st\">&quot;</span><span class=\"op\">,</span></span>\n<span id=\"cb8-26\"><a href=\"#cb8-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>                    accountErrors<span class=\"op\">.</span><span class=\"fu\">getIndex</span><span class=\"op\">());</span></span>\n<span id=\"cb8-27\"><a href=\"#cb8-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb8-28\"><a href=\"#cb8-28\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb8-29\"><a href=\"#cb8-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"kw\">default</span><span class=\"op\">:</span></span>\n<span id=\"cb8-30\"><a href=\"#cb8-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"bu\">System</span><span class=\"op\">.</span><span class=\"fu\">err</span><span class=\"op\">.</span><span class=\"fu\">printf</span><span class=\"op\">(</span><span class=\"st\">&quot;Batch account at </span><span class=\"sc\">%d</span><span class=\"st\"> failed to create </span><span class=\"sc\">%s</span><span class=\"st\">.</span><span class=\"sc\">\\n</span><span class=\"st\">&quot;</span><span class=\"op\">,</span></span>\n<span id=\"cb8-31\"><a href=\"#cb8-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>                    accountErrors<span class=\"op\">.</span><span class=\"fu\">getIndex</span><span class=\"op\">(),</span> accountErrors<span class=\"op\">.</span><span class=\"fu\">getResult</span><span class=\"op\">());</span></span>\n<span id=\"cb8-32\"><a href=\"#cb8-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb8-33\"><a href=\"#cb8-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb8-34\"><a href=\"#cb8-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</div>\n<h2 id=\"account-lookup\"><a href=\"#account-lookup\" class=\"anchor\">Account\nLookup</a></h2>\n<p>Account lookup is batched, like account creation. Pass in all IDs to\nfetch. The account for each matched ID is returned.</p>\n<p>If no account matches an ID, no object is returned for that account.\nSo the order of accounts in the response is not necessarily the same as\nthe order of IDs in the request. You can refer to the ID field in the\nresponse to distinguish accounts.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb9\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>IdBatch ids <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">IdBatch</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb9-2\"><a href=\"#cb9-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ids<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">(</span><span class=\"dv\">100</span><span class=\"op\">);</span></span>\n<span id=\"cb9-3\"><a href=\"#cb9-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>ids<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">(</span><span class=\"dv\">101</span><span class=\"op\">);</span></span>\n<span id=\"cb9-4\"><a href=\"#cb9-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb9-5\"><a href=\"#cb9-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountBatch accounts <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">lookupAccounts</span><span class=\"op\">(</span>ids<span class=\"op\">);</span></span></code></pre></div>\n</div>\n<h2 id=\"create-transfers\"><a href=\"#create-transfers\"\nclass=\"anchor\">Create Transfers</a></h2>\n<p>This creates a journal entry between two accounts.</p>\n<p>See details for transfer fields in the <a\nhref=\"/reference/transfer\">Transfers reference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb10\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb10-1\"><a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb10-2\"><a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb10-3\"><a href=\"#cb10-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb10-4\"><a href=\"#cb10-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span>UInt128<span class=\"op\">.</span><span class=\"fu\">id</span><span class=\"op\">());</span></span>\n<span id=\"cb10-5\"><a href=\"#cb10-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb10-6\"><a href=\"#cb10-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb10-7\"><a href=\"#cb10-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb10-8\"><a href=\"#cb10-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setUserData128</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb10-9\"><a href=\"#cb10-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setUserData64</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb10-10\"><a href=\"#cb10-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setUserData32</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb10-11\"><a href=\"#cb10-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setTimeout</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb10-12\"><a href=\"#cb10-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb10-13\"><a href=\"#cb10-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb10-14\"><a href=\"#cb10-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb10-15\"><a href=\"#cb10-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setTimeout</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb10-16\"><a href=\"#cb10-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb10-17\"><a href=\"#cb10-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb10-18\"><a href=\"#cb10-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<p>See details for the recommended ID scheme in <a\nhref=\"/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<h3 id=\"response-and-errors-1\"><a href=\"#response-and-errors-1\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all transfers were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for a transfer that failed. The error\nobject contains an error code and the index of the transfer in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"/reference/requests/create_transfers\">create_transfers\nreference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb11\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">);</span></span>\n<span id=\"cb11-2\"><a href=\"#cb11-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb11-3\"><a href=\"#cb11-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb11-4\"><a href=\"#cb11-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb11-5\"><a href=\"#cb11-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb11-6\"><a href=\"#cb11-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb11-7\"><a href=\"#cb11-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb11-8\"><a href=\"#cb11-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb11-9\"><a href=\"#cb11-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb11-10\"><a href=\"#cb11-10\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb11-11\"><a href=\"#cb11-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb11-12\"><a href=\"#cb11-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb11-13\"><a href=\"#cb11-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb11-14\"><a href=\"#cb11-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb11-15\"><a href=\"#cb11-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb11-16\"><a href=\"#cb11-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb11-17\"><a href=\"#cb11-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb11-18\"><a href=\"#cb11-18\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb11-19\"><a href=\"#cb11-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb11-20\"><a href=\"#cb11-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">);</span></span>\n<span id=\"cb11-21\"><a href=\"#cb11-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb11-22\"><a href=\"#cb11-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb11-23\"><a href=\"#cb11-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb11-24\"><a href=\"#cb11-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb11-25\"><a href=\"#cb11-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb11-26\"><a href=\"#cb11-26\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb11-27\"><a href=\"#cb11-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb11-28\"><a href=\"#cb11-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">while</span> <span class=\"op\">(</span>transferErrors<span class=\"op\">.</span><span class=\"fu\">next</span><span class=\"op\">())</span> <span class=\"op\">{</span></span>\n<span id=\"cb11-29\"><a href=\"#cb11-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">switch</span> <span class=\"op\">(</span>transferErrors<span class=\"op\">.</span><span class=\"fu\">getResult</span><span class=\"op\">())</span> <span class=\"op\">{</span></span>\n<span id=\"cb11-30\"><a href=\"#cb11-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">case</span> ExceedsCredits<span class=\"op\">:</span></span>\n<span id=\"cb11-31\"><a href=\"#cb11-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"bu\">System</span><span class=\"op\">.</span><span class=\"fu\">err</span><span class=\"op\">.</span><span class=\"fu\">printf</span><span class=\"op\">(</span><span class=\"st\">&quot;Batch transfer at </span><span class=\"sc\">%d</span><span class=\"st\"> already exists.</span><span class=\"sc\">\\n</span><span class=\"st\">&quot;</span><span class=\"op\">,</span></span>\n<span id=\"cb11-32\"><a href=\"#cb11-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>                    transferErrors<span class=\"op\">.</span><span class=\"fu\">getIndex</span><span class=\"op\">());</span></span>\n<span id=\"cb11-33\"><a href=\"#cb11-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb11-34\"><a href=\"#cb11-34\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb11-35\"><a href=\"#cb11-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"kw\">default</span><span class=\"op\">:</span></span>\n<span id=\"cb11-36\"><a href=\"#cb11-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"bu\">System</span><span class=\"op\">.</span><span class=\"fu\">err</span><span class=\"op\">.</span><span class=\"fu\">printf</span><span class=\"op\">(</span><span class=\"st\">&quot;Batch transfer at </span><span class=\"sc\">%d</span><span class=\"st\"> failed to create: </span><span class=\"sc\">%s\\n</span><span class=\"st\">&quot;</span><span class=\"op\">,</span></span>\n<span id=\"cb11-37\"><a href=\"#cb11-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>                    transferErrors<span class=\"op\">.</span><span class=\"fu\">getIndex</span><span class=\"op\">(),</span> transferErrors<span class=\"op\">.</span><span class=\"fu\">getResult</span><span class=\"op\">());</span></span>\n<span id=\"cb11-38\"><a href=\"#cb11-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb11-39\"><a href=\"#cb11-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb11-40\"><a href=\"#cb11-40\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</div>\n<h2 id=\"batching\"><a href=\"#batching\" class=\"anchor\">Batching</a></h2>\n<p>TigerBeetle performance is maximized when you batch API requests. A\nclient instance shared across multiple threads/tasks can automatically\nbatch concurrent requests, but the application must still send as many\nevents as possible in a single call. For example, if you insert 1\nmillion transfers sequentially, one at a time, the insert rate will be a\n<em>fraction</em> of the potential, because the client will wait for a\nreply between each one.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb12\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb12-1\"><a href=\"#cb12-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">ResultSet</span> dataSource <span class=\"op\">=</span> <span class=\"kw\">null</span><span class=\"op\">;</span> <span class=\"co\">/* Loaded from an external source. */</span><span class=\"op\">;</span></span>\n<span id=\"cb12-2\"><a href=\"#cb12-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">while</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">next</span><span class=\"op\">())</span> <span class=\"op\">{</span></span>\n<span id=\"cb12-3\"><a href=\"#cb12-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    TransferBatch batch <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb12-4\"><a href=\"#cb12-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb12-5\"><a href=\"#cb12-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb12-6\"><a href=\"#cb12-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb12-7\"><a href=\"#cb12-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;debit_account_id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb12-8\"><a href=\"#cb12-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;credit_account_id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb12-9\"><a href=\"#cb12-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getBigDecimal</span><span class=\"op\">(</span><span class=\"st\">&quot;amount&quot;</span><span class=\"op\">).</span><span class=\"fu\">toBigInteger</span><span class=\"op\">());</span></span>\n<span id=\"cb12-10\"><a href=\"#cb12-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getInt</span><span class=\"op\">(</span><span class=\"st\">&quot;ledger&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb12-11\"><a href=\"#cb12-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getInt</span><span class=\"op\">(</span><span class=\"st\">&quot;code&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb12-12\"><a href=\"#cb12-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb12-13\"><a href=\"#cb12-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>batch<span class=\"op\">);</span></span>\n<span id=\"cb12-14\"><a href=\"#cb12-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb12-15\"><a href=\"#cb12-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</div>\n<p>Instead, <strong>always batch as much as you can</strong>. The\nmaximum batch size is set in the TigerBeetle server. The default is\n8189.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb13\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb13-1\"><a href=\"#cb13-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">ResultSet</span> dataSource <span class=\"op\">=</span> <span class=\"kw\">null</span><span class=\"op\">;</span> <span class=\"co\">/* Loaded from an external source. */</span><span class=\"op\">;</span></span>\n<span id=\"cb13-2\"><a href=\"#cb13-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb13-3\"><a href=\"#cb13-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> BATCH_SIZE <span class=\"op\">=</span> <span class=\"dv\">8189</span><span class=\"op\">;</span></span>\n<span id=\"cb13-4\"><a href=\"#cb13-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch batch <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span>BATCH_SIZE<span class=\"op\">);</span></span>\n<span id=\"cb13-5\"><a href=\"#cb13-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">while</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">next</span><span class=\"op\">())</span> <span class=\"op\">{</span></span>\n<span id=\"cb13-6\"><a href=\"#cb13-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb13-7\"><a href=\"#cb13-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb13-8\"><a href=\"#cb13-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;debit_account_id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb13-9\"><a href=\"#cb13-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;credit_account_id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb13-10\"><a href=\"#cb13-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getBigDecimal</span><span class=\"op\">(</span><span class=\"st\">&quot;amount&quot;</span><span class=\"op\">).</span><span class=\"fu\">toBigInteger</span><span class=\"op\">());</span></span>\n<span id=\"cb13-11\"><a href=\"#cb13-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getInt</span><span class=\"op\">(</span><span class=\"st\">&quot;ledger&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb13-12\"><a href=\"#cb13-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span>dataSource<span class=\"op\">.</span><span class=\"fu\">getInt</span><span class=\"op\">(</span><span class=\"st\">&quot;code&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb13-13\"><a href=\"#cb13-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb13-14\"><a href=\"#cb13-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> <span class=\"op\">(</span>batch<span class=\"op\">.</span><span class=\"fu\">getLength</span><span class=\"op\">()</span> <span class=\"op\">==</span> BATCH_SIZE<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb13-15\"><a href=\"#cb13-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>        CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>batch<span class=\"op\">);</span></span>\n<span id=\"cb13-16\"><a href=\"#cb13-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb13-17\"><a href=\"#cb13-17\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb13-18\"><a href=\"#cb13-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// Reset the batch for the next iteration.</span></span>\n<span id=\"cb13-19\"><a href=\"#cb13-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>        batch<span class=\"op\">.</span><span class=\"fu\">beforeFirst</span><span class=\"op\">();</span></span>\n<span id=\"cb13-20\"><a href=\"#cb13-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb13-21\"><a href=\"#cb13-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb13-22\"><a href=\"#cb13-22\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb13-23\"><a href=\"#cb13-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> <span class=\"op\">(</span>batch<span class=\"op\">.</span><span class=\"fu\">getLength</span><span class=\"op\">()</span> <span class=\"op\">&gt;</span> <span class=\"dv\">0</span><span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb13-24\"><a href=\"#cb13-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Send the remaining items.</span></span>\n<span id=\"cb13-25\"><a href=\"#cb13-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>batch<span class=\"op\">);</span></span>\n<span id=\"cb13-26\"><a href=\"#cb13-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb13-27\"><a href=\"#cb13-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</div>\n<h3 id=\"queues-and-workers\"><a href=\"#queues-and-workers\"\nclass=\"anchor\">Queues and Workers</a></h3>\n<p>If you are making requests to TigerBeetle from workers pulling jobs\nfrom a queue, you can batch requests to TigerBeetle by having the worker\nact on multiple jobs from the queue at once rather than one at a time.\ni.e. pulling multiple jobs from the queue rather than just one.</p>\n<h2 id=\"transfer-flags\"><a href=\"#transfer-flags\"\nclass=\"anchor\">Transfer Flags</a></h2>\n<p>The transfer <code>flags</code> value is a bitfield. See details for\nthese flags in the <a href=\"/reference/transfer#flags\">Transfers\nreference</a>.</p>\n<p>To toggle behavior for an account, combine enum values stored in the\n<code>TransferFlags</code> object with bitwise-or:</p>\n<ul>\n<li><code>TransferFlags.NONE</code></li>\n<li><code>TransferFlags.LINKED</code></li>\n<li><code>TransferFlags.PENDING</code></li>\n<li><code>TransferFlags.POST_PENDING_TRANSFER</code></li>\n<li><code>TransferFlags.VOID_PENDING_TRANSFER</code></li>\n</ul>\n<p>For example, to link <code>transfer0</code> and\n<code>transfer1</code>:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb14\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb14-1\"><a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb14-2\"><a href=\"#cb14-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-3\"><a href=\"#cb14-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// First transfer</span></span>\n<span id=\"cb14-4\"><a href=\"#cb14-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb14-5\"><a href=\"#cb14-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">4</span><span class=\"op\">);</span></span>\n<span id=\"cb14-6\"><a href=\"#cb14-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb14-7\"><a href=\"#cb14-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb14-8\"><a href=\"#cb14-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb14-9\"><a href=\"#cb14-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb14-10\"><a href=\"#cb14-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb14-11\"><a href=\"#cb14-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span><span class=\"op\">);</span></span>\n<span id=\"cb14-12\"><a href=\"#cb14-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-13\"><a href=\"#cb14-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb14-14\"><a href=\"#cb14-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">5</span><span class=\"op\">);</span></span>\n<span id=\"cb14-15\"><a href=\"#cb14-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb14-16\"><a href=\"#cb14-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb14-17\"><a href=\"#cb14-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb14-18\"><a href=\"#cb14-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb14-19\"><a href=\"#cb14-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb14-20\"><a href=\"#cb14-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb14-21\"><a href=\"#cb14-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-22\"><a href=\"#cb14-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb14-23\"><a href=\"#cb14-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h3 id=\"two-phase-transfers\"><a href=\"#two-phase-transfers\"\nclass=\"anchor\">Two-Phase Transfers</a></h3>\n<p>Two-phase transfers are supported natively by toggling the\nappropriate flag. TigerBeetle will then adjust the\n<code>credits_pending</code> and <code>debits_pending</code> fields of\nthe appropriate accounts. A corresponding post pending transfer then\nneeds to be sent to post or void the transfer.</p>\n<h4 id=\"post-a-pending-transfer\"><a href=\"#post-a-pending-transfer\"\nclass=\"anchor\">Post a Pending Transfer</a></h4>\n<p>With <code>flags</code> set to <code>post_pending_transfer</code>,\nTigerBeetle will post the transfer. TigerBeetle will atomically roll\nback the changes to <code>debits_pending</code> and\n<code>credits_pending</code> of the appropriate accounts and apply them\nto the <code>debits_posted</code> and <code>credits_posted</code>\nbalances.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb15\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb15-1\"><a href=\"#cb15-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb15-2\"><a href=\"#cb15-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-3\"><a href=\"#cb15-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb15-4\"><a href=\"#cb15-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">6</span><span class=\"op\">);</span></span>\n<span id=\"cb15-5\"><a href=\"#cb15-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb15-6\"><a href=\"#cb15-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb15-7\"><a href=\"#cb15-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb15-8\"><a href=\"#cb15-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb15-9\"><a href=\"#cb15-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb15-10\"><a href=\"#cb15-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">PENDING</span><span class=\"op\">);</span></span>\n<span id=\"cb15-11\"><a href=\"#cb15-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-12\"><a href=\"#cb15-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb15-13\"><a href=\"#cb15-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb15-14\"><a href=\"#cb15-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-15\"><a href=\"#cb15-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb15-16\"><a href=\"#cb15-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-17\"><a href=\"#cb15-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb15-18\"><a href=\"#cb15-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">7</span><span class=\"op\">);</span></span>\n<span id=\"cb15-19\"><a href=\"#cb15-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span>TransferBatch<span class=\"op\">.</span><span class=\"fu\">AMOUNT_MAX</span><span class=\"op\">);</span></span>\n<span id=\"cb15-20\"><a href=\"#cb15-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setPendingId</span><span class=\"op\">(</span><span class=\"dv\">6</span><span class=\"op\">);</span></span>\n<span id=\"cb15-21\"><a href=\"#cb15-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">POST_PENDING_TRANSFER</span><span class=\"op\">);</span></span>\n<span id=\"cb15-22\"><a href=\"#cb15-22\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-23\"><a href=\"#cb15-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb15-24\"><a href=\"#cb15-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h4 id=\"void-a-pending-transfer\"><a href=\"#void-a-pending-transfer\"\nclass=\"anchor\">Void a Pending Transfer</a></h4>\n<p>In contrast, with <code>flags</code> set to\n<code>void_pending_transfer</code>, TigerBeetle will void the transfer.\nTigerBeetle will roll back the changes to <code>debits_pending</code>\nand <code>credits_pending</code> of the appropriate accounts and\n<strong>not</strong> apply them to the <code>debits_posted</code> and\n<code>credits_posted</code> balances.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb16\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb16-1\"><a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb16-2\"><a href=\"#cb16-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb16-3\"><a href=\"#cb16-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb16-4\"><a href=\"#cb16-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">8</span><span class=\"op\">);</span></span>\n<span id=\"cb16-5\"><a href=\"#cb16-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span><span class=\"dv\">102</span><span class=\"op\">);</span></span>\n<span id=\"cb16-6\"><a href=\"#cb16-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span><span class=\"dv\">103</span><span class=\"op\">);</span></span>\n<span id=\"cb16-7\"><a href=\"#cb16-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb16-8\"><a href=\"#cb16-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb16-9\"><a href=\"#cb16-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb16-10\"><a href=\"#cb16-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">PENDING</span><span class=\"op\">);</span></span>\n<span id=\"cb16-11\"><a href=\"#cb16-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb16-12\"><a href=\"#cb16-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb16-13\"><a href=\"#cb16-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb16-14\"><a href=\"#cb16-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb16-15\"><a href=\"#cb16-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb16-16\"><a href=\"#cb16-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb16-17\"><a href=\"#cb16-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb16-18\"><a href=\"#cb16-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">9</span><span class=\"op\">);</span></span>\n<span id=\"cb16-19\"><a href=\"#cb16-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb16-20\"><a href=\"#cb16-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setPendingId</span><span class=\"op\">(</span><span class=\"dv\">8</span><span class=\"op\">);</span></span>\n<span id=\"cb16-21\"><a href=\"#cb16-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">VOID_PENDING_TRANSFER</span><span class=\"op\">);</span></span>\n<span id=\"cb16-22\"><a href=\"#cb16-22\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb16-23\"><a href=\"#cb16-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb16-24\"><a href=\"#cb16-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h2 id=\"transfer-lookup\"><a href=\"#transfer-lookup\"\nclass=\"anchor\">Transfer Lookup</a></h2>\n<p>NOTE: While transfer lookup exists, it is not a flexible query API.\nWe are developing query APIs and there will be new methods for querying\ntransfers in the future.</p>\n<p>Transfer lookup is batched, like transfer creation. Pass in all\n<code>id</code>s to fetch, and matched transfers are returned.</p>\n<p>If no transfer matches an <code>id</code>, no object is returned for\nthat transfer. So the order of transfers in the response is not\nnecessarily the same as the order of <code>id</code>s in the request.\nYou can refer to the <code>id</code> field in the response to\ndistinguish transfers.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb17\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb17-1\"><a href=\"#cb17-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>IdBatch ids <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">IdBatch</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb17-2\"><a href=\"#cb17-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ids<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb17-3\"><a href=\"#cb17-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>ids<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb17-4\"><a href=\"#cb17-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb17-5\"><a href=\"#cb17-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">lookupTransfers</span><span class=\"op\">(</span>ids<span class=\"op\">);</span></span></code></pre></div>\n</div>\n<h2 id=\"get-account-transfers\"><a href=\"#get-account-transfers\"\nclass=\"anchor\">Get Account Transfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the transfers involving a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb18\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb18-1\"><a href=\"#cb18-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountFilter filter <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">AccountFilter</span><span class=\"op\">();</span></span>\n<span id=\"cb18-2\"><a href=\"#cb18-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setAccountId</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb18-3\"><a href=\"#cb18-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData128</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by UserData.</span></span>\n<span id=\"cb18-4\"><a href=\"#cb18-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData64</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb18-5\"><a href=\"#cb18-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData32</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb18-6\"><a href=\"#cb18-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Code.</span></span>\n<span id=\"cb18-7\"><a href=\"#cb18-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setTimestampMin</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb18-8\"><a href=\"#cb18-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setTimestampMax</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb18-9\"><a href=\"#cb18-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setLimit</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span> <span class=\"co\">// Limit to ten transfers at most.</span></span>\n<span id=\"cb18-10\"><a href=\"#cb18-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setDebits</span><span class=\"op\">(</span><span class=\"kw\">true</span><span class=\"op\">);</span> <span class=\"co\">// Include transfer from the debit side.</span></span>\n<span id=\"cb18-11\"><a href=\"#cb18-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setCredits</span><span class=\"op\">(</span><span class=\"kw\">true</span><span class=\"op\">);</span> <span class=\"co\">// Include transfer from the credit side.</span></span>\n<span id=\"cb18-12\"><a href=\"#cb18-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setReversed</span><span class=\"op\">(</span><span class=\"kw\">true</span><span class=\"op\">);</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb18-13\"><a href=\"#cb18-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb18-14\"><a href=\"#cb18-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">getAccountTransfers</span><span class=\"op\">(</span>filter<span class=\"op\">);</span></span></code></pre></div>\n</div>\n<h2 id=\"get-account-balances\"><a href=\"#get-account-balances\"\nclass=\"anchor\">Get Account Balances</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the point-in-time balances of a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>Only accounts created with the flag <a\nhref=\"/reference/account#flagshistory\"><code>history</code></a> set\nretain <a href=\"/reference/requests/get_account_balances\">historical\nbalances</a>.</p>\n<p>The balances in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb19\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb19-1\"><a href=\"#cb19-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountFilter filter <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">AccountFilter</span><span class=\"op\">();</span></span>\n<span id=\"cb19-2\"><a href=\"#cb19-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setAccountId</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb19-3\"><a href=\"#cb19-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData128</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by UserData.</span></span>\n<span id=\"cb19-4\"><a href=\"#cb19-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData64</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb19-5\"><a href=\"#cb19-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData32</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span></span>\n<span id=\"cb19-6\"><a href=\"#cb19-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Code.</span></span>\n<span id=\"cb19-7\"><a href=\"#cb19-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setTimestampMin</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb19-8\"><a href=\"#cb19-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setTimestampMax</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb19-9\"><a href=\"#cb19-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setLimit</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb19-10\"><a href=\"#cb19-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setDebits</span><span class=\"op\">(</span><span class=\"kw\">true</span><span class=\"op\">);</span> <span class=\"co\">// Include transfer from the debit side.</span></span>\n<span id=\"cb19-11\"><a href=\"#cb19-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setCredits</span><span class=\"op\">(</span><span class=\"kw\">true</span><span class=\"op\">);</span> <span class=\"co\">// Include transfer from the credit side.</span></span>\n<span id=\"cb19-12\"><a href=\"#cb19-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setReversed</span><span class=\"op\">(</span><span class=\"kw\">true</span><span class=\"op\">);</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb19-13\"><a href=\"#cb19-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb19-14\"><a href=\"#cb19-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountBalanceBatch account_balances <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">getAccountBalances</span><span class=\"op\">(</span>filter<span class=\"op\">);</span></span></code></pre></div>\n</div>\n<h2 id=\"query-accounts\"><a href=\"#query-accounts\" class=\"anchor\">Query\nAccounts</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query accounts by the intersection of some fields and by timestamp\nrange.</p>\n<p>The accounts in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb20\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb20-1\"><a href=\"#cb20-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>QueryFilter filter <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">QueryFilter</span><span class=\"op\">();</span></span>\n<span id=\"cb20-2\"><a href=\"#cb20-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData128</span><span class=\"op\">(</span><span class=\"dv\">1000</span><span class=\"op\">);</span> <span class=\"co\">// Filter by UserData.</span></span>\n<span id=\"cb20-3\"><a href=\"#cb20-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData64</span><span class=\"op\">(</span><span class=\"dv\">100</span><span class=\"op\">);</span></span>\n<span id=\"cb20-4\"><a href=\"#cb20-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData32</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb20-5\"><a href=\"#cb20-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span> <span class=\"co\">// Filter by Code.</span></span>\n<span id=\"cb20-6\"><a href=\"#cb20-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Ledger.</span></span>\n<span id=\"cb20-7\"><a href=\"#cb20-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setTimestampMin</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb20-8\"><a href=\"#cb20-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setTimestampMax</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb20-9\"><a href=\"#cb20-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setLimit</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb20-10\"><a href=\"#cb20-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setReversed</span><span class=\"op\">(</span><span class=\"kw\">true</span><span class=\"op\">);</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb20-11\"><a href=\"#cb20-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb20-12\"><a href=\"#cb20-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountBatch accounts <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">queryAccounts</span><span class=\"op\">(</span>filter<span class=\"op\">);</span></span></code></pre></div>\n</div>\n<h2 id=\"query-transfers\"><a href=\"#query-transfers\" class=\"anchor\">Query\nTransfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query transfers by the intersection of some fields and by timestamp\nrange.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb21\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb21-1\"><a href=\"#cb21-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>QueryFilter filter <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">QueryFilter</span><span class=\"op\">();</span></span>\n<span id=\"cb21-2\"><a href=\"#cb21-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData128</span><span class=\"op\">(</span><span class=\"dv\">1000</span><span class=\"op\">);</span> <span class=\"co\">// Filter by UserData.</span></span>\n<span id=\"cb21-3\"><a href=\"#cb21-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData64</span><span class=\"op\">(</span><span class=\"dv\">100</span><span class=\"op\">);</span></span>\n<span id=\"cb21-4\"><a href=\"#cb21-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setUserData32</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb21-5\"><a href=\"#cb21-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span> <span class=\"co\">// Filter by Code.</span></span>\n<span id=\"cb21-6\"><a href=\"#cb21-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Ledger.</span></span>\n<span id=\"cb21-7\"><a href=\"#cb21-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setTimestampMin</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb21-8\"><a href=\"#cb21-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setTimestampMax</span><span class=\"op\">(</span><span class=\"dv\">0</span><span class=\"op\">);</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb21-9\"><a href=\"#cb21-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setLimit</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb21-10\"><a href=\"#cb21-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>filter<span class=\"op\">.</span><span class=\"fu\">setReversed</span><span class=\"op\">(</span><span class=\"kw\">true</span><span class=\"op\">);</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb21-11\"><a href=\"#cb21-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-12\"><a href=\"#cb21-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">queryTransfers</span><span class=\"op\">(</span>filter<span class=\"op\">);</span></span></code></pre></div>\n</div>\n<h2 id=\"linked-events\"><a href=\"#linked-events\" class=\"anchor\">Linked\nEvents</a></h2>\n<p>When the <code>linked</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it links that\nevent with the next event in the batch, to create a chain of events, of\narbitrary length, which all succeed or fail together. The tail of a\nchain is denoted by the first event without this flag. The last event in\na batch may therefore never have the <code>linked</code> flag set as\nthis would leave a chain open-ended. Multiple chains or individual\nevents may coexist within a batch to succeed or fail independently.</p>\n<p>Events within a chain are executed within order, or are rolled back\non error, so that the effect of each event in the chain is visible to\nthe next, and so that the chain is either visible or invisible as a unit\nto subsequent events after the chain. The event that was the first to\nbreak the chain will have a unique error result. Other events in the\nchain will have their error result set to\n<code>linked_event_failed</code>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb22\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb22-1\"><a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span><span class=\"dv\">10</span><span class=\"op\">);</span></span>\n<span id=\"cb22-2\"><a href=\"#cb22-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-3\"><a href=\"#cb22-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// An individual transfer (successful):</span></span>\n<span id=\"cb22-4\"><a href=\"#cb22-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-5\"><a href=\"#cb22-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">1</span><span class=\"op\">);</span></span>\n<span id=\"cb22-6\"><a href=\"#cb22-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-7\"><a href=\"#cb22-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb22-8\"><a href=\"#cb22-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-9\"><a href=\"#cb22-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 4 transfers (the last transfer in the chain closes the chain with</span></span>\n<span id=\"cb22-10\"><a href=\"#cb22-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// linked=false):</span></span>\n<span id=\"cb22-11\"><a href=\"#cb22-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-12\"><a href=\"#cb22-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span> <span class=\"co\">// Commit/rollback.</span></span>\n<span id=\"cb22-13\"><a href=\"#cb22-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-14\"><a href=\"#cb22-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span><span class=\"op\">);</span></span>\n<span id=\"cb22-15\"><a href=\"#cb22-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-16\"><a href=\"#cb22-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">);</span> <span class=\"co\">// Commit/rollback.</span></span>\n<span id=\"cb22-17\"><a href=\"#cb22-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-18\"><a href=\"#cb22-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span><span class=\"op\">);</span></span>\n<span id=\"cb22-19\"><a href=\"#cb22-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-20\"><a href=\"#cb22-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span> <span class=\"co\">// Fail with exists</span></span>\n<span id=\"cb22-21\"><a href=\"#cb22-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-22\"><a href=\"#cb22-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span><span class=\"op\">);</span></span>\n<span id=\"cb22-23\"><a href=\"#cb22-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-24\"><a href=\"#cb22-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">4</span><span class=\"op\">);</span> <span class=\"co\">// Fail without committing</span></span>\n<span id=\"cb22-25\"><a href=\"#cb22-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-26\"><a href=\"#cb22-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb22-27\"><a href=\"#cb22-27\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-28\"><a href=\"#cb22-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// An individual transfer (successful):</span></span>\n<span id=\"cb22-29\"><a href=\"#cb22-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// This should not see any effect from the failed chain above.</span></span>\n<span id=\"cb22-30\"><a href=\"#cb22-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-31\"><a href=\"#cb22-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb22-32\"><a href=\"#cb22-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-33\"><a href=\"#cb22-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb22-34\"><a href=\"#cb22-34\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-35\"><a href=\"#cb22-35\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 2 transfers (the first transfer fails the chain):</span></span>\n<span id=\"cb22-36\"><a href=\"#cb22-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-37\"><a href=\"#cb22-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb22-38\"><a href=\"#cb22-38\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-39\"><a href=\"#cb22-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span><span class=\"op\">);</span></span>\n<span id=\"cb22-40\"><a href=\"#cb22-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-41\"><a href=\"#cb22-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">);</span></span>\n<span id=\"cb22-42\"><a href=\"#cb22-42\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-43\"><a href=\"#cb22-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb22-44\"><a href=\"#cb22-44\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 2 transfers (successful):</span></span>\n<span id=\"cb22-45\"><a href=\"#cb22-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-46\"><a href=\"#cb22-46\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">3</span><span class=\"op\">);</span></span>\n<span id=\"cb22-47\"><a href=\"#cb22-47\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-48\"><a href=\"#cb22-48\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span><span class=\"op\">);</span></span>\n<span id=\"cb22-49\"><a href=\"#cb22-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb22-50\"><a href=\"#cb22-50\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span><span class=\"dv\">4</span><span class=\"op\">);</span></span>\n<span id=\"cb22-51\"><a href=\"#cb22-51\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// ... rest of transfer ...</span></span>\n<span id=\"cb22-52\"><a href=\"#cb22-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">NONE</span><span class=\"op\">);</span></span>\n<span id=\"cb22-53\"><a href=\"#cb22-53\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-54\"><a href=\"#cb22-54\" aria-hidden=\"true\" tabindex=\"-1\"></a>CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb22-55\"><a href=\"#cb22-55\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h2 id=\"imported-events\"><a href=\"#imported-events\"\nclass=\"anchor\">Imported Events</a></h2>\n<p>When the <code>imported</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it allows\nimporting historical events with a user-defined timestamp.</p>\n<p>The entire batch of events must be set with the flag\n<code>imported</code>.</p>\n<p>It’s recommended to submit the whole batch as a <code>linked</code>\nchain of events, ensuring that if any event fails, none of them are\ncommitted, preserving the last timestamp unchanged. This approach gives\nthe application a chance to correct failed imported events,\nre-submitting the batch again with the same user-defined timestamps.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb23\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb23-1\"><a href=\"#cb23-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// External source of time</span></span>\n<span id=\"cb23-2\"><a href=\"#cb23-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">long</span> historicalTimestamp <span class=\"op\">=</span> <span class=\"dv\">0L</span><span class=\"op\">;</span></span>\n<span id=\"cb23-3\"><a href=\"#cb23-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">ResultSet</span> historicalAccounts <span class=\"op\">=</span> <span class=\"kw\">null</span><span class=\"op\">;</span> <span class=\"co\">// Loaded from an external source;</span></span>\n<span id=\"cb23-4\"><a href=\"#cb23-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">ResultSet</span> historicalTransfers <span class=\"op\">=</span> <span class=\"kw\">null</span> <span class=\"op\">;</span> <span class=\"co\">// Loaded from an external source.</span></span>\n<span id=\"cb23-5\"><a href=\"#cb23-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-6\"><a href=\"#cb23-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">var</span> BATCH_SIZE <span class=\"op\">=</span> <span class=\"dv\">8189</span><span class=\"op\">;</span></span>\n<span id=\"cb23-7\"><a href=\"#cb23-7\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-8\"><a href=\"#cb23-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// First, load and import all accounts with their timestamps from the historical source.</span></span>\n<span id=\"cb23-9\"><a href=\"#cb23-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>AccountBatch accounts <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">AccountBatch</span><span class=\"op\">(</span>BATCH_SIZE<span class=\"op\">);</span></span>\n<span id=\"cb23-10\"><a href=\"#cb23-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">while</span> <span class=\"op\">(</span>historicalAccounts<span class=\"op\">.</span><span class=\"fu\">next</span><span class=\"op\">())</span> <span class=\"op\">{</span></span>\n<span id=\"cb23-11\"><a href=\"#cb23-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb23-12\"><a href=\"#cb23-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    historicalTimestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span><span class=\"op\">;</span></span>\n<span id=\"cb23-13\"><a href=\"#cb23-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-14\"><a href=\"#cb23-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    accounts<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb23-15\"><a href=\"#cb23-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    accounts<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span>historicalAccounts<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb23-16\"><a href=\"#cb23-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    accounts<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span>historicalAccounts<span class=\"op\">.</span><span class=\"fu\">getInt</span><span class=\"op\">(</span><span class=\"st\">&quot;ledger&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb23-17\"><a href=\"#cb23-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    accounts<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span>historicalAccounts<span class=\"op\">.</span><span class=\"fu\">getInt</span><span class=\"op\">(</span><span class=\"st\">&quot;code&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb23-18\"><a href=\"#cb23-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    accounts<span class=\"op\">.</span><span class=\"fu\">setTimestamp</span><span class=\"op\">(</span>historicalTimestamp<span class=\"op\">);</span></span>\n<span id=\"cb23-19\"><a href=\"#cb23-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-20\"><a href=\"#cb23-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set the account as `imported`.</span></span>\n<span id=\"cb23-21\"><a href=\"#cb23-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb23-22\"><a href=\"#cb23-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// must be `linked`.</span></span>\n<span id=\"cb23-23\"><a href=\"#cb23-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> <span class=\"op\">(</span>accounts<span class=\"op\">.</span><span class=\"fu\">getLength</span><span class=\"op\">()</span> <span class=\"op\">&lt;</span> BATCH_SIZE<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb23-24\"><a href=\"#cb23-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>        accounts<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>AccountFlags<span class=\"op\">.</span><span class=\"fu\">IMPORTED</span> <span class=\"op\">|</span> AccountFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span><span class=\"op\">);</span></span>\n<span id=\"cb23-25\"><a href=\"#cb23-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span> <span class=\"cf\">else</span> <span class=\"op\">{</span></span>\n<span id=\"cb23-26\"><a href=\"#cb23-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>        accounts<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>AccountFlags<span class=\"op\">.</span><span class=\"fu\">IMPORTED</span><span class=\"op\">);</span></span>\n<span id=\"cb23-27\"><a href=\"#cb23-27\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-28\"><a href=\"#cb23-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>        CreateAccountResultBatch accountsErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span><span class=\"op\">(</span>accounts<span class=\"op\">);</span></span>\n<span id=\"cb23-29\"><a href=\"#cb23-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb23-30\"><a href=\"#cb23-30\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-31\"><a href=\"#cb23-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// Reset the batch for the next iteration.</span></span>\n<span id=\"cb23-32\"><a href=\"#cb23-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>        accounts<span class=\"op\">.</span><span class=\"fu\">beforeFirst</span><span class=\"op\">();</span></span>\n<span id=\"cb23-33\"><a href=\"#cb23-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb23-34\"><a href=\"#cb23-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb23-35\"><a href=\"#cb23-35\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-36\"><a href=\"#cb23-36\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> <span class=\"op\">(</span>accounts<span class=\"op\">.</span><span class=\"fu\">getLength</span><span class=\"op\">()</span> <span class=\"op\">&gt;</span> <span class=\"dv\">0</span><span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb23-37\"><a href=\"#cb23-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Send the remaining items.</span></span>\n<span id=\"cb23-38\"><a href=\"#cb23-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreateAccountResultBatch accountsErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span><span class=\"op\">(</span>accounts<span class=\"op\">);</span></span>\n<span id=\"cb23-39\"><a href=\"#cb23-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb23-40\"><a href=\"#cb23-40\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb23-41\"><a href=\"#cb23-41\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-42\"><a href=\"#cb23-42\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Then, load and import all transfers with their timestamps from the historical source.</span></span>\n<span id=\"cb23-43\"><a href=\"#cb23-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>TransferBatch transfers <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">TransferBatch</span><span class=\"op\">(</span>BATCH_SIZE<span class=\"op\">);</span></span>\n<span id=\"cb23-44\"><a href=\"#cb23-44\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">while</span> <span class=\"op\">(</span>historicalTransfers<span class=\"op\">.</span><span class=\"fu\">next</span><span class=\"op\">())</span> <span class=\"op\">{</span></span>\n<span id=\"cb23-45\"><a href=\"#cb23-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb23-46\"><a href=\"#cb23-46\" aria-hidden=\"true\" tabindex=\"-1\"></a>    historicalTimestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span><span class=\"op\">;</span></span>\n<span id=\"cb23-47\"><a href=\"#cb23-47\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-48\"><a href=\"#cb23-48\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers<span class=\"op\">.</span><span class=\"fu\">add</span><span class=\"op\">();</span></span>\n<span id=\"cb23-49\"><a href=\"#cb23-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers<span class=\"op\">.</span><span class=\"fu\">setId</span><span class=\"op\">(</span>historicalTransfers<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb23-50\"><a href=\"#cb23-50\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers<span class=\"op\">.</span><span class=\"fu\">setDebitAccountId</span><span class=\"op\">(</span>historicalTransfers<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;debit_account_id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb23-51\"><a href=\"#cb23-51\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers<span class=\"op\">.</span><span class=\"fu\">setCreditAccountId</span><span class=\"op\">(</span>historicalTransfers<span class=\"op\">.</span><span class=\"fu\">getBytes</span><span class=\"op\">(</span><span class=\"st\">&quot;credit_account_id&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb23-52\"><a href=\"#cb23-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers<span class=\"op\">.</span><span class=\"fu\">setAmount</span><span class=\"op\">(</span>historicalTransfers<span class=\"op\">.</span><span class=\"fu\">getBigDecimal</span><span class=\"op\">(</span><span class=\"st\">&quot;amount&quot;</span><span class=\"op\">).</span><span class=\"fu\">toBigInteger</span><span class=\"op\">());</span></span>\n<span id=\"cb23-53\"><a href=\"#cb23-53\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers<span class=\"op\">.</span><span class=\"fu\">setLedger</span><span class=\"op\">(</span>historicalTransfers<span class=\"op\">.</span><span class=\"fu\">getInt</span><span class=\"op\">(</span><span class=\"st\">&quot;ledger&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb23-54\"><a href=\"#cb23-54\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers<span class=\"op\">.</span><span class=\"fu\">setCode</span><span class=\"op\">(</span>historicalTransfers<span class=\"op\">.</span><span class=\"fu\">getInt</span><span class=\"op\">(</span><span class=\"st\">&quot;code&quot;</span><span class=\"op\">));</span></span>\n<span id=\"cb23-55\"><a href=\"#cb23-55\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers<span class=\"op\">.</span><span class=\"fu\">setTimestamp</span><span class=\"op\">(</span>historicalTimestamp<span class=\"op\">);</span></span>\n<span id=\"cb23-56\"><a href=\"#cb23-56\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-57\"><a href=\"#cb23-57\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Set the transfer as `imported`.</span></span>\n<span id=\"cb23-58\"><a href=\"#cb23-58\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb23-59\"><a href=\"#cb23-59\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// must be `linked`.</span></span>\n<span id=\"cb23-60\"><a href=\"#cb23-60\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> <span class=\"op\">(</span>transfers<span class=\"op\">.</span><span class=\"fu\">getLength</span><span class=\"op\">()</span> <span class=\"op\">&lt;</span> BATCH_SIZE<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb23-61\"><a href=\"#cb23-61\" aria-hidden=\"true\" tabindex=\"-1\"></a>        transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">IMPORTED</span> <span class=\"op\">|</span> TransferFlags<span class=\"op\">.</span><span class=\"fu\">LINKED</span><span class=\"op\">);</span></span>\n<span id=\"cb23-62\"><a href=\"#cb23-62\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span> <span class=\"cf\">else</span> <span class=\"op\">{</span></span>\n<span id=\"cb23-63\"><a href=\"#cb23-63\" aria-hidden=\"true\" tabindex=\"-1\"></a>        transfers<span class=\"op\">.</span><span class=\"fu\">setFlags</span><span class=\"op\">(</span>TransferFlags<span class=\"op\">.</span><span class=\"fu\">IMPORTED</span><span class=\"op\">);</span></span>\n<span id=\"cb23-64\"><a href=\"#cb23-64\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-65\"><a href=\"#cb23-65\" aria-hidden=\"true\" tabindex=\"-1\"></a>        CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb23-66\"><a href=\"#cb23-66\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb23-67\"><a href=\"#cb23-67\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-68\"><a href=\"#cb23-68\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">// Reset the batch for the next iteration.</span></span>\n<span id=\"cb23-69\"><a href=\"#cb23-69\" aria-hidden=\"true\" tabindex=\"-1\"></a>        transfers<span class=\"op\">.</span><span class=\"fu\">beforeFirst</span><span class=\"op\">();</span></span>\n<span id=\"cb23-70\"><a href=\"#cb23-70\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb23-71\"><a href=\"#cb23-71\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb23-72\"><a href=\"#cb23-72\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-73\"><a href=\"#cb23-73\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> <span class=\"op\">(</span>transfers<span class=\"op\">.</span><span class=\"fu\">getLength</span><span class=\"op\">()</span> <span class=\"op\">&gt;</span> <span class=\"dv\">0</span><span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb23-74\"><a href=\"#cb23-74\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Send the remaining items.</span></span>\n<span id=\"cb23-75\"><a href=\"#cb23-75\" aria-hidden=\"true\" tabindex=\"-1\"></a>    CreateTransferResultBatch transferErrors <span class=\"op\">=</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span><span class=\"op\">(</span>transfers<span class=\"op\">);</span></span>\n<span id=\"cb23-76\"><a href=\"#cb23-76\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb23-77\"><a href=\"#cb23-77\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb23-78\"><a href=\"#cb23-78\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb23-79\"><a href=\"#cb23-79\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Since it is a linked chain, in case of any error the entire batch is rolled back and can be retried</span></span>\n<span id=\"cb23-80\"><a href=\"#cb23-80\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// with the same historical timestamps without regressing the cluster timestamp.</span></span></code></pre></div>\n</div>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/src/clients/java/README.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/clients/node","html":"<!-- This file is generated by [/src/scripts/client_readmes.zig](/src/scripts/client_readmes.zig). -->\n\n<h1 id=\"tigerbeetle-node\"><a href=\"#tigerbeetle-node\"\nclass=\"anchor\">tigerbeetle-node</a></h1>\n<p>The TigerBeetle client for Node.js.</p>\n<h2 id=\"prerequisites\"><a href=\"#prerequisites\"\nclass=\"anchor\">Prerequisites</a></h2>\n<p>Linux &gt;= 5.6 is the only production environment we support. But\nfor ease of development we also support macOS and Windows.</p>\n<ul>\n<li>Node.js &gt;= <code>18</code></li>\n</ul>\n<h2 id=\"setup\"><a href=\"#setup\" class=\"anchor\">Setup</a></h2>\n<p>First, create a directory for your project and <code>cd</code> into\nthe directory.</p>\n<p>Then, install the TigerBeetle client:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>npm install --save-exact tigerbeetle-node</code></pre>\n</div>\n<p>Now, create <code>main.js</code> and copy this into it:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> { id } <span class=\"op\">=</span> <span class=\"pp\">require</span>(<span class=\"st\">&quot;tigerbeetle-node&quot;</span>)<span class=\"op\">;</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> { createClient } <span class=\"op\">=</span> <span class=\"pp\">require</span>(<span class=\"st\">&quot;tigerbeetle-node&quot;</span>)<span class=\"op\">;</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> <span class=\"bu\">process</span> <span class=\"op\">=</span> <span class=\"pp\">require</span>(<span class=\"st\">&quot;process&quot;</span>)<span class=\"op\">;</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">console</span><span class=\"op\">.</span><span class=\"fu\">log</span>(<span class=\"st\">&quot;Import ok!&quot;</span>)<span class=\"op\">;</span></span></code></pre></div>\n</div>\n<p>Finally, build and run:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>node main.js</code></pre>\n</div>\n<p>Now that all prerequisites and dependencies are correctly set up,\nlet’s dig into using TigerBeetle.</p>\n<h2 id=\"sample-projects\"><a href=\"#sample-projects\"\nclass=\"anchor\">Sample projects</a></h2>\n<p>This document is primarily a reference guide to the client. Below are\nvarious sample projects demonstrating features of TigerBeetle.</p>\n<ul>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/node/samples/basic/\">Basic</a>:\nCreate two accounts and transfer an amount between them.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/node/samples/two-phase/\">Two-Phase\nTransfer</a>: Create two accounts and start a pending transfer between\nthem, then post the transfer.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/node/samples/two-phase-many/\">Many\nTwo-Phase Transfers</a>: Create two accounts and start a number of\npending transfers between them, posting and voiding alternating\ntransfers.</li>\n</ul>\n<h3 id=\"sidenote-bigint\"><a href=\"#sidenote-bigint\"\nclass=\"anchor\">Sidenote: <code>BigInt</code></a></h3>\n<p>TigerBeetle uses 64-bit integers for many fields while JavaScript’s\nbuiltin <code>Number</code> maximum value is <code>2^53-1</code>. The\n<code>n</code> suffix in JavaScript means the value is a\n<code>BigInt</code>. This is useful for literal numbers. If you already\nhave a <code>Number</code> variable though, you can call the\n<code>BigInt</code> constructor to get a <code>BigInt</code> from it.\nFor example, <code>1n</code> is the same as <code>BigInt(1)</code>.</p>\n<h2 id=\"creating-a-client\"><a href=\"#creating-a-client\"\nclass=\"anchor\">Creating a Client</a></h2>\n<p>A client is created with a cluster ID and replica addresses for all\nreplicas in the cluster. The cluster ID and replica addresses are both\nchosen by the system that starts the TigerBeetle cluster.</p>\n<p>Clients are thread-safe and a single instance should be shared\nbetween multiple concurrent tasks. This allows events to be <a\nhref=\"/coding/requests/#batching-events\">automatically batched</a>.</p>\n<p>Multiple clients are useful when connecting to more than one\nTigerBeetle cluster.</p>\n<p>In this example the cluster ID is <code>0</code> and there is one\nreplica. The address is read from the <code>TB_ADDRESS</code>\nenvironment variable and defaults to port <code>3000</code>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb4\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> client <span class=\"op\">=</span> <span class=\"fu\">createClient</span>({</span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">cluster_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">replica_addresses</span><span class=\"op\">:</span> [<span class=\"bu\">process</span><span class=\"op\">.</span><span class=\"at\">env</span><span class=\"op\">.</span><span class=\"at\">TB_ADDRESS</span> <span class=\"op\">||</span> <span class=\"st\">&quot;3000&quot;</span>]<span class=\"op\">,</span></span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>})<span class=\"op\">;</span></span></code></pre></div>\n</div>\n<p>The following are valid addresses:</p>\n<ul>\n<li><code>3000</code> (interpreted as <code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1:3000</code> (interpreted as\n<code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1</code> (interpreted as <code>127.0.0.1:3001</code>,\n<code>3001</code> is the default port)</li>\n</ul>\n<h2 id=\"creating-accounts\"><a href=\"#creating-accounts\"\nclass=\"anchor\">Creating Accounts</a></h2>\n<p>See details for account fields in the <a\nhref=\"/reference/account\">Accounts reference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb5\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account <span class=\"op\">=</span> {</span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"fu\">id</span>()<span class=\"op\">,</span> <span class=\"co\">// TigerBeetle time-based ID.</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb5-7\"><a href=\"#cb5-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb5-8\"><a href=\"#cb5-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb5-9\"><a href=\"#cb5-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb5-10\"><a href=\"#cb5-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">reserved</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb5-11\"><a href=\"#cb5-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb5-12\"><a href=\"#cb5-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">718</span><span class=\"op\">,</span></span>\n<span id=\"cb5-13\"><a href=\"#cb5-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb5-14\"><a href=\"#cb5-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb5-15\"><a href=\"#cb5-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb5-16\"><a href=\"#cb5-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-17\"><a href=\"#cb5-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span>([account])<span class=\"op\">;</span></span>\n<span id=\"cb5-18\"><a href=\"#cb5-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<p>See details for the recommended ID scheme in <a\nhref=\"/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<h3 id=\"account-flags\"><a href=\"#account-flags\" class=\"anchor\">Account\nFlags</a></h3>\n<p>The account flags value is a bitfield. See details for these flags in\nthe <a href=\"/reference/account#flags\">Accounts reference</a>.</p>\n<p>To toggle behavior for an account, combine enum values stored in the\n<code>AccountFlags</code> object (in TypeScript it is an actual enum)\nwith bitwise-or:</p>\n<ul>\n<li><code>AccountFlags.linked</code></li>\n<li><code>AccountFlags.debits_must_not_exceed_credits</code></li>\n<li><code>AccountFlags.credits_must_not_exceed_credits</code></li>\n<li><code>AccountFlags.history</code></li>\n</ul>\n<p>For example, to link two accounts where the first account\nadditionally has the <code>debits_must_not_exceed_credits</code>\nconstraint:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb6\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account0 <span class=\"op\">=</span> {</span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">100</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-5\"><a href=\"#cb6-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-6\"><a href=\"#cb6-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-7\"><a href=\"#cb6-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-8\"><a href=\"#cb6-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-9\"><a href=\"#cb6-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb6-10\"><a href=\"#cb6-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">reserved</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb6-11\"><a href=\"#cb6-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb6-12\"><a href=\"#cb6-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb6-13\"><a href=\"#cb6-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-14\"><a href=\"#cb6-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> AccountFlags<span class=\"op\">.</span><span class=\"at\">linked</span> <span class=\"op\">|</span> AccountFlags<span class=\"op\">.</span><span class=\"at\">debits_must_not_exceed_credits</span><span class=\"op\">,</span></span>\n<span id=\"cb6-15\"><a href=\"#cb6-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb6-16\"><a href=\"#cb6-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account1 <span class=\"op\">=</span> {</span>\n<span id=\"cb6-17\"><a href=\"#cb6-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">101</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-18\"><a href=\"#cb6-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-19\"><a href=\"#cb6-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-20\"><a href=\"#cb6-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-21\"><a href=\"#cb6-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-22\"><a href=\"#cb6-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-23\"><a href=\"#cb6-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-24\"><a href=\"#cb6-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb6-25\"><a href=\"#cb6-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">reserved</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb6-26\"><a href=\"#cb6-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb6-27\"><a href=\"#cb6-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb6-28\"><a href=\"#cb6-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb6-29\"><a href=\"#cb6-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> AccountFlags<span class=\"op\">.</span><span class=\"at\">history</span><span class=\"op\">,</span></span>\n<span id=\"cb6-30\"><a href=\"#cb6-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb6-31\"><a href=\"#cb6-31\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-32\"><a href=\"#cb6-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span>([account0<span class=\"op\">,</span> account1])<span class=\"op\">;</span></span>\n<span id=\"cb6-33\"><a href=\"#cb6-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h3 id=\"response-and-errors\"><a href=\"#response-and-errors\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all accounts were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for an account that failed. The error\nobject contains an error code and the index of the account in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"/reference/requests/create_accounts\">create_accounts\nreference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb7\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account0 <span class=\"op\">=</span> {</span>\n<span id=\"cb7-2\"><a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-3\"><a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-4\"><a href=\"#cb7-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-5\"><a href=\"#cb7-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-6\"><a href=\"#cb7-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-7\"><a href=\"#cb7-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-8\"><a href=\"#cb7-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-9\"><a href=\"#cb7-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-10\"><a href=\"#cb7-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">reserved</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-11\"><a href=\"#cb7-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-12\"><a href=\"#cb7-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-13\"><a href=\"#cb7-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-14\"><a href=\"#cb7-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-15\"><a href=\"#cb7-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb7-16\"><a href=\"#cb7-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account1 <span class=\"op\">=</span> {</span>\n<span id=\"cb7-17\"><a href=\"#cb7-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-18\"><a href=\"#cb7-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-19\"><a href=\"#cb7-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-20\"><a href=\"#cb7-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-21\"><a href=\"#cb7-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-22\"><a href=\"#cb7-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-23\"><a href=\"#cb7-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-24\"><a href=\"#cb7-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-25\"><a href=\"#cb7-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">reserved</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-26\"><a href=\"#cb7-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-27\"><a href=\"#cb7-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-28\"><a href=\"#cb7-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-29\"><a href=\"#cb7-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-30\"><a href=\"#cb7-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb7-31\"><a href=\"#cb7-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account2 <span class=\"op\">=</span> {</span>\n<span id=\"cb7-32\"><a href=\"#cb7-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">104</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-33\"><a href=\"#cb7-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-34\"><a href=\"#cb7-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-35\"><a href=\"#cb7-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_pending</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-36\"><a href=\"#cb7-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credits_posted</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-37\"><a href=\"#cb7-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-38\"><a href=\"#cb7-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-39\"><a href=\"#cb7-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-40\"><a href=\"#cb7-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">reserved</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-41\"><a href=\"#cb7-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-42\"><a href=\"#cb7-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb7-43\"><a href=\"#cb7-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb7-44\"><a href=\"#cb7-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb7-45\"><a href=\"#cb7-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb7-46\"><a href=\"#cb7-46\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-47\"><a href=\"#cb7-47\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span>([account0<span class=\"op\">,</span> account1<span class=\"op\">,</span> account2])<span class=\"op\">;</span></span>\n<span id=\"cb7-48\"><a href=\"#cb7-48\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> (<span class=\"kw\">const</span> error <span class=\"kw\">of</span> account_errors) {</span>\n<span id=\"cb7-49\"><a href=\"#cb7-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"cf\">switch</span> (error<span class=\"op\">.</span><span class=\"at\">result</span>) {</span>\n<span id=\"cb7-50\"><a href=\"#cb7-50\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">case</span> CreateAccountError<span class=\"op\">.</span><span class=\"at\">exists</span><span class=\"op\">:</span></span>\n<span id=\"cb7-51\"><a href=\"#cb7-51\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"bu\">console</span><span class=\"op\">.</span><span class=\"fu\">error</span>(<span class=\"vs\">`Batch account at </span><span class=\"sc\">${</span>error<span class=\"op\">.</span><span class=\"at\">index</span><span class=\"sc\">}</span><span class=\"vs\"> already exists.`</span>)<span class=\"op\">;</span></span>\n<span id=\"cb7-52\"><a href=\"#cb7-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"cf\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb7-53\"><a href=\"#cb7-53\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">default</span><span class=\"op\">:</span></span>\n<span id=\"cb7-54\"><a href=\"#cb7-54\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"bu\">console</span><span class=\"op\">.</span><span class=\"fu\">error</span>(</span>\n<span id=\"cb7-55\"><a href=\"#cb7-55\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"vs\">`Batch account at </span><span class=\"sc\">${</span>error<span class=\"op\">.</span><span class=\"at\">index</span><span class=\"sc\">}</span><span class=\"vs\"> failed to create: </span><span class=\"sc\">${</span></span>\n<span id=\"cb7-56\"><a href=\"#cb7-56\" aria-hidden=\"true\" tabindex=\"-1\"></a>          CreateAccountError[error<span class=\"op\">.</span><span class=\"at\">result</span>]</span>\n<span id=\"cb7-57\"><a href=\"#cb7-57\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"sc\">}</span><span class=\"vs\">.`</span><span class=\"op\">,</span></span>\n<span id=\"cb7-58\"><a href=\"#cb7-58\" aria-hidden=\"true\" tabindex=\"-1\"></a>      )<span class=\"op\">;</span></span>\n<span id=\"cb7-59\"><a href=\"#cb7-59\" aria-hidden=\"true\" tabindex=\"-1\"></a>  }</span>\n<span id=\"cb7-60\"><a href=\"#cb7-60\" aria-hidden=\"true\" tabindex=\"-1\"></a>}</span></code></pre></div>\n</div>\n<p>To handle errors you can either 1) exactly match error codes returned\nfrom <code>client.createAccounts</code> with enum values in the\n<code>CreateAccountError</code> object, or you can 2) look up the error\ncode in the <code>CreateAccountError</code> object for a human-readable\nstring.</p>\n<h2 id=\"account-lookup\"><a href=\"#account-lookup\" class=\"anchor\">Account\nLookup</a></h2>\n<p>Account lookup is batched, like account creation. Pass in all IDs to\nfetch. The account for each matched ID is returned.</p>\n<p>If no account matches an ID, no object is returned for that account.\nSo the order of accounts in the response is not necessarily the same as\nthe order of IDs in the request. You can refer to the ID field in the\nresponse to distinguish accounts.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb8\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb8-1\"><a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> accounts <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">lookupAccounts</span>([<span class=\"dv\">100</span>n<span class=\"op\">,</span> <span class=\"dv\">101</span>n])<span class=\"op\">;</span></span></code></pre></div>\n</div>\n<h2 id=\"create-transfers\"><a href=\"#create-transfers\"\nclass=\"anchor\">Create Transfers</a></h2>\n<p>This creates a journal entry between two accounts.</p>\n<p>See details for transfer fields in the <a\nhref=\"/reference/transfer\">Transfers reference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb9\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfers <span class=\"op\">=</span> [{</span>\n<span id=\"cb9-2\"><a href=\"#cb9-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"fu\">id</span>()<span class=\"op\">,</span> <span class=\"co\">// TigerBeetle time-based ID.</span></span>\n<span id=\"cb9-3\"><a href=\"#cb9-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb9-4\"><a href=\"#cb9-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb9-5\"><a href=\"#cb9-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb9-6\"><a href=\"#cb9-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb9-7\"><a href=\"#cb9-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb9-8\"><a href=\"#cb9-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb9-9\"><a href=\"#cb9-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb9-10\"><a href=\"#cb9-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb9-11\"><a href=\"#cb9-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb9-12\"><a href=\"#cb9-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb9-13\"><a href=\"#cb9-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb9-14\"><a href=\"#cb9-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb9-15\"><a href=\"#cb9-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>}]<span class=\"op\">;</span></span>\n<span id=\"cb9-16\"><a href=\"#cb9-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb9-17\"><a href=\"#cb9-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>(transfers)<span class=\"op\">;</span></span>\n<span id=\"cb9-18\"><a href=\"#cb9-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<p>See details for the recommended ID scheme in <a\nhref=\"/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<h3 id=\"response-and-errors-1\"><a href=\"#response-and-errors-1\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all transfers were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for a transfer that failed. The error\nobject contains an error code and the index of the transfer in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"/reference/requests/create_transfers\">create_transfers\nreference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb10\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb10-1\"><a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfers <span class=\"op\">=</span> [{</span>\n<span id=\"cb10-2\"><a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">1</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-3\"><a href=\"#cb10-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-4\"><a href=\"#cb10-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-5\"><a href=\"#cb10-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-6\"><a href=\"#cb10-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-7\"><a href=\"#cb10-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-8\"><a href=\"#cb10-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-9\"><a href=\"#cb10-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-10\"><a href=\"#cb10-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-11\"><a href=\"#cb10-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-12\"><a href=\"#cb10-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb10-13\"><a href=\"#cb10-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-14\"><a href=\"#cb10-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-15\"><a href=\"#cb10-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">,</span></span>\n<span id=\"cb10-16\"><a href=\"#cb10-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>{</span>\n<span id=\"cb10-17\"><a href=\"#cb10-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">2</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-18\"><a href=\"#cb10-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-19\"><a href=\"#cb10-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-20\"><a href=\"#cb10-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-21\"><a href=\"#cb10-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-22\"><a href=\"#cb10-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-23\"><a href=\"#cb10-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-24\"><a href=\"#cb10-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-25\"><a href=\"#cb10-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-26\"><a href=\"#cb10-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-27\"><a href=\"#cb10-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb10-28\"><a href=\"#cb10-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-29\"><a href=\"#cb10-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-30\"><a href=\"#cb10-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">,</span></span>\n<span id=\"cb10-31\"><a href=\"#cb10-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>{</span>\n<span id=\"cb10-32\"><a href=\"#cb10-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">3</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-33\"><a href=\"#cb10-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-34\"><a href=\"#cb10-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-35\"><a href=\"#cb10-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-36\"><a href=\"#cb10-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-37\"><a href=\"#cb10-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-38\"><a href=\"#cb10-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-39\"><a href=\"#cb10-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-40\"><a href=\"#cb10-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-41\"><a href=\"#cb10-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb10-42\"><a href=\"#cb10-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb10-43\"><a href=\"#cb10-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb10-44\"><a href=\"#cb10-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb10-45\"><a href=\"#cb10-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>}]<span class=\"op\">;</span></span>\n<span id=\"cb10-46\"><a href=\"#cb10-46\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb10-47\"><a href=\"#cb10-47\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>(batch)<span class=\"op\">;</span></span>\n<span id=\"cb10-48\"><a href=\"#cb10-48\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> (<span class=\"kw\">const</span> error <span class=\"kw\">of</span> transfer_errors) {</span>\n<span id=\"cb10-49\"><a href=\"#cb10-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"cf\">switch</span> (error<span class=\"op\">.</span><span class=\"at\">result</span>) {</span>\n<span id=\"cb10-50\"><a href=\"#cb10-50\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">case</span> CreateTransferError<span class=\"op\">.</span><span class=\"at\">exists</span><span class=\"op\">:</span></span>\n<span id=\"cb10-51\"><a href=\"#cb10-51\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"bu\">console</span><span class=\"op\">.</span><span class=\"fu\">error</span>(<span class=\"vs\">`Batch transfer at </span><span class=\"sc\">${</span>error<span class=\"op\">.</span><span class=\"at\">index</span><span class=\"sc\">}</span><span class=\"vs\"> already exists.`</span>)<span class=\"op\">;</span></span>\n<span id=\"cb10-52\"><a href=\"#cb10-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"cf\">break</span><span class=\"op\">;</span></span>\n<span id=\"cb10-53\"><a href=\"#cb10-53\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">default</span><span class=\"op\">:</span></span>\n<span id=\"cb10-54\"><a href=\"#cb10-54\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"bu\">console</span><span class=\"op\">.</span><span class=\"fu\">error</span>(</span>\n<span id=\"cb10-55\"><a href=\"#cb10-55\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"vs\">`Batch transfer at </span><span class=\"sc\">${</span>error<span class=\"op\">.</span><span class=\"at\">index</span><span class=\"sc\">}</span><span class=\"vs\"> failed to create: </span><span class=\"sc\">${</span></span>\n<span id=\"cb10-56\"><a href=\"#cb10-56\" aria-hidden=\"true\" tabindex=\"-1\"></a>          CreateTransferError[error<span class=\"op\">.</span><span class=\"at\">result</span>]</span>\n<span id=\"cb10-57\"><a href=\"#cb10-57\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"sc\">}</span><span class=\"vs\">.`</span><span class=\"op\">,</span></span>\n<span id=\"cb10-58\"><a href=\"#cb10-58\" aria-hidden=\"true\" tabindex=\"-1\"></a>      )<span class=\"op\">;</span></span>\n<span id=\"cb10-59\"><a href=\"#cb10-59\" aria-hidden=\"true\" tabindex=\"-1\"></a>  }</span>\n<span id=\"cb10-60\"><a href=\"#cb10-60\" aria-hidden=\"true\" tabindex=\"-1\"></a>}</span></code></pre></div>\n</div>\n<p>To handle errors you can either 1) exactly match error codes returned\nfrom <code>client.createTransfers</code> with enum values in the\n<code>CreateTransferError</code> object, or you can 2) look up the error\ncode in the <code>CreateTransferError</code> object for a human-readable\nstring.</p>\n<h2 id=\"batching\"><a href=\"#batching\" class=\"anchor\">Batching</a></h2>\n<p>TigerBeetle performance is maximized when you batch API requests. A\nclient instance shared across multiple threads/tasks can automatically\nbatch concurrent requests, but the application must still send as many\nevents as possible in a single call. For example, if you insert 1\nmillion transfers sequentially, one at a time, the insert rate will be a\n<em>fraction</em> of the potential, because the client will wait for a\nreply between each one.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb11\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> batch <span class=\"op\">=</span> []<span class=\"op\">;</span> <span class=\"co\">// Array of transfer to create.</span></span>\n<span id=\"cb11-2\"><a href=\"#cb11-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> (<span class=\"kw\">let</span> i <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> i <span class=\"op\">&lt;</span> batch<span class=\"op\">.</span><span class=\"at\">len</span><span class=\"op\">;</span> i<span class=\"op\">++</span>) {</span>\n<span id=\"cb11-3\"><a href=\"#cb11-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"kw\">const</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>(batch[i])<span class=\"op\">;</span></span>\n<span id=\"cb11-4\"><a href=\"#cb11-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb11-5\"><a href=\"#cb11-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>}</span></code></pre></div>\n</div>\n<p>Instead, <strong>always batch as much as you can</strong>. The\nmaximum batch size is set in the TigerBeetle server. The default is\n8189.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb12\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb12-1\"><a href=\"#cb12-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> batch <span class=\"op\">=</span> []<span class=\"op\">;</span> <span class=\"co\">// Array of transfer to create.</span></span>\n<span id=\"cb12-2\"><a href=\"#cb12-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> BATCH_SIZE <span class=\"op\">=</span> <span class=\"dv\">8189</span><span class=\"op\">;</span></span>\n<span id=\"cb12-3\"><a href=\"#cb12-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> (<span class=\"kw\">let</span> i <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> i <span class=\"op\">&lt;</span> batch<span class=\"op\">.</span><span class=\"at\">length</span><span class=\"op\">;</span> i <span class=\"op\">+=</span> BATCH_SIZE) {</span>\n<span id=\"cb12-4\"><a href=\"#cb12-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"kw\">const</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>(</span>\n<span id=\"cb12-5\"><a href=\"#cb12-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    batch<span class=\"op\">.</span><span class=\"fu\">slice</span>(i<span class=\"op\">,</span> <span class=\"bu\">Math</span><span class=\"op\">.</span><span class=\"fu\">min</span>(batch<span class=\"op\">.</span><span class=\"at\">length</span><span class=\"op\">,</span> BATCH_SIZE))<span class=\"op\">,</span></span>\n<span id=\"cb12-6\"><a href=\"#cb12-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  )<span class=\"op\">;</span></span>\n<span id=\"cb12-7\"><a href=\"#cb12-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb12-8\"><a href=\"#cb12-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>}</span></code></pre></div>\n</div>\n<h3 id=\"queues-and-workers\"><a href=\"#queues-and-workers\"\nclass=\"anchor\">Queues and Workers</a></h3>\n<p>If you are making requests to TigerBeetle from workers pulling jobs\nfrom a queue, you can batch requests to TigerBeetle by having the worker\nact on multiple jobs from the queue at once rather than one at a time.\ni.e. pulling multiple jobs from the queue rather than just one.</p>\n<h2 id=\"transfer-flags\"><a href=\"#transfer-flags\"\nclass=\"anchor\">Transfer Flags</a></h2>\n<p>The transfer <code>flags</code> value is a bitfield. See details for\nthese flags in the <a href=\"/reference/transfer#flags\">Transfers\nreference</a>.</p>\n<p>To toggle behavior for a transfer, combine enum values stored in the\n<code>TransferFlags</code> object (in TypeScript it is an actual enum)\nwith bitwise-or:</p>\n<ul>\n<li><code>TransferFlags.linked</code></li>\n<li><code>TransferFlags.pending</code></li>\n<li><code>TransferFlags.post_pending_transfer</code></li>\n<li><code>TransferFlags.void_pending_transfer</code></li>\n</ul>\n<p>For example, to link <code>transfer0</code> and\n<code>transfer1</code>:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb13\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb13-1\"><a href=\"#cb13-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer0 <span class=\"op\">=</span> {</span>\n<span id=\"cb13-2\"><a href=\"#cb13-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">4</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-3\"><a href=\"#cb13-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-4\"><a href=\"#cb13-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-5\"><a href=\"#cb13-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-6\"><a href=\"#cb13-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-7\"><a href=\"#cb13-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-8\"><a href=\"#cb13-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-9\"><a href=\"#cb13-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb13-10\"><a href=\"#cb13-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb13-11\"><a href=\"#cb13-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb13-12\"><a href=\"#cb13-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb13-13\"><a href=\"#cb13-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> TransferFlags<span class=\"op\">.</span><span class=\"at\">linked</span><span class=\"op\">,</span></span>\n<span id=\"cb13-14\"><a href=\"#cb13-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-15\"><a href=\"#cb13-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb13-16\"><a href=\"#cb13-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer1 <span class=\"op\">=</span> {</span>\n<span id=\"cb13-17\"><a href=\"#cb13-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">5</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-18\"><a href=\"#cb13-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-19\"><a href=\"#cb13-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-20\"><a href=\"#cb13-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-21\"><a href=\"#cb13-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-22\"><a href=\"#cb13-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-23\"><a href=\"#cb13-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-24\"><a href=\"#cb13-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb13-25\"><a href=\"#cb13-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb13-26\"><a href=\"#cb13-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb13-27\"><a href=\"#cb13-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb13-28\"><a href=\"#cb13-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb13-29\"><a href=\"#cb13-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb13-30\"><a href=\"#cb13-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb13-31\"><a href=\"#cb13-31\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb13-32\"><a href=\"#cb13-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Create the transfer</span></span>\n<span id=\"cb13-33\"><a href=\"#cb13-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>([transfer0<span class=\"op\">,</span> transfer1])<span class=\"op\">;</span></span>\n<span id=\"cb13-34\"><a href=\"#cb13-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h3 id=\"two-phase-transfers\"><a href=\"#two-phase-transfers\"\nclass=\"anchor\">Two-Phase Transfers</a></h3>\n<p>Two-phase transfers are supported natively by toggling the\nappropriate flag. TigerBeetle will then adjust the\n<code>credits_pending</code> and <code>debits_pending</code> fields of\nthe appropriate accounts. A corresponding post pending transfer then\nneeds to be sent to post or void the transfer.</p>\n<h4 id=\"post-a-pending-transfer\"><a href=\"#post-a-pending-transfer\"\nclass=\"anchor\">Post a Pending Transfer</a></h4>\n<p>With <code>flags</code> set to <code>post_pending_transfer</code>,\nTigerBeetle will post the transfer. TigerBeetle will atomically roll\nback the changes to <code>debits_pending</code> and\n<code>credits_pending</code> of the appropriate accounts and apply them\nto the <code>debits_posted</code> and <code>credits_posted</code>\nbalances.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb14\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb14-1\"><a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer0 <span class=\"op\">=</span> {</span>\n<span id=\"cb14-2\"><a href=\"#cb14-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">6</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-3\"><a href=\"#cb14-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-4\"><a href=\"#cb14-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-5\"><a href=\"#cb14-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-6\"><a href=\"#cb14-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-7\"><a href=\"#cb14-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-8\"><a href=\"#cb14-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-9\"><a href=\"#cb14-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb14-10\"><a href=\"#cb14-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb14-11\"><a href=\"#cb14-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb14-12\"><a href=\"#cb14-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb14-13\"><a href=\"#cb14-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> TransferFlags<span class=\"op\">.</span><span class=\"at\">pending</span><span class=\"op\">,</span></span>\n<span id=\"cb14-14\"><a href=\"#cb14-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-15\"><a href=\"#cb14-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb14-16\"><a href=\"#cb14-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-17\"><a href=\"#cb14-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">let</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>([transfer0])<span class=\"op\">;</span></span>\n<span id=\"cb14-18\"><a href=\"#cb14-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb14-19\"><a href=\"#cb14-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-20\"><a href=\"#cb14-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer1 <span class=\"op\">=</span> {</span>\n<span id=\"cb14-21\"><a href=\"#cb14-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">7</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-22\"><a href=\"#cb14-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-23\"><a href=\"#cb14-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-24\"><a href=\"#cb14-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// Post the entire pending amount.</span></span>\n<span id=\"cb14-25\"><a href=\"#cb14-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> amount_max<span class=\"op\">,</span></span>\n<span id=\"cb14-26\"><a href=\"#cb14-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">6</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-27\"><a href=\"#cb14-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-28\"><a href=\"#cb14-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-29\"><a href=\"#cb14-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb14-30\"><a href=\"#cb14-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb14-31\"><a href=\"#cb14-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb14-32\"><a href=\"#cb14-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb14-33\"><a href=\"#cb14-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> TransferFlags<span class=\"op\">.</span><span class=\"at\">post_pending_transfer</span><span class=\"op\">,</span></span>\n<span id=\"cb14-34\"><a href=\"#cb14-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb14-35\"><a href=\"#cb14-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb14-36\"><a href=\"#cb14-36\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-37\"><a href=\"#cb14-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>([transfer1])<span class=\"op\">;</span></span>\n<span id=\"cb14-38\"><a href=\"#cb14-38\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h4 id=\"void-a-pending-transfer\"><a href=\"#void-a-pending-transfer\"\nclass=\"anchor\">Void a Pending Transfer</a></h4>\n<p>In contrast, with <code>flags</code> set to\n<code>void_pending_transfer</code>, TigerBeetle will void the transfer.\nTigerBeetle will roll back the changes to <code>debits_pending</code>\nand <code>credits_pending</code> of the appropriate accounts and\n<strong>not</strong> apply them to the <code>debits_posted</code> and\n<code>credits_posted</code> balances.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb15\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb15-1\"><a href=\"#cb15-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer0 <span class=\"op\">=</span> {</span>\n<span id=\"cb15-2\"><a href=\"#cb15-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">8</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-3\"><a href=\"#cb15-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-4\"><a href=\"#cb15-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-5\"><a href=\"#cb15-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">10</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-6\"><a href=\"#cb15-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-7\"><a href=\"#cb15-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-8\"><a href=\"#cb15-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-9\"><a href=\"#cb15-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb15-10\"><a href=\"#cb15-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb15-11\"><a href=\"#cb15-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb15-12\"><a href=\"#cb15-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb15-13\"><a href=\"#cb15-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> TransferFlags<span class=\"op\">.</span><span class=\"at\">pending</span><span class=\"op\">,</span></span>\n<span id=\"cb15-14\"><a href=\"#cb15-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-15\"><a href=\"#cb15-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb15-16\"><a href=\"#cb15-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-17\"><a href=\"#cb15-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">let</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>([transfer0])<span class=\"op\">;</span></span>\n<span id=\"cb15-18\"><a href=\"#cb15-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb15-19\"><a href=\"#cb15-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-20\"><a href=\"#cb15-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer1 <span class=\"op\">=</span> {</span>\n<span id=\"cb15-21\"><a href=\"#cb15-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">9</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-22\"><a href=\"#cb15-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">debit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">102</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-23\"><a href=\"#cb15-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">credit_account_id</span><span class=\"op\">:</span> <span class=\"dv\">103</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-24\"><a href=\"#cb15-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">amount</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-25\"><a href=\"#cb15-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">pending_id</span><span class=\"op\">:</span> <span class=\"dv\">8</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-26\"><a href=\"#cb15-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-27\"><a href=\"#cb15-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-28\"><a href=\"#cb15-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb15-29\"><a href=\"#cb15-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timeout</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb15-30\"><a href=\"#cb15-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span></span>\n<span id=\"cb15-31\"><a href=\"#cb15-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">720</span><span class=\"op\">,</span></span>\n<span id=\"cb15-32\"><a href=\"#cb15-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> TransferFlags<span class=\"op\">.</span><span class=\"at\">void_pending_transfer</span><span class=\"op\">,</span></span>\n<span id=\"cb15-33\"><a href=\"#cb15-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb15-34\"><a href=\"#cb15-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb15-35\"><a href=\"#cb15-35\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-36\"><a href=\"#cb15-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>([transfer1])<span class=\"op\">;</span></span>\n<span id=\"cb15-37\"><a href=\"#cb15-37\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h2 id=\"transfer-lookup\"><a href=\"#transfer-lookup\"\nclass=\"anchor\">Transfer Lookup</a></h2>\n<p>NOTE: While transfer lookup exists, it is not a flexible query API.\nWe are developing query APIs and there will be new methods for querying\ntransfers in the future.</p>\n<p>Transfer lookup is batched, like transfer creation. Pass in all\n<code>id</code>s to fetch, and matched transfers are returned.</p>\n<p>If no transfer matches an <code>id</code>, no object is returned for\nthat transfer. So the order of transfers in the response is not\nnecessarily the same as the order of <code>id</code>s in the request.\nYou can refer to the <code>id</code> field in the response to\ndistinguish transfers.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb16\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb16-1\"><a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfers <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">lookupTransfers</span>([<span class=\"dv\">1</span>n<span class=\"op\">,</span> <span class=\"dv\">2</span>n])<span class=\"op\">;</span></span></code></pre></div>\n</div>\n<h2 id=\"get-account-transfers\"><a href=\"#get-account-transfers\"\nclass=\"anchor\">Get Account Transfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the transfers involving a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb17\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb17-1\"><a href=\"#cb17-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> filter <span class=\"op\">=</span> {</span>\n<span id=\"cb17-2\"><a href=\"#cb17-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">account_id</span><span class=\"op\">:</span> <span class=\"dv\">2</span>n<span class=\"op\">,</span></span>\n<span id=\"cb17-3\"><a href=\"#cb17-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by UserData.</span></span>\n<span id=\"cb17-4\"><a href=\"#cb17-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb17-5\"><a href=\"#cb17-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb17-6\"><a href=\"#cb17-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Code.</span></span>\n<span id=\"cb17-7\"><a href=\"#cb17-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp_min</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb17-8\"><a href=\"#cb17-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp_max</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb17-9\"><a href=\"#cb17-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">limit</span><span class=\"op\">:</span> <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb17-10\"><a href=\"#cb17-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> AccountFilterFlags<span class=\"op\">.</span><span class=\"at\">debits</span> <span class=\"op\">|</span> <span class=\"co\">// Include transfer from the debit side.</span></span>\n<span id=\"cb17-11\"><a href=\"#cb17-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    AccountFilterFlags<span class=\"op\">.</span><span class=\"at\">credits</span> <span class=\"op\">|</span> <span class=\"co\">// Include transfer from the credit side.</span></span>\n<span id=\"cb17-12\"><a href=\"#cb17-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    AccountFilterFlags<span class=\"op\">.</span><span class=\"at\">reversed</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb17-13\"><a href=\"#cb17-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb17-14\"><a href=\"#cb17-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb17-15\"><a href=\"#cb17-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account_transfers <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">getAccountTransfers</span>(filter)<span class=\"op\">;</span></span></code></pre></div>\n</div>\n<h2 id=\"get-account-balances\"><a href=\"#get-account-balances\"\nclass=\"anchor\">Get Account Balances</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the point-in-time balances of a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>Only accounts created with the flag <a\nhref=\"/reference/account#flagshistory\"><code>history</code></a> set\nretain <a href=\"/reference/requests/get_account_balances\">historical\nbalances</a>.</p>\n<p>The balances in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb18\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb18-1\"><a href=\"#cb18-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> filter <span class=\"op\">=</span> {</span>\n<span id=\"cb18-2\"><a href=\"#cb18-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">account_id</span><span class=\"op\">:</span> <span class=\"dv\">2</span>n<span class=\"op\">,</span></span>\n<span id=\"cb18-3\"><a href=\"#cb18-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by UserData.</span></span>\n<span id=\"cb18-4\"><a href=\"#cb18-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span></span>\n<span id=\"cb18-5\"><a href=\"#cb18-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span></span>\n<span id=\"cb18-6\"><a href=\"#cb18-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Code.</span></span>\n<span id=\"cb18-7\"><a href=\"#cb18-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp_min</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb18-8\"><a href=\"#cb18-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp_max</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb18-9\"><a href=\"#cb18-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">limit</span><span class=\"op\">:</span> <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb18-10\"><a href=\"#cb18-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> AccountFilterFlags<span class=\"op\">.</span><span class=\"at\">debits</span> <span class=\"op\">|</span> <span class=\"co\">// Include transfer from the debit side.</span></span>\n<span id=\"cb18-11\"><a href=\"#cb18-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    AccountFilterFlags<span class=\"op\">.</span><span class=\"at\">credits</span> <span class=\"op\">|</span> <span class=\"co\">// Include transfer from the credit side.</span></span>\n<span id=\"cb18-12\"><a href=\"#cb18-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    AccountFilterFlags<span class=\"op\">.</span><span class=\"at\">reversed</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb18-13\"><a href=\"#cb18-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb18-14\"><a href=\"#cb18-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb18-15\"><a href=\"#cb18-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account_balances <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">getAccountBalances</span>(filter)<span class=\"op\">;</span></span></code></pre></div>\n</div>\n<h2 id=\"query-accounts\"><a href=\"#query-accounts\" class=\"anchor\">Query\nAccounts</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query accounts by the intersection of some fields and by timestamp\nrange.</p>\n<p>The accounts in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb19\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb19-1\"><a href=\"#cb19-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> query_filter <span class=\"op\">=</span> {</span>\n<span id=\"cb19-2\"><a href=\"#cb19-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">1000</span>n<span class=\"op\">,</span> <span class=\"co\">// Filter by UserData.</span></span>\n<span id=\"cb19-3\"><a href=\"#cb19-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">100</span>n<span class=\"op\">,</span></span>\n<span id=\"cb19-4\"><a href=\"#cb19-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb19-5\"><a href=\"#cb19-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"co\">// Filter by Code.</span></span>\n<span id=\"cb19-6\"><a href=\"#cb19-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Ledger.</span></span>\n<span id=\"cb19-7\"><a href=\"#cb19-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp_min</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb19-8\"><a href=\"#cb19-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp_max</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb19-9\"><a href=\"#cb19-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">limit</span><span class=\"op\">:</span> <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb19-10\"><a href=\"#cb19-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> QueryFilterFlags<span class=\"op\">.</span><span class=\"at\">reversed</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb19-11\"><a href=\"#cb19-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb19-12\"><a href=\"#cb19-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb19-13\"><a href=\"#cb19-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> query_accounts <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">queryAccounts</span>(query_filter)<span class=\"op\">;</span></span></code></pre></div>\n</div>\n<h2 id=\"query-transfers\"><a href=\"#query-transfers\" class=\"anchor\">Query\nTransfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query transfers by the intersection of some fields and by timestamp\nrange.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb20\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb20-1\"><a href=\"#cb20-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> query_filter <span class=\"op\">=</span> {</span>\n<span id=\"cb20-2\"><a href=\"#cb20-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_128</span><span class=\"op\">:</span> <span class=\"dv\">1000</span>n<span class=\"op\">,</span> <span class=\"co\">// Filter by UserData.</span></span>\n<span id=\"cb20-3\"><a href=\"#cb20-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_64</span><span class=\"op\">:</span> <span class=\"dv\">100</span>n<span class=\"op\">,</span></span>\n<span id=\"cb20-4\"><a href=\"#cb20-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">user_data_32</span><span class=\"op\">:</span> <span class=\"dv\">10</span><span class=\"op\">,</span></span>\n<span id=\"cb20-5\"><a href=\"#cb20-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">code</span><span class=\"op\">:</span> <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"co\">// Filter by Code.</span></span>\n<span id=\"cb20-6\"><a href=\"#cb20-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">ledger</span><span class=\"op\">:</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"co\">// No filter by Ledger.</span></span>\n<span id=\"cb20-7\"><a href=\"#cb20-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp_min</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb20-8\"><a href=\"#cb20-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">timestamp_max</span><span class=\"op\">:</span> <span class=\"dv\">0</span>n<span class=\"op\">,</span> <span class=\"co\">// No filter by Timestamp.</span></span>\n<span id=\"cb20-9\"><a href=\"#cb20-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">limit</span><span class=\"op\">:</span> <span class=\"dv\">10</span><span class=\"op\">,</span> <span class=\"co\">// Limit to ten balances at most.</span></span>\n<span id=\"cb20-10\"><a href=\"#cb20-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">flags</span><span class=\"op\">:</span> QueryFilterFlags<span class=\"op\">.</span><span class=\"at\">reversed</span><span class=\"op\">,</span> <span class=\"co\">// Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb20-11\"><a href=\"#cb20-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>}<span class=\"op\">;</span></span>\n<span id=\"cb20-12\"><a href=\"#cb20-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb20-13\"><a href=\"#cb20-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> query_transfers <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">queryTransfers</span>(query_filter)<span class=\"op\">;</span></span></code></pre></div>\n</div>\n<h2 id=\"linked-events\"><a href=\"#linked-events\" class=\"anchor\">Linked\nEvents</a></h2>\n<p>When the <code>linked</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it links that\nevent with the next event in the batch, to create a chain of events, of\narbitrary length, which all succeed or fail together. The tail of a\nchain is denoted by the first event without this flag. The last event in\na batch may therefore never have the <code>linked</code> flag set as\nthis would leave a chain open-ended. Multiple chains or individual\nevents may coexist within a batch to succeed or fail independently.</p>\n<p>Events within a chain are executed within order, or are rolled back\non error, so that the effect of each event in the chain is visible to\nthe next, and so that the chain is either visible or invisible as a unit\nto subsequent events after the chain. The event that was the first to\nbreak the chain will have a unique error result. Other events in the\nchain will have their error result set to\n<code>linked_event_failed</code>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb21\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb21-1\"><a href=\"#cb21-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> batch <span class=\"op\">=</span> []<span class=\"op\">;</span> <span class=\"co\">// Array of transfer to create.</span></span>\n<span id=\"cb21-2\"><a href=\"#cb21-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">let</span> linkedFlag <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span></span>\n<span id=\"cb21-3\"><a href=\"#cb21-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>linkedFlag <span class=\"op\">|=</span> TransferFlags<span class=\"op\">.</span><span class=\"at\">linked</span><span class=\"op\">;</span></span>\n<span id=\"cb21-4\"><a href=\"#cb21-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-5\"><a href=\"#cb21-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// An individual transfer (successful):</span></span>\n<span id=\"cb21-6\"><a href=\"#cb21-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">1</span>n <span class=\"co\">/* , ... */</span> })<span class=\"op\">;</span></span>\n<span id=\"cb21-7\"><a href=\"#cb21-7\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-8\"><a href=\"#cb21-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 4 transfers (the last transfer in the chain closes the chain with linked=false):</span></span>\n<span id=\"cb21-9\"><a href=\"#cb21-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">2</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> linkedFlag })<span class=\"op\">;</span> <span class=\"co\">// Commit/rollback.</span></span>\n<span id=\"cb21-10\"><a href=\"#cb21-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">3</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> linkedFlag })<span class=\"op\">;</span> <span class=\"co\">// Commit/rollback.</span></span>\n<span id=\"cb21-11\"><a href=\"#cb21-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">2</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> linkedFlag })<span class=\"op\">;</span> <span class=\"co\">// Fail with exists</span></span>\n<span id=\"cb21-12\"><a href=\"#cb21-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">4</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span> })<span class=\"op\">;</span> <span class=\"co\">// Fail without committing.</span></span>\n<span id=\"cb21-13\"><a href=\"#cb21-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-14\"><a href=\"#cb21-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// An individual transfer (successful):</span></span>\n<span id=\"cb21-15\"><a href=\"#cb21-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// This should not see any effect from the failed chain above.</span></span>\n<span id=\"cb21-16\"><a href=\"#cb21-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">2</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span> })<span class=\"op\">;</span></span>\n<span id=\"cb21-17\"><a href=\"#cb21-17\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-18\"><a href=\"#cb21-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 2 transfers (the first transfer fails the chain):</span></span>\n<span id=\"cb21-19\"><a href=\"#cb21-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">2</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> linkedFlag })<span class=\"op\">;</span></span>\n<span id=\"cb21-20\"><a href=\"#cb21-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">3</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span> })<span class=\"op\">;</span></span>\n<span id=\"cb21-21\"><a href=\"#cb21-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-22\"><a href=\"#cb21-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// A chain of 2 transfers (successful):</span></span>\n<span id=\"cb21-23\"><a href=\"#cb21-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">3</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> linkedFlag })<span class=\"op\">;</span></span>\n<span id=\"cb21-24\"><a href=\"#cb21-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch<span class=\"op\">.</span><span class=\"fu\">push</span>({ <span class=\"dt\">id</span><span class=\"op\">:</span> <span class=\"dv\">4</span>n<span class=\"op\">,</span> <span class=\"co\">/* ..., */</span> <span class=\"dt\">flags</span><span class=\"op\">:</span> <span class=\"dv\">0</span> })<span class=\"op\">;</span></span>\n<span id=\"cb21-25\"><a href=\"#cb21-25\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-26\"><a href=\"#cb21-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>(batch)<span class=\"op\">;</span></span>\n<span id=\"cb21-27\"><a href=\"#cb21-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span></code></pre></div>\n</div>\n<h2 id=\"imported-events\"><a href=\"#imported-events\"\nclass=\"anchor\">Imported Events</a></h2>\n<p>When the <code>imported</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it allows\nimporting historical events with a user-defined timestamp.</p>\n<p>The entire batch of events must be set with the flag\n<code>imported</code>.</p>\n<p>It’s recommended to submit the whole batch as a <code>linked</code>\nchain of events, ensuring that if any event fails, none of them are\ncommitted, preserving the last timestamp unchanged. This approach gives\nthe application a chance to correct failed imported events,\nre-submitting the batch again with the same user-defined timestamps.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb22\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb22-1\"><a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// External source of time.</span></span>\n<span id=\"cb22-2\"><a href=\"#cb22-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">let</span> historical_timestamp <span class=\"op\">=</span> <span class=\"dv\">0</span>n</span>\n<span id=\"cb22-3\"><a href=\"#cb22-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Events loaded from an external source.</span></span>\n<span id=\"cb22-4\"><a href=\"#cb22-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> historical_accounts <span class=\"op\">=</span> []<span class=\"op\">;</span> <span class=\"co\">// Loaded from an external source.</span></span>\n<span id=\"cb22-5\"><a href=\"#cb22-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> historical_transfers <span class=\"op\">=</span> []<span class=\"op\">;</span> <span class=\"co\">// Loaded from an external source.</span></span>\n<span id=\"cb22-6\"><a href=\"#cb22-6\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-7\"><a href=\"#cb22-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// First, load and import all accounts with their timestamps from the historical source.</span></span>\n<span id=\"cb22-8\"><a href=\"#cb22-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> accounts <span class=\"op\">=</span> []<span class=\"op\">;</span></span>\n<span id=\"cb22-9\"><a href=\"#cb22-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> (<span class=\"kw\">let</span> index <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> i <span class=\"op\">&lt;</span> historical_accounts<span class=\"op\">.</span><span class=\"at\">length</span><span class=\"op\">;</span> i<span class=\"op\">++</span>) {</span>\n<span id=\"cb22-10\"><a href=\"#cb22-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"kw\">let</span> account <span class=\"op\">=</span> historical_accounts[i]<span class=\"op\">;</span></span>\n<span id=\"cb22-11\"><a href=\"#cb22-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb22-12\"><a href=\"#cb22-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  historical_timestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span><span class=\"op\">;</span></span>\n<span id=\"cb22-13\"><a href=\"#cb22-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  account<span class=\"op\">.</span><span class=\"at\">timestamp</span> <span class=\"op\">=</span> historical_timestamp<span class=\"op\">;</span></span>\n<span id=\"cb22-14\"><a href=\"#cb22-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// Set the account as `imported`.</span></span>\n<span id=\"cb22-15\"><a href=\"#cb22-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>  account<span class=\"op\">.</span><span class=\"at\">flags</span> <span class=\"op\">=</span> AccountFlags<span class=\"op\">.</span><span class=\"at\">imported</span><span class=\"op\">;</span></span>\n<span id=\"cb22-16\"><a href=\"#cb22-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb22-17\"><a href=\"#cb22-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// must be `linked`.</span></span>\n<span id=\"cb22-18\"><a href=\"#cb22-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"cf\">if</span> (index <span class=\"op\">&lt;</span> historical_accounts<span class=\"op\">.</span><span class=\"at\">length</span> <span class=\"op\">-</span> <span class=\"dv\">1</span>) {</span>\n<span id=\"cb22-19\"><a href=\"#cb22-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account<span class=\"op\">.</span><span class=\"at\">flags</span> <span class=\"op\">|=</span> AccountFlags<span class=\"op\">.</span><span class=\"at\">linked</span><span class=\"op\">;</span></span>\n<span id=\"cb22-20\"><a href=\"#cb22-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>  }</span>\n<span id=\"cb22-21\"><a href=\"#cb22-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-22\"><a href=\"#cb22-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>  accounts<span class=\"op\">.</span><span class=\"fu\">push</span>(account)<span class=\"op\">;</span></span>\n<span id=\"cb22-23\"><a href=\"#cb22-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>}</span>\n<span id=\"cb22-24\"><a href=\"#cb22-24\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-25\"><a href=\"#cb22-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> account_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createAccounts</span>(accounts)<span class=\"op\">;</span></span>\n<span id=\"cb22-26\"><a href=\"#cb22-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb22-27\"><a href=\"#cb22-27\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-28\"><a href=\"#cb22-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Then, load and import all transfers with their timestamps from the historical source.</span></span>\n<span id=\"cb22-29\"><a href=\"#cb22-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfers <span class=\"op\">=</span> []<span class=\"op\">;</span></span>\n<span id=\"cb22-30\"><a href=\"#cb22-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> (<span class=\"kw\">let</span> index <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> i <span class=\"op\">&lt;</span> historical_transfers<span class=\"op\">.</span><span class=\"at\">length</span><span class=\"op\">;</span> i<span class=\"op\">++</span>) {</span>\n<span id=\"cb22-31\"><a href=\"#cb22-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"kw\">let</span> transfer <span class=\"op\">=</span> historical_transfers[i]<span class=\"op\">;</span></span>\n<span id=\"cb22-32\"><a href=\"#cb22-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb22-33\"><a href=\"#cb22-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>  historical_timestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span><span class=\"op\">;</span></span>\n<span id=\"cb22-34\"><a href=\"#cb22-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>  transfer<span class=\"op\">.</span><span class=\"at\">timestamp</span> <span class=\"op\">=</span> historical_timestamp<span class=\"op\">;</span></span>\n<span id=\"cb22-35\"><a href=\"#cb22-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// Set the account as `imported`.</span></span>\n<span id=\"cb22-36\"><a href=\"#cb22-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>  transfer<span class=\"op\">.</span><span class=\"at\">flags</span> <span class=\"op\">=</span> TransferFlags<span class=\"op\">.</span><span class=\"at\">imported</span><span class=\"op\">;</span></span>\n<span id=\"cb22-37\"><a href=\"#cb22-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb22-38\"><a href=\"#cb22-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">// must be `linked`.</span></span>\n<span id=\"cb22-39\"><a href=\"#cb22-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"cf\">if</span> (index <span class=\"op\">&lt;</span> historical_transfers<span class=\"op\">.</span><span class=\"at\">length</span> <span class=\"op\">-</span> <span class=\"dv\">1</span>) {</span>\n<span id=\"cb22-40\"><a href=\"#cb22-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer<span class=\"op\">.</span><span class=\"at\">flags</span> <span class=\"op\">|=</span> TransferFlags<span class=\"op\">.</span><span class=\"at\">linked</span><span class=\"op\">;</span></span>\n<span id=\"cb22-41\"><a href=\"#cb22-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>  }</span>\n<span id=\"cb22-42\"><a href=\"#cb22-42\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-43\"><a href=\"#cb22-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>  transfers<span class=\"op\">.</span><span class=\"fu\">push</span>(transfer)<span class=\"op\">;</span></span>\n<span id=\"cb22-44\"><a href=\"#cb22-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>}</span>\n<span id=\"cb22-45\"><a href=\"#cb22-45\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-46\"><a href=\"#cb22-46\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">const</span> transfer_errors <span class=\"op\">=</span> <span class=\"cf\">await</span> client<span class=\"op\">.</span><span class=\"fu\">createTransfers</span>(transfers)<span class=\"op\">;</span></span>\n<span id=\"cb22-47\"><a href=\"#cb22-47\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Error handling omitted.</span></span>\n<span id=\"cb22-48\"><a href=\"#cb22-48\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-49\"><a href=\"#cb22-49\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// Since it is a linked chain, in case of any error the entire batch is rolled back and can be retried</span></span>\n<span id=\"cb22-50\"><a href=\"#cb22-50\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// with the same historical timestamps without regressing the cluster timestamp.</span></span></code></pre></div>\n</div>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/src/clients/node/README.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"coding/clients/python","html":"<!-- This file is generated by [/src/scripts/client_readmes.zig](/src/scripts/client_readmes.zig). -->\n\n<h1 id=\"tigerbeetle\"><a href=\"#tigerbeetle\"\nclass=\"anchor\">tigerbeetle</a></h1>\n<p>The TigerBeetle client for Python.</p>\n<h2 id=\"prerequisites\"><a href=\"#prerequisites\"\nclass=\"anchor\">Prerequisites</a></h2>\n<p>Linux &gt;= 5.6 is the only production environment we support. But\nfor ease of development we also support macOS and Windows.</p>\n<ul>\n<li>Python (or PyPy, etc) &gt;= <code>3.7</code></li>\n</ul>\n<h2 id=\"setup\"><a href=\"#setup\" class=\"anchor\">Setup</a></h2>\n<p>First, create a directory for your project and <code>cd</code> into\nthe directory.</p>\n<p>Then, install the TigerBeetle client:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>pip install tigerbeetle</code></pre>\n</div>\n<p>Now, create <code>main.py</code> and copy this into it:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> os</span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> tigerbeetle <span class=\"im\">as</span> tb</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">print</span>(<span class=\"st\">&quot;Import OK!&quot;</span>)</span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># To enable debug logging, via Python&#39;s built in logging module:</span></span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># logging.basicConfig(level=logging.DEBUG)</span></span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># tb.configure_logging(debug=True)</span></span></code></pre></div>\n</div>\n<p>Finally, build and run:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>python3 main.py</code></pre>\n</div>\n<p>Now that all prerequisites and dependencies are correctly set up,\nlet’s dig into using TigerBeetle.</p>\n<h2 id=\"sample-projects\"><a href=\"#sample-projects\"\nclass=\"anchor\">Sample projects</a></h2>\n<p>This document is primarily a reference guide to the client. Below are\nvarious sample projects demonstrating features of TigerBeetle.</p>\n<ul>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/python/samples/basic/\">Basic</a>:\nCreate two accounts and transfer an amount between them.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/python/samples/two-phase/\">Two-Phase\nTransfer</a>: Create two accounts and start a pending transfer between\nthem, then post the transfer.</li>\n<li><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/clients/python/samples/two-phase-many/\">Many\nTwo-Phase Transfers</a>: Create two accounts and start a number of\npending transfers between them, posting and voiding alternating\ntransfers.</li>\n</ul>\n<h2 id=\"creating-a-client\"><a href=\"#creating-a-client\"\nclass=\"anchor\">Creating a Client</a></h2>\n<p>A client is created with a cluster ID and replica addresses for all\nreplicas in the cluster. The cluster ID and replica addresses are both\nchosen by the system that starts the TigerBeetle cluster.</p>\n<p>Clients are thread-safe and a single instance should be shared\nbetween multiple concurrent tasks. This allows events to be <a\nhref=\"/coding/requests/#batching-events\">automatically batched</a>.</p>\n<p>Multiple clients are useful when connecting to more than one\nTigerBeetle cluster.</p>\n<p>In this example the cluster ID is <code>0</code> and there is one\nreplica. The address is read from the <code>TB_ADDRESS</code>\nenvironment variable and defaults to port <code>3000</code>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb4\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">with</span> tb.ClientSync(cluster_id<span class=\"op\">=</span><span class=\"dv\">0</span>, replica_addresses<span class=\"op\">=</span>os.getenv(<span class=\"st\">&quot;TB_ADDRESS&quot;</span>, <span class=\"st\">&quot;3000&quot;</span>)) <span class=\"im\">as</span> client:</span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Use the client.</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">pass</span></span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-5\"><a href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Alternatively:</span></span>\n<span id=\"cb4-6\"><a href=\"#cb4-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">async</span> <span class=\"cf\">with</span> tb.ClientAsync(cluster_id<span class=\"op\">=</span><span class=\"dv\">0</span>, replica_addresses<span class=\"op\">=</span>os.getenv(<span class=\"st\">&quot;TB_ADDRESS&quot;</span>, <span class=\"st\">&quot;3000&quot;</span>)) <span class=\"im\">as</span> client:</span>\n<span id=\"cb4-7\"><a href=\"#cb4-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Use the client, async!</span></span>\n<span id=\"cb4-8\"><a href=\"#cb4-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">pass</span></span></code></pre></div>\n</div>\n<p>The following are valid addresses:</p>\n<ul>\n<li><code>3000</code> (interpreted as <code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1:3000</code> (interpreted as\n<code>127.0.0.1:3000</code>)</li>\n<li><code>127.0.0.1</code> (interpreted as <code>127.0.0.1:3001</code>,\n<code>3001</code> is the default port)</li>\n</ul>\n<h2 id=\"creating-accounts\"><a href=\"#creating-accounts\"\nclass=\"anchor\">Creating Accounts</a></h2>\n<p>See details for account fields in the <a\nhref=\"/reference/account\">Accounts reference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb5\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>account <span class=\"op\">=</span> tb.Account(</span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span>tb.<span class=\"bu\">id</span>(), <span class=\"co\"># TigerBeetle time-based ID.</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-7\"><a href=\"#cb5-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-8\"><a href=\"#cb5-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-9\"><a href=\"#cb5-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-10\"><a href=\"#cb5-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb5-11\"><a href=\"#cb5-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">718</span>,</span>\n<span id=\"cb5-12\"><a href=\"#cb5-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-13\"><a href=\"#cb5-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb5-14\"><a href=\"#cb5-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb5-15\"><a href=\"#cb5-15\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-16\"><a href=\"#cb5-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>account_errors <span class=\"op\">=</span> client.create_accounts([account])</span>\n<span id=\"cb5-17\"><a href=\"#cb5-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n</div>\n<p>See details for the recommended ID scheme in <a\nhref=\"/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<h3 id=\"account-flags\"><a href=\"#account-flags\" class=\"anchor\">Account\nFlags</a></h3>\n<p>The account flags value is a bitfield. See details for these flags in\nthe <a href=\"/reference/account#flags\">Accounts reference</a>.</p>\n<p>To toggle behavior for an account, combine enum values stored in the\n<code>AccountFlags</code> object (it’s an <code>enum.IntFlag</code>)\nwith bitwise-or:</p>\n<ul>\n<li><code>AccountFlags.linked</code></li>\n<li><code>AccountFlags.debits_must_not_exceed_credits</code></li>\n<li><code>AccountFlags.credits_must_not_exceed_credits</code></li>\n<li><code>AccountFlags.history</code></li>\n</ul>\n<p>For example, to link two accounts where the first account\nadditionally has the <code>debits_must_not_exceed_credits</code>\nconstraint:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb6\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>account0 <span class=\"op\">=</span> tb.Account(</span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">100</span>,</span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-5\"><a href=\"#cb6-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-6\"><a href=\"#cb6-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-7\"><a href=\"#cb6-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-8\"><a href=\"#cb6-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-9\"><a href=\"#cb6-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-10\"><a href=\"#cb6-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb6-11\"><a href=\"#cb6-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb6-12\"><a href=\"#cb6-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-13\"><a href=\"#cb6-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.AccountFlags.LINKED <span class=\"op\">|</span> tb.AccountFlags.DEBITS_MUST_NOT_EXCEED_CREDITS,</span>\n<span id=\"cb6-14\"><a href=\"#cb6-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb6-15\"><a href=\"#cb6-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>account1 <span class=\"op\">=</span> tb.Account(</span>\n<span id=\"cb6-16\"><a href=\"#cb6-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">101</span>,</span>\n<span id=\"cb6-17\"><a href=\"#cb6-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-18\"><a href=\"#cb6-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-19\"><a href=\"#cb6-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-20\"><a href=\"#cb6-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-21\"><a href=\"#cb6-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-22\"><a href=\"#cb6-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-23\"><a href=\"#cb6-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-24\"><a href=\"#cb6-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb6-25\"><a href=\"#cb6-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb6-26\"><a href=\"#cb6-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb6-27\"><a href=\"#cb6-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.AccountFlags.HISTORY,</span>\n<span id=\"cb6-28\"><a href=\"#cb6-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb6-29\"><a href=\"#cb6-29\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-30\"><a href=\"#cb6-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>account_errors <span class=\"op\">=</span> client.create_accounts([account0, account1])</span>\n<span id=\"cb6-31\"><a href=\"#cb6-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n</div>\n<h3 id=\"response-and-errors\"><a href=\"#response-and-errors\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all accounts were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for an account that failed. The error\nobject contains an error code and the index of the account in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"/reference/requests/create_accounts\">create_accounts\nreference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb7\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>account0 <span class=\"op\">=</span> tb.Account(</span>\n<span id=\"cb7-2\"><a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb7-3\"><a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-4\"><a href=\"#cb7-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-5\"><a href=\"#cb7-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-6\"><a href=\"#cb7-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-7\"><a href=\"#cb7-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-8\"><a href=\"#cb7-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-9\"><a href=\"#cb7-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-10\"><a href=\"#cb7-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb7-11\"><a href=\"#cb7-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb7-12\"><a href=\"#cb7-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-13\"><a href=\"#cb7-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-14\"><a href=\"#cb7-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb7-15\"><a href=\"#cb7-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>account1 <span class=\"op\">=</span> tb.Account(</span>\n<span id=\"cb7-16\"><a href=\"#cb7-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb7-17\"><a href=\"#cb7-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-18\"><a href=\"#cb7-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-19\"><a href=\"#cb7-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-20\"><a href=\"#cb7-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-21\"><a href=\"#cb7-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-22\"><a href=\"#cb7-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-23\"><a href=\"#cb7-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-24\"><a href=\"#cb7-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb7-25\"><a href=\"#cb7-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb7-26\"><a href=\"#cb7-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-27\"><a href=\"#cb7-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-28\"><a href=\"#cb7-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb7-29\"><a href=\"#cb7-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>account2 <span class=\"op\">=</span> tb.Account(</span>\n<span id=\"cb7-30\"><a href=\"#cb7-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">104</span>,</span>\n<span id=\"cb7-31\"><a href=\"#cb7-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-32\"><a href=\"#cb7-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-33\"><a href=\"#cb7-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_pending<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-34\"><a href=\"#cb7-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credits_posted<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-35\"><a href=\"#cb7-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-36\"><a href=\"#cb7-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-37\"><a href=\"#cb7-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-38\"><a href=\"#cb7-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb7-39\"><a href=\"#cb7-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb7-40\"><a href=\"#cb7-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-41\"><a href=\"#cb7-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb7-42\"><a href=\"#cb7-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb7-43\"><a href=\"#cb7-43\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-44\"><a href=\"#cb7-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>account_errors <span class=\"op\">=</span> client.create_accounts([account0, account1, account2])</span>\n<span id=\"cb7-45\"><a href=\"#cb7-45\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> error <span class=\"kw\">in</span> account_errors:</span>\n<span id=\"cb7-46\"><a href=\"#cb7-46\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> error.result <span class=\"op\">==</span> tb.CreateAccountResult.EXISTS:</span>\n<span id=\"cb7-47\"><a href=\"#cb7-47\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(<span class=\"ss\">f&quot;Batch account at </span><span class=\"sc\">{</span>error<span class=\"sc\">.</span>index<span class=\"sc\">}</span><span class=\"ss\"> already exists.&quot;</span>)</span>\n<span id=\"cb7-48\"><a href=\"#cb7-48\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">else</span>:</span>\n<span id=\"cb7-49\"><a href=\"#cb7-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(<span class=\"ss\">f&quot;Batch account at $</span><span class=\"sc\">{</span>error<span class=\"sc\">.</span>index<span class=\"sc\">}</span><span class=\"ss\"> failed to create: </span><span class=\"sc\">{</span>error<span class=\"sc\">.</span>result<span class=\"sc\">}</span><span class=\"ss\">.&quot;</span>)</span></code></pre></div>\n</div>\n<p>To handle errors you can compare the result code returned from\n<code>client.create_accounts</code> with enum values in the\n<code>CreateAccountResult</code> object.</p>\n<h2 id=\"account-lookup\"><a href=\"#account-lookup\" class=\"anchor\">Account\nLookup</a></h2>\n<p>Account lookup is batched, like account creation. Pass in all IDs to\nfetch. The account for each matched ID is returned.</p>\n<p>If no account matches an ID, no object is returned for that account.\nSo the order of accounts in the response is not necessarily the same as\nthe order of IDs in the request. You can refer to the ID field in the\nresponse to distinguish accounts.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb8\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb8-1\"><a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts <span class=\"op\">=</span> client.lookup_accounts([<span class=\"dv\">100</span>, <span class=\"dv\">101</span>])</span></code></pre></div>\n</div>\n<h2 id=\"create-transfers\"><a href=\"#create-transfers\"\nclass=\"anchor\">Create Transfers</a></h2>\n<p>This creates a journal entry between two accounts.</p>\n<p>See details for transfer fields in the <a\nhref=\"/reference/transfer\">Transfers reference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb9\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers <span class=\"op\">=</span> [tb.Transfer(</span>\n<span id=\"cb9-2\"><a href=\"#cb9-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span>tb.<span class=\"bu\">id</span>(), <span class=\"co\"># TigerBeetle time-based ID.</span></span>\n<span id=\"cb9-3\"><a href=\"#cb9-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb9-4\"><a href=\"#cb9-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb9-5\"><a href=\"#cb9-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb9-6\"><a href=\"#cb9-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb9-7\"><a href=\"#cb9-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb9-8\"><a href=\"#cb9-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb9-9\"><a href=\"#cb9-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb9-10\"><a href=\"#cb9-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb9-11\"><a href=\"#cb9-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb9-12\"><a href=\"#cb9-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb9-13\"><a href=\"#cb9-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb9-14\"><a href=\"#cb9-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb9-15\"><a href=\"#cb9-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>)]</span>\n<span id=\"cb9-16\"><a href=\"#cb9-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb9-17\"><a href=\"#cb9-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers(transfers)</span>\n<span id=\"cb9-18\"><a href=\"#cb9-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n</div>\n<p>See details for the recommended ID scheme in <a\nhref=\"/coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">time-based\nidentifiers</a>.</p>\n<h3 id=\"response-and-errors-1\"><a href=\"#response-and-errors-1\"\nclass=\"anchor\">Response and Errors</a></h3>\n<p>The response is an empty array if all transfers were created\nsuccessfully. If the response is non-empty, each object in the response\narray contains error information for a transfer that failed. The error\nobject contains an error code and the index of the transfer in the\nrequest batch.</p>\n<p>See all error conditions in the <a\nhref=\"/reference/requests/create_transfers\">create_transfers\nreference</a>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb10\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb10-1\"><a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> [tb.Transfer(</span>\n<span id=\"cb10-2\"><a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb10-3\"><a href=\"#cb10-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb10-4\"><a href=\"#cb10-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb10-5\"><a href=\"#cb10-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb10-6\"><a href=\"#cb10-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-7\"><a href=\"#cb10-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-8\"><a href=\"#cb10-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-9\"><a href=\"#cb10-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-10\"><a href=\"#cb10-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-11\"><a href=\"#cb10-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb10-12\"><a href=\"#cb10-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb10-13\"><a href=\"#cb10-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-14\"><a href=\"#cb10-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-15\"><a href=\"#cb10-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>),</span>\n<span id=\"cb10-16\"><a href=\"#cb10-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    tb.Transfer(</span>\n<span id=\"cb10-17\"><a href=\"#cb10-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">2</span>,</span>\n<span id=\"cb10-18\"><a href=\"#cb10-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb10-19\"><a href=\"#cb10-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb10-20\"><a href=\"#cb10-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb10-21\"><a href=\"#cb10-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-22\"><a href=\"#cb10-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-23\"><a href=\"#cb10-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-24\"><a href=\"#cb10-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-25\"><a href=\"#cb10-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-26\"><a href=\"#cb10-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb10-27\"><a href=\"#cb10-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb10-28\"><a href=\"#cb10-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-29\"><a href=\"#cb10-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-30\"><a href=\"#cb10-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>),</span>\n<span id=\"cb10-31\"><a href=\"#cb10-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>    tb.Transfer(</span>\n<span id=\"cb10-32\"><a href=\"#cb10-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">3</span>,</span>\n<span id=\"cb10-33\"><a href=\"#cb10-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb10-34\"><a href=\"#cb10-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb10-35\"><a href=\"#cb10-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb10-36\"><a href=\"#cb10-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-37\"><a href=\"#cb10-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-38\"><a href=\"#cb10-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-39\"><a href=\"#cb10-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-40\"><a href=\"#cb10-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-41\"><a href=\"#cb10-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb10-42\"><a href=\"#cb10-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb10-43\"><a href=\"#cb10-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-44\"><a href=\"#cb10-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb10-45\"><a href=\"#cb10-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>)]</span>\n<span id=\"cb10-46\"><a href=\"#cb10-46\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb10-47\"><a href=\"#cb10-47\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers(batch)</span>\n<span id=\"cb10-48\"><a href=\"#cb10-48\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> error <span class=\"kw\">in</span> transfer_errors:</span>\n<span id=\"cb10-49\"><a href=\"#cb10-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> error.result <span class=\"op\">==</span> tb.CreateTransferResult.EXISTS:</span>\n<span id=\"cb10-50\"><a href=\"#cb10-50\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(<span class=\"ss\">f&quot;Batch transfer at </span><span class=\"sc\">{</span>error<span class=\"sc\">.</span>index<span class=\"sc\">}</span><span class=\"ss\"> already exists.&quot;</span>)</span>\n<span id=\"cb10-51\"><a href=\"#cb10-51\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">else</span>:</span>\n<span id=\"cb10-52\"><a href=\"#cb10-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(<span class=\"ss\">f&quot;Batch transfer at </span><span class=\"sc\">{</span>error<span class=\"sc\">.</span>index<span class=\"sc\">}</span><span class=\"ss\"> failed to create: </span><span class=\"sc\">{</span>error<span class=\"sc\">.</span>result<span class=\"sc\">}</span><span class=\"ss\">.&quot;</span>)</span></code></pre></div>\n</div>\n<p>To handle errors you can compare the result code returned from\n<code>client.create_transfers</code> with enum values in the\n<code>CreateTransferResult</code> object.</p>\n<h2 id=\"batching\"><a href=\"#batching\" class=\"anchor\">Batching</a></h2>\n<p>TigerBeetle performance is maximized when you batch API requests. A\nclient instance shared across multiple threads/tasks can automatically\nbatch concurrent requests, but the application must still send as many\nevents as possible in a single call. For example, if you insert 1\nmillion transfers sequentially, one at a time, the insert rate will be a\n<em>fraction</em> of the potential, because the client will wait for a\nreply between each one.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb11\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> [] <span class=\"co\"># Array of transfer to create.</span></span>\n<span id=\"cb11-2\"><a href=\"#cb11-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> transfer <span class=\"kw\">in</span> batch:</span>\n<span id=\"cb11-3\"><a href=\"#cb11-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer_errors <span class=\"op\">=</span> client.create_transfers([transfer])</span>\n<span id=\"cb11-4\"><a href=\"#cb11-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n</div>\n<p>Instead, <strong>always batch as much as you can</strong>. The\nmaximum batch size is set in the TigerBeetle server. The default is\n8189.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb12\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb12-1\"><a href=\"#cb12-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> [] <span class=\"co\"># Array of transfer to create.</span></span>\n<span id=\"cb12-2\"><a href=\"#cb12-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>BATCH_SIZE <span class=\"op\">=</span> <span class=\"dv\">8189</span> <span class=\"co\">#FIXME</span></span>\n<span id=\"cb12-3\"><a href=\"#cb12-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> i <span class=\"kw\">in</span> <span class=\"bu\">range</span>(<span class=\"dv\">0</span>, <span class=\"bu\">len</span>(batch), BATCH_SIZE):</span>\n<span id=\"cb12-4\"><a href=\"#cb12-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer_errors <span class=\"op\">=</span> client.create_transfers(</span>\n<span id=\"cb12-5\"><a href=\"#cb12-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        batch[i:<span class=\"bu\">min</span>(<span class=\"bu\">len</span>(batch), i <span class=\"op\">+</span> BATCH_SIZE)],</span>\n<span id=\"cb12-6\"><a href=\"#cb12-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    )</span>\n<span id=\"cb12-7\"><a href=\"#cb12-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n</div>\n<h3 id=\"queues-and-workers\"><a href=\"#queues-and-workers\"\nclass=\"anchor\">Queues and Workers</a></h3>\n<p>If you are making requests to TigerBeetle from workers pulling jobs\nfrom a queue, you can batch requests to TigerBeetle by having the worker\nact on multiple jobs from the queue at once rather than one at a time.\ni.e. pulling multiple jobs from the queue rather than just one.</p>\n<h2 id=\"transfer-flags\"><a href=\"#transfer-flags\"\nclass=\"anchor\">Transfer Flags</a></h2>\n<p>The transfer <code>flags</code> value is a bitfield. See details for\nthese flags in the <a href=\"/reference/transfer#flags\">Transfers\nreference</a>.</p>\n<p>To toggle behavior for a transfer, combine enum values stored in the\n<code>TransferFlags</code> object (it’s an <code>enum.IntFlag</code>)\nwith bitwise-or:</p>\n<ul>\n<li><code>TransferFlags.linked</code></li>\n<li><code>TransferFlags.pending</code></li>\n<li><code>TransferFlags.post_pending_transfer</code></li>\n<li><code>TransferFlags.void_pending_transfer</code></li>\n</ul>\n<p>For example, to link <code>transfer0</code> and\n<code>transfer1</code>:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb13\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb13-1\"><a href=\"#cb13-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer0 <span class=\"op\">=</span> tb.Transfer(</span>\n<span id=\"cb13-2\"><a href=\"#cb13-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">4</span>,</span>\n<span id=\"cb13-3\"><a href=\"#cb13-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb13-4\"><a href=\"#cb13-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb13-5\"><a href=\"#cb13-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb13-6\"><a href=\"#cb13-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-7\"><a href=\"#cb13-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-8\"><a href=\"#cb13-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-9\"><a href=\"#cb13-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-10\"><a href=\"#cb13-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-11\"><a href=\"#cb13-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb13-12\"><a href=\"#cb13-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb13-13\"><a href=\"#cb13-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.TransferFlags.LINKED,</span>\n<span id=\"cb13-14\"><a href=\"#cb13-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-15\"><a href=\"#cb13-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb13-16\"><a href=\"#cb13-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer1 <span class=\"op\">=</span> tb.Transfer(</span>\n<span id=\"cb13-17\"><a href=\"#cb13-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">5</span>,</span>\n<span id=\"cb13-18\"><a href=\"#cb13-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb13-19\"><a href=\"#cb13-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb13-20\"><a href=\"#cb13-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb13-21\"><a href=\"#cb13-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-22\"><a href=\"#cb13-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-23\"><a href=\"#cb13-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-24\"><a href=\"#cb13-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-25\"><a href=\"#cb13-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-26\"><a href=\"#cb13-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb13-27\"><a href=\"#cb13-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb13-28\"><a href=\"#cb13-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-29\"><a href=\"#cb13-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb13-30\"><a href=\"#cb13-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb13-31\"><a href=\"#cb13-31\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb13-32\"><a href=\"#cb13-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Create the transfer</span></span>\n<span id=\"cb13-33\"><a href=\"#cb13-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers([transfer0, transfer1])</span>\n<span id=\"cb13-34\"><a href=\"#cb13-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n</div>\n<h3 id=\"two-phase-transfers\"><a href=\"#two-phase-transfers\"\nclass=\"anchor\">Two-Phase Transfers</a></h3>\n<p>Two-phase transfers are supported natively by toggling the\nappropriate flag. TigerBeetle will then adjust the\n<code>credits_pending</code> and <code>debits_pending</code> fields of\nthe appropriate accounts. A corresponding post pending transfer then\nneeds to be sent to post or void the transfer.</p>\n<h4 id=\"post-a-pending-transfer\"><a href=\"#post-a-pending-transfer\"\nclass=\"anchor\">Post a Pending Transfer</a></h4>\n<p>With <code>flags</code> set to <code>post_pending_transfer</code>,\nTigerBeetle will post the transfer. TigerBeetle will atomically roll\nback the changes to <code>debits_pending</code> and\n<code>credits_pending</code> of the appropriate accounts and apply them\nto the <code>debits_posted</code> and <code>credits_posted</code>\nbalances.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb14\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb14-1\"><a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer0 <span class=\"op\">=</span> tb.Transfer(</span>\n<span id=\"cb14-2\"><a href=\"#cb14-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">6</span>,</span>\n<span id=\"cb14-3\"><a href=\"#cb14-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb14-4\"><a href=\"#cb14-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb14-5\"><a href=\"#cb14-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb14-6\"><a href=\"#cb14-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-7\"><a href=\"#cb14-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-8\"><a href=\"#cb14-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-9\"><a href=\"#cb14-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-10\"><a href=\"#cb14-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-11\"><a href=\"#cb14-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb14-12\"><a href=\"#cb14-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb14-13\"><a href=\"#cb14-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.TransferFlags.PENDING,</span>\n<span id=\"cb14-14\"><a href=\"#cb14-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-15\"><a href=\"#cb14-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb14-16\"><a href=\"#cb14-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-17\"><a href=\"#cb14-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers([transfer0])</span>\n<span id=\"cb14-18\"><a href=\"#cb14-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span>\n<span id=\"cb14-19\"><a href=\"#cb14-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-20\"><a href=\"#cb14-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer1 <span class=\"op\">=</span> tb.Transfer(</span>\n<span id=\"cb14-21\"><a href=\"#cb14-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">7</span>,</span>\n<span id=\"cb14-22\"><a href=\"#cb14-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb14-23\"><a href=\"#cb14-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb14-24\"><a href=\"#cb14-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Post the entire pending amount.</span></span>\n<span id=\"cb14-25\"><a href=\"#cb14-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span>tb.amount_max,</span>\n<span id=\"cb14-26\"><a href=\"#cb14-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">6</span>,</span>\n<span id=\"cb14-27\"><a href=\"#cb14-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-28\"><a href=\"#cb14-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-29\"><a href=\"#cb14-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-30\"><a href=\"#cb14-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-31\"><a href=\"#cb14-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb14-32\"><a href=\"#cb14-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb14-33\"><a href=\"#cb14-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.TransferFlags.POST_PENDING_TRANSFER,</span>\n<span id=\"cb14-34\"><a href=\"#cb14-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb14-35\"><a href=\"#cb14-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb14-36\"><a href=\"#cb14-36\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb14-37\"><a href=\"#cb14-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers([transfer1])</span>\n<span id=\"cb14-38\"><a href=\"#cb14-38\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n</div>\n<h4 id=\"void-a-pending-transfer\"><a href=\"#void-a-pending-transfer\"\nclass=\"anchor\">Void a Pending Transfer</a></h4>\n<p>In contrast, with <code>flags</code> set to\n<code>void_pending_transfer</code>, TigerBeetle will void the transfer.\nTigerBeetle will roll back the changes to <code>debits_pending</code>\nand <code>credits_pending</code> of the appropriate accounts and\n<strong>not</strong> apply them to the <code>debits_posted</code> and\n<code>credits_posted</code> balances.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb15\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb15-1\"><a href=\"#cb15-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer0 <span class=\"op\">=</span> tb.Transfer(</span>\n<span id=\"cb15-2\"><a href=\"#cb15-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">8</span>,</span>\n<span id=\"cb15-3\"><a href=\"#cb15-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb15-4\"><a href=\"#cb15-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb15-5\"><a href=\"#cb15-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb15-6\"><a href=\"#cb15-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-7\"><a href=\"#cb15-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-8\"><a href=\"#cb15-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-9\"><a href=\"#cb15-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-10\"><a href=\"#cb15-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-11\"><a href=\"#cb15-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb15-12\"><a href=\"#cb15-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb15-13\"><a href=\"#cb15-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.TransferFlags.PENDING,</span>\n<span id=\"cb15-14\"><a href=\"#cb15-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-15\"><a href=\"#cb15-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb15-16\"><a href=\"#cb15-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-17\"><a href=\"#cb15-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers([transfer0])</span>\n<span id=\"cb15-18\"><a href=\"#cb15-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span>\n<span id=\"cb15-19\"><a href=\"#cb15-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-20\"><a href=\"#cb15-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer1 <span class=\"op\">=</span> tb.Transfer(</span>\n<span id=\"cb15-21\"><a href=\"#cb15-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">9</span>,</span>\n<span id=\"cb15-22\"><a href=\"#cb15-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    debit_account_id<span class=\"op\">=</span><span class=\"dv\">102</span>,</span>\n<span id=\"cb15-23\"><a href=\"#cb15-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    credit_account_id<span class=\"op\">=</span><span class=\"dv\">103</span>,</span>\n<span id=\"cb15-24\"><a href=\"#cb15-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    amount<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-25\"><a href=\"#cb15-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pending_id<span class=\"op\">=</span><span class=\"dv\">8</span>,</span>\n<span id=\"cb15-26\"><a href=\"#cb15-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-27\"><a href=\"#cb15-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-28\"><a href=\"#cb15-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-29\"><a href=\"#cb15-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timeout<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-30\"><a href=\"#cb15-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">1</span>,</span>\n<span id=\"cb15-31\"><a href=\"#cb15-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">720</span>,</span>\n<span id=\"cb15-32\"><a href=\"#cb15-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.TransferFlags.VOID_PENDING_TRANSFER,</span>\n<span id=\"cb15-33\"><a href=\"#cb15-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb15-34\"><a href=\"#cb15-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb15-35\"><a href=\"#cb15-35\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb15-36\"><a href=\"#cb15-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers([transfer1])</span>\n<span id=\"cb15-37\"><a href=\"#cb15-37\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n</div>\n<h2 id=\"transfer-lookup\"><a href=\"#transfer-lookup\"\nclass=\"anchor\">Transfer Lookup</a></h2>\n<p>NOTE: While transfer lookup exists, it is not a flexible query API.\nWe are developing query APIs and there will be new methods for querying\ntransfers in the future.</p>\n<p>Transfer lookup is batched, like transfer creation. Pass in all\n<code>id</code>s to fetch, and matched transfers are returned.</p>\n<p>If no transfer matches an <code>id</code>, no object is returned for\nthat transfer. So the order of transfers in the response is not\nnecessarily the same as the order of <code>id</code>s in the request.\nYou can refer to the <code>id</code> field in the response to\ndistinguish transfers.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb16\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb16-1\"><a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers <span class=\"op\">=</span> client.lookup_transfers([<span class=\"dv\">1</span>, <span class=\"dv\">2</span>])</span></code></pre></div>\n</div>\n<h2 id=\"get-account-transfers\"><a href=\"#get-account-transfers\"\nclass=\"anchor\">Get Account Transfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the transfers involving a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb17\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb17-1\"><a href=\"#cb17-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">filter</span> <span class=\"op\">=</span> tb.AccountFilter(</span>\n<span id=\"cb17-2\"><a href=\"#cb17-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account_id<span class=\"op\">=</span><span class=\"dv\">2</span>,</span>\n<span id=\"cb17-3\"><a href=\"#cb17-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by UserData.</span></span>\n<span id=\"cb17-4\"><a href=\"#cb17-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb17-5\"><a href=\"#cb17-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb17-6\"><a href=\"#cb17-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Code.</span></span>\n<span id=\"cb17-7\"><a href=\"#cb17-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp_min<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Timestamp.</span></span>\n<span id=\"cb17-8\"><a href=\"#cb17-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp_max<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Timestamp.</span></span>\n<span id=\"cb17-9\"><a href=\"#cb17-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    limit<span class=\"op\">=</span><span class=\"dv\">10</span>, <span class=\"co\"># Limit to ten balances at most.</span></span>\n<span id=\"cb17-10\"><a href=\"#cb17-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.AccountFilterFlags.DEBITS <span class=\"op\">|</span> <span class=\"co\"># Include transfer from the debit side.</span></span>\n<span id=\"cb17-11\"><a href=\"#cb17-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    tb.AccountFilterFlags.CREDITS <span class=\"op\">|</span> <span class=\"co\"># Include transfer from the credit side.</span></span>\n<span id=\"cb17-12\"><a href=\"#cb17-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    tb.AccountFilterFlags.REVERSED, <span class=\"co\"># Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb17-13\"><a href=\"#cb17-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb17-14\"><a href=\"#cb17-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb17-15\"><a href=\"#cb17-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>account_transfers <span class=\"op\">=</span> client.get_account_transfers(<span class=\"bu\">filter</span>)</span></code></pre></div>\n</div>\n<h2 id=\"get-account-balances\"><a href=\"#get-account-balances\"\nclass=\"anchor\">Get Account Balances</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Fetches the point-in-time balances of a given account, allowing basic\nfilter and pagination capabilities.</p>\n<p>Only accounts created with the flag <a\nhref=\"/reference/account#flagshistory\"><code>history</code></a> set\nretain <a href=\"/reference/requests/get_account_balances\">historical\nbalances</a>.</p>\n<p>The balances in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb18\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb18-1\"><a href=\"#cb18-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">filter</span> <span class=\"op\">=</span> tb.AccountFilter(</span>\n<span id=\"cb18-2\"><a href=\"#cb18-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account_id<span class=\"op\">=</span><span class=\"dv\">2</span>,</span>\n<span id=\"cb18-3\"><a href=\"#cb18-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by UserData.</span></span>\n<span id=\"cb18-4\"><a href=\"#cb18-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb18-5\"><a href=\"#cb18-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">0</span>,</span>\n<span id=\"cb18-6\"><a href=\"#cb18-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Code.</span></span>\n<span id=\"cb18-7\"><a href=\"#cb18-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp_min<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Timestamp.</span></span>\n<span id=\"cb18-8\"><a href=\"#cb18-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp_max<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Timestamp.</span></span>\n<span id=\"cb18-9\"><a href=\"#cb18-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    limit<span class=\"op\">=</span><span class=\"dv\">10</span>, <span class=\"co\"># Limit to ten balances at most.</span></span>\n<span id=\"cb18-10\"><a href=\"#cb18-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.AccountFilterFlags.DEBITS <span class=\"op\">|</span> <span class=\"co\"># Include transfer from the debit side.</span></span>\n<span id=\"cb18-11\"><a href=\"#cb18-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    tb.AccountFilterFlags.CREDITS <span class=\"op\">|</span> <span class=\"co\"># Include transfer from the credit side.</span></span>\n<span id=\"cb18-12\"><a href=\"#cb18-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    tb.AccountFilterFlags.REVERSED, <span class=\"co\"># Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb18-13\"><a href=\"#cb18-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb18-14\"><a href=\"#cb18-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb18-15\"><a href=\"#cb18-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>account_balances <span class=\"op\">=</span> client.get_account_balances(<span class=\"bu\">filter</span>)</span></code></pre></div>\n</div>\n<h2 id=\"query-accounts\"><a href=\"#query-accounts\" class=\"anchor\">Query\nAccounts</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query accounts by the intersection of some fields and by timestamp\nrange.</p>\n<p>The accounts in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb19\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb19-1\"><a href=\"#cb19-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>query_filter <span class=\"op\">=</span> tb.QueryFilter(</span>\n<span id=\"cb19-2\"><a href=\"#cb19-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">1000</span>, <span class=\"co\"># Filter by UserData.</span></span>\n<span id=\"cb19-3\"><a href=\"#cb19-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">100</span>,</span>\n<span id=\"cb19-4\"><a href=\"#cb19-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb19-5\"><a href=\"#cb19-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">1</span>, <span class=\"co\"># Filter by Code.</span></span>\n<span id=\"cb19-6\"><a href=\"#cb19-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Ledger.</span></span>\n<span id=\"cb19-7\"><a href=\"#cb19-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp_min<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Timestamp.</span></span>\n<span id=\"cb19-8\"><a href=\"#cb19-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp_max<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Timestamp.</span></span>\n<span id=\"cb19-9\"><a href=\"#cb19-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    limit<span class=\"op\">=</span><span class=\"dv\">10</span>, <span class=\"co\"># Limit to ten balances at most.</span></span>\n<span id=\"cb19-10\"><a href=\"#cb19-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.QueryFilterFlags.REVERSED, <span class=\"co\"># Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb19-11\"><a href=\"#cb19-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb19-12\"><a href=\"#cb19-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb19-13\"><a href=\"#cb19-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>query_accounts <span class=\"op\">=</span> client.query_accounts(query_filter)</span></code></pre></div>\n</div>\n<h2 id=\"query-transfers\"><a href=\"#query-transfers\" class=\"anchor\">Query\nTransfers</a></h2>\n<p>NOTE: This is a preview API that is subject to breaking changes once\nwe have a stable querying API.</p>\n<p>Query transfers by the intersection of some fields and by timestamp\nrange.</p>\n<p>The transfers in the response are sorted by <code>timestamp</code> in\nchronological or reverse-chronological order.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb20\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb20-1\"><a href=\"#cb20-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>query_filter <span class=\"op\">=</span> tb.QueryFilter(</span>\n<span id=\"cb20-2\"><a href=\"#cb20-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_128<span class=\"op\">=</span><span class=\"dv\">1000</span>, <span class=\"co\"># Filter by UserData.</span></span>\n<span id=\"cb20-3\"><a href=\"#cb20-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_64<span class=\"op\">=</span><span class=\"dv\">100</span>,</span>\n<span id=\"cb20-4\"><a href=\"#cb20-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_data_32<span class=\"op\">=</span><span class=\"dv\">10</span>,</span>\n<span id=\"cb20-5\"><a href=\"#cb20-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    code<span class=\"op\">=</span><span class=\"dv\">1</span>, <span class=\"co\"># Filter by Code.</span></span>\n<span id=\"cb20-6\"><a href=\"#cb20-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ledger<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Ledger.</span></span>\n<span id=\"cb20-7\"><a href=\"#cb20-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp_min<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Timestamp.</span></span>\n<span id=\"cb20-8\"><a href=\"#cb20-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    timestamp_max<span class=\"op\">=</span><span class=\"dv\">0</span>, <span class=\"co\"># No filter by Timestamp.</span></span>\n<span id=\"cb20-9\"><a href=\"#cb20-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    limit<span class=\"op\">=</span><span class=\"dv\">10</span>, <span class=\"co\"># Limit to ten balances at most.</span></span>\n<span id=\"cb20-10\"><a href=\"#cb20-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    flags<span class=\"op\">=</span>tb.QueryFilterFlags.REVERSED, <span class=\"co\"># Sort by timestamp in reverse-chronological order.</span></span>\n<span id=\"cb20-11\"><a href=\"#cb20-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>)</span>\n<span id=\"cb20-12\"><a href=\"#cb20-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb20-13\"><a href=\"#cb20-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>query_transfers <span class=\"op\">=</span> client.query_transfers(query_filter)</span></code></pre></div>\n</div>\n<h2 id=\"linked-events\"><a href=\"#linked-events\" class=\"anchor\">Linked\nEvents</a></h2>\n<p>When the <code>linked</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it links that\nevent with the next event in the batch, to create a chain of events, of\narbitrary length, which all succeed or fail together. The tail of a\nchain is denoted by the first event without this flag. The last event in\na batch may therefore never have the <code>linked</code> flag set as\nthis would leave a chain open-ended. Multiple chains or individual\nevents may coexist within a batch to succeed or fail independently.</p>\n<p>Events within a chain are executed within order, or are rolled back\non error, so that the effect of each event in the chain is visible to\nthe next, and so that the chain is either visible or invisible as a unit\nto subsequent events after the chain. The event that was the first to\nbreak the chain will have a unique error result. Other events in the\nchain will have their error result set to\n<code>linked_event_failed</code>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb21\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb21-1\"><a href=\"#cb21-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch <span class=\"op\">=</span> [] <span class=\"co\"># List of tb.Transfers to create.</span></span>\n<span id=\"cb21-2\"><a href=\"#cb21-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>linkedFlag <span class=\"op\">=</span> <span class=\"dv\">0</span></span>\n<span id=\"cb21-3\"><a href=\"#cb21-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>linkedFlag <span class=\"op\">|=</span> tb.TransferFlags.LINKED</span>\n<span id=\"cb21-4\"><a href=\"#cb21-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-5\"><a href=\"#cb21-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># An individual transfer (successful):</span></span>\n<span id=\"cb21-6\"><a href=\"#cb21-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">1</span>))</span>\n<span id=\"cb21-7\"><a href=\"#cb21-7\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-8\"><a href=\"#cb21-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># A chain of 4 transfers (the last transfer in the chain closes the chain with linked=false):</span></span>\n<span id=\"cb21-9\"><a href=\"#cb21-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">2</span>, flags<span class=\"op\">=</span>linkedFlag)) <span class=\"co\"># Commit/rollback.</span></span>\n<span id=\"cb21-10\"><a href=\"#cb21-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">3</span>, flags<span class=\"op\">=</span>linkedFlag)) <span class=\"co\"># Commit/rollback.</span></span>\n<span id=\"cb21-11\"><a href=\"#cb21-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">2</span>, flags<span class=\"op\">=</span>linkedFlag)) <span class=\"co\"># Fail with exists</span></span>\n<span id=\"cb21-12\"><a href=\"#cb21-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">4</span>, flags<span class=\"op\">=</span><span class=\"dv\">0</span>)) <span class=\"co\"># Fail without committing.</span></span>\n<span id=\"cb21-13\"><a href=\"#cb21-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-14\"><a href=\"#cb21-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># An individual transfer (successful):</span></span>\n<span id=\"cb21-15\"><a href=\"#cb21-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># This should not see any effect from the failed chain above.</span></span>\n<span id=\"cb21-16\"><a href=\"#cb21-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">2</span>, flags<span class=\"op\">=</span><span class=\"dv\">0</span> ))</span>\n<span id=\"cb21-17\"><a href=\"#cb21-17\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-18\"><a href=\"#cb21-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># A chain of 2 transfers (the first transfer fails the chain):</span></span>\n<span id=\"cb21-19\"><a href=\"#cb21-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">2</span>, flags<span class=\"op\">=</span>linkedFlag))</span>\n<span id=\"cb21-20\"><a href=\"#cb21-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">3</span>, flags<span class=\"op\">=</span><span class=\"dv\">0</span>))</span>\n<span id=\"cb21-21\"><a href=\"#cb21-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-22\"><a href=\"#cb21-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># A chain of 2 transfers (successful):</span></span>\n<span id=\"cb21-23\"><a href=\"#cb21-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">3</span>, flags<span class=\"op\">=</span>linkedFlag))</span>\n<span id=\"cb21-24\"><a href=\"#cb21-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>batch.append(tb.Transfer(<span class=\"bu\">id</span><span class=\"op\">=</span><span class=\"dv\">4</span>, flags<span class=\"op\">=</span><span class=\"dv\">0</span>))</span>\n<span id=\"cb21-25\"><a href=\"#cb21-25\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb21-26\"><a href=\"#cb21-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers(batch)</span>\n<span id=\"cb21-27\"><a href=\"#cb21-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span></code></pre></div>\n</div>\n<h2 id=\"imported-events\"><a href=\"#imported-events\"\nclass=\"anchor\">Imported Events</a></h2>\n<p>When the <code>imported</code> flag is specified for an account when\ncreating accounts or a transfer when creating transfers, it allows\nimporting historical events with a user-defined timestamp.</p>\n<p>The entire batch of events must be set with the flag\n<code>imported</code>.</p>\n<p>It’s recommended to submit the whole batch as a <code>linked</code>\nchain of events, ensuring that if any event fails, none of them are\ncommitted, preserving the last timestamp unchanged. This approach gives\nthe application a chance to correct failed imported events,\nre-submitting the batch again with the same user-defined timestamps.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb22\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb22-1\"><a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># External source of time.</span></span>\n<span id=\"cb22-2\"><a href=\"#cb22-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>historical_timestamp <span class=\"op\">=</span> <span class=\"dv\">0</span></span>\n<span id=\"cb22-3\"><a href=\"#cb22-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Events loaded from an external source.</span></span>\n<span id=\"cb22-4\"><a href=\"#cb22-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>historical_accounts <span class=\"op\">=</span> [] <span class=\"co\"># Loaded from an external source.</span></span>\n<span id=\"cb22-5\"><a href=\"#cb22-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>historical_transfers <span class=\"op\">=</span> [] <span class=\"co\"># Loaded from an external source.</span></span>\n<span id=\"cb22-6\"><a href=\"#cb22-6\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-7\"><a href=\"#cb22-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># First, load and import all accounts with their timestamps from the historical source.</span></span>\n<span id=\"cb22-8\"><a href=\"#cb22-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>accounts <span class=\"op\">=</span> []</span>\n<span id=\"cb22-9\"><a href=\"#cb22-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> index, account <span class=\"kw\">in</span> <span class=\"bu\">enumerate</span>(historical_accounts):</span>\n<span id=\"cb22-10\"><a href=\"#cb22-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb22-11\"><a href=\"#cb22-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    historical_timestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span></span>\n<span id=\"cb22-12\"><a href=\"#cb22-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account.timestamp <span class=\"op\">=</span> historical_timestamp</span>\n<span id=\"cb22-13\"><a href=\"#cb22-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Set the account as `imported`.</span></span>\n<span id=\"cb22-14\"><a href=\"#cb22-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    account.flags <span class=\"op\">=</span> tb.AccountFlags.IMPORTED</span>\n<span id=\"cb22-15\"><a href=\"#cb22-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb22-16\"><a href=\"#cb22-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># must be `linked`.</span></span>\n<span id=\"cb22-17\"><a href=\"#cb22-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> index <span class=\"op\">&lt;</span> <span class=\"bu\">len</span>(historical_accounts) <span class=\"op\">-</span> <span class=\"dv\">1</span>:</span>\n<span id=\"cb22-18\"><a href=\"#cb22-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>        account.flags <span class=\"op\">|=</span> tb.AccountFlags.LINKED</span>\n<span id=\"cb22-19\"><a href=\"#cb22-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-20\"><a href=\"#cb22-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    accounts.append(account)</span>\n<span id=\"cb22-21\"><a href=\"#cb22-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-22\"><a href=\"#cb22-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>account_errors <span class=\"op\">=</span> client.create_accounts(accounts)</span>\n<span id=\"cb22-23\"><a href=\"#cb22-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span>\n<span id=\"cb22-24\"><a href=\"#cb22-24\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-25\"><a href=\"#cb22-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># The, load and import all transfers with their timestamps from the historical source.</span></span>\n<span id=\"cb22-26\"><a href=\"#cb22-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfers <span class=\"op\">=</span> []</span>\n<span id=\"cb22-27\"><a href=\"#cb22-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> index, transfer <span class=\"kw\">in</span> <span class=\"bu\">enumerate</span>(historical_transfers):</span>\n<span id=\"cb22-28\"><a href=\"#cb22-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Set a unique and strictly increasing timestamp.</span></span>\n<span id=\"cb22-29\"><a href=\"#cb22-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>    historical_timestamp <span class=\"op\">+=</span> <span class=\"dv\">1</span></span>\n<span id=\"cb22-30\"><a href=\"#cb22-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer.timestamp <span class=\"op\">=</span> historical_timestamp</span>\n<span id=\"cb22-31\"><a href=\"#cb22-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># Set the account as `imported`.</span></span>\n<span id=\"cb22-32\"><a href=\"#cb22-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfer.flags <span class=\"op\">=</span> tb.TransferFlags.IMPORTED</span>\n<span id=\"cb22-33\"><a href=\"#cb22-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># To ensure atomicity, the entire batch (except the last event in the chain)</span></span>\n<span id=\"cb22-34\"><a href=\"#cb22-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># must be `linked`.</span></span>\n<span id=\"cb22-35\"><a href=\"#cb22-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> index <span class=\"op\">&lt;</span> <span class=\"bu\">len</span>(historical_transfers) <span class=\"op\">-</span> <span class=\"dv\">1</span>:</span>\n<span id=\"cb22-36\"><a href=\"#cb22-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>        transfer.flags <span class=\"op\">|=</span> tb.AccountFlags.LINKED</span>\n<span id=\"cb22-37\"><a href=\"#cb22-37\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-38\"><a href=\"#cb22-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>    transfers.append(transfer)</span>\n<span id=\"cb22-39\"><a href=\"#cb22-39\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-40\"><a href=\"#cb22-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>transfer_errors <span class=\"op\">=</span> client.create_transfers(transfers)</span>\n<span id=\"cb22-41\"><a href=\"#cb22-41\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Error handling omitted.</span></span>\n<span id=\"cb22-42\"><a href=\"#cb22-42\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb22-43\"><a href=\"#cb22-43\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Since it is a linked chain, in case of any error the entire batch is rolled back and can be retried</span></span>\n<span id=\"cb22-44\"><a href=\"#cb22-44\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># with the same historical timestamps without regressing the cluster timestamp.</span></span></code></pre></div>\n</div>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/src/clients/python/README.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"operating","html":"<h1 id=\"operating\"><a href=\"#operating\"\nclass=\"anchor\">Operating</a></h1>\n<p>This section is for anyone managing their own TigerBeetle cluster.\nWhile tiger beetles thrive even in the harshest conditions, there’s\ncertainly a preferred way to handle one!</p>\n<ul>\n<li><a href=\"./installing\">Installing</a> list all the various way to\nget the freshest TigerBeetle binary.</li>\n<li><a href=\"./hardware\">Hardware</a> specifies the host\nrequirements.</li>\n<li><a href=\"./cluster\">Cluster</a> specifies the overall cluster\nrequirements and recommendations.</li>\n<li><a href=\"./deploying/\">Deploying</a> spells out deployment process\nand its variations.</li>\n<li><a href=\"./monitoring\">Monitoring</a> details how to monitor a\nTigerBeetle cluster.</li>\n<li><a href=\"./upgrading\">Upgrading</a> explains how to move to a newer\nTigerBeetle version without downtime.</li>\n<li><a href=\"./recovering\">Recovering</a> explains how to repair the\ncluster when a replica is permanently lost.</li>\n<li><a href=\"./cdc\">Change Data Capture</a> explains how to stream data\nout of TigerBeetle.</li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/operating/README.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"operating/installing","html":"<h1 id=\"installing\"><a href=\"#installing\"\nclass=\"anchor\">Installing</a></h1>\n<h2 id=\"quick-install\"><a href=\"#quick-install\" class=\"anchor\">Quick\nInstall</a></h2>\n<details open>\n<summary>Linux</summary>\n\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>curl -Lo tigerbeetle.zip https://linux.tigerbeetle.com &amp;&amp; unzip tigerbeetle.zip\n./tigerbeetle version</code></pre>\n</div>\n</details>\n\n<details>\n<summary>macOS</summary>\n\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>curl -Lo tigerbeetle.zip https://mac.tigerbeetle.com &amp;&amp; unzip tigerbeetle.zip\n./tigerbeetle version</code></pre>\n</div>\n</details>\n\n<details>\n<summary>Windows</summary>\n\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>powershell -command &quot;curl.exe -Lo tigerbeetle.zip https://windows.tigerbeetle.com; Expand-Archive tigerbeetle.zip .\n.\\tigerbeetle version</code></pre>\n</div>\n</details>\n\n<h2 id=\"latest-release\"><a href=\"#latest-release\" class=\"anchor\">Latest\nRelease</a></h2>\n<p>You can download prebuilt binaries for the latest release here:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left;\"></th>\n<th style=\"text-align: left;\">Linux</th>\n<th style=\"text-align: left;\">Windows</th>\n<th style=\"text-align: left;\">MacOS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left;\">x86_64</td>\n<td style=\"text-align: left;\"><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/releases/latest/download/tigerbeetle-x86_64-linux.zip\">tigerbeetle-x86_64-linux.zip</a></td>\n<td style=\"text-align: left;\"><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/releases/latest/download/tigerbeetle-x86_64-windows.zip\">tigerbeetle-x86_64-windows.zip</a></td>\n<td style=\"text-align: left;\"><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/releases/latest/download/tigerbeetle-universal-macos.zip\">tigerbeetle-universal-macos.zip</a></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">aarch64</td>\n<td style=\"text-align: left;\"><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/releases/latest/download/tigerbeetle-aarch64-linux.zip\">tigerbeetle-aarch64-linux.zip</a></td>\n<td style=\"text-align: left;\">N/A</td>\n<td style=\"text-align: left;\"><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/releases/latest/download/tigerbeetle-universal-macos.zip\">tigerbeetle-universal-macos.zip</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"past-releases\"><a href=\"#past-releases\" class=\"anchor\">Past\nReleases</a></h2>\n<p>The releases page lists all past and current releases:</p>\n<p><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/releases\">https://github.com/tigerbeetle/tigerbeetle/releases</a></p>\n<p>TigerBeetle can be upgraded without downtime, this is documented in\n<a href=\"../upgrading\">Upgrading</a>.</p>\n<h2 id=\"building-from-source\"><a href=\"#building-from-source\"\nclass=\"anchor\">Building from Source</a></h2>\n<p>Building from source is easy, but is not recommended for production\ndeployments, as extra care is needed to ensure compatibility with\nclients and upgradability. Refer to the <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/tree/main/docs/internals\">internal\ndocumentation</a> for compilation instructions.</p>\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client Libraries</a></h2>\n<p>Client libraries for .NET, Go, Java, Node.js, and Python are\npublished to the respective package repositories, see <a\nhref=\"../../coding/clients/\">Clients</a>.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/operating/installing.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"operating/hardware","html":"<h1 id=\"hardware\"><a href=\"#hardware\" class=\"anchor\">Hardware</a></h1>\n<p>TigerBeetle is designed to operate and provide more than adequate\nperformance even on commodity hardware.</p>\n<h2 id=\"storage\"><a href=\"#storage\" class=\"anchor\">Storage</a></h2>\n<p>Local NVMe drives are highly recommended for production deployments,\nand there’s no requirement for RAID.</p>\n<p>In cloud or more complex deployments, remote block storage (e.g.,\nEBS, NVMe-oF) may be used but will be slower and care must be taken to\nensure <a href=\"../cluster#hardware-fault-tolerance\">independent fault\ndomains</a> across replicas.</p>\n<p>Currently, TigerBeetle uses around 16TiB for 40 billion transfers. If\nyou wish to use more capacity than a single disk, RAID 10 / RAID 0 is\nrecommended over parity RAID levels.</p>\n<p>The data file is created before the server is initially run and grows\nautomatically. TigerBeetle has been more extensively tested on ext4, but\next4 only supports data files up to 16TiB. XFS is supported, but has\nseen less testing. TigerBeetle can also be run against the raw block\ndevice.</p>\n<h2 id=\"memory\"><a href=\"#memory\" class=\"anchor\">Memory</a></h2>\n<p>ECC memory is required for production deployments.</p>\n<p>A replica requires at least 6 GiB RAM per machine. Between 16 GiB and\n32 GiB or more (depending on budget) is recommended to be allocated to\neach replica for caching. TigerBeetle uses static allocation and will\nuse exactly how much memory is explicitly allocated to it for caching\nvia command line argument.</p>\n<h2 id=\"cpu\"><a href=\"#cpu\" class=\"anchor\">CPU</a></h2>\n<p>TigerBeetle requires only a single core per replica machine.\nTigerBeetle at present does not utilize more cores, but may in\nfuture.</p>\n<p>It’s recommended to have at least one additional core free for the\noperating system.</p>\n<h2 id=\"network\"><a href=\"#network\" class=\"anchor\">Network</a></h2>\n<p>A minimum of a 1Gbps network connection is recommended.</p>\n<h2 id=\"multitenancy\"><a href=\"#multitenancy\"\nclass=\"anchor\">Multitenancy</a></h2>\n<p>There are no restrictions on sharing a server with other tenant\nprocesses.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/operating/hardware.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"operating/cluster","html":"<h1 id=\"cluster-recommendations\"><a href=\"#cluster-recommendations\"\nclass=\"anchor\">Cluster Recommendations</a></h1>\n<p>A TigerBeetle <strong>cluster</strong> is a set of machines each\nrunning the TigerBeetle server for strict serializability, high\navailability and durability. The TigerBeetle server is a single\nbinary.</p>\n<p>Each server operates on a single local data file.</p>\n<p>The TigerBeetle server binary plus its single data file is called a\n<strong>replica</strong>.</p>\n<p>A cluster guarantees strict serializability, the highest level of\nconsistency, by automatically electing a primary replica to order and\nbackup transactions across replicas in the cluster.</p>\n<h2 id=\"fault-tolerance\"><a href=\"#fault-tolerance\" class=\"anchor\">Fault\nTolerance</a></h2>\n<p><strong>The optimal, recommended size for any production cluster is 6\nreplicas.</strong></p>\n<p>Given a cluster of 6 replicas:</p>\n<ul>\n<li>4/6 replicas are required to elect a new primary if the old primary\nfails.</li>\n<li>A cluster remains highly available (able to process transactions),\npreserving strict serializability, provided that at least 3/6 machines\nhave not failed (provided that the primary has not also failed) or\nprovided that at least 4/6 machines have not failed (if the primary also\nfailed and a new primary needs to be elected).</li>\n<li>A cluster preserves durability (surviving, detecting, and repairing\ncorruption of any data file) provided that the cluster remains\navailable. If machines go offline temporarily and the cluster becomes\navailable again later, the cluster will be able to repair data file\ncorruption once availability is restored.</li>\n<li>A cluster will correctly remain unavailable if too many machine\nfailures have occurred to preserve data. In other words, TigerBeetle is\ndesigned to operate correctly or else to shut down safely if safe\noperation with respect to strict serializability is no longer possible\ndue to permanent data loss.</li>\n</ul>\n<h3 id=\"geographic-fault-tolerance\"><a\nhref=\"#geographic-fault-tolerance\" class=\"anchor\">Geographic Fault\nTolerance</a></h3>\n<p>All 6 replicas may be within the same data center (zero geographic\nfault tolerance), or spread across 2 or more data centers, availability\nzones or regions (“sites”) for geographic fault tolerance.</p>\n<p><strong>For mission critical availability, the optimal number of\nsites is 3</strong>, since each site would then contain 2 replicas so\nthat the loss of an entire site would not impair the availability of the\ncluster.</p>\n<p>Sites should preferably be within a few milliseconds of each other,\nsince each transaction must be replicated across sites before being\ncommitted.</p>\n<h3 id=\"hardware-fault-tolerance\"><a href=\"#hardware-fault-tolerance\"\nclass=\"anchor\">Hardware Fault Tolerance</a></h3>\n<p>It is important to ensure independent fault domains for each\nreplica’s data file, that each replica’s data file is stored on a\nseparate disk (required), machine (required), rack (recommended), data\ncenter (recommended) etc.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/operating/cluster.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"operating/deploying","html":"<h1 id=\"deploying\"><a href=\"#deploying\"\nclass=\"anchor\">Deploying</a></h1>\n<p>TigerBeetle is a single, statically linked binary without external\ndependencies, so the overall deployment procedure is simple:</p>\n<ul>\n<li>Get the <code>tigerbeetle</code> binary onto each of the cluster’s\nmachines (see <a href=\"../installing\">Installing</a>).</li>\n<li>Format the data files, specifying cluster id, replica count, and\nreplica index.</li>\n<li>Start replicas, specifying path to the data file and addresses of\nall replicas in the cluster.</li>\n</ul>\n<p>Here’s how to deploy a three replica cluster running on a single\nmachine:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>curl -Lo tigerbeetle.zip https://linux.tigerbeetle.com &amp;&amp; unzip tigerbeetle.zip &amp;&amp; ./tigerbeetle version\n./tigerbeetle format --cluster=0 --replica-count=3 --replica=0 ./0_0.tigerbeetle\n./tigerbeetle format --cluster=0 --replica-count=3 --replica=1 ./0_1.tigerbeetle\n./tigerbeetle format --cluster=0 --replica-count=3 --replica=2 ./0_2.tigerbeetle\n\n./tigerbeetle start --addresses=127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002 ./0_0.tigerbeetle &amp;\n./tigerbeetle start --addresses=127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002 ./0_1.tigerbeetle &amp;\n./tigerbeetle start --addresses=127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002 ./0_2.tigerbeetle &amp;</code></pre>\n</div>\n<p>Here what the arguments mean:</p>\n<ul>\n<li><code>--cluster</code> specifies a globally unique 128 bit cluster\nID. It is recommended to use a random number for a cluster id, cluster\nID <code>0</code> is reserved for testing.</li>\n<li><code>--replica-count</code> specifies the size of the cluster. In\nthe current version of TigerBeetle, cluster size can not be changed\nafter creation, but this limitation will be lifted in the future.</li>\n<li><code>--replica</code> is a zero-based index of the current replica.\nWhile <code>--cluster</code> and <code>--replica-count</code> arguments\nmust match across all replicas of the cluster, <code>--replica</code>\narguments must be unique.</li>\n<li><code>./0_0.tigerbeetle</code> is a path to the data file. It\ndoesn’t matter how you name it, but the suggested naming schema is\n<code>${CLUSTER_ID}_${REPLICA_INDEX}.tigerbeetle</code>.</li>\n<li><code>--addresses</code> specify IP addresses of all the replicas in\nthe cluster. <strong>The order of addresses must correspond to the order\nof replicas</strong>. In particular, the <code>--addresses</code>\nargument must be the same for all replicas and all clients, and the\naddress at the replica index must correspond to replica’s own\naddress.</li>\n</ul>\n<p>Production deployment differs in three aspects (see <a\nhref=\"../cluster\">Cluster Recommendations</a>):</p>\n<ul>\n<li>Each replica runs on a dedicated machine.</li>\n<li>Six replicas are used rather than three.</li>\n<li>There’s a supervisor process to restart a replica process after a\ncrash.</li>\n</ul>\n<h2 id=\"deployment-recipes\"><a href=\"#deployment-recipes\"\nclass=\"anchor\">Deployment Recipes</a></h2>\n<p>We have recipes for some commonly used deployment tools:</p>\n<ul>\n<li><a href=\"./systemd\">systemd</a></li>\n<li><a href=\"./docker\">Docker</a></li>\n<li><a href=\"./managed-service\">Managed</a></li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/operating/deploying/README.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"operating/deploying/systemd","html":"<h1 id=\"deploying-with-systemd\"><a href=\"#deploying-with-systemd\"\nclass=\"anchor\">Deploying with systemd</a></h1>\n<p>The following includes an example systemd unit for running\nTigerBeetle with Linux systems that use systemd. The unit is configured\nto start a single-node cluster, so you may need to adjust it for other\ncluster configurations.</p>\n<h3 id=\"tigerbeetleservice\"><a href=\"#tigerbeetleservice\"\nclass=\"anchor\"><strong>tigerbeetle.service</strong></a></h3>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode toml\"><code class=\"sourceCode toml\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">[Unit]</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">Description</span><span class=\"op\">=</span><span class=\"dt\">TigerBeetle</span> <span class=\"dt\">Replica</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">Documentation</span><span class=\"op\">=</span><span class=\"dt\">https</span><span class=\"er\">://</span><span class=\"dt\">docs.tigerbeetle.com</span><span class=\"er\">/</span></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">After</span><span class=\"op\">=</span><span class=\"dt\">network-online.target</span></span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">Wants</span><span class=\"op\">=</span><span class=\"dt\">network-online.target</span> <span class=\"dt\">systemd-networkd-wait-online.service</span></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">[Service]</span></span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">AmbientCapabilities</span><span class=\"op\">=</span><span class=\"dt\">CAP_IPC_LOCK</span></span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">Environment</span><span class=\"op\">=</span><span class=\"dt\">TIGERBEETLE_CACHE_GRID_SIZE</span><span class=\"op\">=</span><span class=\"dv\">1</span><span class=\"dt\">GiB</span></span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">Environment</span><span class=\"op\">=</span><span class=\"dt\">TIGERBEETLE_ADDRESSES</span><span class=\"op\">=</span><span class=\"dv\">3001</span></span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">Environment</span><span class=\"op\">=</span><span class=\"dt\">TIGERBEETLE_REPLICA_COUNT</span><span class=\"op\">=</span><span class=\"dv\">1</span></span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">Environment</span><span class=\"op\">=</span><span class=\"dt\">TIGERBEETLE_REPLICA_INDEX</span><span class=\"op\">=</span><span class=\"dv\">0</span></span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">Environment</span><span class=\"op\">=</span><span class=\"dt\">TIGERBEETLE_CLUSTER_ID</span><span class=\"op\">=</span><span class=\"dv\">0</span></span>\n<span id=\"cb1-15\"><a href=\"#cb1-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">Environment</span><span class=\"op\">=</span><span class=\"dt\">TIGERBEETLE_DATA_FILE</span><span class=\"op\">=</span><span class=\"er\">%</span><span class=\"dt\">S</span><span class=\"er\">/</span><span class=\"dt\">tigerbeetle</span><span class=\"er\">/</span><span class=\"dt\">0_0.tigerbeetle</span></span>\n<span id=\"cb1-16\"><a href=\"#cb1-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-17\"><a href=\"#cb1-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">DevicePolicy</span><span class=\"op\">=</span><span class=\"dt\">closed</span></span>\n<span id=\"cb1-18\"><a href=\"#cb1-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">DynamicUser</span><span class=\"op\">=</span><span class=\"cn\">true</span></span>\n<span id=\"cb1-19\"><a href=\"#cb1-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">LockPersonality</span><span class=\"op\">=</span><span class=\"cn\">true</span></span>\n<span id=\"cb1-20\"><a href=\"#cb1-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">ProtectClock</span><span class=\"op\">=</span><span class=\"cn\">true</span></span>\n<span id=\"cb1-21\"><a href=\"#cb1-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">ProtectControlGroups</span><span class=\"op\">=</span><span class=\"cn\">true</span></span>\n<span id=\"cb1-22\"><a href=\"#cb1-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">ProtectHome</span><span class=\"op\">=</span><span class=\"cn\">true</span></span>\n<span id=\"cb1-23\"><a href=\"#cb1-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">ProtectHostname</span><span class=\"op\">=</span><span class=\"cn\">true</span></span>\n<span id=\"cb1-24\"><a href=\"#cb1-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">ProtectKernelLogs</span><span class=\"op\">=</span><span class=\"cn\">true</span></span>\n<span id=\"cb1-25\"><a href=\"#cb1-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">ProtectKernelModules</span><span class=\"op\">=</span><span class=\"cn\">true</span></span>\n<span id=\"cb1-26\"><a href=\"#cb1-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">ProtectKernelTunables</span><span class=\"op\">=</span><span class=\"cn\">true</span></span>\n<span id=\"cb1-27\"><a href=\"#cb1-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">ProtectProc</span><span class=\"op\">=</span><span class=\"dt\">noaccess</span></span>\n<span id=\"cb1-28\"><a href=\"#cb1-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">ProtectSystem</span><span class=\"op\">=</span><span class=\"dt\">strict</span></span>\n<span id=\"cb1-29\"><a href=\"#cb1-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">RestrictAddressFamilies</span><span class=\"op\">=</span><span class=\"dt\">AF_INET</span> <span class=\"dt\">AF_INET6</span></span>\n<span id=\"cb1-30\"><a href=\"#cb1-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">RestrictNamespaces</span><span class=\"op\">=</span><span class=\"cn\">true</span></span>\n<span id=\"cb1-31\"><a href=\"#cb1-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">RestrictRealtime</span><span class=\"op\">=</span><span class=\"cn\">true</span></span>\n<span id=\"cb1-32\"><a href=\"#cb1-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">RestrictSUIDSGID</span><span class=\"op\">=</span><span class=\"cn\">true</span></span>\n<span id=\"cb1-33\"><a href=\"#cb1-33\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-34\"><a href=\"#cb1-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">StateDirectory</span><span class=\"op\">=</span><span class=\"dt\">tigerbeetle</span></span>\n<span id=\"cb1-35\"><a href=\"#cb1-35\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">StateDirectoryMode</span><span class=\"op\">=</span><span class=\"dv\">700</span></span>\n<span id=\"cb1-36\"><a href=\"#cb1-36\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-37\"><a href=\"#cb1-37\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">Type</span><span class=\"op\">=</span><span class=\"dt\">exec</span></span>\n<span id=\"cb1-38\"><a href=\"#cb1-38\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">ExecStart</span><span class=\"op\">=</span><span class=\"er\">/</span><span class=\"dt\">usr</span><span class=\"er\">/</span><span class=\"dt\">local</span><span class=\"er\">/</span><span class=\"dt\">bin</span><span class=\"er\">/</span><span class=\"dt\">tigerbeetle</span> <span class=\"dt\">start</span> <span class=\"dt\">--cache-grid</span><span class=\"op\">=</span><span class=\"er\">${</span><span class=\"dt\">TIGERBEETLE_CACHE_GRID_SIZE</span><span class=\"er\">}</span> <span class=\"dt\">--addresses</span><span class=\"op\">=</span><span class=\"er\">${</span><span class=\"dt\">TIGERBEETLE_ADDRESSES</span><span class=\"er\">}</span> <span class=\"er\">${</span><span class=\"dt\">TIGERBEETLE_DATA_FILE</span><span class=\"er\">}</span></span>\n<span id=\"cb1-39\"><a href=\"#cb1-39\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-40\"><a href=\"#cb1-40\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">[Install]</span></span>\n<span id=\"cb1-41\"><a href=\"#cb1-41\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">WantedBy</span><span class=\"op\">=</span><span class=\"dt\">multi-user.target</span></span></code></pre></div>\n</div>\n<h2 id=\"adjusting\"><a href=\"#adjusting\"\nclass=\"anchor\">Adjusting</a></h2>\n<p>You can adjust multiple aspects of this systemd service. Each\nspecific adjustment is listed below with instructions.</p>\n<p>It is not recommended to adjust some values directly in the service\nfile. When this is the case, the instructions will ask you to instead\nuse systemd’s drop-in file support. Here’s how to do that:</p>\n<ol type=\"1\">\n<li>Install the service unit in systemd (usually by adding it to\n<code>/etc/systemd/system</code>).</li>\n<li>Create a drop-in file to override the environment variables. Run\n<code>systemctl edit tigerbeetle.service</code>. This will bring you to\nan editor with instructions.</li>\n<li>Add your overrides. Example:\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode toml\"><code class=\"sourceCode toml\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">[Service]</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">Environment</span><span class=\"op\">=</span><span class=\"dt\">TIGERBEETLE_CACHE_GRID_SIZE</span><span class=\"op\">=</span><span class=\"dv\">4</span><span class=\"dt\">GiB</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">Environment</span><span class=\"op\">=</span><span class=\"dt\">TIGERBEETLE_ADDRESSES</span><span class=\"op\">=</span><span class=\"fl\">0.0</span><span class=\"dt\">.0.0</span><span class=\"er\">:</span><span class=\"dt\">3001</span></span></code></pre></div>\n</div></li>\n</ol>\n<h3 id=\"pre-start-script\"><a href=\"#pre-start-script\"\nclass=\"anchor\">Pre-start script</a></h3>\n<p>You can place the following script in <code>/usr/local/bin</code>.\nThis script is responsible for ensuring that a replica data file exists.\nIt will create a data file if it doesn’t exist.</p>\n<h4 id=\"tigerbeetle-pre-startsh\"><a href=\"#tigerbeetle-pre-startsh\"\nclass=\"anchor\"><strong>tigerbeetle-pre-start.sh</strong></a></h4>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb3\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#!/bin/sh</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">set</span> <span class=\"at\">-eu</span></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> <span class=\"ot\">! </span><span class=\"bu\">test</span> <span class=\"at\">-e</span> <span class=\"st\">&quot;</span><span class=\"va\">${TIGERBEETLE_DATA_FILE}</span><span class=\"st\">&quot;</span><span class=\"kw\">;</span> <span class=\"cf\">then</span></span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"ex\">/usr/local/bin/tigerbeetle</span> format <span class=\"at\">--cluster</span><span class=\"op\">=</span><span class=\"st\">&quot;</span><span class=\"va\">${TIGERBEETLE_CLUSTER_ID}</span><span class=\"st\">&quot;</span> <span class=\"at\">--replica</span><span class=\"op\">=</span><span class=\"st\">&quot;</span><span class=\"va\">${TIGERBEETLE_REPLICA_INDEX}</span><span class=\"st\">&quot;</span> <span class=\"at\">--replica-count</span><span class=\"op\">=</span><span class=\"st\">&quot;</span><span class=\"va\">${TIGERBEETLE_REPLICA_COUNT}</span><span class=\"st\">&quot;</span> <span class=\"st\">&quot;</span><span class=\"va\">${TIGERBEETLE_DATA_FILE}</span><span class=\"st\">&quot;</span></span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">fi</span></span></code></pre></div>\n</div>\n<p>The script assumes that <code>/bin/sh</code> exists and points to a\nPOSIX-compliant shell, and the <code>test</code> utility is either\nbuilt-in or in the script’s search path. If this is not the case, adjust\nthe script’s shebang.</p>\n<p>Add the following line to <code>tigerbeetle.service</code> before\n<code>ExecStart</code>.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre><code>ExecStartPre=/usr/local/bin/tigerbeetle-pre-start.sh</code></pre>\n</div>\n<p>The service then executes the <code>tigerbeetle-pre-start.sh</code>\nscript before starting TigerBeetle.</p>\n<h3 id=\"tigerbeetle-executable\"><a href=\"#tigerbeetle-executable\"\nclass=\"anchor\">TigerBeetle executable</a></h3>\n<p>The <code>tigerbeetle</code> executable is assumed to be installed in\n<code>/usr/local/bin</code>. If this is not the case, adjust both\n<code>tigerbeetle.service</code> and\n<code>tigerbeetle-pre-start.sh</code> to use the correct location.</p>\n<h3 id=\"environment-variables\"><a href=\"#environment-variables\"\nclass=\"anchor\">Environment variables</a></h3>\n<p>This service uses environment variables to provide default values for\na simple single-node cluster. To configure a different cluster\nstructure, or a cluster with different values, adjust the values in the\nenvironment variables. It is <strong>not recommended</strong> to change\nthese default values directly in the service file, because it may be\nimportant to revert to the default behavior later. Instead, use\nsystemd’s drop-in file support.</p>\n<h3 id=\"state-directory-and-replica-data-file-path\"><a\nhref=\"#state-directory-and-replica-data-file-path\" class=\"anchor\">State\ndirectory and replica data file path</a></h3>\n<p>This service configures a state directory, which means that systemd\nwill make sure the directory is created before the service starts, and\nthe directory will have the correct permissions. This is especially\nimportant because the service uses systemd’s dynamic user capabilities.\nsystemd forces the state directory to be in <code>/var/lib</code>, which\nmeans that this service will have its replica data file at\n<code>/var/lib/tigerbeetle/</code>. It is <strong>not\nrecommended</strong> to adjust the state directory directly in the\nservice file, because it may be important to revert to the default\nbehavior later. Instead, use systemd’s drop-in file support. If you do\nso, remember to also adjust the <code>TIGERBEETLE_DATA_FILE</code>\nenvironment variable, because it also hardcodes the\n<code>tigerbeetle</code> state directory value.</p>\n<p>Due to systemd’s dynamic user capabilities, the replica data file\npath will not be owned by any existing user of the system.</p>\n<h3 id=\"hardening-configurations\"><a href=\"#hardening-configurations\"\nclass=\"anchor\">Hardening configurations</a></h3>\n<p>Some hardening configurations are enabled for added security when\nrunning the service. It is <strong>not recommended</strong> to change\nthese, since they have additional implications on all other\nconfigurations and values defined in this service file. If you wish to\nchange those, you are expected to understand those implications and make\nany other adjustments accordingly.</p>\n<h3 id=\"development-mode\"><a href=\"#development-mode\"\nclass=\"anchor\">Development mode</a></h3>\n<p>The service was created assuming it’ll be used in a production\nscenario.</p>\n<p>In case you want to use this service for development as well, you may\nneed to adjust the <code>ExecStart</code> line to include the\n<code>--development</code> flag if your development environment doesn’t\nsupport Direct IO, or if you require smaller cache sizes and/or batch\nsizes due to memory constraints.</p>\n<h3 id=\"memory-locking\"><a href=\"#memory-locking\" class=\"anchor\">Memory\nLocking</a></h3>\n<p>TigerBeetle requires <code>RLIMIT_MEMLOCK</code> to be set high\nenough to:</p>\n<ol type=\"1\">\n<li>initialize io_uring, which requires memory shared with the kernel to\nbe locked, as well as</li>\n<li>lock all allocated memory, and so prevent the kernel from swapping\nany pages to disk, which would not only affect performance but also\nbypass TigerBeetle’s storage fault-tolerance.</li>\n</ol>\n<p>If the required memory cannot be locked, then the environment should\nbe modified either by (in order of preference):</p>\n<ol type=\"1\">\n<li>giving the local <code>tigerbeetle</code> binary the\n<code>CAP_IPC_LOCK</code> capability\n(<code>sudo setcap \"cap_ipc_lock=+ep\" ./tigerbeetle</code>), or</li>\n<li>raising the global <code>memlock</code> value under\n<code>/etc/security/limits.conf</code>, or else</li>\n<li>disabling swap (io_uring may still require an RLIMIT increase).</li>\n</ol>\n<p>Memory locking is disabled for development environments when using\nthe <code>--development</code> flag.</p>\n<p>For Linux running under Docker, refer to <a\nhref=\"../docker#allowing-memlock\">Allowing MEMLOCK</a>.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/operating/deploying/systemd.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"operating/deploying/docker","html":"<h1 id=\"docker\"><a href=\"#docker\" class=\"anchor\">Docker</a></h1>\n<p>TigerBeetle can be run using Docker. However, it is not\nrecommended.</p>\n<p>TigerBeetle is distributed as a single, small, statically-linked\nbinary. It should be easy to run directly on the target machine. Using\nDocker as an abstraction adds complexity while providing relatively\nlittle in this case.</p>\n<h2 id=\"image\"><a href=\"#image\" class=\"anchor\">Image</a></h2>\n<p>The Docker image is available from the GitHub Container Registry:</p>\n<p><a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/pkgs/container/tigerbeetle\">https://github.com/tigerbeetle/tigerbeetle/pkgs/container/tigerbeetle</a></p>\n<h2 id=\"format-the-data-file\"><a href=\"#format-the-data-file\"\nclass=\"anchor\">Format the Data File</a></h2>\n<p>When using Docker, the data file must be mounted as a volume:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"shell\"><code>docker run --security-opt seccomp=unconfined \\\n     -v $(pwd)/data:/data ghcr.io/tigerbeetle/tigerbeetle \\\n    format --cluster=0 --replica=0 --replica-count=1 /data/0_0.tigerbeetle</code></pre>\n</div>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>info(io): creating &quot;0_0.tigerbeetle&quot;...\ninfo(io): allocating 660.140625MiB...</code></pre>\n</div>\n<h2 id=\"run-the-server\"><a href=\"#run-the-server\" class=\"anchor\">Run the\nServer</a></h2>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>docker run -it --security-opt seccomp=unconfined \\\n    -p 3000:3000 -v $(pwd)/data:/data ghcr.io/tigerbeetle/tigerbeetle \\\n    start --addresses=0.0.0.0:3000 /data/0_0.tigerbeetle</code></pre>\n</div>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>info(io): opening &quot;0_0.tigerbeetle&quot;...\ninfo(main): 0: cluster=0: listening on 0.0.0.0:3000</code></pre>\n</div>\n<h2 id=\"run-a-multi-node-cluster-using-docker-compose\"><a\nhref=\"#run-a-multi-node-cluster-using-docker-compose\" class=\"anchor\">Run\na Multi-Node Cluster Using Docker Compose</a></h2>\n<p>Format the data file for each replica:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>docker run --security-opt seccomp=unconfined -v $(pwd)/data:/data ghcr.io/tigerbeetle/tigerbeetle format --cluster=0 --replica=0 --replica-count=3 /data/0_0.tigerbeetle\ndocker run --security-opt seccomp=unconfined -v $(pwd)/data:/data ghcr.io/tigerbeetle/tigerbeetle format --cluster=0 --replica=1 --replica-count=3 /data/0_1.tigerbeetle\ndocker run --security-opt seccomp=unconfined -v $(pwd)/data:/data ghcr.io/tigerbeetle/tigerbeetle format --cluster=0 --replica=2 --replica-count=3 /data/0_2.tigerbeetle</code></pre>\n</div>\n<p>Note that the data file stores which replica in the cluster the file\nbelongs to.</p>\n<p>Then, create a docker-compose.yml file:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb6\"><pre\nclass=\"sourceCode yaml\"><code class=\"sourceCode yaml\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">version</span><span class=\"kw\">:</span><span class=\"at\"> </span><span class=\"st\">&quot;3.7&quot;</span></span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">##</span></span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Note: this example might only work with linux + using `network_mode:host` because of 2 reasons:</span></span>\n<span id=\"cb6-5\"><a href=\"#cb6-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#</span></span>\n<span id=\"cb6-6\"><a href=\"#cb6-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 1. When specifying an internal docker network, other containers are only available using dns based routing:</span></span>\n<span id=\"cb6-7\"><a href=\"#cb6-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#    e.g. from tigerbeetle_0, the other replicas are available at `tigerbeetle_1:3002` and</span></span>\n<span id=\"cb6-8\"><a href=\"#cb6-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#    `tigerbeetle_2:3003` respectively.</span></span>\n<span id=\"cb6-9\"><a href=\"#cb6-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#</span></span>\n<span id=\"cb6-10\"><a href=\"#cb6-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 2. Tigerbeetle performs some validation of the ip address provided in the `--addresses` parameter</span></span>\n<span id=\"cb6-11\"><a href=\"#cb6-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#    and won&#39;t let us specify a custom domain name.</span></span>\n<span id=\"cb6-12\"><a href=\"#cb6-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#</span></span>\n<span id=\"cb6-13\"><a href=\"#cb6-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># The workaround for now is to use `network_mode:host` in the containers instead of specifying our</span></span>\n<span id=\"cb6-14\"><a href=\"#cb6-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># own internal docker network</span></span>\n<span id=\"cb6-15\"><a href=\"#cb6-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">##</span></span>\n<span id=\"cb6-16\"><a href=\"#cb6-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-17\"><a href=\"#cb6-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">services</span><span class=\"kw\">:</span></span>\n<span id=\"cb6-18\"><a href=\"#cb6-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">  </span><span class=\"fu\">tigerbeetle_0</span><span class=\"kw\">:</span></span>\n<span id=\"cb6-19\"><a href=\"#cb6-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">image</span><span class=\"kw\">:</span><span class=\"at\"> ghcr.io/tigerbeetle/tigerbeetle</span></span>\n<span id=\"cb6-20\"><a href=\"#cb6-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">command</span><span class=\"kw\">:</span><span class=\"at\"> </span><span class=\"st\">&quot;start --addresses=0.0.0.0:3001,0.0.0.0:3002,0.0.0.0:3003 /data/0_0.tigerbeetle&quot;</span></span>\n<span id=\"cb6-21\"><a href=\"#cb6-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">network_mode</span><span class=\"kw\">:</span><span class=\"at\"> host</span></span>\n<span id=\"cb6-22\"><a href=\"#cb6-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">volumes</span><span class=\"kw\">:</span></span>\n<span id=\"cb6-23\"><a href=\"#cb6-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">      </span><span class=\"kw\">-</span><span class=\"at\"> ./data:/data</span></span>\n<span id=\"cb6-24\"><a href=\"#cb6-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">security_opt</span><span class=\"kw\">:</span></span>\n<span id=\"cb6-25\"><a href=\"#cb6-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">      </span><span class=\"kw\">-</span><span class=\"at\"> </span><span class=\"st\">&quot;seccomp=unconfined&quot;</span></span>\n<span id=\"cb6-26\"><a href=\"#cb6-26\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-27\"><a href=\"#cb6-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">  </span><span class=\"fu\">tigerbeetle_1</span><span class=\"kw\">:</span></span>\n<span id=\"cb6-28\"><a href=\"#cb6-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">image</span><span class=\"kw\">:</span><span class=\"at\"> ghcr.io/tigerbeetle/tigerbeetle</span></span>\n<span id=\"cb6-29\"><a href=\"#cb6-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">command</span><span class=\"kw\">:</span><span class=\"at\"> </span><span class=\"st\">&quot;start --addresses=0.0.0.0:3001,0.0.0.0:3002,0.0.0.0:3003 /data/0_1.tigerbeetle&quot;</span></span>\n<span id=\"cb6-30\"><a href=\"#cb6-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">network_mode</span><span class=\"kw\">:</span><span class=\"at\"> host</span></span>\n<span id=\"cb6-31\"><a href=\"#cb6-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">volumes</span><span class=\"kw\">:</span></span>\n<span id=\"cb6-32\"><a href=\"#cb6-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">      </span><span class=\"kw\">-</span><span class=\"at\"> ./data:/data</span></span>\n<span id=\"cb6-33\"><a href=\"#cb6-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">security_opt</span><span class=\"kw\">:</span></span>\n<span id=\"cb6-34\"><a href=\"#cb6-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">      </span><span class=\"kw\">-</span><span class=\"at\"> </span><span class=\"st\">&quot;seccomp=unconfined&quot;</span></span>\n<span id=\"cb6-35\"><a href=\"#cb6-35\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-36\"><a href=\"#cb6-36\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">  </span><span class=\"fu\">tigerbeetle_2</span><span class=\"kw\">:</span></span>\n<span id=\"cb6-37\"><a href=\"#cb6-37\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">image</span><span class=\"kw\">:</span><span class=\"at\"> ghcr.io/tigerbeetle/tigerbeetle</span></span>\n<span id=\"cb6-38\"><a href=\"#cb6-38\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">command</span><span class=\"kw\">:</span><span class=\"at\"> </span><span class=\"st\">&quot;start --addresses=0.0.0.0:3001,0.0.0.0:3002,0.0.0.0:3003 /data/0_2.tigerbeetle&quot;</span></span>\n<span id=\"cb6-39\"><a href=\"#cb6-39\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">network_mode</span><span class=\"kw\">:</span><span class=\"at\"> host</span></span>\n<span id=\"cb6-40\"><a href=\"#cb6-40\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">volumes</span><span class=\"kw\">:</span></span>\n<span id=\"cb6-41\"><a href=\"#cb6-41\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">      </span><span class=\"kw\">-</span><span class=\"at\"> ./data:/data</span></span>\n<span id=\"cb6-42\"><a href=\"#cb6-42\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">security_opt</span><span class=\"kw\">:</span></span>\n<span id=\"cb6-43\"><a href=\"#cb6-43\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">      </span><span class=\"kw\">-</span><span class=\"at\"> </span><span class=\"st\">&quot;seccomp=unconfined&quot;</span></span></code></pre></div>\n</div>\n<p>And run it:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>docker-compose up</code></pre>\n</div>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>docker-compose up\nStarting tigerbeetle_0   ... done\nStarting tigerbeetle_2   ... done\nRecreating tigerbeetle_1 ... done\nAttaching to tigerbeetle_0, tigerbeetle_2, tigerbeetle_1\ntigerbeetle_1    | info(io): opening &quot;0_1.tigerbeetle&quot;...\ntigerbeetle_2    | info(io): opening &quot;0_2.tigerbeetle&quot;...\ntigerbeetle_0    | info(io): opening &quot;0_0.tigerbeetle&quot;...\ntigerbeetle_0    | info(main): 0: cluster=0: listening on 0.0.0.0:3001\ntigerbeetle_2    | info(main): 2: cluster=0: listening on 0.0.0.0:3003\ntigerbeetle_1    | info(main): 1: cluster=0: listening on 0.0.0.0:3002\ntigerbeetle_0    | info(message_bus): connected to replica 1\ntigerbeetle_0    | info(message_bus): connected to replica 2\ntigerbeetle_1    | info(message_bus): connected to replica 2\ntigerbeetle_1    | info(message_bus): connection from replica 0\ntigerbeetle_2    | info(message_bus): connection from replica 0\ntigerbeetle_2    | info(message_bus): connection from replica 1\ntigerbeetle_0    | info(clock): 0: system time is 83ns ahead\ntigerbeetle_2    | info(clock): 2: system time is 83ns ahead\ntigerbeetle_1    | info(clock): 1: system time is 78ns ahead\n\n... and so on ...</code></pre>\n</div>\n<h2 id=\"troubleshooting\"><a href=\"#troubleshooting\"\nclass=\"anchor\">Troubleshooting</a></h2>\n<h3 id=\"error-permissiondenied\"><a href=\"#error-permissiondenied\"\nclass=\"anchor\"><code>error: PermissionDenied</code></a></h3>\n<p>If you see this error at startup, it is likely because you are\nrunning Docker 25.0.0 or newer, which blocks io_uring by default. Set\n<code>--security-opt seccomp=unconfined</code> to fix it.</p>\n<h3 id=\"exited-with-code-137\"><a href=\"#exited-with-code-137\"\nclass=\"anchor\"><code>exited with code 137</code></a></h3>\n<p>If you see this error without any logs from TigerBeetle, it is likely\nthat the Linux OOMKiller is killing the process. If you are running\nDocker inside a virtual machine (such as is required on Docker or Podman\nfor macOS), try increasing the virtual machine memory limit.</p>\n<p>Alternatively, in a development environment, you can lower the size\nof the cache so TigerBeetle uses less memory. For example, set\n<code>--cache-grid=256MiB</code> when running\n<code>tigerbeetle start</code>.</p>\n<h3 id=\"debugging-panics\"><a href=\"#debugging-panics\"\nclass=\"anchor\">Debugging panics</a></h3>\n<p>If TigerBeetle panics and you can reproduce the panic, you can get a\nbetter stack trace by switching to a debug image (by using the\n<code>:debug</code> Docker image tag).</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>docker run -p 3000:3000 -v $(pwd)/data:/data ghcr.io/tigerbeetle/tigerbeetle:debug \\\n    start --addresses=0.0.0.0:3000 /data/0_0.tigerbeetle</code></pre>\n</div>\n<h3 id=\"on-macos\"><a href=\"#on-macos\" class=\"anchor\">On MacOS</a></h3>\n<h4 id=\"error-systemresources\"><a href=\"#error-systemresources\"\nclass=\"anchor\"><code>error: SystemResources</code></a></h4>\n<p>If you get <code>error: SystemResources</code> when running\nTigerBeetle in Docker on macOS, the container may be blocking\nTigerBeetle from locking memory, which is necessary both for io_uring\nand to prevent the kernel’s use of swap from bypassing TigerBeetle’s\nstorage fault tolerance.</p>\n<h4 id=\"allowing-memlock\"><a href=\"#allowing-memlock\"\nclass=\"anchor\">Allowing MEMLOCK</a></h4>\n<p>To raise the memory lock limits under Docker, execute one of the\nfollowing:</p>\n<ol type=\"1\">\n<li>Run <code>docker run</code> with\n<code>--cap-add IPC_LOCK</code></li>\n<li>Run <code>docker run</code> with\n<code>--ulimit memlock=-1:-1</code></li>\n<li>Or modify the defaults in <code>$HOME/.docker/daemon.json</code> and\nrestart the Docker for Mac application:</li>\n</ol>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb10\"><pre\nclass=\"sourceCode json\"><code class=\"sourceCode json\"><span id=\"cb10-1\"><a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">{</span></span>\n<span id=\"cb10-2\"><a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"er\">...</span> <span class=\"er\">other</span> <span class=\"er\">settings</span> <span class=\"er\">...</span></span>\n<span id=\"cb10-3\"><a href=\"#cb10-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;default-ulimits&quot;</span><span class=\"fu\">:</span> <span class=\"fu\">{</span></span>\n<span id=\"cb10-4\"><a href=\"#cb10-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;memlock&quot;</span><span class=\"fu\">:</span> <span class=\"fu\">{</span></span>\n<span id=\"cb10-5\"><a href=\"#cb10-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"dt\">&quot;Hard&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">-1</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-6\"><a href=\"#cb10-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"dt\">&quot;Name&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;memlock&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb10-7\"><a href=\"#cb10-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>      <span class=\"dt\">&quot;Soft&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">-1</span></span>\n<span id=\"cb10-8\"><a href=\"#cb10-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"fu\">}</span></span>\n<span id=\"cb10-9\"><a href=\"#cb10-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"fu\">},</span></span>\n<span id=\"cb10-10\"><a href=\"#cb10-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"er\">...</span> <span class=\"er\">other</span> <span class=\"er\">settings</span> <span class=\"er\">...</span></span>\n<span id=\"cb10-11\"><a href=\"#cb10-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">}</span></span></code></pre></div>\n</div>\n<p>If you are running TigerBeetle with Docker Compose, you will need to\nadd the <code>IPC_LOCK</code> capability like this:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb11\"><pre\nclass=\"sourceCode yaml\"><code class=\"sourceCode yaml\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">... rest of docker-compose.yml ...</span></span>\n<span id=\"cb11-2\"><a href=\"#cb11-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb11-3\"><a href=\"#cb11-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">services</span><span class=\"kw\">:</span></span>\n<span id=\"cb11-4\"><a href=\"#cb11-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">  </span><span class=\"fu\">tigerbeetle_0</span><span class=\"kw\">:</span></span>\n<span id=\"cb11-5\"><a href=\"#cb11-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">image</span><span class=\"kw\">:</span><span class=\"at\"> ghcr.io/tigerbeetle/tigerbeetle</span></span>\n<span id=\"cb11-6\"><a href=\"#cb11-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">command</span><span class=\"kw\">:</span><span class=\"at\"> </span><span class=\"st\">&quot;start --addresses=0.0.0.0:3001,0.0.0.0:3002,0.0.0.0:3003 /data/0_0.tigerbeetle&quot;</span></span>\n<span id=\"cb11-7\"><a href=\"#cb11-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">network_mode</span><span class=\"kw\">:</span><span class=\"at\"> host</span></span>\n<span id=\"cb11-8\"><a href=\"#cb11-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">cap_add</span><span class=\"kw\">:</span><span class=\"co\">       # HERE</span></span>\n<span id=\"cb11-9\"><a href=\"#cb11-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">      </span><span class=\"kw\">-</span><span class=\"at\"> IPC_LOCK</span><span class=\"co\">   # HERE</span></span>\n<span id=\"cb11-10\"><a href=\"#cb11-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">    </span><span class=\"fu\">volumes</span><span class=\"kw\">:</span></span>\n<span id=\"cb11-11\"><a href=\"#cb11-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">      </span><span class=\"kw\">-</span><span class=\"at\"> ./data:/data</span></span>\n<span id=\"cb11-12\"><a href=\"#cb11-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb11-13\"><a href=\"#cb11-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"at\">... rest of docker-compose.yml ...</span></span></code></pre></div>\n</div>\n<p>See <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/issues/92\">https://github.com/tigerbeetle/tigerbeetle/issues/92</a>\nfor discussion.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/operating/deploying/docker.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"operating/deploying/managed-service","html":"<h1 id=\"managed-service\"><a href=\"#managed-service\"\nclass=\"anchor\">Managed Service</a></h1>\n<p>Want to use TigerBeetle in production, along with automated disaster\nrecovery, monitoring, and dedicated support from the TigerBeetle\nteam?</p>\n<p>Let us help you get up and running faster! Contact us at <a\nhref=\"mailto:sales@tigerbeetle.com\">sales@tigerbeetle.com</a> to set up\na call.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/operating/deploying/managed-service.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"operating/monitoring","html":"<h1 id=\"monitoring\"><a href=\"#monitoring\"\nclass=\"anchor\">Monitoring</a></h1>\n<p>TigerBeetle supports emitting metrics via StatsD, and uses the <a\nhref=\"https://docs.datadoghq.com/developers/dogstatsd/datagram_shell?tab=metrics\">DogStatsD\nformat for tags.</a></p>\n<p>This requires a StatsD compatible agent running locally. The Datadog\nAgent works out of the box with its default configuration, as does\nTelegraf’s <a\nhref=\"https://github.com/influxdata/telegraf/blob/master/plugins/inputs/statsd/README.md\">statsd\nplugin</a>, with <code>datadog_extensions</code> enabled.</p>\n<p>You can enable emitting metrics by adding the following CLI flags to\neach replica, depending on your <a href=\"../deploying/\">deployment\nmethod</a>:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre><code>--experimental --statsd=127.0.0.1:8125</code></pre>\n</div>\n<p>The <code>--statsd</code> argument must be specified as an\n<code>IP:Port</code> address (IPv4 or IPv6). DNS names are not currently\nsupported.</p>\n<p>All TigerBeetle metrics are namespaced under <code>tb.</code> and are\ntagged with <code>cluster</code> (the cluster ID specified at format\ntime) and <code>replica</code> (the replica index). Specific metrics\nmight have additional tags - you can see a full list of metrics and\ncardinality by running <code>tigerbeetle inspect metrics</code>.</p>\n<h2 id=\"specific-metrics\"><a href=\"#specific-metrics\"\nclass=\"anchor\">Specific Metrics</a></h2>\n<h3 id=\"overall-status\"><a href=\"#overall-status\" class=\"anchor\">Overall\nstatus</a></h3>\n<p>The <code>replica_status</code> metric corresponds to the overall\nstatus of the replica. If it’s anything other than 0, it should be\nalerted on as it indicates a non-normal status. The full values are:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Status</th>\n<th>Explanation</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>normal</td>\n<td>The replica is functioning normally.</td>\n</tr>\n<tr>\n<td>1</td>\n<td>view_change</td>\n<td>The replica is doing a view change.</td>\n</tr>\n<tr>\n<td>2</td>\n<td>recovering</td>\n<td>The replica is recovering. Usually, this will be present on startup\nbefore immediately transitioning to normal.</td>\n</tr>\n<tr>\n<td>3</td>\n<td>recovering_head</td>\n<td>The replica’s persistent state is corrupted, and it can’t\nparticipate in consensus. It will try and recover from the remainder of\nthe cluster.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"state-sync-status\"><a href=\"#state-sync-status\"\nclass=\"anchor\">State sync status</a></h3>\n<p>The <code>replica_sync_stage</code> metric corresponds to the state\nsync stage. If this is anything other than <code>0</code>, the replica\nis undergoing state sync and should be alerted on.</p>\n<h3 id=\"operations-timing\"><a href=\"#operations-timing\"\nclass=\"anchor\">Operations timing</a></h3>\n<p>The <code>replica_request</code> timing metric can help inform how\nlong requests are taking. This is tagged with the operation type (e.g.,\n<code>create_accounts</code>) and is the closest measure of how long a\nrequest takes end to end, from the replica’s point of view.</p>\n<p>It’s recommended to additionally add metrics around your TigerBeetle\nclient code, to measure the full request latency, including things like\nnetwork delay which aren’t captured here.</p>\n<h3 id=\"cache-monitoring-and-sizing\"><a\nhref=\"#cache-monitoring-and-sizing\" class=\"anchor\">Cache monitoring and\nsizing</a></h3>\n<p>The <code>grid_cache_hits</code> and <code>grid_cache_misses</code>\nmetrics can help inform if your grid cache (<code>--cache-grid</code>)\nis sized too small for your workload.</p>\n<h2 id=\"system-monitoring\"><a href=\"#system-monitoring\"\nclass=\"anchor\">System Monitoring</a></h2>\n<p>In addition to TigerBeetle’s own metrics, it’s recommended to monitor\nand alert on a few additional system level metrics. These are:</p>\n<ul>\n<li>Disk space used, on the path that has the TigerBeetle data\nfile.</li>\n<li>NTP clock sync status.</li>\n<li>Memory utilization: once started, TigerBeetle will use a fixed\namount of memory and not change. A change in memory utilization can\nindicate a problem with other processes on the server.</li>\n<li>CPU utilization: TigerBeetle will use at most a single core at\npresent. CPU utilization exceeding a single core can indicate a problem\nwith other processes on the server.</li>\n</ul>\n<p>While a specific alerting threshold is hard to define for the\nfollowing, they are useful to monitor to help diagnose problems:</p>\n<ul>\n<li>Network bandwidth utilization.</li>\n<li>Disk bandwidth utilization.</li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/operating/monitoring.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"operating/upgrading","html":"<h1 id=\"upgrading\"><a href=\"#upgrading\"\nclass=\"anchor\">Upgrading</a></h1>\n<p>TigerBeetle guarantees storage stability and provides forward\nupgradeability. In other words, data files created by a particular past\nversion of TigerBeetle can be migrated to any future version of\nTigerBeetle.</p>\n<p>Migration is automatic and the upgrade process is usually as simple\nas:</p>\n<ul>\n<li>Upgrade the replicas, by replacing the <code>./tigerbeetle</code>\nbinary with a newer version on each replica (they will restart\nautomatically when needed).</li>\n<li>Upgrade the clients, by updating the corresponding client libraries,\nrecompiling and redeploying as usual.</li>\n</ul>\n<p>There’s no need to stop the cluster for upgrades, and the client\nupgrades can be rolled out gradually as any change to the client code\nmight.</p>\n<p>NOTE: if you are upgrading from 0.15.3 (the first stable version),\nthe upgrade procedure is more involved, see the <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/releases/tag/0.15.4\">release\nnotes for 0.15.4</a>.</p>\n<h2 id=\"api-stability\"><a href=\"#api-stability\" class=\"anchor\">API\nStability</a></h2>\n<p>At the moment, TigerBeetle doesn’t guarantee complete API stability,\nsubscribe to the <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/issues/2231\">tracking\nissue #2231</a> to receive notifications about breaking changes!</p>\n<h2 id=\"planning-for-upgrades\"><a href=\"#planning-for-upgrades\"\nclass=\"anchor\">Planning for upgrades</a></h2>\n<p>When upgrading TigerBeetle, each release specifies two important\nversions:</p>\n<ul>\n<li>the oldest release that can be upgraded from and,</li>\n<li>the oldest supported client version.</li>\n</ul>\n<p>It’s critical to make sure that the release you intend to upgrade\nfrom is supported by the release you’re upgrading to. This is a hard\nrequirement, but also a hard guarantee: if you wish to upgrade to\n<code>0.15.20</code> which says it supports down to <code>0.15.5</code>,\n<code>0.15.5</code> <em>will</em> work and <code>0.15.4</code> <em>will\nnot</em>. You will have to perform multiple upgrades in this case.</p>\n<p>The upgrade process involves first upgrading the replicas, followed\nby upgrading the clients. The client version <em>cannot</em> be newer\nthan the replica version, and will fail with an error message if so.\nProvided the supported version ranges overlap, coordinating the upgrade\nbetween clients and replicas is not required.</p>\n<p>Upgrading causes a short period of unavailability as the replicas\nrestart. This is on the order of 5 seconds, and will show up as a\nlatency spike on requests. The TigerBeetle clients will internally retry\nany requests during the period.</p>\n<p>Even though this period is short, scheduling a maintenance window for\nupgrades is still recommended, for an extra layer of safety.</p>\n<p>Any special instructions, like that when upgrading from 0.15.3 to\n0.15.4, will be explicitly mentioned in the <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/CHANGELOG.md\">changelog</a>\nand <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/releases\">release\nnotes</a>.</p>\n<p>Additionally, subscribe to <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/issues/2231\">this\ntracking issue</a> to be notified when there are breaking API/behavior\nchanges that are visible to the client.</p>\n<h2 id=\"upgrading-binary-based-installations\"><a\nhref=\"#upgrading-binary-based-installations\" class=\"anchor\">Upgrading\nbinary-based installations</a></h2>\n<p>If TigerBeetle is installed under <code>/usr/bin/tigerbeetle</code>,\nand you wish to upgrade to <code>0.15.4</code>:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># SSH to each replica, in no particular order:</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">cd</span> /tmp</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">wget</span> https://github.com/tigerbeetle/tigerbeetle/releases/download/0.15.4/tigerbeetle-x86_64-linux.zip</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">unzip</span> tigerbeetle-x86_64-linux.zip</span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Put the binary on the same file system as the target, so mv is atomic.</span></span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">mv</span> tigerbeetle /usr/bin/tigerbeetle-new</span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">mv</span> /usr/bin/tigerbeetle /usr/bin/tigerbeetle-old</span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">mv</span> /usr/bin/tigerbeetle-new /usr/bin/tigerbeetle</span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Restart TigerBeetle. Only required when upgrading from 0.15.3.</span></span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Otherwise, it will detect new versions are available and coordinate the upgrade itself.</span></span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">systemctl</span> restart tigerbeetle <span class=\"co\"># or, however you are managing TigerBeetle.</span></span></code></pre></div>\n</div>\n<h2 id=\"upgrading-docker-based-installations\"><a\nhref=\"#upgrading-docker-based-installations\" class=\"anchor\">Upgrading\nDocker-based installations</a></h2>\n<p>If you’re running TigerBeetle inside Kubernetes or Docker, update the\ntag that is pointed to the release you wish to upgrade to. Before\nbeginning, it’s strongly recommend to have a rolling deploy strategy set\nup.</p>\n<p>For example:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre><code>image: ghcr.io/tigerbeetle/tigerbeetle:0.15.3</code></pre>\n</div>\n<p>becomes</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre><code>image: ghcr.io/tigerbeetle/tigerbeetle:0.15.4</code></pre>\n</div>\n<p>Due to the way upgrades work internally, this will restart with the\nnew binary available, but still running the older version. TigerBeetle\nwill then coordinate the actual upgrade when all replicas are ready and\nhave the latest version available.</p>\n<h2 id=\"upgrading-clients\"><a href=\"#upgrading-clients\"\nclass=\"anchor\">Upgrading clients</a></h2>\n<p>Update your language’s specific package management, to reference the\nsame version of the TigerBeetle client:</p>\n<h3 id=\"net\"><a href=\"#net\" class=\"anchor\">.NET</a></h3>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre><code>dotnet add package tigerbeetle --version 0.15.4</code></pre>\n</div>\n<h3 id=\"go\"><a href=\"#go\" class=\"anchor\">Go</a></h3>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre><code>go mod edit -require github.com/tigerbeetle/tigerbeetle-go@v0.15.4</code></pre>\n</div>\n<h3 id=\"java\"><a href=\"#java\" class=\"anchor\">Java</a></h3>\n<p>Edit your <code>pom.xml</code>:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre><code>    &lt;dependency&gt;\n        &lt;groupId&gt;com.tigerbeetle&lt;/groupId&gt;\n        &lt;artifactId&gt;tigerbeetle-java&lt;/artifactId&gt;\n        &lt;version&gt;0.15.4&lt;/version&gt;\n    &lt;/dependency&gt;</code></pre>\n</div>\n<h3 id=\"nodejs\"><a href=\"#nodejs\" class=\"anchor\">Node.js</a></h3>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre><code>npm install --save-exact tigerbeetle-node@0.15.4</code></pre>\n</div>\n<h3 id=\"python\"><a href=\"#python\" class=\"anchor\">Python</a></h3>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre><code>pip install tigerbeetle==0.15.4</code></pre>\n</div>\n<h2 id=\"troubleshooting\"><a href=\"#troubleshooting\"\nclass=\"anchor\">Troubleshooting</a></h2>\n<h3 id=\"upgrading-to-a-newer-version-with-incompatible-clients\"><a\nhref=\"#upgrading-to-a-newer-version-with-incompatible-clients\"\nclass=\"anchor\">Upgrading to a newer version with incompatible\nclients</a></h3>\n<p>If a release of TigerBeetle no longer supports the client version\nyou’re using, it’s still possible to upgrade, with two options:</p>\n<ul>\n<li>Upgrade the replicas to the latest version. In this case, the\nclients will stop working for the duration of the upgrade and\nunavailability will be extended.</li>\n<li>Upgrade the replicas to the latest release that supports the client\nversion in use, then upgrade the clients to that version. Repeat this\nuntil you’re on the latest release.</li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/operating/upgrading.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"operating/recovering","html":"<h1 id=\"recovering\"><a href=\"#recovering\"\nclass=\"anchor\">Recovering</a></h1>\n<p>If a replica’s data file is permanently lost (for example, if the SSD\nfails) then a new data file must be reformatted to restore the\ncluster.</p>\n<p>The <code>tigerbeetle format</code> command must <strong>not</strong>\nbe used for this purpose. The issue is that\n<code>tigerbeetle format</code> would create a replica that believes\nthat any operation that it hasn’t seen can be safely nack’d – unaware of\nthe promises it made which were lost with the old data file This could\ncause the cluster to lose committed data.</p>\n<p>Instead of <code>tigerbeetle format</code>, use the\n<code>tigerbeetle recover</code> command (see below).</p>\n<p>Note that <code>tigerbeetle recover</code> requires the cluster to be\nhealthy and capable of view-changing.</p>\n<p>Once <code>tigerbeetle recover</code> succeeds, run\n<code>tigerbeetle start</code> as normal. At this point, the new replica\nwill rejoin the cluster and state sync to repair itself.</p>\n<h2 id=\"example\"><a href=\"#example\" class=\"anchor\">Example</a></h2>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>./tigerbeetle recover \\\n  --cluster=0 \\\n  --addresses=127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002 \\\n  --replica=2 \\\n  --replica-count=3 \\\n  ./0_2.tigerbeetle</code></pre>\n</div>\n<p>(<code>--addresses</code> should include an address for the\nrecovering replica, but it can be any address as it is just a\nplaceholder.)</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/operating/recovering.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"operating/cdc","html":"<h1 id=\"change-data-capture\"><a href=\"#change-data-capture\"\nclass=\"anchor\">Change Data Capture</a></h1>\n<p>TigerBeetle can stream changes (transfers and balance updates) to\nmessage queues using the AMQP 0.9.1 protocol, which is compatible with\nRabbitMQ and various other message brokers.</p>\n<p>See <a href=\"../installing\">Installing</a> for instructions on how to\ndeploy the TigerBeetle binary.</p>\n<p>Here’s how to start the CDC job:</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<pre class=\"console\"><code>./tigerbeetle amqp --addresses=127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002 --cluster=0 \\\n    --host=127.0.0.1 \\\n    --vhost=/ \\\n    --user=guest --password=guest \\\n    --publish-exchange=tigerbeetle</code></pre>\n</div>\n<p>Here what the arguments mean:</p>\n<ul>\n<li><p><code>--addresses</code> specify IP addresses of all the replicas\nin the cluster. <strong>The order of addresses must correspond to the\norder of replicas</strong>.</p></li>\n<li><p><code>--cluster</code> specifies a globally unique 128 bit\ncluster ID.</p></li>\n<li><p><code>--host</code> the AMQP host address in the format\n<code>ip:port</code>.<br> Both IPv4 and IPv6 addresses are supported. If\n<code>port</code> is omitted, the AMQP default <code>5672</code> is\nused.<br> Multiple addresses (for clustered environments) and DNS names\nare <strong>not supported</strong>.<br> The operator must resolve the IP\naddress of the preferred/reachable server.<br> The CDC job will exit\nwith a non-zero code in case of any connectivity or configuration issue\nwith the AMQP server.</p></li>\n<li><p><code>--vhost</code> the AMQP virtual host name.</p></li>\n<li><p><code>--user</code> the AMQP username.</p></li>\n<li><p><code>--password</code> the AMQP password.<br> Only PLAIN\nauthentication is supported.</p></li>\n<li><p><code>--publish-exchange</code> the exchange name.<br> Must be a\npre-existing exchange provided by the operator.<br> Optional. May be\nomitted if <code>--publish-routing-key</code> is present.</p></li>\n<li><p><code>--publish-routing-key</code> the routing key used in\ncombination with the exchange.<br> Optional. May be omitted if\n<code>publish-exchange</code> is present.</p></li>\n<li><p><code>--event-count-max</code> the maximum number of events\nfetched from TigerBeetle and published to the AMQP server per batch.<br>\nOptional. Defaults to <code>2730</code> if omitted.</p></li>\n<li><p><code>--idle-interval-ms</code> the time interval in milliseconds\nto wait before querying again when the last query returned no\nevents.<br> Optional. Defaults to <code>1000</code> ms if\nomitted.</p></li>\n<li><p><code>--requests-per-second-limit</code> throttles the maximum\nnumber of requests per second made to TigerBeetle.<br> Must be greater\nthan zero.<br> Optional. No limit if omitted.</p></li>\n<li><p><code>--timestamp-last</code> overrides the last published\ntimestamp, resuming from this point.<br> This is a TigerBeetle timestamp\nwith nanosecond precision.<br> Optional. If omitted, the last\nacknowledged timestamp is used.</p></li>\n</ul>\n<h2 id=\"message-content\"><a href=\"#message-content\"\nclass=\"anchor\">Message content:</a></h2>\n<p>Messages are published with custom headers, allowing users to\nimplement routing and filtering rules.</p>\n<p>Message headers:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>AMQP data type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>event_type</code></td>\n<td><code>string</code></td>\n<td>The event type.</td>\n</tr>\n<tr>\n<td><code>ledger</code></td>\n<td><code>long_long_int</code></td>\n<td>The ledger of the transfer and accounts.</td>\n</tr>\n<tr>\n<td><code>transfer_code</code></td>\n<td><code>long_int</code></td>\n<td>The transfer code.</td>\n</tr>\n<tr>\n<td><code>debit_account_code</code></td>\n<td><code>long_int</code></td>\n<td>The debit account code.</td>\n</tr>\n<tr>\n<td><code>credit_account_code</code></td>\n<td><code>long_int</code></td>\n<td>The credit account code.</td>\n</tr>\n<tr>\n<td><code>app_id</code></td>\n<td><code>string</code></td>\n<td>Constant <code>tigerbeetle</code>.</td>\n</tr>\n<tr>\n<td><code>content_type</code></td>\n<td><code>string</code></td>\n<td>Constant <code>application/json</code></td>\n</tr>\n<tr>\n<td><code>delivery_mode</code></td>\n<td><code>short_short_uint</code></td>\n<td>Constant <code>2</code> which means <em>persistent</em>.</td>\n</tr>\n<tr>\n<td><code>timestamp</code></td>\n<td><code>timestamp</code></td>\n<td>The event timestamp.¹</td>\n</tr>\n</tbody>\n</table>\n</div>\n<blockquote>\n<p>¹ <em>AMQP timestamps are represented in seconds, so TigerBeetle\ntimestamps are truncated.<br> Use the <code>timestamp</code> field in\nthe message body for full nanosecond precision.</em></p>\n</blockquote>\n<p>Message body:</p>\n<p>Each <em>event</em> published contains information about the <a\nhref=\"../../reference/transfer\">transfer</a> and the <a\nhref=\"../../reference/account\">account</a>s involved.</p>\n<ul>\n<li><p><code>type</code>: The type of event.<br> One of\n<code>single_phase</code>, <code>two_phase_pending</code>,\n<code>two_phase_posted</code>, <code>two_phase_voided</code> or\n<code>two_phase_expired</code>.<br> See the <a\nhref=\"../../coding/two-phase-transfers\">Two-Phase Transfers</a> for more\ndetails.</p></li>\n<li><p><code>timestamp</code>: The event timestamp.<br> Usually, it’s\nthe same as the transfer’s timestamp, except when\n<code>event_type == 'two_phase_expired'</code> when it’s the expiry\ntimestamp.</p></li>\n<li><p><code>ledger</code>: The <a\nhref=\"../../coding/data-modeling#ledgers\">ledger</a> code.</p></li>\n<li><p><code>transfer</code>: Full details of the <a\nhref=\"../../reference/transfer\">transfer</a>.<br> For\n<code>two_phase_expired</code> events, it’s the pending transfer that\nwas reverted.</p></li>\n<li><p><code>debit_account</code>: Full details of the <a\nhref=\"../../reference/transfer#debit_account_id\">debit account</a>, with\nthe balance <em>as of</em> the time of the event.</p></li>\n<li><p><code>credit_account</code>: Full details of the <a\nhref=\"../../reference/transfer#credit_account_id\">credit account</a>,\nwith the balance <em>as of</em> the time of the event.</p></li>\n</ul>\n<p>The message body is encoded as a UTF-8 JSON without line breaks or\nspaces. Long integers such as <code>u128</code> and <code>u64</code> are\nencoded as JSON strings to improve interoperability.</p>\n<p>Here is a formatted example (with indentation and line breaks) for\nreadability.</p>\n<div class=\"code-wrapper\">\n<button class=\"copy\" title=\"Copy\">\n    <svg width=\"16\" height=\"16\"><use href=\"#svg-copy\"></use></svg>\n</button>\n    \n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode json\"><code class=\"sourceCode json\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">{</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;timestamp&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;1745328372758695656&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;type&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;single_phase&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;ledger&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">2</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;transfer&quot;</span><span class=\"fu\">:</span> <span class=\"fu\">{</span></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;id&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">9082709</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;amount&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">3794</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;pending_id&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">0</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;user_data_128&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;79248595801719937611592367840129079151&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;user_data_64&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;13615171707598273871&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;user_data_32&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">3229992513</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;timeout&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">0</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-13\"><a href=\"#cb2-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;code&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">20295</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-14\"><a href=\"#cb2-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;flags&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">0</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-15\"><a href=\"#cb2-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;timestamp&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;1745328372758695656&quot;</span></span>\n<span id=\"cb2-16\"><a href=\"#cb2-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"fu\">},</span></span>\n<span id=\"cb2-17\"><a href=\"#cb2-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;debit_account&quot;</span><span class=\"fu\">:</span> <span class=\"fu\">{</span></span>\n<span id=\"cb2-18\"><a href=\"#cb2-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;id&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">3750</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-19\"><a href=\"#cb2-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;debits_pending&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">0</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-20\"><a href=\"#cb2-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;debits_posted&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">8463768</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-21\"><a href=\"#cb2-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;credits_pending&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">0</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-22\"><a href=\"#cb2-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;credits_posted&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">8861179</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-23\"><a href=\"#cb2-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;user_data_128&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;118966247877720884212341541320399553321&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-24\"><a href=\"#cb2-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;user_data_64&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;526432537153007844&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-25\"><a href=\"#cb2-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;user_data_32&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">4157247332</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-26\"><a href=\"#cb2-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;code&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">1</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-27\"><a href=\"#cb2-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;flags&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">0</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-28\"><a href=\"#cb2-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;timestamp&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;1745328270103398016&quot;</span></span>\n<span id=\"cb2-29\"><a href=\"#cb2-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"fu\">},</span></span>\n<span id=\"cb2-30\"><a href=\"#cb2-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;credit_account&quot;</span><span class=\"fu\">:</span> <span class=\"fu\">{</span></span>\n<span id=\"cb2-31\"><a href=\"#cb2-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;id&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">6765</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-32\"><a href=\"#cb2-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;debits_pending&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">0</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-33\"><a href=\"#cb2-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;debits_posted&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">8669204</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-34\"><a href=\"#cb2-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;credits_pending&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">0</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-35\"><a href=\"#cb2-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;credits_posted&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">8637251</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-36\"><a href=\"#cb2-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;user_data_128&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;43670023860556310170878798978091998141&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-37\"><a href=\"#cb2-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;user_data_64&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;12485093662256535374&quot;</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-38\"><a href=\"#cb2-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;user_data_32&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">1924162092</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-39\"><a href=\"#cb2-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;code&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">1</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-40\"><a href=\"#cb2-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;flags&quot;</span><span class=\"fu\">:</span> <span class=\"dv\">0</span><span class=\"fu\">,</span></span>\n<span id=\"cb2-41\"><a href=\"#cb2-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">&quot;timestamp&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;1745328270103401031&quot;</span></span>\n<span id=\"cb2-42\"><a href=\"#cb2-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"fu\">}</span></span>\n<span id=\"cb2-43\"><a href=\"#cb2-43\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">}</span></span></code></pre></div>\n</div>\n<h2 id=\"guarantees\"><a href=\"#guarantees\"\nclass=\"anchor\">Guarantees</a></h2>\n<p>TigerBeetle guarantees <em>at-least-once</em> semantics when\npublishing to message brokers, and makes a best effort to prevent\nduplicate messages. However, during crash recovery, the CDC job may\nreplay unacknowledged messages that could have been already delivered to\nconsumers.</p>\n<p>It is the consumer’s responsibility to perform <strong>idempotency\nchecks</strong> when processing messages.</p>\n<h2 id=\"upgrading\"><a href=\"#upgrading\"\nclass=\"anchor\">Upgrading</a></h2>\n<p>The CDC job requires TigerBeetle cluster version <code>0.16.43</code>\nor greater.</p>\n<p>The same <a href=\"../upgrading#planning-for-upgrades\">upgrade\nplanning</a> recommended for clients applies to the CDC job. The CDC job\nversion must not be newer than the cluster version, as it will fail with\nan error message if so.</p>\n<p>Any transactions <em>originally</em> created by TigerBeetle versions\nbefore <code>0.16.29</code> have the following limitations for CDC\nprocessing:</p>\n<ul>\n<li>Events of type <code>two_phase_expired</code> are\n<strong>not</strong> supported.</li>\n<li>Only transfers where both the debit and credit accounts have the <a\nhref=\"../../reference/account#flagshistory\"><code>flags.history</code></a>\nenabled are visible to CDC.</li>\n</ul>\n<p>Transactions committed after version <code>0.16.29</code> are fully\ncompatible with CDC and do not require the <code>history</code>\nflag.</p>\n<h2 id=\"cdc-to-rabbitmq-amqp-091-in-production\"><a\nhref=\"#cdc-to-rabbitmq-amqp-091-in-production\" class=\"anchor\">CDC to\nRabbitMQ (AMQP 0.9.1) in production</a></h2>\n<h3 id=\"high-availability\"><a href=\"#high-availability\"\nclass=\"anchor\">High Availability</a></h3>\n<p>The CDC job is single instance. Starting a second\n<code>tigerbeetle amqp</code> with the same <code>cluster_id</code> will\nexit with a non-zero exit code. For high availability, the CDC job could\nbe monitored for crashes and restarted in case a failure.</p>\n<p>The CDC job itself is stateless, and will resume from the last event\nacknowledged by RabbitMQ, however it may replay events that weren’t\nacknowledged but received by the exchange.</p>\n<h3 id=\"tls-support\"><a href=\"#tls-support\" class=\"anchor\">TLS\nSupport</a></h3>\n<p>For secure <code>AMQPS</code> connections, we recommend using a TLS\nTunnel to wrap the connection between TigerBeetle and RabbitMQ.</p>\n<h3 id=\"event-replay\"><a href=\"#event-replay\" class=\"anchor\">Event\nReplay</a></h3>\n<p>By default, when the CDC job starts, it resumes from the timestamp of\nthe last acknowledged event in RabbitMQ. This can be overridden to using\n<code>--timestamp-last</code>. For example,\n<code>--timestamp-last=0</code> will replay all events.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/operating/cdc.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"reference","html":"<h1 id=\"reference\"><a href=\"#reference\"\nclass=\"anchor\">Reference</a></h1>\n<p>Like the <a href=\"../coding/\">Coding</a> section, the reference is\naimed at programmers building applications on top of TigerBeetle. While\nCoding provides a series of topical guide, the Reference exhaustively\ndocuments every single aspect of TigerBeetle. Any answer can be found\nhere, but it might take some digging!</p>\n<ul>\n<li><a href=\"./sessions\">Client Sessions</a></li>\n<li><a href=\"./account\">Account</a></li>\n<li><a href=\"./transfer\">Transfer</a></li>\n<li><a href=\"./account-balance\">AccountBalance</a></li>\n<li><a href=\"./account-filter\">AccountFilter</a></li>\n<li><a href=\"./query-filter\">QueryFilter</a></li>\n<li><a href=\"./requests/\">Requests</a>\n<ul>\n<li><a\nhref=\"./requests/create_accounts\"><code>create_accounts</code></a></li>\n<li><a\nhref=\"./requests/create_transfers\"><code>create_transfers</code></a></li>\n<li><a\nhref=\"./requests/lookup_accounts\"><code>lookup_accounts</code></a></li>\n<li><a\nhref=\"./requests/lookup_transfers\"><code>lookup_transfers</code></a></li>\n<li><a\nhref=\"./requests/get_account_balances\"><code>get_account_balances</code></a></li>\n<li><a\nhref=\"./requests/get_account_transfers\"><code>get_account_transfers</code></a></li>\n<li><a\nhref=\"./requests/query_accounts\"><code>query_accounts</code></a></li>\n<li><a\nhref=\"./requests/query_transfers\"><code>query_transfers</code></a></li>\n</ul></li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/reference/README.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"reference/sessions","html":"<h1 id=\"client-sessions\"><a href=\"#client-sessions\"\nclass=\"anchor\">Client Sessions</a></h1>\n<p>A <em>client session</em> is a sequence of <a\nhref=\"../../coding/requests/\">requests</a> and replies sent between a\nclient and a cluster.</p>\n<p>A client session may have <strong>at most one in-flight\nrequest</strong> — i.e. at most one unique request on the network for\nwhich a reply has not been received. This simplifies consistency and\nallows the cluster to statically guarantee capacity in its incoming\nmessage queue. Additional requests from the application are queued by\nthe client, to be dequeued and sent when their preceding request\nreceives a reply.</p>\n<p>Similar to other databases, TigerBeetle has a <a\nhref=\"#eviction\">hard limit</a> on the number of concurrent client\nsessions. To maximize throughput, users are encouraged to minimize the\nnumber of concurrent clients and <a\nhref=\"../../coding/requests#batching-events\">batch</a> as many events as\npossible per request.</p>\n<h2 id=\"lifecycle\"><a href=\"#lifecycle\"\nclass=\"anchor\">Lifecycle</a></h2>\n<p>A client session begins when a client registers itself with the\ncluster.</p>\n<ul>\n<li>Each client session has a unique identifier (“client id”) — an\nephemeral random 128-bit id.</li>\n<li>The client sends a special “register” message which is committed by\nthe cluster, at which point the client is “registered” — once it\nreceives the reply, it may begin sending requests.</li>\n<li>Client registration is handled automatically by the TigerBeetle\nclient implementation when the client is initialized, before it sends\nits first request.</li>\n<li>When a client restarts (for example, the application service running\nthe TigerBeetle client is restarted) it does not resume its old session\n— it starts a new session, with a new (random) client id.</li>\n</ul>\n<p>A client session ends when either:</p>\n<ul>\n<li>the client session is <a href=\"#eviction\">evicted</a>, or</li>\n<li>the client terminates</li>\n</ul>\n<p>— whichever occurs first.</p>\n<h2 id=\"eviction\"><a href=\"#eviction\" class=\"anchor\">Eviction</a></h2>\n<p>When a client session is registering and the number of active\nsessions in the cluster is already at the cluster’s concurrent client\nsession <a\nhref=\"https://tigerbeetle.com/blog/2022-10-12-a-database-without-dynamic-memory\">limit</a>\n(<code>config.clients_max</code>, 64 by default), an existing client\nsession must be evicted to make space for the new session.</p>\n<ul>\n<li>After a session is evicted by the cluster, no future requests from\nthat session will ever execute.</li>\n<li>The evicted session is chosen as the session that committed a\nrequest the longest time ago.</li>\n</ul>\n<p>The cluster sends a message to notify the evicted session that it has\nended. Typically the evicted client is no longer active (already\nterminated), but if it is active, the eviction message causes it to\nself-terminate, bubbling up to the application as an\n<code>session evicted</code> error.</p>\n<p>If active clients are terminating with <code>session evicted</code>\nerrors, it most likely indicates that the application is trying to run\ntoo many concurrent clients. For performance reasons, it is recommended\nto <a href=\"../../coding/requests/#batching-events\">batch</a> as many\nevents as possible into each request sent by each client.</p>\n<h2 id=\"retries\"><a href=\"#retries\" class=\"anchor\">Retries</a></h2>\n<p>A client session will automatically retry a request until either:</p>\n<ul>\n<li>the client receives a corresponding reply from the cluster, or</li>\n<li>the client is terminated.</li>\n</ul>\n<p>Unlike most database or RPC clients:</p>\n<ul>\n<li>the TigerBeetle client will never time out</li>\n<li>the TigerBeetle client has no retry limits</li>\n<li>the TigerBeetle client does not surface network errors</li>\n</ul>\n<p>With TigerBeetle’s strict consistency model, surfacing these errors\nat the client/application level would be misleading. An error would\nimply that a request did not execute, when that is not known:</p>\n<ul>\n<li>A request delayed by the network could execute after its\ntimeout.</li>\n<li>A reply delayed by the network could execute before its\ntimeout.</li>\n</ul>\n<h2 id=\"guarantees\"><a href=\"#guarantees\"\nclass=\"anchor\">Guarantees</a></h2>\n<ul>\n<li>A client session may have at most one in-flight <a\nhref=\"../../coding/requests/\">request</a>.</li>\n<li>A client session <a\nhref=\"https://jepsen.io/consistency/models/read-your-writes\">reads its\nown writes</a>, meaning that read operations that happen after a given\nwrite operation will observe the effects of the write.</li>\n<li>A client session observes writes in the order that they occur on the\ncluster.</li>\n<li>A client session observes <a\nhref=\"../account#debits_posted\"><code>debits_posted</code></a> and <a\nhref=\"../account#credits_posted\"><code>credits_posted</code></a> as\nmonotonically increasing. That is, a client session will never see\n<code>credits_posted</code> or <code>debits_posted</code> decrease.</li>\n<li>A client session never observes uncommitted updates.</li>\n<li>A client session never observes a broken invariant (e.g. <a\nhref=\"../account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>\nor <a\nhref=\"../transfer#flagslinked\"><code>flags.linked</code></a>).</li>\n<li>Multiple client sessions may receive replies out of order relative\nto one another. For example, if two clients submit requests around the\nsame time, the client whose request is committed first might receive the\nreply later.</li>\n<li>A client session can consider a request executed when it receives a\nreply for the request.</li>\n<li>If a client session is terminated and restarts, it is guaranteed to\nsee the effects of updates for which the corresponding reply was\nreceived prior to termination.</li>\n<li>If a client session is terminated and restarts, it is <em>not</em>\nguaranteed to see the effects of updates for which the corresponding\nreply was <em>not</em> received prior to the restart. Those updates may\noccur at any point in the future, or never. Handling application crash\nrecovery safely requires <a\nhref=\"../../coding/reliable-transaction-submission\">using\n<code>id</code>s to idempotently retry events</a>.</li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/reference/sessions.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"reference/account","html":"<h1 id=\"account\"><a href=\"#account\"\nclass=\"anchor\"><code>Account</code></a></h1>\n<p>An <code>Account</code> is a record storing the cumulative effect of\ncommitted <a href=\"../transfer\">transfers</a>.</p>\n<h3 id=\"updates\"><a href=\"#updates\" class=\"anchor\">Updates</a></h3>\n<p>Account fields <em>cannot be changed by the user</em> after creation.\nHowever, debits and credits fields are updated by TigerBeetle as\ntransfers move money to and from an account.</p>\n<h3 id=\"deletion\"><a href=\"#deletion\" class=\"anchor\">Deletion</a></h3>\n<p>Accounts <strong>cannot be deleted</strong> after creation. This\nprovides a strong guarantee for an audit trail – and the account record\nis only 128 bytes.</p>\n<p>If an account is no longer in use, you may want to <a\nhref=\"../../coding/recipes/close-account\">zero out its balance</a>.</p>\n<h3 id=\"guarantees\"><a href=\"#guarantees\"\nclass=\"anchor\">Guarantees</a></h3>\n<ul>\n<li>Accounts are immutable. They are never modified once they are\nsuccessfully created (excluding balance fields, which are modified by\ntransfers).</li>\n<li>There is at most one <code>Account</code> with a particular <a\nhref=\"#id\"><code>id</code></a>.</li>\n<li>The sum of all accounts’ <a\nhref=\"#debits_pending\"><code>debits_pending</code></a> equals the sum of\nall accounts’ <a\nhref=\"#credits_pending\"><code>credits_pending</code></a>.</li>\n<li>The sum of all accounts’ <a\nhref=\"#debits_posted\"><code>debits_posted</code></a> equals the sum of\nall accounts’ <a\nhref=\"#credits_posted\"><code>credits_posted</code></a>.</li>\n</ul>\n<h2 id=\"fields\"><a href=\"#fields\" class=\"anchor\">Fields</a></h2>\n<h3 id=\"id\"><a href=\"#id\" class=\"anchor\"><code>id</code></a></h3>\n<p>This is a unique, client-defined identifier for the account.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>Must not be zero or <code>2^128 - 1</code> (the highest 128-bit\nunsigned integer)</li>\n<li>Must not conflict with another account in the cluster</li>\n</ul>\n<p>See the <a href=\"../../coding/data-modeling#id\"><code>id</code>\nsection in the data modeling doc</a> for more recommendations on\nchoosing an ID scheme.</p>\n<p>Note that account IDs are unique for the cluster – not per ledger. If\nyou want to store a relationship between accounts, such as indicating\nthat multiple accounts on different ledgers belong to the same user, you\nshould store a user ID in one of the <a\nhref=\"#user_data_128\"><code>user_data</code></a> fields.</p>\n<h3 id=\"debits_pending\"><a href=\"#debits_pending\"\nclass=\"anchor\"><code>debits_pending</code></a></h3>\n<p><code>debits_pending</code> counts debits reserved by pending\ntransfers. When a pending transfer posts, voids, or times out, the\namount is removed from <code>debits_pending</code>.</p>\n<p>Money in <code>debits_pending</code> is reserved — that is, it cannot\nbe spent until the corresponding pending transfer resolves.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>Must be zero when the account is created</li>\n</ul>\n<h3 id=\"debits_posted\"><a href=\"#debits_posted\"\nclass=\"anchor\"><code>debits_posted</code></a></h3>\n<p>Amount of posted debits.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>Must be zero when the account is created</li>\n</ul>\n<h3 id=\"credits_pending\"><a href=\"#credits_pending\"\nclass=\"anchor\"><code>credits_pending</code></a></h3>\n<p><code>credits_pending</code> counts credits reserved by pending\ntransfers. When a pending transfer posts, voids, or times out, the\namount is removed from <code>credits_pending</code>.</p>\n<p>Money in <code>credits_pending</code> is reserved — that is, it\ncannot be spent until the corresponding pending transfer resolves.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>Must be zero when the account is created</li>\n</ul>\n<h3 id=\"credits_posted\"><a href=\"#credits_posted\"\nclass=\"anchor\"><code>credits_posted</code></a></h3>\n<p>Amount of posted credits.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>Must be zero when the account is created</li>\n</ul>\n<h3 id=\"user_data_128\"><a href=\"#user_data_128\"\nclass=\"anchor\"><code>user_data_128</code></a></h3>\n<p>This is an optional 128-bit secondary identifier to link this account\nto an external entity or event.</p>\n<p>When set to zero, no secondary identifier will be associated with the\naccount, therefore only non-zero values can be used as <a\nhref=\"../query-filter\">query filter</a>.</p>\n<p>As an example, you might use a <a\nhref=\"../../coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">ULID</a>\nthat ties together a group of accounts.</p>\n<p>For more information, see <a\nhref=\"../../coding/data-modeling#user_data\">Data Modeling</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n</ul>\n<h3 id=\"user_data_64\"><a href=\"#user_data_64\"\nclass=\"anchor\"><code>user_data_64</code></a></h3>\n<p>This is an optional 64-bit secondary identifier to link this account\nto an external entity or event.</p>\n<p>When set to zero, no secondary identifier will be associated with the\naccount, therefore only non-zero values can be used as <a\nhref=\"../query-filter\">query filter</a>.</p>\n<p>As an example, you might use this field store an external\ntimestamp.</p>\n<p>For more information, see <a\nhref=\"../../coding/data-modeling#user_data\">Data Modeling</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n</ul>\n<h3 id=\"user_data_32\"><a href=\"#user_data_32\"\nclass=\"anchor\"><code>user_data_32</code></a></h3>\n<p>This is an optional 32-bit secondary identifier to link this account\nto an external entity or event.</p>\n<p>When set to zero, no secondary identifier will be associated with the\naccount, therefore only non-zero values can be used as <a\nhref=\"../query-filter\">query filter</a>.</p>\n<p>As an example, you might use this field to store a timezone or\nlocale.</p>\n<p>For more information, see <a\nhref=\"../../coding/data-modeling#user_data\">Data Modeling</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n</ul>\n<h3 id=\"reserved\"><a href=\"#reserved\"\nclass=\"anchor\"><code>reserved</code></a></h3>\n<p>This space may be used for additional data in the future.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 4 bytes</li>\n<li>Must be zero</li>\n</ul>\n<h3 id=\"ledger\"><a href=\"#ledger\"\nclass=\"anchor\"><code>ledger</code></a></h3>\n<p>This is an identifier that partitions the sets of accounts that can\ntransact with each other.</p>\n<p>See <a href=\"../../coding/data-modeling#ledgers\">data modeling</a>\nfor more details about how to think about setting up your ledgers.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n<li>Must not be zero</li>\n</ul>\n<h3 id=\"code\"><a href=\"#code\" class=\"anchor\"><code>code</code></a></h3>\n<p>This is a user-defined enum denoting the category of the account.</p>\n<p>As an example, you might use codes\n<code>1000</code>-<code>3340</code> to indicate asset accounts in\ngeneral, where <code>1001</code> is Bank Account and <code>1002</code>\nis Money Market Account and <code>2003</code> is Motor Vehicles and so\non.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 16-bit unsigned integer (2 bytes)</li>\n<li>Must not be zero</li>\n</ul>\n<h3 id=\"flags\"><a href=\"#flags\"\nclass=\"anchor\"><code>flags</code></a></h3>\n<p>A bitfield that toggles additional behavior.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 16-bit unsigned integer (2 bytes)</li>\n<li>Some flags are mutually exclusive; see <a\nhref=\"../requests/create_accounts#flags_are_mutually_exclusive\"><code>flags_are_mutually_exclusive</code></a>.</li>\n</ul>\n<h4 id=\"flagslinked\"><a href=\"#flagslinked\"\nclass=\"anchor\"><code>flags.linked</code></a></h4>\n<p>This flag links the result of this account creation to the result of\nthe next one in the request, such that they will either succeed or fail\ntogether.</p>\n<p>The last account in a chain of linked accounts does\n<strong>not</strong> have this flag set.</p>\n<p>You can read more about <a href=\"../../coding/linked-events\">linked\nevents</a>.</p>\n<h4 id=\"flagsdebits_must_not_exceed_credits\"><a\nhref=\"#flagsdebits_must_not_exceed_credits\"\nclass=\"anchor\"><code>flags.debits_must_not_exceed_credits</code></a></h4>\n<p>When set, transfers will be rejected that would cause this account’s\ndebits to exceed credits. Specifically when\n<code>account.debits_pending + account.debits_posted + transfer.amount &gt; account.credits_posted</code>.</p>\n<p>This cannot be set when <code>credits_must_not_exceed_debits</code>\nis also set.</p>\n<h4 id=\"flagscredits_must_not_exceed_debits\"><a\nhref=\"#flagscredits_must_not_exceed_debits\"\nclass=\"anchor\"><code>flags.credits_must_not_exceed_debits</code></a></h4>\n<p>When set, transfers will be rejected that would cause this account’s\ncredits to exceed debits. Specifically when\n<code>account.credits_pending + account.credits_posted + transfer.amount &gt; account.debits_posted</code>.</p>\n<p>This cannot be set when <code>debits_must_not_exceed_credits</code>\nis also set.</p>\n<h4 id=\"flagshistory\"><a href=\"#flagshistory\"\nclass=\"anchor\"><code>flags.history</code></a></h4>\n<p>When set, the account will retain the history of balances at each\ntransfer.</p>\n<p>Note that the <a\nhref=\"../requests/get_account_balances\"><code>get_account_balances</code></a>\noperation only works for accounts with this flag set.</p>\n<h4 id=\"flagsimported\"><a href=\"#flagsimported\"\nclass=\"anchor\"><code>flags.imported</code></a></h4>\n<p>When set, allows importing historical <code>Account</code>s with\ntheir original <a href=\"#timestamp\"><code>timestamp</code></a>.</p>\n<p>TigerBeetle will not use the <a href=\"../../coding/time\">cluster\nclock</a> to assign the timestamp, allowing the user to define it,\nexpressing <em>when</em> the account was effectively created by an\nexternal event.</p>\n<p>To maintain system invariants regarding auditability and\ntraceability, some constraints are necessary:</p>\n<ul>\n<li><p>It is not allowed to mix events with the <code>imported</code>\nflag set and <em>not</em> set in the same batch. The application must\nsubmit batches of imported events separately.</p></li>\n<li><p>User-defined timestamps must be <strong>unique</strong> and\nexpressed as nanoseconds since the UNIX epoch. No two objects can have\nthe same timestamp, even different objects like an <code>Account</code>\nand a <code>Transfer</code> cannot share the same timestamp.</p></li>\n<li><p>User-defined timestamps must be a past date, never ahead of the\ncluster clock at the time the request arrives.</p></li>\n<li><p>Timestamps must be strictly increasing.</p>\n<p>Even user-defined timestamps that are required to be past dates need\nto be at least one nanosecond ahead of the timestamp of the last account\ncommitted by the cluster.</p>\n<p>Since the timestamp cannot regress, importing past events can be\nnaturally restrictive without coordination, as the last timestamp can be\nupdated using the cluster clock during regular cluster activity.\nInstead, it’s recommended to import events only on a fresh cluster or\nduring a scheduled maintenance window.</p>\n<p>It’s recommended to submit the entire batch as a <a\nhref=\"#flagslinked\">linked chain</a>, ensuring that if any account\nfails, none of them are committed, preserving the last timestamp\nunchanged. This approach gives the application a chance to correct\nfailed imported accounts, re-submitting the batch again with the same\nuser-defined timestamps.</p></li>\n</ul>\n<h4 id=\"flagsclosed\"><a href=\"#flagsclosed\"\nclass=\"anchor\"><code>flags.closed</code></a></h4>\n<p>When set, the account will reject further transfers, except for <a\nhref=\"../transfer#modes\">voiding two-phase transfers</a> that are still\npending.</p>\n<ul>\n<li>This flag can be set during the account creation.</li>\n<li>This flag can also be set by sending a <a\nhref=\"../transfer#flagspending\">two-phase pending transfer</a> with the\n<a\nhref=\"../transfer#flagsclosing_debit\"><code>Transfer.flags.closing_debit</code></a>\nand/or <a\nhref=\"../transfer#flagsclosing_credit\"><code>Transfer.flags.closing_credit</code></a>\nflags set.</li>\n<li>This flag can be <em>unset</em> by <a\nhref=\"../transfer#flagsvoid_pending_transfer\">voiding</a> the two-phase\npending transfer that closed the account.</li>\n</ul>\n<h3 id=\"timestamp\"><a href=\"#timestamp\"\nclass=\"anchor\"><code>timestamp</code></a></h3>\n<p>This is the time the account was created, as nanoseconds since UNIX\nepoch. You can read more about <a href=\"../../coding/time\">Time in\nTigerBeetle</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li><p>Type is 64-bit unsigned integer (8 bytes)</p></li>\n<li><p>Must be <code>0</code> when the <code>Account</code> is created\nwith <a href=\"#flagsimported\"><code>flags.imported</code></a>\n<em>not</em> set</p>\n<p>It is set by TigerBeetle to the moment the account arrives at the\ncluster.</p></li>\n<li><p>Must be greater than <code>0</code> and less than\n<code>2^63</code> when the <code>Account</code> is created with <a\nhref=\"#flagsimported\"><code>flags.imported</code></a> set</p></li>\n</ul>\n<h2 id=\"internals\"><a href=\"#internals\"\nclass=\"anchor\">Internals</a></h2>\n<p>If you’re curious and want to learn more, you can find the source\ncode for this struct in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/tigerbeetle.zig\">src/tigerbeetle.zig</a>.\nSearch for <code>const Account = extern struct {</code>.</p>\n<p>You can find the source code for creating an account in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/state_machine.zig\">src/state_machine.zig</a>.\nSearch for <code>fn create_account(</code>.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/reference/account.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"reference/transfer","html":"<h1 id=\"transfer\"><a href=\"#transfer\"\nclass=\"anchor\"><code>Transfer</code></a></h1>\n<p>A <code>transfer</code> is an immutable record of a financial\ntransaction between two accounts.</p>\n<p>In TigerBeetle, financial transactions are called “transfers” instead\nof “transactions” because the latter term is heavily overloaded in the\ncontext of databases.</p>\n<p>Note that transfers debit a single account and credit a single\naccount on the same ledger. You can compose these into more complex\ntransactions using the methods described in <a\nhref=\"../../coding/recipes/currency-exchange\">Currency Exchange</a> and\n<a href=\"../../coding/recipes/multi-debit-credit-transfers\">Multi-Debit,\nMulti-Credit Transfers</a>.</p>\n<h3 id=\"updates\"><a href=\"#updates\" class=\"anchor\">Updates</a></h3>\n<p>Transfers <em>cannot be modified</em> after creation.</p>\n<p>If a detail of a transfer is incorrect and needs to be modified, this\nis done using <a\nhref=\"../../coding/recipes/correcting-transfers\">correcting\ntransfers</a>.</p>\n<h3 id=\"deletion\"><a href=\"#deletion\" class=\"anchor\">Deletion</a></h3>\n<p>Transfers <em>cannot be deleted</em> after creation.</p>\n<p>If a transfer is made in error, its effects can be reversed using a\n<a href=\"../../coding/recipes/correcting-transfers\">correcting\ntransfer</a>.</p>\n<h3 id=\"guarantees\"><a href=\"#guarantees\"\nclass=\"anchor\">Guarantees</a></h3>\n<ul>\n<li>Transfers are immutable. They are never modified once they are\nsuccessfully created.</li>\n<li>There is at most one <code>Transfer</code> with a particular <a\nhref=\"#id\"><code>id</code></a>.</li>\n<li>A <a\nhref=\"../../coding/two-phase-transfers#reserve-funds-pending-transfer\">pending\ntransfer</a> resolves at most once.</li>\n<li>Transfer <a href=\"#timeout\">timeouts</a> are deterministic, driven\nby the <a\nhref=\"../../coding/time#why-tigerbeetle-manages-timestamps\">cluster’s\ntimestamp</a>.</li>\n</ul>\n<h2 id=\"modes\"><a href=\"#modes\" class=\"anchor\">Modes</a></h2>\n<p>Transfers can either be Single-Phase, where they are executed\nimmediately, or Two-Phase, where they are first put in a Pending state\nand then either Posted or Voided. For more details on the latter, see\nthe <a href=\"../../coding/two-phase-transfers\">Two-Phase Transfer\nguide</a>.</p>\n<p>Fields used by each mode of transfer:</p>\n<div class=\"table\">\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Single-Phase</th>\n<th>Pending</th>\n<th>Post-Pending</th>\n<th>Void-Pending</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>id</code></td>\n<td>required</td>\n<td>required</td>\n<td>required</td>\n<td>required</td>\n</tr>\n<tr>\n<td><code>debit_account_id</code></td>\n<td>required</td>\n<td>required</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>credit_account_id</code></td>\n<td>required</td>\n<td>required</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>required</td>\n<td>required</td>\n<td>required</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>pending_id</code></td>\n<td>none</td>\n<td>none</td>\n<td>required</td>\n<td>required</td>\n</tr>\n<tr>\n<td><code>user_data_128</code></td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>user_data_64</code></td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>user_data_32</code></td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>timeout</code></td>\n<td>none</td>\n<td>optional¹</td>\n<td>none</td>\n<td>none</td>\n</tr>\n<tr>\n<td><code>ledger</code></td>\n<td>required</td>\n<td>required</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>code</code></td>\n<td>required</td>\n<td>required</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>flags.linked</code></td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>flags.pending</code></td>\n<td>false</td>\n<td>true</td>\n<td>false</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>flags.post_pending_transfer</code></td>\n<td>false</td>\n<td>false</td>\n<td>true</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>flags.void_pending_transfer</code></td>\n<td>false</td>\n<td>false</td>\n<td>false</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>flags.balancing_debit</code></td>\n<td>optional</td>\n<td>optional</td>\n<td>false</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>flags.balancing_credit</code></td>\n<td>optional</td>\n<td>optional</td>\n<td>false</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>flags.closing_debit</code></td>\n<td>optional</td>\n<td>true</td>\n<td>false</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>flags.closing_credit</code></td>\n<td>optional</td>\n<td>true</td>\n<td>false</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>flags.imported</code></td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n<td>optional</td>\n</tr>\n<tr>\n<td><code>timestamp</code></td>\n<td>none²</td>\n<td>none²</td>\n<td>none²</td>\n<td>none²</td>\n</tr>\n</tbody>\n</table>\n</div>\n<blockquote>\n<p><em>¹ None if <code>flags.imported</code> is set.</em><br/> <em>²\nRequired if <code>flags.imported</code> is set.</em></p>\n</blockquote>\n<h2 id=\"fields\"><a href=\"#fields\" class=\"anchor\">Fields</a></h2>\n<h3 id=\"id\"><a href=\"#id\" class=\"anchor\"><code>id</code></a></h3>\n<p>This is a unique identifier for the transaction.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>Must not be zero or <code>2^128 - 1</code></li>\n<li>Must not conflict with another transfer in the cluster</li>\n</ul>\n<p>See the <a href=\"../../coding/data-modeling#id\"><code>id</code>\nsection in the data modeling doc</a> for more recommendations on\nchoosing an ID scheme.</p>\n<p>Note that transfer IDs are unique for the cluster – not the ledger.\nIf you want to store a relationship between multiple transfers, such as\nindicating that multiple transfers on different ledgers were part of a\nsingle transaction, you should store a transaction ID in one of the <a\nhref=\"#user_data_128\"><code>user_data</code></a> fields.</p>\n<h3 id=\"debit_account_id\"><a href=\"#debit_account_id\"\nclass=\"anchor\"><code>debit_account_id</code></a></h3>\n<p>This refers to the account to debit the transfer’s <a\nhref=\"#amount\"><code>amount</code></a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>When <code>flags.post_pending_transfer</code> and\n<code>flags.void_pending_transfer</code> are <em>not</em> set:\n<ul>\n<li>Must match an existing account</li>\n<li>Must not be the same as <code>credit_account_id</code></li>\n</ul></li>\n<li>When <code>flags.post_pending_transfer</code> or\n<code>flags.void_pending_transfer</code> are set:\n<ul>\n<li>If <code>debit_account_id</code> is zero, it will be automatically\nset to the pending transfer’s <code>debit_account_id</code>.</li>\n<li>If <code>debit_account_id</code> is nonzero, it must match the\ncorresponding pending transfer’s <code>debit_account_id</code>.</li>\n</ul></li>\n<li>When <code>flags.imported</code> is set:\n<ul>\n<li>The matching account’s <a href=\"../account#timestamp\">timestamp</a>\nmust be less than or equal to the transfer’s <a\nhref=\"#timestamp\">timestamp</a>.</li>\n</ul></li>\n</ul>\n<h3 id=\"credit_account_id\"><a href=\"#credit_account_id\"\nclass=\"anchor\"><code>credit_account_id</code></a></h3>\n<p>This refers to the account to credit the transfer’s <a\nhref=\"#amount\"><code>amount</code></a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>When <code>flags.post_pending_transfer</code> and\n<code>flags.void_pending_transfer</code> are <em>not</em> set:\n<ul>\n<li>Must match an existing account</li>\n<li>Must not be the same as <code>debit_account_id</code></li>\n</ul></li>\n<li>When <code>flags.post_pending_transfer</code> or\n<code>flags.void_pending_transfer</code> are set:\n<ul>\n<li>If <code>credit_account_id</code> is zero, it will be automatically\nset to the pending transfer’s <code>credit_account_id</code>.</li>\n<li>If <code>credit_account_id</code> is nonzero, it must match the\ncorresponding pending transfer’s <code>credit_account_id</code>.</li>\n</ul></li>\n<li>When <code>flags.imported</code> is set:\n<ul>\n<li>The matching account’s <a href=\"../account#timestamp\">timestamp</a>\nmust be less than or equal to the transfer’s <a\nhref=\"#timestamp\">timestamp</a>.</li>\n</ul></li>\n</ul>\n<h3 id=\"amount\"><a href=\"#amount\"\nclass=\"anchor\"><code>amount</code></a></h3>\n<p>This is how much should be debited from the\n<code>debit_account_id</code> account and credited to the\n<code>credit_account_id</code> account.</p>\n<p>Note that this is an unsigned 128-bit integer. You can read more\nabout using <a\nhref=\"../../coding/data-modeling#debits-vs-credits\">debits and\ncredits</a> to represent positive and negative balances as well as <a\nhref=\"../../coding/data-modeling#fractional-amounts-and-asset-scale\">fractional\namounts and asset scales</a>.</p>\n<ul>\n<li>When <code>flags.balancing_debit</code> is set, this is the maximum\namount that will be debited/credited, where the actual transfer amount\nis determined by the debit account’s constraints.</li>\n<li>When <code>flags.balancing_credit</code> is set, this is the maximum\namount that will be debited/credited, where the actual transfer amount\nis determined by the credit account’s constraints.</li>\n<li>When <code>flags.post_pending_transfer</code> is set, the amount\nposted will be:\n<ul>\n<li>the pending transfer’s amount, when the posted transfer’s\n<code>amount</code> is <code>AMOUNT_MAX</code></li>\n<li>the posting transfer’s amount, when the posted transfer’s\n<code>amount</code> is less than or equal to the pending transfer’s\namount.</li>\n</ul></li>\n</ul>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>When <code>flags.void_pending_transfer</code> is set:\n<ul>\n<li>If <code>amount</code> is zero, it will be automatically be set to\nthe pending transfer’s <code>amount</code>.</li>\n<li>If <code>amount</code> is nonzero, it must be equal to the pending\ntransfer’s <code>amount</code>.</li>\n</ul></li>\n<li>When <code>flags.post_pending_transfer</code> is set:\n<ul>\n<li>If <code>amount</code> is <code>AMOUNT_MAX</code>\n(<code>2^128 - 1</code>), it will automatically be set to the pending\ntransfer’s <code>amount</code>.</li>\n<li>If <code>amount</code> is not <code>AMOUNT_MAX</code>, it must be\nless than or equal to the pending transfer’s <code>amount</code>.</li>\n</ul></li>\n</ul>\n<details>\n<summary>Client release &lt; 0.16.0</summary>\n\n<p>Additional constraints:</p>\n<ul>\n<li>When <code>flags.post_pending_transfer</code> is set:\n<ul>\n<li>If <code>amount</code> is zero, it will be automatically be set to\nthe pending transfer’s <code>amount</code>.</li>\n<li>If <code>amount</code> is nonzero, it must be less than or equal to\nthe pending transfer’s <code>amount</code>.</li>\n</ul></li>\n<li>When <code>flags.balancing_debit</code> and/or\n<code>flags.balancing_credit</code> is set, if <code>amount</code> is\nzero, it will automatically be set to the maximum amount that does not\nviolate the corresponding account limits. (Equivalent to setting\n<code>amount = 2^128 - 1</code>).</li>\n<li>When all of the following flags are not set, <code>amount</code>\nmust be nonzero:\n<ul>\n<li><code>flags.post_pending_transfer</code></li>\n<li><code>flags.void_pending_transfer</code></li>\n<li><code>flags.balancing_debit</code></li>\n<li><code>flags.balancing_credit</code></li>\n</ul></li>\n</ul>\n</details>\n\n<h4 id=\"examples\"><a href=\"#examples\" class=\"anchor\">Examples</a></h4>\n<ul>\n<li>For representing fractional amounts (e.g. <code>$12.34</code>), see\n<a\nhref=\"../../coding/data-modeling#fractional-amounts-and-asset-scale\">Fractional\nAmounts</a>.</li>\n<li>For balancing transfers, see <a\nhref=\"../../coding/recipes/close-account\">Close Account</a>.</li>\n</ul>\n<h3 id=\"pending_id\"><a href=\"#pending_id\"\nclass=\"anchor\"><code>pending_id</code></a></h3>\n<p>If this transfer will post or void a pending transfer,\n<code>pending_id</code> references that pending transfer. If this is not\na post or void transfer, it must be zero.</p>\n<p>See the section on <a\nhref=\"../../coding/two-phase-transfers\">Two-Phase Transfers</a> for more\ninformation on how the <code>pending_id</code> is used.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>Must be zero if neither void nor pending transfer flag is set</li>\n<li>Must match an existing transfer’s <a href=\"#id\"><code>id</code></a>\nif non-zero</li>\n</ul>\n<h3 id=\"user_data_128\"><a href=\"#user_data_128\"\nclass=\"anchor\"><code>user_data_128</code></a></h3>\n<p>This is an optional 128-bit secondary identifier to link this\ntransfer to an external entity or event.</p>\n<p>When set to zero, no secondary identifier will be associated with the\naccount, therefore only non-zero values can be used as <a\nhref=\"../query-filter\">query filter</a>.</p>\n<p>When set to zero, if <a\nhref=\"#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a>\nor <a\nhref=\"#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a>\nis set, then it will be automatically set to the pending transfer’s\n<code>user_data_128</code>.</p>\n<p>As an example, you might generate a <a\nhref=\"../../coding/data-modeling#tigerbeetle-time-based-identifiers-recommended\">TigerBeetle\nTime-Based Identifier</a> that ties together a group of transfers.</p>\n<p>For more information, see <a\nhref=\"../../coding/data-modeling#user_data\">Data Modeling</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n</ul>\n<h3 id=\"user_data_64\"><a href=\"#user_data_64\"\nclass=\"anchor\"><code>user_data_64</code></a></h3>\n<p>This is an optional 64-bit secondary identifier to link this transfer\nto an external entity or event.</p>\n<p>When set to zero, no secondary identifier will be associated with the\naccount, therefore only non-zero values can be used as <a\nhref=\"../query-filter\">query filter</a>.</p>\n<p>When set to zero, if <a\nhref=\"#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a>\nor <a\nhref=\"#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a>\nis set, then it will be automatically set to the pending transfer’s\n<code>user_data_64</code>.</p>\n<p>As an example, you might use this field store an external\ntimestamp.</p>\n<p>For more information, see <a\nhref=\"../../coding/data-modeling#user_data\">Data Modeling</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n</ul>\n<h3 id=\"user_data_32\"><a href=\"#user_data_32\"\nclass=\"anchor\"><code>user_data_32</code></a></h3>\n<p>This is an optional 32-bit secondary identifier to link this transfer\nto an external entity or event.</p>\n<p>When set to zero, no secondary identifier will be associated with the\naccount, therefore only non-zero values can be used as <a\nhref=\"../query-filter\">query filter</a>.</p>\n<p>When set to zero, if <a\nhref=\"#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a>\nor <a\nhref=\"#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a>\nis set, then it will be automatically set to the pending transfer’s\n<code>user_data_32</code>.</p>\n<p>As an example, you might use this field to store a timezone or\nlocale.</p>\n<p>For more information, see <a\nhref=\"../../coding/data-modeling#user_data\">Data Modeling</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n</ul>\n<h3 id=\"timeout\"><a href=\"#timeout\"\nclass=\"anchor\"><code>timeout</code></a></h3>\n<p>This is the interval in seconds after a <a\nhref=\"#flagspending\"><code>pending</code></a> transfer’s <a\nhref=\"#timestamp\">arrival at the cluster</a> that it may be <a\nhref=\"#flagspost_pending_transfer\">posted</a> or <a\nhref=\"#flagsvoid_pending_transfer\">voided</a>. Zero denotes absence of\ntimeout.</p>\n<p>Non-pending transfers cannot have a timeout.</p>\n<p>Imported transfers cannot have a timeout.</p>\n<p>TigerBeetle makes a best-effort approach to remove pending balances\nof expired transfers automatically:</p>\n<ul>\n<li><p>Transfers expire <em>exactly</em> at their expiry time (<a\nhref=\"#timestamp\"><code>timestamp</code></a> <em>plus</em>\n<code>timeout</code> converted in nanoseconds).</p></li>\n<li><p>Pending balances will never be removed before its\nexpiry.</p></li>\n<li><p>Expired transfers cannot be manually posted or voided.</p></li>\n<li><p>It is not guaranteed that the pending balance will be removed\nexactly at its expiry.</p>\n<p>In particular, client requests may observe still-pending balances for\nexpired transfers.</p></li>\n<li><p>Pending balances are removed in chronological order by expiry. If\nmultiple transfers expire at the same time, then ordered by the\ntransfer’s creation <a href=\"#timestamp\"><code>timestamp</code></a>.</p>\n<p>If a transfer <code>A</code> has expiry <code>E₁</code> and transfer\n<code>B</code> has expiry <code>E₂</code>, and <code>E₁&lt;E₂</code>, if\ntransfer <code>B</code> had the pending balance removed, then transfer\n<code>A</code> had the pending balance removed as well.</p></li>\n</ul>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n<li>Must be zero if <code>flags.pending</code> is <em>not</em> set</li>\n<li>Must be zero if <code>flags.imported</code> is set.</li>\n</ul>\n<p>The <code>timeout</code> is an interval in seconds rather than an\nabsolute timestamp because this is more robust to clock skew between the\ncluster and the application. (Watch this talk on <a\nhref=\"https://youtu.be/7R-Iz6sJG6Q?si=9sD2TpfD29AxUjOY\">Detecting Clock\nSync Failure in Highly Available Systems</a> on YouTube for more\ndetails.)</p>\n<h3 id=\"ledger\"><a href=\"#ledger\"\nclass=\"anchor\"><code>ledger</code></a></h3>\n<p>This is an identifier that partitions the sets of accounts that can\ntransact with each other.</p>\n<p>See <a href=\"../../coding/data-modeling#ledgers\">data modeling</a>\nfor more details about how to think about setting up your ledgers.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n<li>When <code>flags.post_pending_transfer</code> or\n<code>flags.void_pending_transfer</code> is set:\n<ul>\n<li>If <code>ledger</code> is zero, it will be automatically be set to\nthe pending transfer’s <code>ledger</code>.</li>\n<li>If <code>ledger</code> is nonzero, it must match the\n<code>ledger</code> value on the pending transfer’s\n<code>debit_account_id</code> <strong>and</strong>\n<code>credit_account_id</code>.</li>\n</ul></li>\n<li>When <code>flags.post_pending_transfer</code> and\n<code>flags.void_pending_transfer</code> are not set:\n<ul>\n<li><code>ledger</code> must not be zero.</li>\n<li><code>ledger</code> must match the <code>ledger</code> value on the\naccounts referenced in <code>debit_account_id</code>\n<strong>and</strong> <code>credit_account_id</code>.</li>\n</ul></li>\n</ul>\n<h3 id=\"code\"><a href=\"#code\" class=\"anchor\"><code>code</code></a></h3>\n<p>This is a user-defined enum denoting the reason for (or category of)\nthe transfer.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 16-bit unsigned integer (2 bytes)</li>\n<li>When <code>flags.post_pending_transfer</code> or\n<code>flags.void_pending_transfer</code> is set:\n<ul>\n<li>If <code>code</code> is zero, it will be automatically be set to the\npending transfer’s <code>code</code>.</li>\n<li>If <code>code</code> is nonzero, it must match the pending\ntransfer’s <code>code</code>.</li>\n</ul></li>\n<li>When <code>flags.post_pending_transfer</code> and\n<code>flags.void_pending_transfer</code> are not set, <code>code</code>\nmust not be zero.</li>\n</ul>\n<h3 id=\"flags\"><a href=\"#flags\"\nclass=\"anchor\"><code>flags</code></a></h3>\n<p>This specifies (optional) transfer behavior.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 16-bit unsigned integer (2 bytes)</li>\n<li>Some flags are mutually exclusive; see <a\nhref=\"../requests/create_transfers#flags_are_mutually_exclusive\"><code>flags_are_mutually_exclusive</code></a>.</li>\n</ul>\n<h4 id=\"flagslinked\"><a href=\"#flagslinked\"\nclass=\"anchor\"><code>flags.linked</code></a></h4>\n<p>This flag links the result of this transfer to the outcome of the\nnext transfer in the request such that they will either succeed or fail\ntogether.</p>\n<p>The last transfer in a chain of linked transfers does\n<strong>not</strong> have this flag set.</p>\n<p>You can read more about <a href=\"../../coding/linked-events\">linked\nevents</a>.</p>\n<h5 id=\"examples-1\"><a href=\"#examples-1\"\nclass=\"anchor\">Examples</a></h5>\n<ul>\n<li><a href=\"../../coding/recipes/currency-exchange\">Currency\nExchange</a></li>\n</ul>\n<h4 id=\"flagspending\"><a href=\"#flagspending\"\nclass=\"anchor\"><code>flags.pending</code></a></h4>\n<p>Mark the transfer as a <a\nhref=\"../../coding/two-phase-transfers#reserve-funds-pending-transfer\">pending\ntransfer</a>.</p>\n<h4 id=\"flagspost_pending_transfer\"><a\nhref=\"#flagspost_pending_transfer\"\nclass=\"anchor\"><code>flags.post_pending_transfer</code></a></h4>\n<p>Mark the transfer as a <a\nhref=\"../../coding/two-phase-transfers#post-pending-transfer\">post-pending\ntransfer</a>.</p>\n<h4 id=\"flagsvoid_pending_transfer\"><a\nhref=\"#flagsvoid_pending_transfer\"\nclass=\"anchor\"><code>flags.void_pending_transfer</code></a></h4>\n<p>Mark the transfer as a <a\nhref=\"../../coding/two-phase-transfers#void-pending-transfer\">void-pending\ntransfer</a>.</p>\n<h4 id=\"flagsbalancing_debit\"><a href=\"#flagsbalancing_debit\"\nclass=\"anchor\"><code>flags.balancing_debit</code></a></h4>\n<p>Transfer at most <a href=\"#amount\"><code>amount</code></a> —\nautomatically transferring less than <code>amount</code> as necessary\nsuch that\n<code>debit_account.debits_pending + debit_account.debits_posted ≤ debit_account.credits_posted</code>.</p>\n<p>The <code>amount</code> of the recorded transfer is set to the actual\namount that was transferred, which is less than or equal to the amount\nthat was passed to <code>create_transfers</code>.</p>\n<p>Retrying a balancing transfer will return <a\nhref=\"../requests/create_transfers#exists_with_different_amount\"><code>exists_with_different_amount</code></a>\nonly when the maximum amount passed to <code>create_transfers</code> is\ninsufficient to fulfill the amount that was actually transferred.\nOtherwise it may return <a\nhref=\"../requests/create_transfers#exists\"><code>exists</code></a> even\nif the retry amount differs from the original value.</p>\n<p><code>flags.balancing_debit</code> is exclusive with the\n<code>flags.post_pending_transfer</code>/<code>flags.void_pending_transfer</code>\nflags because posting or voiding a pending transfer will never\nexceed/overflow either account’s limits.</p>\n<p><code>flags.balancing_debit</code> is compatible with (and orthogonal\nto) <code>flags.balancing_credit</code>.</p>\n<details>\n<summary>Client release &lt; 0.16.0</summary>\n\n<p>Transfer at most <a href=\"#amount\"><code>amount</code></a> —\nautomatically transferring less than <code>amount</code> as necessary\nsuch that\n<code>debit_account.debits_pending + debit_account.debits_posted ≤ debit_account.credits_posted</code>.\nIf <code>amount</code> is set to <code>0</code>, transfer at most\n<code>2^64 - 1</code> (i.e. as much as possible).</p>\n<p>If the highest amount transferable is <code>0</code>, returns <a\nhref=\"../requests/create_transfers#exceeds_credits\"><code>exceeds_credits</code></a>.</p>\n</details>\n\n<h5 id=\"examples-2\"><a href=\"#examples-2\"\nclass=\"anchor\">Examples</a></h5>\n<ul>\n<li><a href=\"../../coding/recipes/close-account\">Close Account</a></li>\n</ul>\n<h4 id=\"flagsbalancing_credit\"><a href=\"#flagsbalancing_credit\"\nclass=\"anchor\"><code>flags.balancing_credit</code></a></h4>\n<p>Transfer at most <a href=\"#amount\"><code>amount</code></a> —\nautomatically transferring less than <code>amount</code> as necessary\nsuch that\n<code>credit_account.credits_pending + credit_account.credits_posted ≤ credit_account.debits_posted</code>.</p>\n<p>The <code>amount</code> of the recorded transfer is set to the actual\namount that was transferred, which is less than or equal to the amount\nthat was passed to <code>create_transfers</code>.</p>\n<p>Retrying a balancing transfer will return <a\nhref=\"../requests/create_transfers#exists_with_different_amount\"><code>exists_with_different_amount</code></a>\nonly when the maximum amount passed to <code>create_transfers</code> is\ninsufficient to fulfill the amount that was actually transferred.\nOtherwise it may return <a\nhref=\"../requests/create_transfers#exists\"><code>exists</code></a> even\nif the retry amount differs from the original value.</p>\n<p><code>flags.balancing_credit</code> is exclusive with the\n<code>flags.post_pending_transfer</code>/<code>flags.void_pending_transfer</code>\nflags because posting or voiding a pending transfer will never\nexceed/overflow either account’s limits.</p>\n<p><code>flags.balancing_credit</code> is compatible with (and\northogonal to) <code>flags.balancing_debit</code>.</p>\n<details>\n<summary>Client release &lt; 0.16.0</summary>\n\n<p>Transfer at most <a href=\"#amount\"><code>amount</code></a> —\nautomatically transferring less than <code>amount</code> as necessary\nsuch that\n<code>credit_account.credits_pending + credit_account.credits_posted ≤ credit_account.debits_posted</code>.\nIf <code>amount</code> is set to <code>0</code>, transfer at most\n<code>2^64 - 1</code> (i.e. as much as possible).</p>\n<p>If the highest amount transferable is <code>0</code>, returns <a\nhref=\"../requests/create_transfers#exceeds_debits\"><code>exceeds_debits</code></a>.</p>\n</details>\n\n<h5 id=\"examples-3\"><a href=\"#examples-3\"\nclass=\"anchor\">Examples</a></h5>\n<ul>\n<li><a href=\"../../coding/recipes/close-account\">Close Account</a></li>\n</ul>\n<h4 id=\"flagsclosing_debit\"><a href=\"#flagsclosing_debit\"\nclass=\"anchor\"><code>flags.closing_debit</code></a></h4>\n<p>When set, it will cause the <a\nhref=\"../account#flagsclosed\"><code>Account.flags.closed</code></a> flag\nof the <a href=\"#debit_account_id\">debit account</a> to be set if the\ntransfer succeeds.</p>\n<p>This flag requires a <a href=\"#modes\">two-phase transfer</a>, so the\nflag <a href=\"#flagspending\"><code>flags.pending</code></a> must also be\nset. This ensures that closing transfers are reversible by <a\nhref=\"#flagsvoid_pending_transfer\">voiding</a> the pending transfer, and\nrequires that the reversal operation references the corresponding\nclosing transfer, guarding against unexpected interleaving of\nclose/unclose operations.</p>\n<h4 id=\"flagsclosing_credit\"><a href=\"#flagsclosing_credit\"\nclass=\"anchor\"><code>flags.closing_credit</code></a></h4>\n<p>When set, it will cause the <a\nhref=\"../account#flagsclosed\"><code>Account.flags.closed</code></a> flag\nof the <a href=\"#credit_account_id\">credit account</a> to be set if the\ntransfer succeeds.</p>\n<p>This flag requires a <a href=\"#modes\">two-phase transfer</a>, so the\nflag <a href=\"#flagspending\"><code>flags.pending</code></a> must also be\nset. This ensures that closing transfers are reversible by <a\nhref=\"#flagsvoid_pending_transfer\">voiding</a> the pending transfer, and\nrequires that the reversal operation references the corresponding\nclosing transfer, guarding against unexpected interleaving of\nclose/unclose operations.</p>\n<h4 id=\"flagsimported\"><a href=\"#flagsimported\"\nclass=\"anchor\"><code>flags.imported</code></a></h4>\n<p>When set, allows importing historical <code>Transfer</code>s with\ntheir original <a href=\"#timestamp\"><code>timestamp</code></a>.</p>\n<p>TigerBeetle will not use the <a href=\"../../coding/time\">cluster\nclock</a> to assign the timestamp, allowing the user to define it,\nexpressing <em>when</em> the transfer was effectively created by an\nexternal event.</p>\n<p>To maintain system invariants regarding auditability and\ntraceability, some constraints are necessary:</p>\n<ul>\n<li><p>It is not allowed to mix events with the <code>imported</code>\nflag set and <em>not</em> set in the same batch. The application must\nsubmit batches of imported events separately.</p></li>\n<li><p>User-defined timestamps must be <strong>unique</strong> and\nexpressed as nanoseconds since the UNIX epoch. No two objects can have\nthe same timestamp, even different objects like an <code>Account</code>\nand a <code>Transfer</code> cannot share the same timestamp.</p></li>\n<li><p>User-defined timestamps must be a past date, never ahead of the\ncluster clock at the time the request arrives.</p></li>\n<li><p>Timestamps must be strictly increasing.</p>\n<p>Even user-defined timestamps that are required to be past dates need\nto be at least one nanosecond ahead of the timestamp of the last\ntransfer committed by the cluster.</p>\n<p>Since the timestamp cannot regress, importing past events can be\nnaturally restrictive without coordination, as the last timestamp can be\nupdated using the cluster clock during regular cluster activity.\nInstead, it’s recommended to import events only on a fresh cluster or\nduring a scheduled maintenance window.</p>\n<p>It’s recommended to submit the entire batch as a <a\nhref=\"#flagslinked\">linked chain</a>, ensuring that if any transfer\nfails, none of them are committed, preserving the last timestamp\nunchanged. This approach gives the application a chance to correct\nfailed imported transfers, re-submitting the batch again with the same\nuser-defined timestamps.</p></li>\n<li><p>Imported transfers cannot have a <a\nhref=\"#timeout\"><code>timeout</code></a>.</p>\n<p>It’s possible to import <a href=\"#flagspending\">pending</a> transfers\nwith a user-defined timestamp, but since it’s not driven by the cluster\nclock, it cannot define a <a href=\"#timeout\"><code>timeout</code></a>\nfor automatic expiration. In those cases, the <a\nhref=\"../../coding/two-phase-transfers\">two-phase post or rollback</a>\nmust be done manually.</p></li>\n</ul>\n<h3 id=\"timestamp\"><a href=\"#timestamp\"\nclass=\"anchor\"><code>timestamp</code></a></h3>\n<p>This is the time the transfer was created, as nanoseconds since UNIX\nepoch. You can read more about <a href=\"../../coding/time\">Time in\nTigerBeetle</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li><p>Type is 64-bit unsigned integer (8 bytes)</p></li>\n<li><p>Must be <code>0</code> when the <code>Transfer</code> is created\nwith <a href=\"#flagsimported\"><code>flags.imported</code></a>\n<em>not</em> set</p>\n<p>It is set by TigerBeetle to the moment the transfer arrives at the\ncluster.</p></li>\n<li><p>Must be greater than <code>0</code> and less than\n<code>2^63</code> when the <code>Transfer</code> is created with <a\nhref=\"#flagsimported\"><code>flags.imported</code></a> set</p></li>\n</ul>\n<h2 id=\"internals\"><a href=\"#internals\"\nclass=\"anchor\">Internals</a></h2>\n<p>If you’re curious and want to learn more, you can find the source\ncode for this struct in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/tigerbeetle.zig\">src/tigerbeetle.zig</a>.\nSearch for <code>const Transfer = extern struct {</code>.</p>\n<p>You can find the source code for creating a transfer in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/state_machine.zig\">src/state_machine.zig</a>.\nSearch for <code>fn create_transfer(</code>.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/reference/transfer.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"reference/account-balance","html":"<h1 id=\"accountbalance\"><a href=\"#accountbalance\"\nclass=\"anchor\"><code>AccountBalance</code></a></h1>\n<p>An <code>AccountBalance</code> is a record storing the <a\nhref=\"../account\"><code>Account</code></a>’s balance at a given point in\ntime.</p>\n<p>Only Accounts with the flag <a\nhref=\"../account#flagshistory\"><code>history</code></a> set retain <a\nhref=\"/reference/requests/get_account_balances\">historical\nbalances</a>.</p>\n<h2 id=\"fields\"><a href=\"#fields\" class=\"anchor\">Fields</a></h2>\n<h3 id=\"timestamp\"><a href=\"#timestamp\"\nclass=\"anchor\"><code>timestamp</code></a></h3>\n<p>This is the time the account balance was updated, as nanoseconds\nsince UNIX epoch.</p>\n<p>The timestamp refers to the same <a\nhref=\"../transfer#timestamp\"><code>Transfer.timestamp</code></a> which\nchanged the <a href=\"../account\"><code>Account</code></a>.</p>\n<p>The amounts refer to the account balance recorded <em>after</em> the\ntransfer execution.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n</ul>\n<h3 id=\"debits_pending\"><a href=\"#debits_pending\"\nclass=\"anchor\"><code>debits_pending</code></a></h3>\n<p>Amount of <a href=\"../account#debits_pending\">pending debits</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n</ul>\n<h3 id=\"debits_posted\"><a href=\"#debits_posted\"\nclass=\"anchor\"><code>debits_posted</code></a></h3>\n<p>Amount of <a href=\"../account#debits_posted\">posted debits</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n</ul>\n<h3 id=\"credits_pending\"><a href=\"#credits_pending\"\nclass=\"anchor\"><code>credits_pending</code></a></h3>\n<p>Amount of <a href=\"../account#credits_pending\">pending\ncredits</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n</ul>\n<h3 id=\"credits_posted\"><a href=\"#credits_posted\"\nclass=\"anchor\"><code>credits_posted</code></a></h3>\n<p>Amount of <a href=\"../account#credits_posted\">posted credits</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n</ul>\n<h3 id=\"reserved\"><a href=\"#reserved\"\nclass=\"anchor\"><code>reserved</code></a></h3>\n<p>This space may be used for additional data in the future.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 56 bytes</li>\n<li>Must be zero</li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/reference/account-balance.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"reference/account-filter","html":"<h1 id=\"accountfilter\"><a href=\"#accountfilter\"\nclass=\"anchor\"><code>AccountFilter</code></a></h1>\n<p>An <code>AccountFilter</code> is a record containing the filter\nparameters for querying the <a\nhref=\"../requests/get_account_transfers\">account transfers</a> and the\n<a href=\"../requests/get_account_balances\">account historical\nbalances</a>.</p>\n<h2 id=\"fields\"><a href=\"#fields\" class=\"anchor\">Fields</a></h2>\n<h3 id=\"account_id\"><a href=\"#account_id\"\nclass=\"anchor\"><code>account_id</code></a></h3>\n<p>The unique <a href=\"../account#id\">identifier</a> of the account for\nwhich the results will be retrieved.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n<li>Must not be zero or <code>2^128 - 1</code></li>\n</ul>\n<h3 id=\"user_data_128\"><a href=\"#user_data_128\"\nclass=\"anchor\"><code>user_data_128</code></a></h3>\n<p>Filter the results by the field <a\nhref=\"../transfer#user_data_128\"><code>Transfer.user_data_128</code></a>.\nOptional; set to zero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n</ul>\n<h3 id=\"user_data_64\"><a href=\"#user_data_64\"\nclass=\"anchor\"><code>user_data_64</code></a></h3>\n<p>Filter the results by the field <a\nhref=\"../transfer#user_data_64\"><code>Transfer.user_data_64</code></a>.\nOptional; set to zero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n</ul>\n<h3 id=\"user_data_32\"><a href=\"#user_data_32\"\nclass=\"anchor\"><code>user_data_32</code></a></h3>\n<p>Filter the results by the field <a\nhref=\"../transfer#user_data_32\"><code>Transfer.user_data_32</code></a>.\nOptional; set to zero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n</ul>\n<h3 id=\"code\"><a href=\"#code\" class=\"anchor\"><code>code</code></a></h3>\n<p>Filter the results by the <a\nhref=\"../transfer#code\"><code>Transfer.code</code></a>. Optional; set to\nzero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 16-bit unsigned integer (2 bytes)</li>\n</ul>\n<h3 id=\"reserved\"><a href=\"#reserved\"\nclass=\"anchor\"><code>reserved</code></a></h3>\n<p>This space may be used for additional data in the future.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 58 bytes</li>\n<li>Must be zero</li>\n</ul>\n<h3 id=\"timestamp_min\"><a href=\"#timestamp_min\"\nclass=\"anchor\"><code>timestamp_min</code></a></h3>\n<p>The minimum <a\nhref=\"../transfer#timestamp\"><code>Transfer.timestamp</code></a> from\nwhich results will be returned, inclusive range. Optional; set to zero\nto disable the lower-bound filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n<li>Must be less than <code>2^63</code>.</li>\n</ul>\n<h3 id=\"timestamp_max\"><a href=\"#timestamp_max\"\nclass=\"anchor\"><code>timestamp_max</code></a></h3>\n<p>The maximum <a\nhref=\"../transfer#timestamp\"><code>Transfer.timestamp</code></a> from\nwhich results will be returned, inclusive range. Optional; set to zero\nto disable the upper-bound filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n<li>Must be less than <code>2^63</code>.</li>\n</ul>\n<h3 id=\"limit\"><a href=\"#limit\"\nclass=\"anchor\"><code>limit</code></a></h3>\n<p>The maximum number of results that can be returned by this query.</p>\n<p>Limited by the <a\nhref=\"../../coding/requests#batching-events\">maximum message\nsize</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n<li>Must not be zero</li>\n</ul>\n<h3 id=\"flags\"><a href=\"#flags\"\nclass=\"anchor\"><code>flags</code></a></h3>\n<p>A bitfield that specifies querying behavior.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n</ul>\n<h4 id=\"flagsdebits\"><a href=\"#flagsdebits\"\nclass=\"anchor\"><code>flags.debits</code></a></h4>\n<p>Whether or not to include results where the field <a\nhref=\"../transfer#debit_account_id\"><code>debit_account_id</code></a>\nmatches the parameter <a\nhref=\"#account_id\"><code>account_id</code></a>.</p>\n<h4 id=\"flagscredits\"><a href=\"#flagscredits\"\nclass=\"anchor\"><code>flags.credits</code></a></h4>\n<p>Whether or not to include results where the field <a\nhref=\"../transfer#credit_account_id\"><code>credit_account_id</code></a>\nmatches the parameter <a\nhref=\"#account_id\"><code>account_id</code></a>.</p>\n<h4 id=\"flagsreversed\"><a href=\"#flagsreversed\"\nclass=\"anchor\"><code>flags.reversed</code></a></h4>\n<p>Whether the results are sorted by timestamp in chronological or\nreverse-chronological order. If the flag is not set, the event that\nhappened first (has the smallest timestamp) will come first. If the flag\nis set, the event that happened last (has the largest timestamp) will\ncome first.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/reference/account-filter.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"reference/query-filter","html":"<h1 id=\"queryfilter\"><a href=\"#queryfilter\"\nclass=\"anchor\"><code>QueryFilter</code></a></h1>\n<p>A <code>QueryFilter</code> is a record containing the filter\nparameters for <a href=\"../requests/query_accounts\">querying\naccounts</a> and <a href=\"../requests/query_transfers\">querying\ntransfers</a>.</p>\n<h2 id=\"fields\"><a href=\"#fields\" class=\"anchor\">Fields</a></h2>\n<h3 id=\"user_data_128\"><a href=\"#user_data_128\"\nclass=\"anchor\"><code>user_data_128</code></a></h3>\n<p>Filter the results by the field <a\nhref=\"../account#user_data_128\"><code>Account.user_data_128</code></a>\nor <a\nhref=\"../transfer#user_data_128\"><code>Transfer.user_data_128</code></a>.\nOptional; set to zero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 128-bit unsigned integer (16 bytes)</li>\n</ul>\n<h3 id=\"user_data_64\"><a href=\"#user_data_64\"\nclass=\"anchor\"><code>user_data_64</code></a></h3>\n<p>Filter the results by the field <a\nhref=\"../account#user_data_64\"><code>Account.user_data_64</code></a> or\n<a\nhref=\"../transfer#user_data_64\"><code>Transfer.user_data_64</code></a>.\nOptional; set to zero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n</ul>\n<h3 id=\"user_data_32\"><a href=\"#user_data_32\"\nclass=\"anchor\"><code>user_data_32</code></a></h3>\n<p>Filter the results by the field <a\nhref=\"../account#user_data_32\"><code>Account.user_data_32</code></a> or\n<a\nhref=\"../transfer#user_data_32\"><code>Transfer.user_data_32</code></a>.\nOptional; set to zero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n</ul>\n<h3 id=\"ledger\"><a href=\"#ledger\"\nclass=\"anchor\"><code>ledger</code></a></h3>\n<p>Filter the results by the field <a\nhref=\"../account#ledger\"><code>Account.ledger</code></a> or <a\nhref=\"../transfer#ledger\"><code>Transfer.ledger</code></a>. Optional;\nset to zero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n</ul>\n<h3 id=\"code\"><a href=\"#code\" class=\"anchor\"><code>code</code></a></h3>\n<p>Filter the results by the field <a\nhref=\"../account#code\"><code>Account.code</code></a> or <a\nhref=\"../transfer#code\"><code>Transfer.code</code></a>. Optional; set to\nzero to disable the filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 16-bit unsigned integer (2 bytes)</li>\n</ul>\n<h3 id=\"timestamp_min\"><a href=\"#timestamp_min\"\nclass=\"anchor\"><code>timestamp_min</code></a></h3>\n<p>The minimum <a\nhref=\"../account#timestamp\"><code>Account.timestamp</code></a> or <a\nhref=\"../transfer#timestamp\"><code>Transfer.timestamp</code></a> from\nwhich results will be returned, inclusive range. Optional; set to zero\nto disable the lower-bound filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n<li>Must not be <code>2^64 - 1</code></li>\n</ul>\n<h3 id=\"timestamp_max\"><a href=\"#timestamp_max\"\nclass=\"anchor\"><code>timestamp_max</code></a></h3>\n<p>The maximum <a\nhref=\"../account#timestamp\"><code>Account.timestamp</code></a> or <a\nhref=\"../transfer#timestamp\"><code>Transfer.timestamp</code></a> from\nwhich results will be returned, inclusive range. Optional; set to zero\nto disable the upper-bound filter.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 64-bit unsigned integer (8 bytes)</li>\n<li>Must not be <code>2^64 - 1</code></li>\n</ul>\n<h3 id=\"limit\"><a href=\"#limit\"\nclass=\"anchor\"><code>limit</code></a></h3>\n<p>The maximum number of results that can be returned by this query.</p>\n<p>Limited by the <a\nhref=\"../../coding/requests#batching-events\">maximum message\nsize</a>.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n<li>Must not be zero</li>\n</ul>\n<h3 id=\"flags\"><a href=\"#flags\"\nclass=\"anchor\"><code>flags</code></a></h3>\n<p>A bitfield that specifies querying behavior.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 32-bit unsigned integer (4 bytes)</li>\n</ul>\n<h4 id=\"flagsreversed\"><a href=\"#flagsreversed\"\nclass=\"anchor\"><code>flags.reversed</code></a></h4>\n<p>Whether the results are sorted by timestamp in chronological or\nreverse-chronological order. If the flag is not set, the event that\nhappened first (has the smallest timestamp) will come first. If the flag\nis set, the event that happened last (has the largest timestamp) will\ncome first.</p>\n<h3 id=\"reserved\"><a href=\"#reserved\"\nclass=\"anchor\"><code>reserved</code></a></h3>\n<p>This space may be used for additional data in the future.</p>\n<p>Constraints:</p>\n<ul>\n<li>Type is 6 bytes</li>\n<li>Must be zero</li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/reference/query-filter.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"reference/requests","html":"<h1 id=\"requests\"><a href=\"#requests\" class=\"anchor\">Requests</a></h1>\n<p>TigerBeetle supports the following request types:</p>\n<ul>\n<li><a href=\"./create_accounts\"><code>create_accounts</code></a>: create\n<a href=\"../account\"><code>Account</code>s</a></li>\n<li><a href=\"./create_transfers\"><code>create_transfers</code></a>:\ncreate <a href=\"../transfer\"><code>Transfer</code>s</a></li>\n<li><a href=\"./lookup_accounts\"><code>lookup_accounts</code></a>: fetch\n<code>Account</code>s by <code>id</code></li>\n<li><a href=\"./lookup_transfers\"><code>lookup_transfers</code></a>:\nfetch <code>Transfer</code>s by <code>id</code></li>\n<li><a\nhref=\"./get_account_transfers\"><code>get_account_transfers</code></a>:\nfetch <code>Transfer</code>s by <code>debit_account_id</code> or\n<code>credit_account_id</code></li>\n<li><a\nhref=\"./get_account_balances\"><code>get_account_balances</code></a>:\nfetch the historical account balance by the <code>Account</code>’s\n<code>id</code>.</li>\n<li><a href=\"./query_accounts\"><code>query_accounts</code></a>: query\n<code>Account</code>s</li>\n<li><a href=\"./query_transfers\"><code>query_transfers</code></a>: query\n<code>Transfer</code>s</li>\n</ul>\n<p><em>More request types, including more powerful queries, are coming\nsoon!</em></p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/reference/requests/README.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"reference/requests/create_accounts","html":"<h1 id=\"create_accounts\"><a href=\"#create_accounts\"\nclass=\"anchor\"><code>create_accounts</code></a></h1>\n<p>Create one or more <a\nhref=\"../../account\"><code>Account</code></a>s.</p>\n<h2 id=\"event\"><a href=\"#event\" class=\"anchor\">Event</a></h2>\n<p>The account to create. See <a\nhref=\"../../account\"><code>Account</code></a> for constraints.</p>\n<h2 id=\"result\"><a href=\"#result\" class=\"anchor\">Result</a></h2>\n<p>Results are listed in this section in order of descending precedence\n— that is, if more than one error is applicable to the account being\ncreated, only the result listed first is returned.</p>\n<h3 id=\"ok\"><a href=\"#ok\" class=\"anchor\"><code>ok</code></a></h3>\n<p>The account was successfully created; it did not previously\nexist.</p>\n<p>Note that <code>ok</code> is generated by the client implementation;\nthe network protocol does not include a result when the account was\nsuccessfully created.</p>\n<h3 id=\"linked_event_failed\"><a href=\"#linked_event_failed\"\nclass=\"anchor\"><code>linked_event_failed</code></a></h3>\n<p>The account was not created. One or more of the accounts in the <a\nhref=\"../../account#flagslinked\">linked chain</a> is invalid, so the\nwhole chain failed.</p>\n<h3 id=\"linked_event_chain_open\"><a href=\"#linked_event_chain_open\"\nclass=\"anchor\"><code>linked_event_chain_open</code></a></h3>\n<p>The account was not created. The <a\nhref=\"../../account#flagslinked\"><code>Account.flags.linked</code></a>\nflag was set on the last event in the batch, which is not legal.\n(<code>flags.linked</code> indicates that the chain continues to the\nnext operation).</p>\n<h3 id=\"imported_event_expected\"><a href=\"#imported_event_expected\"\nclass=\"anchor\"><code>imported_event_expected</code></a></h3>\n<p>The account was not created. The <a\nhref=\"../../account#flagsimported\"><code>Account.flags.imported</code></a>\nwas set on the first account of the batch, but not all accounts in the\nbatch. Batches cannot mix imported accounts with non-imported\naccounts.</p>\n<h3 id=\"imported_event_not_expected\"><a\nhref=\"#imported_event_not_expected\"\nclass=\"anchor\"><code>imported_event_not_expected</code></a></h3>\n<p>The account was not created. The <a\nhref=\"../../account#flagsimported\"><code>Account.flags.imported</code></a>\nwas expected to <em>not</em> be set, as it’s not allowed to mix accounts\nwith different <code>imported</code> flag in the same batch. The first\naccount determines the entire operation.</p>\n<h3 id=\"timestamp_must_be_zero\"><a href=\"#timestamp_must_be_zero\"\nclass=\"anchor\"><code>timestamp_must_be_zero</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../account#flagsimported\"><code>Account.flags.imported</code></a>\nis <em>not</em> set.</p>\n<p>The account was not created. The <a\nhref=\"../../account#timestamp\"><code>Account.timestamp</code></a> is\nnonzero, but must be zero. The cluster is responsible for setting this\nfield.</p>\n<p>The <a\nhref=\"../../account#timestamp\"><code>Account.timestamp</code></a> can\nonly be assigned when creating accounts with <a\nhref=\"../../account#flagsimported\"><code>Account.flags.imported</code></a>\nset.</p>\n<h3 id=\"imported_event_timestamp_out_of_range\"><a\nhref=\"#imported_event_timestamp_out_of_range\"\nclass=\"anchor\"><code>imported_event_timestamp_out_of_range</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../account#flagsimported\"><code>Account.flags.imported</code></a>\nis set.</p>\n<p>The account was not created. The <a\nhref=\"../../account#timestamp\"><code>Account.timestamp</code></a> is out\nof range, but must be a user-defined timestamp greater than\n<code>0</code> and less than <code>2^63</code>.</p>\n<h3 id=\"imported_event_timestamp_must_not_advance\"><a\nhref=\"#imported_event_timestamp_must_not_advance\"\nclass=\"anchor\"><code>imported_event_timestamp_must_not_advance</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../account#flagsimported\"><code>Account.flags.imported</code></a>\nis set.</p>\n<p>The account was not created. The user-defined <a\nhref=\"../../account#timestamp\"><code>Account.timestamp</code></a> is\ngreater than the current <a href=\"../../../coding/time\">cluster\ntime</a>, but it must be a past timestamp.</p>\n<h3 id=\"reserved_field\"><a href=\"#reserved_field\"\nclass=\"anchor\"><code>reserved_field</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#reserved\"><code>Account.reserved</code></a> is\nnonzero, but must be zero.</p>\n<h3 id=\"reserved_flag\"><a href=\"#reserved_flag\"\nclass=\"anchor\"><code>reserved_flag</code></a></h3>\n<p>The account was not created. <code>Account.flags.reserved</code> is\nnonzero, but must be zero.</p>\n<h3 id=\"id_must_not_be_zero\"><a href=\"#id_must_not_be_zero\"\nclass=\"anchor\"><code>id_must_not_be_zero</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#id\"><code>Account.id</code></a> is zero, which is a\nreserved value.</p>\n<h3 id=\"id_must_not_be_int_max\"><a href=\"#id_must_not_be_int_max\"\nclass=\"anchor\"><code>id_must_not_be_int_max</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#id\"><code>Account.id</code></a> is\n<code>2^128 - 1</code>, which is a reserved value.</p>\n<h3 id=\"exists_with_different_flags\"><a\nhref=\"#exists_with_different_flags\"\nclass=\"anchor\"><code>exists_with_different_flags</code></a></h3>\n<p>An account with the same <code>id</code> already exists, but with\ndifferent <a href=\"../../account#flags\"><code>flags</code></a>.</p>\n<h3 id=\"exists_with_different_user_data_128\"><a\nhref=\"#exists_with_different_user_data_128\"\nclass=\"anchor\"><code>exists_with_different_user_data_128</code></a></h3>\n<p>An account with the same <code>id</code> already exists, but with\ndifferent <a\nhref=\"../../account#user_data_128\"><code>user_data_128</code></a>.</p>\n<h3 id=\"exists_with_different_user_data_64\"><a\nhref=\"#exists_with_different_user_data_64\"\nclass=\"anchor\"><code>exists_with_different_user_data_64</code></a></h3>\n<p>An account with the same <code>id</code> already exists, but with\ndifferent <a\nhref=\"../../account#user_data_64\"><code>user_data_64</code></a>.</p>\n<h3 id=\"exists_with_different_user_data_32\"><a\nhref=\"#exists_with_different_user_data_32\"\nclass=\"anchor\"><code>exists_with_different_user_data_32</code></a></h3>\n<p>An account with the same <code>id</code> already exists, but with\ndifferent <a\nhref=\"../../account#user_data_32\"><code>user_data_32</code></a>.</p>\n<h3 id=\"exists_with_different_ledger\"><a\nhref=\"#exists_with_different_ledger\"\nclass=\"anchor\"><code>exists_with_different_ledger</code></a></h3>\n<p>An account with the same <code>id</code> already exists, but with\ndifferent <a href=\"../../account#ledger\"><code>ledger</code></a>.</p>\n<h3 id=\"exists_with_different_code\"><a\nhref=\"#exists_with_different_code\"\nclass=\"anchor\"><code>exists_with_different_code</code></a></h3>\n<p>An account with the same <code>id</code> already exists, but with\ndifferent <a href=\"../../account#code\"><code>code</code></a>.</p>\n<h3 id=\"exists\"><a href=\"#exists\"\nclass=\"anchor\"><code>exists</code></a></h3>\n<p>An account with the same <code>id</code> already exists.</p>\n<p>With the possible exception of the following fields, the existing\naccount is identical to the account in the request:</p>\n<ul>\n<li><code>timestamp</code></li>\n<li><code>debits_pending</code></li>\n<li><code>debits_posted</code></li>\n<li><code>credits_pending</code></li>\n<li><code>credits_posted</code></li>\n</ul>\n<p>To correctly <a\nhref=\"../../../coding/reliable-transaction-submission\">recover from\napplication crashes</a>, many applications should handle\n<code>exists</code> exactly as <a href=\"#ok\"><code>ok</code></a>.</p>\n<h3 id=\"flags_are_mutually_exclusive\"><a\nhref=\"#flags_are_mutually_exclusive\"\nclass=\"anchor\"><code>flags_are_mutually_exclusive</code></a></h3>\n<p>The account was not created. An account cannot be created with the\nspecified combination of <a\nhref=\"../../account#flags\"><code>Account.flags</code></a>.</p>\n<p>The following flags are mutually exclusive:</p>\n<ul>\n<li><a\nhref=\"../../account#flagsdebits_must_not_exceed_credits\"><code>Account.flags.debits_must_not_exceed_credits</code></a></li>\n<li><a\nhref=\"../../account#flagscredits_must_not_exceed_debits\"><code>Account.flags.credits_must_not_exceed_debits</code></a></li>\n</ul>\n<h3 id=\"debits_pending_must_be_zero\"><a\nhref=\"#debits_pending_must_be_zero\"\nclass=\"anchor\"><code>debits_pending_must_be_zero</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#debits_pending\"><code>Account.debits_pending</code></a>\nis nonzero, but must be zero.</p>\n<p>An account’s debits and credits are only modified by transfers.</p>\n<h3 id=\"debits_posted_must_be_zero\"><a\nhref=\"#debits_posted_must_be_zero\"\nclass=\"anchor\"><code>debits_posted_must_be_zero</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#debits_posted\"><code>Account.debits_posted</code></a>\nis nonzero, but must be zero.</p>\n<p>An account’s debits and credits are only modified by transfers.</p>\n<h3 id=\"credits_pending_must_be_zero\"><a\nhref=\"#credits_pending_must_be_zero\"\nclass=\"anchor\"><code>credits_pending_must_be_zero</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#credits_pending\"><code>Account.credits_pending</code></a>\nis nonzero, but must be zero.</p>\n<p>An account’s debits and credits are only modified by transfers.</p>\n<h3 id=\"credits_posted_must_be_zero\"><a\nhref=\"#credits_posted_must_be_zero\"\nclass=\"anchor\"><code>credits_posted_must_be_zero</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#credits_posted\"><code>Account.credits_posted</code></a>\nis nonzero, but must be zero.</p>\n<p>An account’s debits and credits are only modified by transfers.</p>\n<h3 id=\"ledger_must_not_be_zero\"><a href=\"#ledger_must_not_be_zero\"\nclass=\"anchor\"><code>ledger_must_not_be_zero</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#ledger\"><code>Account.ledger</code></a> is zero, but\nmust be nonzero.</p>\n<h3 id=\"code_must_not_be_zero\"><a href=\"#code_must_not_be_zero\"\nclass=\"anchor\"><code>code_must_not_be_zero</code></a></h3>\n<p>The account was not created. <a\nhref=\"../../account#code\"><code>Account.code</code></a> is zero, but\nmust be nonzero.</p>\n<h3 id=\"imported_event_timestamp_must_not_regress\"><a\nhref=\"#imported_event_timestamp_must_not_regress\"\nclass=\"anchor\"><code>imported_event_timestamp_must_not_regress</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../account#flagsimported\"><code>Account.flags.imported</code></a>\nis set.</p>\n<p>The account was not created. The user-defined <a\nhref=\"../../account#timestamp\"><code>Account.timestamp</code></a>\nregressed, but it must be greater than the last timestamp assigned to\nany <code>Account</code> in the cluster and cannot be equal to the\ntimestamp of any existing <a\nhref=\"../../transfer\"><code>Transfer</code></a>.</p>\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>For language-specific docs see:</p>\n<ul>\n<li><a href=\"/coding/clients/dotnet/#creating-accounts\">.NET\nlibrary</a></li>\n<li><a href=\"/coding/clients/java/#creating-accounts\">Java\nlibrary</a></li>\n<li><a href=\"/coding/clients/go/#creating-accounts\">Go library</a></li>\n<li><a href=\"/coding/clients/node/#creating-accounts\">Node.js\nlibrary</a></li>\n<li><a href=\"/coding/clients/python/#creating-accounts\">Python\nlibrary</a></li>\n</ul>\n<h2 id=\"internals\"><a href=\"#internals\"\nclass=\"anchor\">Internals</a></h2>\n<p>If you’re curious and want to learn more, you can find the source\ncode for creating an account in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/state_machine.zig\">src/state_machine.zig</a>.\nSearch for <code>fn create_account(</code> and\n<code>fn execute(</code>.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/reference/requests/create_accounts.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"reference/requests/create_transfers","html":"<h1 id=\"create_transfers\"><a href=\"#create_transfers\"\nclass=\"anchor\"><code>create_transfers</code></a></h1>\n<p>Create one or more <a\nhref=\"../../transfer\"><code>Transfer</code></a>s. A successfully created\ntransfer will modify the amount fields of its <a\nhref=\"../../transfer#debit_account_id\">debit</a> and <a\nhref=\"../../transfer#credit_account_id\">credit</a> accounts.</p>\n<h2 id=\"event\"><a href=\"#event\" class=\"anchor\">Event</a></h2>\n<p>The transfer to create. See <a\nhref=\"../../transfer\"><code>Transfer</code></a> for constraints.</p>\n<h2 id=\"result\"><a href=\"#result\" class=\"anchor\">Result</a></h2>\n<p>Results are listed in this section in order of descending precedence\n— that is, if more than one error is applicable to the transfer being\ncreated, only the result listed first is returned.</p>\n<h3 id=\"ok\"><a href=\"#ok\" class=\"anchor\"><code>ok</code></a></h3>\n<p>The transfer was successfully created; did not previously exist.</p>\n<p>Note that <code>ok</code> is generated by the client implementation;\nthe network protocol does not include a result when the transfer was\nsuccessfully created.</p>\n<h3 id=\"linked_event_failed\"><a href=\"#linked_event_failed\"\nclass=\"anchor\"><code>linked_event_failed</code></a></h3>\n<p>The transfer was not created. One or more of the other transfers in\nthe <a href=\"../../transfer#flagslinked\">linked chain</a> is invalid, so\nthe whole chain failed.</p>\n<h3 id=\"linked_event_chain_open\"><a href=\"#linked_event_chain_open\"\nclass=\"anchor\"><code>linked_event_chain_open</code></a></h3>\n<p>The transfer was not created. The <a\nhref=\"../../transfer#flagslinked\"><code>Transfer.flags.linked</code></a>\nflag was set on the last event in the batch, which is not legal.\n(<code>flags.linked</code> indicates that the chain continues to the\nnext operation).</p>\n<h3 id=\"imported_event_expected\"><a href=\"#imported_event_expected\"\nclass=\"anchor\"><code>imported_event_expected</code></a></h3>\n<p>The transfer was not created. The <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nwas set on the first transfer of the batch, but not all transfers in the\nbatch. Batches cannot mix imported transfers with non-imported\ntransfers.</p>\n<h3 id=\"imported_event_not_expected\"><a\nhref=\"#imported_event_not_expected\"\nclass=\"anchor\"><code>imported_event_not_expected</code></a></h3>\n<p>The transfer was not created. The <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nwas expected to <em>not</em> be set, as it’s not allowed to mix\ntransfers with different <code>imported</code> flag in the same batch.\nThe first transfer determines the entire operation.</p>\n<h3 id=\"timestamp_must_be_zero\"><a href=\"#timestamp_must_be_zero\"\nclass=\"anchor\"><code>timestamp_must_be_zero</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../account#flagsimported\"><code>Account.flags.imported</code></a>\nis <em>not</em> set.</p>\n<p>The transfer was not created. The <a\nhref=\"../../transfer#timestamp\"><code>Transfer.timestamp</code></a> is\nnonzero, but must be zero. The cluster is responsible for setting this\nfield.</p>\n<p>The <a\nhref=\"../../transfer#timestamp\"><code>Transfer.timestamp</code></a> can\nonly be assigned when creating transfers with <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nset.</p>\n<h3 id=\"imported_event_timestamp_out_of_range\"><a\nhref=\"#imported_event_timestamp_out_of_range\"\nclass=\"anchor\"><code>imported_event_timestamp_out_of_range</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nis set.</p>\n<p>The transfer was not created. The <a\nhref=\"../../transfer#timestamp\"><code>Transfer.timestamp</code></a> is\nout of range, but must be a user-defined timestamp greater than\n<code>0</code> and less than <code>2^63</code>.</p>\n<h3 id=\"imported_event_timestamp_must_not_advance\"><a\nhref=\"#imported_event_timestamp_must_not_advance\"\nclass=\"anchor\"><code>imported_event_timestamp_must_not_advance</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nis set.</p>\n<p>The transfer was not created. The user-defined <a\nhref=\"../../transfer#timestamp\"><code>Transfer.timestamp</code></a> is\ngreater than the current <a href=\"../../../coding/time\">cluster\ntime</a>, but it must be a past timestamp.</p>\n<h3 id=\"reserved_flag\"><a href=\"#reserved_flag\"\nclass=\"anchor\"><code>reserved_flag</code></a></h3>\n<p>The transfer was not created. <code>Transfer.flags.reserved</code> is\nnonzero, but must be zero.</p>\n<h3 id=\"id_must_not_be_zero\"><a href=\"#id_must_not_be_zero\"\nclass=\"anchor\"><code>id_must_not_be_zero</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> is zero, which is\na reserved value.</p>\n<h3 id=\"id_must_not_be_int_max\"><a href=\"#id_must_not_be_int_max\"\nclass=\"anchor\"><code>id_must_not_be_int_max</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> is\n<code>2^128 - 1</code>, which is a reserved value.</p>\n<h3 id=\"exists_with_different_flags\"><a\nhref=\"#exists_with_different_flags\"\nclass=\"anchor\"><code>exists_with_different_flags</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with\ndifferent <a href=\"../../transfer#flags\"><code>flags</code></a>.</p>\n<h3 id=\"exists_with_different_pending_id\"><a\nhref=\"#exists_with_different_pending_id\"\nclass=\"anchor\"><code>exists_with_different_pending_id</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a\nhref=\"../../transfer#pending_id\"><code>pending_id</code></a>.</p>\n<h3 id=\"exists_with_different_timeout\"><a\nhref=\"#exists_with_different_timeout\"\nclass=\"anchor\"><code>exists_with_different_timeout</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a href=\"../../transfer#timeout\"><code>timeout</code></a>.</p>\n<h3 id=\"exists_with_different_debit_account_id\"><a\nhref=\"#exists_with_different_debit_account_id\"\nclass=\"anchor\"><code>exists_with_different_debit_account_id</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a\nhref=\"../../transfer#debit_account_id\"><code>debit_account_id</code></a>.</p>\n<h3 id=\"exists_with_different_credit_account_id\"><a\nhref=\"#exists_with_different_credit_account_id\"\nclass=\"anchor\"><code>exists_with_different_credit_account_id</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a\nhref=\"../../transfer#credit_account_id\"><code>credit_account_id</code></a>.</p>\n<h3 id=\"exists_with_different_amount\"><a\nhref=\"#exists_with_different_amount\"\nclass=\"anchor\"><code>exists_with_different_amount</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a href=\"../../transfer#amount\"><code>amount</code></a>.</p>\n<p>If the transfer has <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a>\nor <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a>\nset, then the actual amount transferred exceeds this failed transfer’s\n<code>amount</code>.</p>\n<h3 id=\"exists_with_different_user_data_128\"><a\nhref=\"#exists_with_different_user_data_128\"\nclass=\"anchor\"><code>exists_with_different_user_data_128</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a\nhref=\"../../transfer#user_data_128\"><code>user_data_128</code></a>.</p>\n<h3 id=\"exists_with_different_user_data_64\"><a\nhref=\"#exists_with_different_user_data_64\"\nclass=\"anchor\"><code>exists_with_different_user_data_64</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a\nhref=\"../../transfer#user_data_64\"><code>user_data_64</code></a>.</p>\n<h3 id=\"exists_with_different_user_data_32\"><a\nhref=\"#exists_with_different_user_data_32\"\nclass=\"anchor\"><code>exists_with_different_user_data_32</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a\nhref=\"../../transfer#user_data_32\"><code>user_data_32</code></a>.</p>\n<h3 id=\"exists_with_different_ledger\"><a\nhref=\"#exists_with_different_ledger\"\nclass=\"anchor\"><code>exists_with_different_ledger</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a href=\"../../transfer#ledger\"><code>ledger</code></a>.</p>\n<h3 id=\"exists_with_different_code\"><a\nhref=\"#exists_with_different_code\"\nclass=\"anchor\"><code>exists_with_different_code</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists, but with a\ndifferent <a href=\"../../transfer#code\"><code>code</code></a>.</p>\n<h3 id=\"exists\"><a href=\"#exists\"\nclass=\"anchor\"><code>exists</code></a></h3>\n<p>A transfer with the same <code>id</code> already exists.</p>\n<p>If the transfer has <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a>\nor <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a>\nset, then the existing transfer may have a different <a\nhref=\"../../transfer#amount\"><code>amount</code></a>, limited to the\nmaximum <code>amount</code> of the transfer in the request.</p>\n<p>If the transfer has <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a>\nset, then the existing transfer may have a different <a\nhref=\"../../transfer#amount\"><code>amount</code></a>:</p>\n<ul>\n<li>If the original posted amount was less than the pending amount, then\nthe transfer amount must be equal to the posted amount.</li>\n<li>Otherwise, the transfer amount must be greater than or equal to the\npending amount.</li>\n</ul>\n<details>\n<summary>Client release &lt; 0.16.0</summary>\n\n<p>If the transfer has <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a>\nor <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a>\nset, then the existing transfer may have a different <a\nhref=\"../../transfer#amount\"><code>amount</code></a>, limited to the\nmaximum <code>amount</code> of the transfer in the request.</p>\n</details>\n\n<p>Otherwise, with the possible exception of the <code>timestamp</code>\nfield, the existing transfer is identical to the transfer in the\nrequest.</p>\n<p>To correctly <a\nhref=\"../../../coding/reliable-transaction-submission\">recover from\napplication crashes</a>, many applications should handle\n<code>exists</code> exactly as <a href=\"#ok\"><code>ok</code></a>.</p>\n<h3 id=\"id_already_failed\"><a href=\"#id_already_failed\"\nclass=\"anchor\"><code>id_already_failed</code></a></h3>\n<p>The transfer was not created. A previous transfer with the same <a\nhref=\"../../transfer#id\"><code>id</code></a> failed due to one of the\nfollowing <em>transient errors</em>:</p>\n<ul>\n<li><a\nhref=\"#debit_account_not_found\"><code>debit_account_not_found</code></a></li>\n<li><a\nhref=\"#credit_account_not_found\"><code>credit_account_not_found</code></a></li>\n<li><a\nhref=\"#pending_transfer_not_found\"><code>pending_transfer_not_found</code></a></li>\n<li><a href=\"#exceeds_credits\"><code>exceeds_credits</code></a></li>\n<li><a href=\"#exceeds_debits\"><code>exceeds_debits</code></a></li>\n<li><a\nhref=\"#debit_account_already_closed\"><code>debit_account_already_closed</code></a></li>\n<li><a\nhref=\"#credit_account_already_closed\"><code>credit_account_already_closed</code></a></li>\n</ul>\n<p>Transient errors depend on the database state at a given point in\ntime, and each attempt is uniquely associated with the corresponding <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a>. This behavior\nguarantees that retrying a transfer will not produce a different outcome\n(either success or failure).</p>\n<p>Without this mechanism, a transfer that previously failed could\nsucceed if retried when the underlying state changes (e.g., the target\naccount has sufficient credits).</p>\n<p><strong>Note:</strong> The application should retry an event only if\nit was unable to acknowledge the last response (e.g., due to an\napplication restart) or because it is correcting a previously rejected\nmalformed request (e.g., due to an application bug). If the application\nintends to submit the transfer again even after a transient error, it\nmust generate a new <a\nhref=\"../../../coding/data-modeling#id\">idempotency id</a>.</p>\n<details>\n<summary>Client release &lt; 0.16.4</summary>\n\n<p>The <a href=\"../../transfer#id\"><code>id</code></a> is never checked\nagainst failed transfers, regardless of the error. Therefore, a transfer\nthat failed due to a transient error could succeed if retried later.</p>\n</details>\n\n<h3 id=\"flags_are_mutually_exclusive\"><a\nhref=\"#flags_are_mutually_exclusive\"\nclass=\"anchor\"><code>flags_are_mutually_exclusive</code></a></h3>\n<p>The transfer was not created. A transfer cannot be created with the\nspecified combination of <a\nhref=\"../../transfer#flags\"><code>Transfer.flags</code></a>.</p>\n<p>Flag compatibility (✓ = compatible, ✗ = mutually exclusive):</p>\n<ul>\n<li><a href=\"../../transfer#flagspending\"><code>flags.pending</code></a>\n<ul>\n<li>✗ <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsclosing_debit\"><code>flags.closing_debit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsclosing_credit\"><code>flags.closing_credit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsimported\"><code>flags.imported</code></a></li>\n</ul></li>\n<li><a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a>\n<ul>\n<li>✗ <a\nhref=\"../../transfer#flagspending\"><code>flags.pending</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagsclosing_debit\"><code>flags.closing_debit</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagsclosing_credit\"><code>flags.closing_credit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsimported\"><code>flags.imported</code></a></li>\n</ul></li>\n<li><a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a>\n<ul>\n<li>✗ <a\nhref=\"../../transfer#flagspending\"><code>flags.pending</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagsclosing_debit\"><code>flags.closing_debit</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagsclosing_credit\"><code>flags.closing_credit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsimported\"><code>flags.imported</code></a></li>\n</ul></li>\n<li><a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a>\n<ul>\n<li>✓ <a\nhref=\"../../transfer#flagspending\"><code>flags.pending</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsclosing_debit\"><code>flags.closing_debit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsclosing_credit\"><code>flags.closing_credit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsimported\"><code>flags.imported</code></a></li>\n</ul></li>\n<li><a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a>\n<ul>\n<li>✓ <a\nhref=\"../../transfer#flagspending\"><code>flags.pending</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsclosing_debit\"><code>flags.closing_debit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsclosing_credit\"><code>flags.closing_credit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsimported\"><code>flags.imported</code></a></li>\n</ul></li>\n<li><a\nhref=\"../../transfer#flagsclosing_debit\"><code>flags.closing_debit</code></a>\n<ul>\n<li>✓ <a\nhref=\"../../transfer#flagspending\"><code>flags.pending</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsclosing_credit\"><code>flags.closing_credit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsimported\"><code>flags.imported</code></a></li>\n</ul></li>\n<li><a\nhref=\"../../transfer#flagsclosing_credit\"><code>flags.closing_credit</code></a>\n<ul>\n<li>✓ <a\nhref=\"../../transfer#flagspending\"><code>flags.pending</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a></li>\n<li>✗ <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsclosing_debit\"><code>flags.closing_debit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsimported\"><code>flags.imported</code></a></li>\n</ul></li>\n<li><a\nhref=\"../../transfer#flagsimported\"><code>flags.imported</code></a>\n<ul>\n<li>✓ <a\nhref=\"../../transfer#flagspending\"><code>flags.pending</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>flags.post_pending_transfer</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>flags.void_pending_transfer</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsclosing_debit\"><code>flags.closing_debit</code></a></li>\n<li>✓ <a\nhref=\"../../transfer#flagsclosing_credit\"><code>flags.closing_credit</code></a></li>\n</ul></li>\n</ul>\n<h3 id=\"debit_account_id_must_not_be_zero\"><a\nhref=\"#debit_account_id_must_not_be_zero\"\nclass=\"anchor\"><code>debit_account_id_must_not_be_zero</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#debit_account_id\"><code>Transfer.debit_account_id</code></a>\nis zero, but must be a valid account id.</p>\n<h3 id=\"debit_account_id_must_not_be_int_max\"><a\nhref=\"#debit_account_id_must_not_be_int_max\"\nclass=\"anchor\"><code>debit_account_id_must_not_be_int_max</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#debit_account_id\"><code>Transfer.debit_account_id</code></a>\nis <code>2^128 - 1</code>, but must be a valid account id.</p>\n<h3 id=\"credit_account_id_must_not_be_zero\"><a\nhref=\"#credit_account_id_must_not_be_zero\"\nclass=\"anchor\"><code>credit_account_id_must_not_be_zero</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#credit_account_id\"><code>Transfer.credit_account_id</code></a>\nis zero, but must be a valid account id.</p>\n<h3 id=\"credit_account_id_must_not_be_int_max\"><a\nhref=\"#credit_account_id_must_not_be_int_max\"\nclass=\"anchor\"><code>credit_account_id_must_not_be_int_max</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#credit_account_id\"><code>Transfer.credit_account_id</code></a>\nis <code>2^128 - 1</code>, but must be a valid account id.</p>\n<h3 id=\"accounts_must_be_different\"><a\nhref=\"#accounts_must_be_different\"\nclass=\"anchor\"><code>accounts_must_be_different</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#debit_account_id\"><code>Transfer.debit_account_id</code></a>\nand <a\nhref=\"../../transfer#credit_account_id\"><code>Transfer.credit_account_id</code></a>\nmust not be equal.</p>\n<p>That is, an account cannot transfer money to itself.</p>\n<h3 id=\"pending_id_must_be_zero\"><a href=\"#pending_id_must_be_zero\"\nclass=\"anchor\"><code>pending_id_must_be_zero</code></a></h3>\n<p>The transfer was not created. Only post/void transfers can reference\na pending transfer.</p>\n<p>Either:</p>\n<ul>\n<li><a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>Transfer.flags.post_pending_transfer</code></a>\nmust be set, or</li>\n<li><a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>Transfer.flags.void_pending_transfer</code></a>\nmust be set, or</li>\n<li><a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a>\nmust be zero.</li>\n</ul>\n<h3 id=\"pending_id_must_not_be_zero\"><a\nhref=\"#pending_id_must_not_be_zero\"\nclass=\"anchor\"><code>pending_id_must_not_be_zero</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>Transfer.flags.post_pending_transfer</code></a>\nor <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>Transfer.flags.void_pending_transfer</code></a>\nis set, but <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a> is\nzero. A posting or voiding transfer must reference a <a\nhref=\"../../transfer#flagspending\"><code>pending</code></a>\ntransfer.</p>\n<h3 id=\"pending_id_must_not_be_int_max\"><a\nhref=\"#pending_id_must_not_be_int_max\"\nclass=\"anchor\"><code>pending_id_must_not_be_int_max</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a> is\n<code>2^128 - 1</code>, which is a reserved value.</p>\n<h3 id=\"pending_id_must_be_different\"><a\nhref=\"#pending_id_must_be_different\"\nclass=\"anchor\"><code>pending_id_must_be_different</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a> is\nset to the same id as <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a>. Instead it should\nrefer to a different (existing) transfer.</p>\n<h3 id=\"timeout_reserved_for_pending_transfer\"><a\nhref=\"#timeout_reserved_for_pending_transfer\"\nclass=\"anchor\"><code>timeout_reserved_for_pending_transfer</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#timeout\"><code>Transfer.timeout</code></a> is\nnonzero, but only <a href=\"../../transfer#flagspending\">pending</a>\ntransfers have nonzero timeouts.</p>\n<h3 id=\"closing_transfer_must_be_pending\"><a\nhref=\"#closing_transfer_must_be_pending\"\nclass=\"anchor\"><code>closing_transfer_must_be_pending</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#flagspending\"><code>Transfer.flags.pending</code></a>\nis not set, but closing transfers must be two-phase pending\ntransfers.</p>\n<p>If either <a\nhref=\"../../transfer#flagsclosing_debit\"><code>Transfer.flags.closing_debit</code></a>\nor <a\nhref=\"../../transfer#flagsclosing_credit\"><code>Transfer.flags.closing_credit</code></a>\nis set, <a\nhref=\"../../transfer#flagspending\"><code>Transfer.flags.pending</code></a>\nmust also be set.</p>\n<p>This ensures that closing transfers are reversible by <a\nhref=\"../../transfer#flagsvoid_pending_transfer\">voiding</a> the pending\ntransfer, and requires that the reversal operation references the\ncorresponding closing transfer, guarding against unexpected interleaving\nof close/unclose operations.</p>\n<h3 id=\"amount_must_not_be_zero\"><a href=\"#amount_must_not_be_zero\"\nclass=\"anchor\"><code>amount_must_not_be_zero</code></a></h3>\n<p><strong>Deprecated</strong>: This error code is only returned to\nclients prior to release <code>0.16.0</code>. Since <code>0.16.0</code>,\nzero-amount transfers are permitted.</p>\n<details>\n<summary>Client release &lt; 0.16.0</summary>\n\n<p>The transfer was not created. <a\nhref=\"../../transfer#amount\"><code>Transfer.amount</code></a> is zero,\nbut must be nonzero.</p>\n<p>Every transfer must move value. Only posting and voiding transfer\namounts may be zero — when zero, they will move the full pending\namount.</p>\n</details>\n\n<h3 id=\"ledger_must_not_be_zero\"><a href=\"#ledger_must_not_be_zero\"\nclass=\"anchor\"><code>ledger_must_not_be_zero</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#ledger\"><code>Transfer.ledger</code></a> is zero,\nbut must be nonzero.</p>\n<h3 id=\"code_must_not_be_zero\"><a href=\"#code_must_not_be_zero\"\nclass=\"anchor\"><code>code_must_not_be_zero</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#code\"><code>Transfer.code</code></a> is zero, but\nmust be nonzero.</p>\n<h3 id=\"debit_account_not_found\"><a href=\"#debit_account_not_found\"\nclass=\"anchor\"><code>debit_account_not_found</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#debit_account_id\"><code>Transfer.debit_account_id</code></a>\nmust refer to an existing <code>Account</code>.</p>\n<p>This is a <a href=\"#id_already_failed\">transient error</a>. The <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> associated with\nthis particular attempt will always fail upon retry, even if the\nunderlying issue is resolved. To succeed, a new <a\nhref=\"../../../coding/data-modeling#id\">idempotency id</a> must be\nsubmitted.</p>\n<h3 id=\"credit_account_not_found\"><a href=\"#credit_account_not_found\"\nclass=\"anchor\"><code>credit_account_not_found</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#credit_account_id\"><code>Transfer.credit_account_id</code></a>\nmust refer to an existing <code>Account</code>.</p>\n<p>This is a <a href=\"#id_already_failed\">transient error</a>. The <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> associated with\nthis particular attempt will always fail upon retry, even if the\nunderlying issue is resolved. To succeed, a new <a\nhref=\"../../../coding/data-modeling#id\">idempotency id</a> must be\nsubmitted.</p>\n<h3 id=\"accounts_must_have_the_same_ledger\"><a\nhref=\"#accounts_must_have_the_same_ledger\"\nclass=\"anchor\"><code>accounts_must_have_the_same_ledger</code></a></h3>\n<p>The transfer was not created. The accounts referred to by <a\nhref=\"../../transfer#debit_account_id\"><code>Transfer.debit_account_id</code></a>\nand <a\nhref=\"../../transfer#credit_account_id\"><code>Transfer.credit_account_id</code></a>\nmust have an identical <a\nhref=\"../../account#ledger\"><code>ledger</code></a>.</p>\n<p><a href=\"../../../coding/recipes/currency-exchange\">Currency\nexchange</a> is implemented with multiple transfers.</p>\n<h3 id=\"transfer_must_have_the_same_ledger_as_accounts\"><a\nhref=\"#transfer_must_have_the_same_ledger_as_accounts\"\nclass=\"anchor\"><code>transfer_must_have_the_same_ledger_as_accounts</code></a></h3>\n<p>The transfer was not created. The accounts referred to by <a\nhref=\"../../transfer#debit_account_id\"><code>Transfer.debit_account_id</code></a>\nand <a\nhref=\"../../transfer#credit_account_id\"><code>Transfer.credit_account_id</code></a>\nare equivalent, but differ from the <a\nhref=\"../../transfer#ledger\"><code>Transfer.ledger</code></a>.</p>\n<h3 id=\"pending_transfer_not_found\"><a\nhref=\"#pending_transfer_not_found\"\nclass=\"anchor\"><code>pending_transfer_not_found</code></a></h3>\n<p>The transfer was not created. The transfer referenced by <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a>\ndoes not exist.</p>\n<p>This is a <a href=\"#id_already_failed\">transient error</a>. The <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> associated with\nthis particular attempt will always fail upon retry, even if the\nunderlying issue is resolved. To succeed, a new <a\nhref=\"../../../coding/data-modeling#id\">idempotency id</a> must be\nsubmitted.</p>\n<h3 id=\"pending_transfer_not_pending\"><a\nhref=\"#pending_transfer_not_pending\"\nclass=\"anchor\"><code>pending_transfer_not_pending</code></a></h3>\n<p>The transfer was not created. The transfer referenced by <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a>\nexists, but does not have <a\nhref=\"../../transfer#flagspending\"><code>flags.pending</code></a>\nset.</p>\n<h3 id=\"pending_transfer_has_different_debit_account_id\"><a\nhref=\"#pending_transfer_has_different_debit_account_id\"\nclass=\"anchor\"><code>pending_transfer_has_different_debit_account_id</code></a></h3>\n<p>The transfer was not created. The transfer referenced by <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a>\nexists, but with a different <a\nhref=\"../../transfer#debit_account_id\"><code>debit_account_id</code></a>.</p>\n<p>The post/void transfer’s <code>debit_account_id</code> must either be\n<code>0</code> or identical to the pending transfer’s\n<code>debit_account_id</code>.</p>\n<h3 id=\"pending_transfer_has_different_credit_account_id\"><a\nhref=\"#pending_transfer_has_different_credit_account_id\"\nclass=\"anchor\"><code>pending_transfer_has_different_credit_account_id</code></a></h3>\n<p>The transfer was not created. The transfer referenced by <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a>\nexists, but with a different <a\nhref=\"../../transfer#credit_account_id\"><code>credit_account_id</code></a>.</p>\n<p>The post/void transfer’s <code>credit_account_id</code> must either\nbe <code>0</code> or identical to the pending transfer’s\n<code>credit_account_id</code>.</p>\n<h3 id=\"pending_transfer_has_different_ledger\"><a\nhref=\"#pending_transfer_has_different_ledger\"\nclass=\"anchor\"><code>pending_transfer_has_different_ledger</code></a></h3>\n<p>The transfer was not created. The transfer referenced by <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a>\nexists, but with a different <a\nhref=\"../../transfer#ledger\"><code>ledger</code></a>.</p>\n<p>The post/void transfer’s <code>ledger</code> must either be\n<code>0</code> or identical to the pending transfer’s\n<code>ledger</code>.</p>\n<h3 id=\"pending_transfer_has_different_code\"><a\nhref=\"#pending_transfer_has_different_code\"\nclass=\"anchor\"><code>pending_transfer_has_different_code</code></a></h3>\n<p>The transfer was not created. The transfer referenced by <a\nhref=\"../../transfer#pending_id\"><code>Transfer.pending_id</code></a>\nexists, but with a different <a\nhref=\"../../transfer#code\"><code>code</code></a>.</p>\n<p>The post/void transfer’s <code>code</code> must either be\n<code>0</code> or identical to the pending transfer’s\n<code>code</code>.</p>\n<h3 id=\"exceeds_pending_transfer_amount\"><a\nhref=\"#exceeds_pending_transfer_amount\"\nclass=\"anchor\"><code>exceeds_pending_transfer_amount</code></a></h3>\n<p>The transfer was not created. The transfer’s <a\nhref=\"../../transfer#amount\"><code>amount</code></a> exceeds the\n<code>amount</code> of its <a\nhref=\"../../transfer#pending_id\">pending</a> transfer.</p>\n<h3 id=\"pending_transfer_has_different_amount\"><a\nhref=\"#pending_transfer_has_different_amount\"\nclass=\"anchor\"><code>pending_transfer_has_different_amount</code></a></h3>\n<p>The transfer was not created. The transfer is attempting to <a\nhref=\"../../transfer#flagsvoid_pending_transfer\">void</a> a pending\ntransfer. The voiding transfer’s <a\nhref=\"../../transfer#amount\"><code>amount</code></a> must be either\n<code>0</code> or exactly the <code>amount</code> of the pending\ntransfer.</p>\n<p>To partially void a transfer, create a <a\nhref=\"../../transfer#flagspost_pending_transfer\">posting transfer</a>\nwith an amount less than the pending transfer’s <code>amount</code>.</p>\n<details>\n<summary>Client release &lt; 0.16.0</summary>\n\n<p>To partially void a transfer, create a <a\nhref=\"../../transfer#flagspost_pending_transfer\">posting transfer</a>\nwith an amount between <code>0</code> and the pending transfer’s\n<code>amount</code>.</p>\n</details>\n\n<h3 id=\"pending_transfer_already_posted\"><a\nhref=\"#pending_transfer_already_posted\"\nclass=\"anchor\"><code>pending_transfer_already_posted</code></a></h3>\n<p>The transfer was not created. The referenced <a\nhref=\"../../transfer#pending_id\">pending</a> transfer was already posted\nby a <a\nhref=\"../../transfer#flagspost_pending_transfer\"><code>post_pending_transfer</code></a>.</p>\n<h3 id=\"pending_transfer_already_voided\"><a\nhref=\"#pending_transfer_already_voided\"\nclass=\"anchor\"><code>pending_transfer_already_voided</code></a></h3>\n<p>The transfer was not created. The referenced <a\nhref=\"../../transfer#pending_id\">pending</a> transfer was already voided\nby a <a\nhref=\"../../transfer#flagsvoid_pending_transfer\"><code>void_pending_transfer</code></a>.</p>\n<h3 id=\"pending_transfer_expired\"><a href=\"#pending_transfer_expired\"\nclass=\"anchor\"><code>pending_transfer_expired</code></a></h3>\n<p>The transfer was not created. The referenced <a\nhref=\"../../transfer#pending_id\">pending</a> transfer was already voided\nbecause its <a href=\"../../transfer#timeout\">timeout</a> has passed.</p>\n<h3 id=\"imported_event_timestamp_must_not_regress\"><a\nhref=\"#imported_event_timestamp_must_not_regress\"\nclass=\"anchor\"><code>imported_event_timestamp_must_not_regress</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nis set.</p>\n<p>The transfer was not created. The user-defined <a\nhref=\"../../transfer#timestamp\"><code>Transfer.timestamp</code></a>\nregressed, but it must be greater than the last timestamp assigned to\nany <code>Transfer</code> in the cluster and cannot be equal to the\ntimestamp of any existing <a\nhref=\"../../account\"><code>Account</code></a>.</p>\n<h3 id=\"imported_event_timestamp_must_postdate_debit_account\"><a\nhref=\"#imported_event_timestamp_must_postdate_debit_account\"\nclass=\"anchor\"><code>imported_event_timestamp_must_postdate_debit_account</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nis set.</p>\n<p>The transfer was not created. <a\nhref=\"../../transfer#debit_account_id\"><code>Transfer.debit_account_id</code></a>\nmust refer to an <code>Account</code> whose <a\nhref=\"../../account#timestamp\"><code>timestamp</code></a> is less than\nthe <a\nhref=\"../../transfer#timestamp\"><code>Transfer.timestamp</code></a>.</p>\n<h3 id=\"imported_event_timestamp_must_postdate_credit_account\"><a\nhref=\"#imported_event_timestamp_must_postdate_credit_account\"\nclass=\"anchor\"><code>imported_event_timestamp_must_postdate_credit_account</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nis set.</p>\n<p>The transfer was not created. <a\nhref=\"../../transfer#credit_account_id\"><code>Transfer.credit_account_id</code></a>\nmust refer to an <code>Account</code> whose <a\nhref=\"../../account#timestamp\"><code>timestamp</code></a> is less than\nthe <a\nhref=\"../../transfer#timestamp\"><code>Transfer.timestamp</code></a>.</p>\n<h3 id=\"imported_event_timeout_must_be_zero\"><a\nhref=\"#imported_event_timeout_must_be_zero\"\nclass=\"anchor\"><code>imported_event_timeout_must_be_zero</code></a></h3>\n<p>This result only applies when <a\nhref=\"../../transfer#flagsimported\"><code>Transfer.flags.imported</code></a>\nis set.</p>\n<p>The transfer was not created. The <a\nhref=\"../../transfer#timeout\"><code>Transfer.timeout</code></a> is\nnonzero, but must be zero.</p>\n<p>It’s possible to import <a\nhref=\"../../transfer#flagspending\">pending</a> transfers with a\nuser-defined timestamp, but since it’s not driven by the cluster clock,\nit cannot define a timeout for automatic expiration. In those cases, the\n<a href=\"../../../coding/two-phase-transfers\">two-phase post or\nrollback</a> must be done manually.</p>\n<h3 id=\"debit_account_already_closed\"><a\nhref=\"#debit_account_already_closed\"\nclass=\"anchor\"><code>debit_account_already_closed</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#debit_account_id\"><code>Transfer.debit_account_id</code></a>\nmust refer to an <code>Account</code> whose <a\nhref=\"../../account#flagsclosed\"><code>Account.flags.closed</code></a>\nis not already set.</p>\n<p>This is a <a href=\"#id_already_failed\">transient error</a>. The <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> associated with\nthis particular attempt will always fail upon retry, even if the\nunderlying issue is resolved. To succeed, a new <a\nhref=\"../../../coding/data-modeling#id\">idempotency id</a> must be\nsubmitted.</p>\n<h3 id=\"credit_account_already_closed\"><a\nhref=\"#credit_account_already_closed\"\nclass=\"anchor\"><code>credit_account_already_closed</code></a></h3>\n<p>The transfer was not created. <a\nhref=\"../../transfer#credit_account_id\"><code>Transfer.credit_account_id</code></a>\nmust refer to an <code>Account</code> whose <a\nhref=\"../../account#flagsclosed\"><code>Account.flags.closed</code></a>\nis not already set.</p>\n<p>This is a <a href=\"#id_already_failed\">transient error</a>. The <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> associated with\nthis particular attempt will always fail upon retry, even if the\nunderlying issue is resolved. To succeed, a new <a\nhref=\"../../../coding/data-modeling#id\">idempotency id</a> must be\nsubmitted.</p>\n<h3 id=\"overflows_debits_pending\"><a href=\"#overflows_debits_pending\"\nclass=\"anchor\"><code>overflows_debits_pending</code></a></h3>\n<p>The transfer was not created.\n<code>debit_account.debits_pending + transfer.amount</code> would\noverflow a 128-bit unsigned integer.</p>\n<h3 id=\"overflows_credits_pending\"><a href=\"#overflows_credits_pending\"\nclass=\"anchor\"><code>overflows_credits_pending</code></a></h3>\n<p>The transfer was not created.\n<code>credit_account.credits_pending + transfer.amount</code> would\noverflow a 128-bit unsigned integer.</p>\n<h3 id=\"overflows_debits_posted\"><a href=\"#overflows_debits_posted\"\nclass=\"anchor\"><code>overflows_debits_posted</code></a></h3>\n<p>The transfer was not created.\n<code>debit_account.debits_posted + transfer.amount</code> would\noverflow a 128-bit unsigned integer.</p>\n<h3 id=\"overflows_credits_posted\"><a href=\"#overflows_credits_posted\"\nclass=\"anchor\"><code>overflows_credits_posted</code></a></h3>\n<p>The transfer was not created.\n<code>debit_account.credits_posted + transfer.amount</code> would\noverflow a 128-bit unsigned integer.</p>\n<h3 id=\"overflows_debits\"><a href=\"#overflows_debits\"\nclass=\"anchor\"><code>overflows_debits</code></a></h3>\n<p>The transfer was not created.\n<code>debit_account.debits_pending + debit_account.debits_posted + transfer.amount</code>\nwould overflow a 128-bit unsigned integer.</p>\n<h3 id=\"overflows_credits\"><a href=\"#overflows_credits\"\nclass=\"anchor\"><code>overflows_credits</code></a></h3>\n<p>The transfer was not created.\n<code>credit_account.credits_pending + credit_account.credits_posted + transfer.amount</code>\nwould overflow a 128-bit unsigned integer.</p>\n<h3 id=\"overflows_timeout\"><a href=\"#overflows_timeout\"\nclass=\"anchor\"><code>overflows_timeout</code></a></h3>\n<p>The transfer was not created.\n<code>transfer.timestamp + (transfer.timeout * 1_000_000_000)</code>\nwould exceed <code>2^63</code>.</p>\n<p><a href=\"../../transfer#timeout\"><code>Transfer.timeout</code></a> is\nconverted to nanoseconds.</p>\n<p>This computation uses the <a\nhref=\"../../transfer#timestamp\"><code>Transfer.timestamp</code></a>\nvalue assigned by the replica, not the <code>0</code> value sent by the\nclient.</p>\n<h3 id=\"exceeds_credits\"><a href=\"#exceeds_credits\"\nclass=\"anchor\"><code>exceeds_credits</code></a></h3>\n<p>The transfer was not created.</p>\n<p>The <a href=\"../../transfer#debit_account_id\">debit account</a> has\n<a\nhref=\"../../account#flagsdebits_must_not_exceed_credits\"><code>flags.debits_must_not_exceed_credits</code></a>\nset, but\n<code>debit_account.debits_pending + debit_account.debits_posted + transfer.amount</code>\nwould exceed <code>debit_account.credits_posted</code>.</p>\n<p>This is a <a href=\"#id_already_failed\">transient error</a>. The <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> associated with\nthis particular attempt will always fail upon retry, even if the\nunderlying issue is resolved. To succeed, a new <a\nhref=\"../../../coding/data-modeling#id\">idempotency id</a> must be\nsubmitted.</p>\n<details>\n<summary>Client release &lt; 0.16.0</summary>\n\n<p>If <a\nhref=\"../../transfer#flagsbalancing_debit\"><code>flags.balancing_debit</code></a>\nis set, then\n<code>debit_account.debits_pending + debit_account.debits_posted + 1</code>\nwould exceed <code>debit_account.credits_posted</code>.</p>\n</details>\n\n<h3 id=\"exceeds_debits\"><a href=\"#exceeds_debits\"\nclass=\"anchor\"><code>exceeds_debits</code></a></h3>\n<p>The transfer was not created.</p>\n<p>The <a href=\"../../transfer#credit_account_id\">credit account</a> has\n<a\nhref=\"../../account#flagscredits_must_not_exceed_debits\"><code>flags.credits_must_not_exceed_debits</code></a>\nset, but\n<code>credit_account.credits_pending + credit_account.credits_posted + transfer.amount</code>\nwould exceed <code>credit_account.debits_posted</code>.</p>\n<p>This is a <a href=\"#id_already_failed\">transient error</a>. The <a\nhref=\"../../transfer#id\"><code>Transfer.id</code></a> associated with\nthis particular attempt will always fail upon retry, even if the\nunderlying issue is resolved. To succeed, a new <a\nhref=\"../../../coding/data-modeling#id\">idempotency id</a> must be\nsubmitted.</p>\n<details>\n<summary>Client release &lt; 0.16.0</summary>\n\n<p>If <a\nhref=\"../../transfer#flagsbalancing_credit\"><code>flags.balancing_credit</code></a>\nis set, then\n<code>credit_account.credits_pending + credit_account.credits_posted + 1</code>\nwould exceed <code>credit_account.debits_posted</code>.</p>\n</details>\n\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>For language-specific docs see:</p>\n<ul>\n<li><a href=\"/coding/clients/dotnet/#create-transfers\">.NET\nlibrary</a></li>\n<li><a href=\"/coding/clients/java/#create-transfers\">Java\nlibrary</a></li>\n<li><a href=\"/coding/clients/go/#create-transfers\">Go library</a></li>\n<li><a href=\"/coding/clients/node/#create-transfers\">Node.js\nlibrary</a></li>\n<li><a href=\"/coding/clients/python/#create-transfers\">Python\nlibrary</a></li>\n</ul>\n<h2 id=\"internals\"><a href=\"#internals\"\nclass=\"anchor\">Internals</a></h2>\n<p>If you’re curious and want to learn more, you can find the source\ncode for creating a transfer in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/state_machine.zig\">src/state_machine.zig</a>.\nSearch for <code>fn create_transfer(</code> and\n<code>fn execute(</code>.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/reference/requests/create_transfers.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"reference/requests/lookup_accounts","html":"<h1 id=\"lookup_accounts\"><a href=\"#lookup_accounts\"\nclass=\"anchor\"><code>lookup_accounts</code></a></h1>\n<p>Fetch one or more accounts by their <code>id</code>s.</p>\n<p>⚠️ Note that you <strong>should not</strong> check an account’s\nbalance using this request before creating a transfer. That would not be\natomic and the balance could change in between the check and the\ntransfer. Instead, set the <a\nhref=\"../../account#flagsdebits_must_not_exceed_credits\"><code>debits_must_not_exceed_credits</code></a>\nor <a\nhref=\"../../account#flagscredits_must_not_exceed_debits\"><code>credits_must_not_exceed_debits</code></a>\nflag on the accounts to limit their account balances. More complex\nconditional transfers can be expressed using <a\nhref=\"../../../coding/recipes/balance-conditional-transfers\">balance-conditional\ntransfers</a>.</p>\n<p>⚠️ It is not possible currently to look up more than a full batch\n(8189) of accounts atomically. When issuing multiple\n<code>lookup_accounts</code> calls, it can happen that other operations\nwill interleave between the calls leading to read skew. Consider using\nthe <a href=\"../../account#flagshistory\"><code>history</code></a> flag\nto enable atomic lookups.</p>\n<h2 id=\"event\"><a href=\"#event\" class=\"anchor\">Event</a></h2>\n<p>An <a href=\"../../account#id\"><code>id</code></a> belonging to a <a\nhref=\"../../account\"><code>Account</code></a>.</p>\n<h2 id=\"result\"><a href=\"#result\" class=\"anchor\">Result</a></h2>\n<ul>\n<li>If the account exists, return the <a\nhref=\"../../account\"><code>Account</code></a>.</li>\n<li>If the account does not exist, return nothing.</li>\n</ul>\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>For language-specific docs see:</p>\n<ul>\n<li><a href=\"/coding/clients/dotnet/#account-lookup\">.NET\nlibrary</a></li>\n<li><a href=\"/coding/clients/java/#account-lookup\">Java library</a></li>\n<li><a href=\"/coding/clients/go/#account-lookup\">Go library</a></li>\n<li><a href=\"/coding/clients/node/#account-lookup\">Node.js\nlibrary</a></li>\n</ul>\n<h2 id=\"internals\"><a href=\"#internals\"\nclass=\"anchor\">Internals</a></h2>\n<p>If you’re curious and want to learn more, you can find the source\ncode for looking up an account in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/state_machine.zig\">src/state_machine.zig</a>.\nSearch for <code>fn execute_lookup_accounts(</code>.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/reference/requests/lookup_accounts.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"reference/requests/lookup_transfers","html":"<h1 id=\"lookup_transfers\"><a href=\"#lookup_transfers\"\nclass=\"anchor\"><code>lookup_transfers</code></a></h1>\n<p>Fetch one or more transfers by their <code>id</code>s.</p>\n<h2 id=\"event\"><a href=\"#event\" class=\"anchor\">Event</a></h2>\n<p>An <a href=\"../../transfer#id\"><code>id</code></a> belonging to a <a\nhref=\"../../transfer\"><code>Transfer</code></a>.</p>\n<h2 id=\"result\"><a href=\"#result\" class=\"anchor\">Result</a></h2>\n<ul>\n<li>If the transfer exists, return the <a\nhref=\"../../transfer\"><code>Transfer</code></a>.</li>\n<li>If the transfer does not exist, return nothing.</li>\n</ul>\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>For language-specific docs see:</p>\n<ul>\n<li><a href=\"/coding/clients/dotnet/#transfer-lookup\">.NET\nlibrary</a></li>\n<li><a href=\"/coding/clients/java/#transfer-lookup\">Java\nlibrary</a></li>\n<li><a href=\"/coding/clients/go/#transfer-lookup\">Go library</a></li>\n<li><a href=\"/coding/clients/node/#transfer-lookup\">Node.js\nlibrary</a></li>\n</ul>\n<h2 id=\"internals\"><a href=\"#internals\"\nclass=\"anchor\">Internals</a></h2>\n<p>If you’re curious and want to learn more, you can find the source\ncode for looking up a transfer in <a\nhref=\"https://github.com/tigerbeetle/tigerbeetle/blob/main/src/state_machine.zig\">src/state_machine.zig</a>.\nSearch for <code>fn execute_lookup_transfers(</code>.</p>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/reference/requests/lookup_transfers.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"reference/requests/get_account_transfers","html":"<h1 id=\"get_account_transfers\"><a href=\"#get_account_transfers\"\nclass=\"anchor\"><code>get_account_transfers</code></a></h1>\n<p>Fetch <a href=\"../../transfer\"><code>Transfer</code></a>s involving a\ngiven <a href=\"../../account\"><code>Account</code></a>.</p>\n<h2 id=\"event\"><a href=\"#event\" class=\"anchor\">Event</a></h2>\n<p>The account filter. See <a\nhref=\"../../account-filter\"><code>AccountFilter</code></a> for\nconstraints.</p>\n<h2 id=\"result\"><a href=\"#result\" class=\"anchor\">Result</a></h2>\n<ul>\n<li>Return a (possibly empty) array of <a\nhref=\"../../transfer\"><code>Transfer</code></a>s that match the\nfilter.</li>\n<li>If any constraint is violated, return nothing.</li>\n<li>By default, <code>Transfer</code>s are sorted chronologically by\n<code>timestamp</code>. You can use the <a\nhref=\"../../account-filter#flagsreversed\"><code>reversed</code></a> to\nchange this.</li>\n<li>The result is always limited in size. If there are more results, you\nneed to page through them using the <code>AccountFilter</code>’s <a\nhref=\"../../account-filter#timestamp_min\"><code>timestamp_min</code></a>\nand/or <a\nhref=\"../../account-filter#timestamp_max\"><code>timestamp_max</code></a>.</li>\n</ul>\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>For language-specific docs see:</p>\n<ul>\n<li><a href=\"/coding/clients/dotnet/#get-account-transfers\">.NET\nlibrary</a></li>\n<li><a href=\"/coding/clients/java/#get-account-transfers\">Java\nlibrary</a></li>\n<li><a href=\"/coding/clients/go/#get-account-transfers\">Go\nlibrary</a></li>\n<li><a href=\"/coding/clients/node/#get-account-transfers\">Node.js\nlibrary</a></li>\n<li><a href=\"/coding/clients/python/#get-account-transfers\">Python\nlibrary</a></li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/reference/requests/get_account_transfers.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"reference/requests/get_account_balances","html":"<h1 id=\"get_account_balances\"><a href=\"#get_account_balances\"\nclass=\"anchor\"><code>get_account_balances</code></a></h1>\n<p>Fetch the historical <a\nhref=\"../../account-balance\"><code>AccountBalance</code></a>s of a given\n<a href=\"../../account\"><code>Account</code></a>.</p>\n<p><strong>Only accounts created with the <a\nhref=\"../../account#flagshistory\"><code>history</code></a> flag set\nretain historical balances.</strong> This is off by default.</p>\n<ul>\n<li><p>Each balance returned has a corresponding transfer with the same\n<a href=\"../../transfer#timestamp\"><code>timestamp</code></a>. See the\n<a\nhref=\"../get_account_transfers\"><code>get_account_transfers</code></a>\noperation for more details.</p></li>\n<li><p>The amounts refer to the account balance recorded <em>after</em>\nthe transfer execution.</p></li>\n<li><p><a href=\"../../transfer#flagspending\">Pending</a> balances\nautomatically removed due to <a\nhref=\"../../transfer#timeout\">timeout</a> expiration don’t change\nhistorical balances.</p></li>\n</ul>\n<h2 id=\"event\"><a href=\"#event\" class=\"anchor\">Event</a></h2>\n<p>The account filter. See <a\nhref=\"../../account-filter\"><code>AccountFilter</code></a> for\nconstraints.</p>\n<h2 id=\"result\"><a href=\"#result\" class=\"anchor\">Result</a></h2>\n<ul>\n<li>If the account has the flag <a\nhref=\"../../account#flagshistory\"><code>history</code></a> set and any\nmatching balances exist, return an array of <a\nhref=\"../../account-balance\"><code>AccountBalance</code></a>s.</li>\n<li>If the account does not have the flag <a\nhref=\"../../account#flagshistory\"><code>history</code></a> set, return\nnothing.</li>\n<li>If no matching balances exist, return nothing.</li>\n<li>If any constraint is violated, return nothing.</li>\n</ul>\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>For language-specific docs see:</p>\n<ul>\n<li><a href=\"/coding/clients/dotnet/#get-account-balances\">.NET\nlibrary</a></li>\n<li><a href=\"/coding/clients/java/#get-account-balances\">Java\nlibrary</a></li>\n<li><a href=\"/coding/clients/go/#get-account-balances\">Go\nlibrary</a></li>\n<li><a href=\"/coding/clients/node/#get-account-balances\">Node.js\nlibrary</a></li>\n<li><a href=\"/coding/clients/python/#get-account-balances\">Python\nlibrary</a></li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/reference/requests/get_account_balances.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"reference/requests/query_accounts","html":"<h1 id=\"query_accounts\"><a href=\"#query_accounts\"\nclass=\"anchor\"><code>query_accounts</code></a></h1>\n<p>Query <a href=\"../../account\"><code>Account</code></a>s by the\nintersection of some fields and by timestamp range.</p>\n<p>⚠️ It is not possible currently to query more than a full batch\n(8189) of accounts atomically. When issuing multiple\n<code>query_accounts</code> calls, it can happen that other operations\nwill interleave between the calls leading to read skew. Consider using\nthe <a href=\"../../account#flagshistory\"><code>history</code></a> flag\nto enable atomic lookups.</p>\n<h2 id=\"event\"><a href=\"#event\" class=\"anchor\">Event</a></h2>\n<p>The query filter. See <a\nhref=\"../../query-filter\"><code>QueryFilter</code></a> for\nconstraints.</p>\n<h2 id=\"result\"><a href=\"#result\" class=\"anchor\">Result</a></h2>\n<ul>\n<li>Return a (possibly empty) array of <a\nhref=\"../../account\"><code>Account</code></a>s that match the\nfilter.</li>\n<li>If any constraint is violated, return nothing.</li>\n<li>By default, <code>Account</code>s are sorted chronologically by\n<code>timestamp</code>. You can use the <a\nhref=\"../../query-filter#flagsreversed\"><code>reversed</code></a> to\nchange this.</li>\n<li>The result is always limited in size. If there are more results, you\nneed to page through them using the <code>QueryFilter</code>’s <a\nhref=\"../../query-filter#timestamp_min\"><code>timestamp_min</code></a>\nand/or <a\nhref=\"../../query-filter#timestamp_max\"><code>timestamp_max</code></a>.</li>\n</ul>\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>For language-specific docs see:</p>\n<ul>\n<li><a href=\"/coding/clients/dotnet/#query-accounts\">.NET\nlibrary</a></li>\n<li><a href=\"/coding/clients/java/#query-accounts\">Java library</a></li>\n<li><a href=\"/coding/clients/go/#query-accounts\">Go library</a></li>\n<li><a href=\"/coding/clients/node/#query-accounts\">Node.js\nlibrary</a></li>\n<li><a href=\"/coding/clients/python/#query-accounts\">Python\nlibrary</a></li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/reference/requests/query_accounts.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"},{"path":"reference/requests/query_transfers","html":"<h1 id=\"query_transfers\"><a href=\"#query_transfers\"\nclass=\"anchor\"><code>query_transfers</code></a></h1>\n<p>Query <a href=\"../../transfer\"><code>Transfer</code></a>s by the\nintersection of some fields and by timestamp range.</p>\n<h2 id=\"event\"><a href=\"#event\" class=\"anchor\">Event</a></h2>\n<p>The query filter. See <a\nhref=\"../../query-filter\"><code>QueryFilter</code></a> for\nconstraints.</p>\n<h2 id=\"result\"><a href=\"#result\" class=\"anchor\">Result</a></h2>\n<ul>\n<li>Return a (possibly empty) array of <a\nhref=\"../../transfer\"><code>Transfer</code></a>s that match the\nfilter.</li>\n<li>If any constraint is violated, return nothing.</li>\n<li>By default, <code>Transfer</code>s are sorted chronologically by\n<code>timestamp</code>. You can use the <a\nhref=\"../../query-filter#flagsreversed\"><code>reversed</code></a> to\nchange this.</li>\n<li>The result is always limited in size. If there are more results, you\nneed to page through them using the <code>QueryFilter</code>’s <a\nhref=\"../../query-filter#timestamp_min\"><code>timestamp_min</code></a>\nand/or <a\nhref=\"../../query-filter#timestamp_max\"><code>timestamp_max</code></a>.</li>\n</ul>\n<h2 id=\"client-libraries\"><a href=\"#client-libraries\"\nclass=\"anchor\">Client libraries</a></h2>\n<p>For language-specific docs see:</p>\n<ul>\n<li><a href=\"/coding/clients/dotnet/#query-transfers\">.NET\nlibrary</a></li>\n<li><a href=\"/coding/clients/java/#query-transfers\">Java\nlibrary</a></li>\n<li><a href=\"/coding/clients/go/#query-transfers\">Go library</a></li>\n<li><a href=\"/coding/clients/node/#query-transfers\">Node.js\nlibrary</a></li>\n<li><a href=\"/coding/clients/python/#query-transfers\">Python\nlibrary</a></li>\n</ul>\n<a class=\"edit-link\" href=\"https://github.com/tigerbeetle/tigerbeetle/edit/main/docs/reference/requests/query_transfers.md\">\n  <svg width=\"16\" height=\"16\" fill=\"none\">\n    <path d=\"M10 4L12 6M8.667 13.333H14M3.333 10.667L2.667 13.333L5.333 12.667L13.0574 4.94263C13.3074 4.69259 13.4478 4.35351 13.4478 4C13.4478 3.64641 13.3074 3.30733 13.0574 3.05729L12.9427 2.94263C12.6927 2.69267 12.3536 2.55225 12 2.55225C11.6465 2.55225 11.3075 2.69267 11.0574 2.94263L3.333 10.667Z\" stroke-width=\"1.333\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\"/>\n  </svg>\n  Edit this page\n</a>\n"}]
