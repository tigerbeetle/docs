"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9259],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),d=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(r),g=a,h=c["".concat(s,".").concat(g)]||c[g]||m[g]||i;return r?n.createElement(h,o(o({ref:t},p),{},{components:r})):n.createElement(h,o({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},5123:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_position:6},o="Correcting Transfers",l={unversionedId:"coding/recipes/correcting-transfers",id:"coding/recipes/correcting-transfers",title:"Correcting Transfers",description:"Transfers in TigerBeetle are immutable, so once they are created",source:"@site/pages/coding/recipes/correcting-transfers.md",sourceDirName:"coding/recipes",slug:"/coding/recipes/correcting-transfers",permalink:"/coding/recipes/correcting-transfers",draft:!1,editUrl:"https://github.com/tigerbeetle/tigerbeetle/blob/main/docs/coding/recipes/correcting-transfers.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Balance Bounds",permalink:"/coding/recipes/balance-bounds"},next:{title:"Rate Limiting",permalink:"/coding/recipes/rate-limiting"}},s={},d=[{value:"Always Add More Transfers",id:"always-add-more-transfers",level:2},{value:"Example",id:"example",level:3}],p={toc:d},c="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"correcting-transfers"},"Correcting Transfers"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/reference/transfer"},(0,a.kt)("inlineCode",{parentName:"a"},"Transfer"),"s")," in TigerBeetle are immutable, so once they are created\nthey cannot be modified or deleted."),(0,a.kt)("p",null,"Immutability is useful for creating an auditable log of all of the business events, but it does\nraise the question of what to do when a transfer was made in error or some detail such as the amount\nwas incorrect."),(0,a.kt)("h2",{id:"always-add-more-transfers"},"Always Add More Transfers"),(0,a.kt)("p",null,"Correcting transfers or entries in TigerBeetle are handled with more transfers to reverse or adjust\nthe effects of the previous transfer(s)."),(0,a.kt)("p",null,"This is important because adding transfers as opposed to deleting or modifying incorrect ones adds\nmore information to the history. The log of events includes the original error, when it took place,\nas well as any attempts to correct the record and when they took place. A correcting entry might\neven be wrong, in which case it itself can be corrected with yet another transfer. All of these\nevents form a timeline of the particular business event, which is stored permanently."),(0,a.kt)("p",null,'Another way to put this is that TigerBeetle is the lowest layer of the accounting stack and\nrepresents the finest-resolution data that is stored. At a higher-level reporting layer, you can\n"downsample" the data to show only the corrected transfer event. However, it would not be possible\nto go back if the original record were modified or deleted.'),(0,a.kt)("p",null,"Two specific recommendations for correcting transfers are:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"You may want to have a ",(0,a.kt)("a",{parentName:"li",href:"/reference/transfer#code"},(0,a.kt)("inlineCode",{parentName:"a"},"Transfer.code"))," that indicates a given\ntransfer is a correction, or you may want multiple codes where each one represents a different\nreason why the correction has taken place."),(0,a.kt)("li",{parentName:"ol"},"If you use the ",(0,a.kt)("a",{parentName:"li",href:"/reference/transfer#user_data_128"},(0,a.kt)("inlineCode",{parentName:"a"},"Transfer.user_data_128"))," to store an\nID that links multiple transfers within TigerBeetle or points to a\n",(0,a.kt)("a",{parentName:"li",href:"/coding/system-architecture"},"record in an external database"),", you may want to use the same\n",(0,a.kt)("inlineCode",{parentName:"li"},"user_data_128")," field on the correction transfer(s), even if they happen at a later point.")),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("p",null,"Let's say you had a couple of transfers, from account ",(0,a.kt)("inlineCode",{parentName:"p"},"A")," to accounts ",(0,a.kt)("inlineCode",{parentName:"p"},"Y")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Z"),":"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"right"},"Ledger"),(0,a.kt)("th",{parentName:"tr",align:"right"},"Debit Account"),(0,a.kt)("th",{parentName:"tr",align:"right"},"Credit Account"),(0,a.kt)("th",{parentName:"tr",align:"right"},"Amount"),(0,a.kt)("th",{parentName:"tr",align:"right"},(0,a.kt)("inlineCode",{parentName:"th"},"code")),(0,a.kt)("th",{parentName:"tr",align:"right"},(0,a.kt)("inlineCode",{parentName:"th"},"user_data_128")),(0,a.kt)("th",{parentName:"tr",align:"right"},(0,a.kt)("inlineCode",{parentName:"th"},"flags.linked")))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"right"},"USD"),(0,a.kt)("td",{parentName:"tr",align:"right"},(0,a.kt)("inlineCode",{parentName:"td"},"A")),(0,a.kt)("td",{parentName:"tr",align:"right"},(0,a.kt)("inlineCode",{parentName:"td"},"X")),(0,a.kt)("td",{parentName:"tr",align:"right"},"10000"),(0,a.kt)("td",{parentName:"tr",align:"right"},"600"),(0,a.kt)("td",{parentName:"tr",align:"right"},"123456"),(0,a.kt)("td",{parentName:"tr",align:"right"},"true")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"right"},"USD"),(0,a.kt)("td",{parentName:"tr",align:"right"},(0,a.kt)("inlineCode",{parentName:"td"},"A")),(0,a.kt)("td",{parentName:"tr",align:"right"},(0,a.kt)("inlineCode",{parentName:"td"},"Y")),(0,a.kt)("td",{parentName:"tr",align:"right"},"50"),(0,a.kt)("td",{parentName:"tr",align:"right"},"9000"),(0,a.kt)("td",{parentName:"tr",align:"right"},"123456"),(0,a.kt)("td",{parentName:"tr",align:"right"},"false")))),(0,a.kt)("p",null,"Now, let's say we realized the amount was wrong and we need to adjust both of the amounts by 10%. We\nwould submit two ",(0,a.kt)("strong",{parentName:"p"},"additional")," transfers going in the opposite direction:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"right"},"Ledger"),(0,a.kt)("th",{parentName:"tr",align:"right"},"Debit Account"),(0,a.kt)("th",{parentName:"tr",align:"right"},"Credit Account"),(0,a.kt)("th",{parentName:"tr",align:"right"},"Amount"),(0,a.kt)("th",{parentName:"tr",align:"right"},(0,a.kt)("inlineCode",{parentName:"th"},"code")),(0,a.kt)("th",{parentName:"tr",align:"right"},(0,a.kt)("inlineCode",{parentName:"th"},"user_data_128")),(0,a.kt)("th",{parentName:"tr",align:"right"},(0,a.kt)("inlineCode",{parentName:"th"},"flags.linked")))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"right"},"USD"),(0,a.kt)("td",{parentName:"tr",align:"right"},(0,a.kt)("inlineCode",{parentName:"td"},"X")),(0,a.kt)("td",{parentName:"tr",align:"right"},(0,a.kt)("inlineCode",{parentName:"td"},"A")),(0,a.kt)("td",{parentName:"tr",align:"right"},"1000"),(0,a.kt)("td",{parentName:"tr",align:"right"},"10000"),(0,a.kt)("td",{parentName:"tr",align:"right"},"123456"),(0,a.kt)("td",{parentName:"tr",align:"right"},"true")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"right"},"USD"),(0,a.kt)("td",{parentName:"tr",align:"right"},(0,a.kt)("inlineCode",{parentName:"td"},"Y")),(0,a.kt)("td",{parentName:"tr",align:"right"},(0,a.kt)("inlineCode",{parentName:"td"},"A")),(0,a.kt)("td",{parentName:"tr",align:"right"},"5"),(0,a.kt)("td",{parentName:"tr",align:"right"},"10000"),(0,a.kt)("td",{parentName:"tr",align:"right"},"123456"),(0,a.kt)("td",{parentName:"tr",align:"right"},"false")))),(0,a.kt)("p",null,"Note that the codes used here don't have any actual meaning, but you would want to\n",(0,a.kt)("a",{parentName:"p",href:"/coding/data-modeling#code"},"enumerate your business events")," and map each to a numeric code value,\nincluding the initial reasons for transfers and the reasons they might be corrected."))}m.isMDXComponent=!0}}]);