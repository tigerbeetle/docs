"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3042],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||l;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4520:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:5},i="Balance Bounds",o={unversionedId:"coding/recipes/balance-bounds",id:"coding/recipes/balance-bounds",title:"Balance Bounds",description:"It is easy to limit an account's balance using either",source:"@site/pages/coding/recipes/balance-bounds.md",sourceDirName:"coding/recipes",slug:"/coding/recipes/balance-bounds",permalink:"/coding/recipes/balance-bounds",draft:!1,editUrl:"https://github.com/tigerbeetle/tigerbeetle/blob/main/docs/coding/recipes/balance-bounds.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Balance-Conditional Transfers",permalink:"/coding/recipes/balance-conditional-transfers"},next:{title:"Correcting Transfers",permalink:"/coding/recipes/correcting-transfers"}},s={},d=[{value:"Preconditions",id:"preconditions",level:2},{value:"Executing a Transfer with a Balance Bounds Check",id:"executing-a-transfer-with-a-balance-bounds-check",level:2},{value:"If the Target Account Has a Credit Balance",id:"if-the-target-account-has-a-credit-balance",level:3},{value:"If the Target Account Has a Debit Balance",id:"if-the-target-account-has-a-debit-balance",level:3},{value:"Understanding the Mechanism",id:"understanding-the-mechanism",level:3}],c={toc:d},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"balance-bounds"},"Balance Bounds"),(0,r.kt)("p",null,"It is easy to limit an account's balance using either\n",(0,r.kt)("a",{parentName:"p",href:"/reference/account#flagsdebits_must_not_exceed_credits"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.debits_must_not_exceed_credits")),"\nor\n",(0,r.kt)("a",{parentName:"p",href:"/reference/account#flagscredits_must_not_exceed_debits"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.credits_must_not_exceed_debits")),"."),(0,r.kt)("p",null,"What if you want an account's balance to stay between an upper and a lower bound?"),(0,r.kt)("p",null,"This is possible to check atomically using a set of linked transfers. (Note: with the\n",(0,r.kt)("inlineCode",{parentName:"p"},"must_not_exceed")," flag invariants, an account is guaranteed to never violate those invariants. This\nmaximum balance approach must be enforced per-transfer -- it is possible to exceed the limit simply\nby not enforcing it for a particular transfer.)"),(0,r.kt)("h2",{id:"preconditions"},"Preconditions"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Target Account Should Have a Limited Balance")),(0,r.kt)("p",null,"The account whose balance you want to bound should have one of these flags set:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/reference/account#flagsdebits_must_not_exceed_credits"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.debits_must_not_exceed_credits")),"\nfor accounts with ",(0,r.kt)("a",{parentName:"li",href:"/coding/data-modeling#credit-balances"},"credit balances")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/reference/account#flagscredits_must_not_exceed_debits"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.credits_must_not_exceed_debits")),"\nfor accounts with ",(0,r.kt)("a",{parentName:"li",href:"/coding/data-modeling#debit-balances"},"debit balances"))),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Create a Control Account with the Opposite Limit")),(0,r.kt)("p",null,"There must also be a designated control account."),(0,r.kt)("p",null,"As you can see below, this account will never actually take control of the target account's funds,\nbut we will set up simultaneous transfers in and out of the control account to apply the limit."),(0,r.kt)("p",null,"This account must have the opposite limit applied as the target account:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/reference/account#flagscredits_must_not_exceed_debits"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.credits_must_not_exceed_debits")),"\nif the target account has a ",(0,r.kt)("a",{parentName:"li",href:"/coding/data-modeling#credit-balances"},"credit balance")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/reference/account#flagsdebits_must_not_exceed_credits"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.debits_must_not_exceed_credits")),"\nif the target account has a ",(0,r.kt)("a",{parentName:"li",href:"/coding/data-modeling#debit-balances"},"debit balance"))),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Create an Operator Account")),(0,r.kt)("p",null,"The operator account will be used to fund the Control Account."),(0,r.kt)("h2",{id:"executing-a-transfer-with-a-balance-bounds-check"},"Executing a Transfer with a Balance Bounds Check"),(0,r.kt)("p",null,"This consists of 5 ",(0,r.kt)("a",{parentName:"p",href:"/reference/requests/#linked-events"},"linked transfers"),"."),(0,r.kt)("p",null,"We will refer to two amounts:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"limit amount")," is upper bound we want to maintain on the target account's balance."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"transfer amount")," is the amount we want to transfer if and only if the target account's\nbalance after a successful transfer would be within the bounds.")),(0,r.kt)("h3",{id:"if-the-target-account-has-a-credit-balance"},"If the Target Account Has a Credit Balance"),(0,r.kt)("p",null,"In this case, we are keeping the Destination Account's balance between the bounds."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Transfer"),(0,r.kt)("th",{parentName:"tr",align:null},"Debit Account"),(0,r.kt)("th",{parentName:"tr",align:null},"Credit Account"),(0,r.kt)("th",{parentName:"tr",align:null},"Amount"),(0,r.kt)("th",{parentName:"tr",align:null},"Pending ID"),(0,r.kt)("th",{parentName:"tr",align:null},"Flags (Note: `"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"Source"),(0,r.kt)("td",{parentName:"tr",align:null},"Destination"),(0,r.kt)("td",{parentName:"tr",align:null},"Transfer"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/reference/transfer#flagslinked"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.linked")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"Control"),(0,r.kt)("td",{parentName:"tr",align:null},"Operator"),(0,r.kt)("td",{parentName:"tr",align:null},"Limit"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/reference/transfer#flagslinked"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.linked")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"Destination"),(0,r.kt)("td",{parentName:"tr",align:null},"Control"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"AMOUNT_MAX")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/reference/transfer#flagslinked"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.linked"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/reference/transfer#flagsbalancing_debit"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.balancing_debit"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/reference/transfer#flagspending"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.pending")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"3"),"*"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/reference/transfer#flagslinked"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.linked"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/reference/transfer#flagsvoid_pending_transfer"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.void_pending_transfer")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"Operator"),(0,r.kt)("td",{parentName:"tr",align:null},"Control"),(0,r.kt)("td",{parentName:"tr",align:null},"Limit"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"))))),(0,r.kt)("p",null,"*","This must be set to the transfer ID of the pending transfer (in this example, it is transfer 3)."),(0,r.kt)("h3",{id:"if-the-target-account-has-a-debit-balance"},"If the Target Account Has a Debit Balance"),(0,r.kt)("p",null,"In this case, we are keeping the Destination Account's balance between the bounds."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Transfer"),(0,r.kt)("th",{parentName:"tr",align:null},"Debit Account"),(0,r.kt)("th",{parentName:"tr",align:null},"Credit Account"),(0,r.kt)("th",{parentName:"tr",align:null},"Amount"),(0,r.kt)("th",{parentName:"tr",align:null},"Pending ID"),(0,r.kt)("th",{parentName:"tr",align:null},"Flags (Note `"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"Destination"),(0,r.kt)("td",{parentName:"tr",align:null},"Source"),(0,r.kt)("td",{parentName:"tr",align:null},"Transfer"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/reference/transfer#flagslinked"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.linked")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"Operator"),(0,r.kt)("td",{parentName:"tr",align:null},"Control"),(0,r.kt)("td",{parentName:"tr",align:null},"Limit"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/reference/transfer#flagslinked"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.linked")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"Control"),(0,r.kt)("td",{parentName:"tr",align:null},"Destination"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"AMOUNT_MAX")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/reference/transfer#flagsbalancing_credit"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.balancing_credit"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/reference/transfer#flagspending"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.pending"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/reference/transfer#flagslinked"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.linked")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"3"),"*"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/reference/transfer#flagsvoid_pending_transfer"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.void_pending_transfer"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/reference/transfer#flagslinked"},(0,r.kt)("inlineCode",{parentName:"a"},"flags.linked")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"Control"),(0,r.kt)("td",{parentName:"tr",align:null},"Operator"),(0,r.kt)("td",{parentName:"tr",align:null},"Limit"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"))))),(0,r.kt)("p",null,"*","This must be set to the transfer ID of the pending transfer (in this example, it is transfer 3)."),(0,r.kt)("h3",{id:"understanding-the-mechanism"},"Understanding the Mechanism"),(0,r.kt)("p",null,"Each of the 5 transfers is ",(0,r.kt)("a",{parentName:"p",href:"/reference/requests/#linked-events"},"linked")," so that all of\nthem will succeed or all of them will fail."),(0,r.kt)("p",null,"The first transfer is the one we actually want to send."),(0,r.kt)("p",null,"The second transfer sets the Control Account's balance to the upper bound we want to impose."),(0,r.kt)("p",null,"The third transfer uses a ",(0,r.kt)("a",{parentName:"p",href:"/reference/transfer#flagsbalancing_debit"},(0,r.kt)("inlineCode",{parentName:"a"},"balancing_debit"))," or\n",(0,r.kt)("a",{parentName:"p",href:"/reference/transfer#flagsbalancing_credit"},(0,r.kt)("inlineCode",{parentName:"a"},"balancing_credit"))," to transfer the Destination\nAccount's net credit balance or net debit balance, respectively, to the Control Account. This\ntransfer will fail if the first transfer would put the Destination Account's balance above the upper\nbound."),(0,r.kt)("p",null,"The third transfer is also a pending transfer, so it won't actually transfer the Destination\nAccount's funds, even if it succeeds."),(0,r.kt)("p",null,"If everything to this point succeeds, the fourth and fifth transfers simply undo the effects of the\nsecond and third transfers. The fourth transfer voids the pending transfer. And the fifth transfer\nresets the Control Account's net balance to zero."))}u.isMDXComponent=!0}}]);